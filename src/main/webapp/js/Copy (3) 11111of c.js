(function(a, d) {
    function b(a) {
        return m.isWindow(a) ? a: 9 === a.nodeType ? a.defaultView || a.parentWindow: !1
    }
    function c(a) {
        if (!na[a]) {
            var b = C.body,
            c = m("<" + a + ">").appendTo(b),
            d = c.css("display");
            c.remove();
            if ("none" === d || "" === d) ba || (ba = C.createElement("iframe"), ba.frameBorder = ba.width = ba.height = 0),
            b.appendChild(ba),
            ga && ba.createElement || (ga = (ba.contentWindow || ba.contentDocument).document, ga.write((m.support.boxModel ? "<!doctype html>": "") + "<html><body>"), ga.close()),
            c = ga.createElement(a),
            ga.body.appendChild(c),
            d = m.css(c, "display"),
            b.removeChild(ba);
            na[a] = d
        }
        return na[a]
    }
    function e(a, b) {
        var c = {};
        m.each(ja.concat.apply([], ja.slice(0, b)),
        function() {
            c[this] = a
        });
        return c
    }
    function g() {
        ka = d
    }
    function f() {
        setTimeout(g, 0);
        return ka = m.now()
    }
    function k() {
        try {
            return new a.XMLHttpRequest
        } catch(b) {}
    }
    function h(a, b, c, d) {
        if (m.isArray(b)) m.each(b,
        function(b, e) {
            c || Pa.test(a) ? d(a, e) : h(a + "[" + ("object" == typeof e ? b: "") + "]", e, c, d)
        });
        else if (c || "object" !== m.type(b)) d(a, b);
        else for (var e in b) h(a + "[" + e + "]", b[e], c, d)
    }
    function l(a, b) {
        var c, e, f = m.ajaxSettings.flatOptions || {};
        for (c in b) b[c] !== d && ((f[c] ? a: e || (e = {}))[c] = b[c]);
        e && m.extend(!0, a, e)
    }
    function n(a, b, c, e, f, g) {
        f = f || b.dataTypes[0];
        g = g || {};
        g[f] = !0;
        f = a[f];
        for (var h = 0,
        k = f ? f.length: 0, q = a === oa, m; h < k && (q || !m); h++) m = f[h](b, c, e),
        "string" == typeof m && (!q || g[m] ? m = d: (b.dataTypes.unshift(m), m = n(a, b, c, e, m, g))); ! q && m || g["*"] || (m = n(a, b, c, e, "*", g));
        return m
    }
    function p(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            if (m.isFunction(c)) for (var d = b.toLowerCase().split(va), e = 0, f = d.length, g, h; e < f; e++) g = d[e],
            (h = /^\+/.test(g)) && (g = g.substr(1) || "*"),
            g = a[g] = a[g] || [],
            g[h ? "unshift": "push"](c)
        }
    }
    function s(a, b, c) {
        var d = "width" === b ? a.offsetWidth: a.offsetHeight,
        e = "width" === b ? 1 : 0;
        if (0 < d) {
            if ("border" !== c) for (; 4 > e; e += 2) c || (d -= parseFloat(m.css(a, "padding" + da[e])) || 0),
            "margin" === c ? d += parseFloat(m.css(a, c + da[e])) || 0 : d -= parseFloat(m.css(a, "border" + da[e] + "Width")) || 0;
            return d + "px"
        }
        d = ha(a, b);
        if (0 > d || null == d) d = a.style[b];
        if (pa.test(d)) return d;
        d = parseFloat(d) || 0;
        if (c) for (; 4 > e; e += 2) d += parseFloat(m.css(a, "padding" + da[e])) || 0,
        "padding" !== c && (d += parseFloat(m.css(a, "border" + da[e] + "Width")) || 0),
        "margin" === c && (d += parseFloat(m.css(a, c + da[e])) || 0);
        return d + "px"
    }
    function r(a) {
        var b = (a.nodeName || "").toLowerCase();
        "input" === b ? q(a) : "script" !== b && "undefined" != typeof a.getElementsByTagName && m.grep(a.getElementsByTagName("input"), q)
    }
    function q(a) {
        if ("checkbox" === a.type || "radio" === a.type) a.defaultChecked = a.checked
    }
    function t(a) {
        return "undefined" != typeof a.getElementsByTagName ? a.getElementsByTagName("*") : "undefined" != typeof a.querySelectorAll ? a.querySelectorAll("*") : []
    }
    function u(a, b) {
        var c;
        1 === b.nodeType && (b.clearAttributes && b.clearAttributes(), b.mergeAttributes && b.mergeAttributes(a), c = b.nodeName.toLowerCase(), "object" === c ? b.outerHTML = a.outerHTML: "input" !== c || "checkbox" !== a.type && "radio" !== a.type ? "option" === c ? b.selected = a.defaultSelected: "input" === c || "textarea" === c ? b.defaultValue = a.defaultValue: "script" === c && b.text !== a.text && (b.text = a.text) : (a.checked && (b.defaultChecked = b.checked = a.checked), b.value !== a.value && (b.value = a.value)), b.removeAttribute(m.expando), b.removeAttribute("_submit_attached"), b.removeAttribute("_change_attached"))
    }
    function w(a, b) {
        if (1 === b.nodeType && m.hasData(a)) {
            var c, d, e;
            d = m._data(a);
            var f = m._data(b, d),
            g = d.events;
            if (g) for (c in delete f.handle, f.events = {},
            g) for (d = 0, e = g[c].length; d < e; d++) m.event.add(b, c, g[c][d]);
            f.data && (f.data = m.extend({},
            f.data))
        }
    }
    function v(a) {
        var b = wa.split("|");
        a = a.createDocumentFragment();
        if (a.createElement) for (; b.length;) a.createElement(b.pop());
        return a
    }
    function A(a, b, c) {
        b = b || 0;
        if (m.isFunction(b)) return m.grep(a,
        function(a, d) {
            return !! b.call(a, d, a) === c
        });
        if (b.nodeType) return m.grep(a,
        function(a, d) {
            return a === b === c
        });
        if ("string" == typeof b) {
            var d = m.grep(a,
            function(a) {
                return 1 === a.nodeType
            });
            if (Qa.test(b)) return m.filter(b, d, !c);
            b = m.filter(b, d)
        }
        return m.grep(a,
        function(a, d) {
            return 0 <= m.inArray(a, b) === c
        })
    }
    function E() {
        return ! 0
    }
    function z() {
        return ! 1
    }
    function B(a, b, c) {
        var d = b + "defer",
        e = b + "queue",
        f = b + "mark",
        g = m._data(a, d); ! g || "queue" !== c && m._data(a, e) || "mark" !== c && m._data(a, f) || setTimeout(function() {
            m._data(a, e) || m._data(a, f) || (m.removeData(a, d, !0), g.fire())
        },
        0)
    }
    function x(a) {
        for (var b in a) if (("data" !== b || !m.isEmptyObject(a[b])) && "toJSON" !== b) return ! 1;
        return ! 0
    }
    function D(a, b, c) {
        if (c === d && 1 === a.nodeType) if (c = "data-" + b.replace(P, "-$1").toLowerCase(), c = a.getAttribute(c), "string" == typeof c) {
            try {
                c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null: m.isNumeric(c) ? +c: O.test(c) ? m.parseJSON(c) : c
            } catch(e) {}
            m.data(a, b, c)
        } else c = d;
        return c
    }
    function I(a) {
        var b = L[a] = {},
        c,
        d;
        a = a.split(/\s+/);
        c = 0;
        for (d = a.length; c < d; c++) b[a[c]] = !0;
        return b
    }
    var C = a.document,
    F = a.navigator,
    J = a.location,
    m = function() {
        function b() {
            if (!c.isReady) {
                try {
                    C.documentElement.doScroll("left")
                } catch(a) {
                    setTimeout(b, 1);
                    return
                }
                c.ready()
            }
        }
        var c = function(a, b) {
            return new c.fn.init(a, b, g)
        },
        e = a.jQuery,
        f = a.$,
        g,
        h = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
        k = /\S/,
        q = /^\s+/,
        m = /\s+$/,
        n = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
        l = /^[\],:{}\s]*$/,
        p = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
        r = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
        t = /(?:^|:|,)(?:\s*\[)+/g,
        s = /(webkit)[ \/]([\w.]+)/,
        w = /(opera)(?:.*version)?[ \/]([\w.]+)/,
        u = /(msie) ([\w.]+)/,
        v = /(mozilla)(?:.*? rv:([\w.]+))?/,
        K = /-([a-z]|[0-9])/ig,
        O = /^-ms-/,
        A = function(a, b) {
            return (b + "").toUpperCase()
        },
        H = F.userAgent,
        B,
        E,
        P = Object.prototype.toString,
        z = Object.prototype.hasOwnProperty,
        x = Array.prototype.push,
        N = Array.prototype.slice,
        L = String.prototype.trim,
        U = Array.prototype.indexOf,
        M = {};
        c.fn = c.prototype = {
            constructor: c,
            init: function(a, b, e) {
                var f, g;
                if (!a) return this;
                if (a.nodeType) return this.context = this[0] = a,
                this.length = 1,
                this;
                if ("body" === a && !b && C.body) return this.context = C,
                this[0] = C.body,
                this.selector = a,
                this.length = 1,
                this;
                if ("string" == typeof a) {
                    "<" !== a.charAt(0) || ">" !== a.charAt(a.length - 1) || 3 > a.length ? f = h.exec(a) : f = [null, a, null];
                    if (f && (f[1] || !b)) {
                        if (f[1]) return g = (b = b instanceof c ? b[0] : b) ? b.ownerDocument || b: C,
                        (e = n.exec(a)) ? c.isPlainObject(b) ? (a = [C.createElement(e[1])], c.fn.attr.call(a, b, !0)) : a = [g.createElement(e[1])] : (e = c.buildFragment([f[1]], [g]), a = (e.cacheable ? c.clone(e.fragment) : e.fragment).childNodes),
                        c.merge(this, a);
                        if ((b = C.getElementById(f[2])) && b.parentNode) {
                            if (b.id !== f[2]) return e.find(a);
                            this.length = 1;
                            this[0] = b
                        }
                        this.context = C;
                        this.selector = a;
                        return this
                    }
                    return ! b || b.jquery ? (b || e).find(a) : this.constructor(b).find(a)
                }
                if (c.isFunction(a)) return e.ready(a);
                a.selector !== d && (this.selector = a.selector, this.context = a.context);
                return c.makeArray(a, this)
            },
            selector: "",
            jquery: "1.7.2",
            length: 0,
            size: function() {
                return this.length
            },
            toArray: function() {
                return N.call(this, 0)
            },
            get: function(a) {
                return null == a ? this.toArray() : 0 > a ? this[this.length + a] : this[a]
            },
            pushStack: function(a, b, d) {
                var e = this.constructor();
                c.isArray(a) ? x.apply(e, a) : c.merge(e, a);
                e.prevObject = this;
                e.context = this.context;
                "find" === b ? e.selector = this.selector + (this.selector ? " ": "") + d: b && (e.selector = this.selector + "." + b + "(" + d + ")");
                return e
            },
            each: function(a, b) {
                return c.each(this, a, b)
            },
            ready: function(a) {
                c.bindReady();
                B.add(a);
                return this
            },
            eq: function(a) {
                a = +a;
                return - 1 === a ? this.slice(a) : this.slice(a, a + 1)
            },
            first: function() {
                return this.eq(0)
            },
            last: function() {
                return this.eq( - 1)
            },
            slice: function() {
                return this.pushStack(N.apply(this, arguments), "slice", N.call(arguments).join(","))
            },
            map: function(a) {
                return this.pushStack(c.map(this,
                function(b, c) {
                    return a.call(b, c, b)
                }))
            },
            end: function() {
                return this.prevObject || this.constructor(null)
            },
            push: x,
            sort: [].sort,
            splice: [].splice
        };
        c.fn.init.prototype = c.fn;
        c.extend = c.fn.extend = function() {
            var a, b, e, f, g, h, k = arguments[0] || {},
            q = 1,
            m = arguments.length,
            n = !1;
            "boolean" == typeof k && (n = k, k = arguments[1] || {},
            q = 2);
            "object" != typeof k && !c.isFunction(k) && (k = {});
            for (m === q && (k = this, --q); q < m; q++) if (null != (a = arguments[q])) for (b in a) e = k[b],
            f = a[b],
            k !== f && (n && f && (c.isPlainObject(f) || (g = c.isArray(f))) ? (g ? (g = !1, h = e && c.isArray(e) ? e: []) : h = e && c.isPlainObject(e) ? e: {},
            k[b] = c.extend(n, h, f)) : f !== d && (k[b] = f));
            return k
        };
        c.extend({
            noConflict: function(b) {
                a.$ === c && (a.$ = f);
                b && a.jQuery === c && (a.jQuery = e);
                return c
            },
            isReady: !1,
            readyWait: 1,
            holdReady: function(a) {
                a ? c.readyWait++:c.ready(!0)
            },
            ready: function(a) {
                if (!0 === a && !--c.readyWait || !0 !== a && !c.isReady) {
                    if (!C.body) return setTimeout(c.ready, 1);
                    c.isReady = !0; ! 0 !== a && 0 < --c.readyWait || (B.fireWith(C, [c]), c.fn.trigger && c(C).trigger("ready").off("ready"))
                }
            },
            bindReady: function() {
                if (!B) {
                    B = c.Callbacks("once memory");
                    if ("complete" === C.readyState) return setTimeout(c.ready, 1);
                    if (C.addEventListener) C.addEventListener("DOMContentLoaded", E, !1),
                    a.addEventListener("load", c.ready, !1);
                    else if (C.attachEvent) {
                        C.attachEvent("onreadystatechange", E);
                        a.attachEvent("onload", c.ready);
                        var d = !1;
                        try {
                            d = null == a.frameElement
                        } catch(e) {}
                        C.documentElement.doScroll && d && b()
                    }
                }
            },
            isFunction: function(a) {
                return "function" === c.type(a)
            },
            isArray: Array.isArray ||
            function(a) {
                return "array" === c.type(a)
            },
            isWindow: function(a) {
                return null != a && a == a.window
            },
            isNumeric: function(a) {
                return ! isNaN(parseFloat(a)) && isFinite(a)
            },
            type: function(a) {
                return null == a ? String(a) : M[P.call(a)] || "object"
            },
            isPlainObject: function(a) {
                if (!a || "object" !== c.type(a) || a.nodeType || c.isWindow(a)) return ! 1;
                try {
                    if (a.constructor && !z.call(a, "constructor") && !z.call(a.constructor.prototype, "isPrototypeOf")) return ! 1
                } catch(b) {
                    return ! 1
                }
                for (var e in a);
                return e === d || z.call(a, e)
            },
            isEmptyObject: function(a) {
                for (var b in a) return ! 1;
                return ! 0
            },
            error: function(a) {
                throw Error(a);
            },
            parseJSON: function(b) {
                if ("string" != typeof b || !b) return null;
                b = c.trim(b);
                if (a.JSON && a.JSON.parse) return a.JSON.parse(b);
                if (l.test(b.replace(p, "@").replace(r, "]").replace(t, ""))) return (new Function("return " + b))();
                c.error("Invalid JSON: " + b)
            },
            parseXML: function(b) {
                if ("string" != typeof b || !b) return null;
                var e, f;
                try {
                    a.DOMParser ? (f = new DOMParser, e = f.parseFromString(b, "text/xml")) : (e = new ActiveXObject("Microsoft.XMLDOM"), e.async = "false", e.loadXML(b))
                } catch(g) {
                    e = d
                }
                e && e.documentElement && !e.getElementsByTagName("parsererror").length || c.error("Invalid XML: " + b);
                return e
            },
            noop: function() {},
            globalEval: function(b) {
                b && k.test(b) && (a.execScript ||
                function(b) {
                    a.eval.call(a, b)
                })(b)
            },
            camelCase: function(a) {
                return a.replace(O, "ms-").replace(K, A)
            },
            nodeName: function(a, b) {
                return a.nodeName && a.nodeName.toUpperCase() === b.toUpperCase()
            },
            each: function(a, b, e) {
                var f, g = 0,
                h = a.length,
                k = h === d || c.isFunction(a);
                if (e) if (k) for (f in a) {
                    if (!1 === b.apply(a[f], e)) break
                } else for (; g < h && !1 !== b.apply(a[g++], e););
                else if (k) for (f in a) {
                    if (!1 === b.call(a[f], f, a[f])) break
                } else for (; g < h && !1 !== b.call(a[g], g, a[g++]););
                return a
            },
            trim: L ?
            function(a) {
                return null == a ? "": L.call(a)
            }: function(a) {
                return null == a ? "": (a + "").replace(q, "").replace(m, "")
            },
            makeArray: function(a, b) {
                var d = b || [];
                if (null != a) {
                    var e = c.type(a);
                    null == a.length || "string" === e || "function" === e || "regexp" === e || c.isWindow(a) ? x.call(d, a) : c.merge(d, a)
                }
                return d
            },
            inArray: function(a, b, c) {
                var d;
                if (b) {
                    if (U) return U.call(b, a, c);
                    d = b.length;
                    for (c = c ? 0 > c ? Math.max(0, d + c) : c: 0; c < d; c++) if (c in b && b[c] === a) return c
                }
                return - 1
            },
            merge: function(a, b) {
                var c = a.length,
                e = 0;
                if ("number" == typeof b.length) for (var f = b.length; e < f; e++) a[c++] = b[e];
                else for (; b[e] !== d;) a[c++] = b[e++];
                a.length = c;
                return a
            },
            grep: function(a, b, c) {
                var d = [],
                e;
                c = !!c;
                for (var f = 0,
                g = a.length; f < g; f++) e = !!b(a[f], f),
                c !== e && d.push(a[f]);
                return d
            },
            map: function(a, b, e) {
                var f, g, h = [],
                k = 0,
                q = a.length;
                if (a instanceof c || q !== d && "number" == typeof q && (0 < q && a[0] && a[q - 1] || 0 === q || c.isArray(a))) for (; k < q; k++) f = b(a[k], k, e),
                null != f && (h[h.length] = f);
                else for (g in a) f = b(a[g], g, e),
                null != f && (h[h.length] = f);
                return h.concat.apply([], h)
            },
            guid: 1,
            proxy: function(a, b) {
                if ("string" == typeof b) {
                    var e = a[b];
                    b = a;
                    a = e
                }
                if (!c.isFunction(a)) return d;
                var f = N.call(arguments, 2),
                e = function() {
                    return a.apply(b, f.concat(N.call(arguments)))
                };
                e.guid = a.guid = a.guid || e.guid || c.guid++;
                return e
            },
            access: function(a, b, e, f, g, h, k) {
                var q, m = null == e,
                n = 0,
                l = a.length;
                if (e && "object" == typeof e) {
                    for (n in e) c.access(a, b, n, e[n], 1, h, f);
                    g = 1
                } else if (f !== d) {
                    q = k === d && c.isFunction(f);
                    m && (q ? (q = b, b = function(a, b, d) {
                        return q.call(c(a), d)
                    }) : (b.call(a, f), b = null));
                    if (b) for (; n < l; n++) b(a[n], e, q ? f.call(a[n], n, b(a[n], e)) : f, k);
                    g = 1
                }
                return g ? a: m ? b.call(a) : l ? b(a[0], e) : h
            },
            now: function() {
                return (new Date).getTime()
            },
            uaMatch: function(a) {
                a = a.toLowerCase();
                a = s.exec(a) || w.exec(a) || u.exec(a) || 0 > a.indexOf("compatible") && v.exec(a) || [];
                return {
                    browser: a[1] || "",
                    version: a[2] || "0"
                }
            },
            sub: function() {
                function a(b, c) {
                    return new a.fn.init(b, c)
                }
                c.extend(!0, a, this);
                a.superclass = this;
                a.fn = a.prototype = this();
                a.fn.constructor = a;
                a.sub = this.sub;
                a.fn.init = function(d, e) {
                    e && e instanceof c && !(e instanceof a) && (e = a(e));
                    return c.fn.init.call(this, d, e, b)
                };
                a.fn.init.prototype = a.fn;
                var b = a(C);
                return a
            },
            browser: {}
        });
        c.each("Boolean Number String Function Array Date RegExp Object".split(" "),
        function(a, b) {
            M["[object " + b + "]"] = b.toLowerCase()
        });
        H = c.uaMatch(H);
        H.browser && (c.browser[H.browser] = !0, c.browser.version = H.version);
        c.browser.webkit && (c.browser.safari = !0);
        k.test("\u00a0") && (q = /^[\s\xA0]+/, m = /[\s\xA0]+$/);
        g = c(C);
        C.addEventListener ? E = function() {
            C.removeEventListener("DOMContentLoaded", E, !1);
            c.ready()
        }: C.attachEvent && (E = function() {
            "complete" === C.readyState && (C.detachEvent("onreadystatechange", E), c.ready())
        });
        return c
    } (),
    L = {};
    m.Callbacks = function(a) {
        a = a ? L[a] || I(a) : {};
        var b = [],
        c = [],
        e,
        f,
        g,
        h,
        k,
        q,
        n = function(c) {
            var d, e, f, g;
            d = 0;
            for (e = c.length; d < e; d++) f = c[d],
            g = m.type(f),
            "array" === g ? n(f) : "function" !== g || a.unique && p.has(f) || b.push(f)
        },
        l = function(d, n) {
            n = n || [];
            e = !a.memory || [d, n];
            g = f = !0;
            q = h || 0;
            h = 0;
            for (k = b.length; b && q < k; q++) if (!1 === b[q].apply(d, n) && a.stopOnFalse) {
                e = !0;
                break
            }
            g = !1;
            b && (a.once ? !0 === e ? p.disable() : b = [] : c && c.length && (e = c.shift(), p.fireWith(e[0], e[1])))
        },
        p = {
            add: function() {
                if (b) {
                    var a = b.length;
                    n(arguments);
                    g ? k = b.length: e && !0 !== e && (h = a, l(e[0], e[1]))
                }
                return this
            },
            remove: function() {
                if (b) for (var c = arguments,
                d = 0,
                e = c.length; d < e; d++) for (var f = 0; f < b.length && (c[d] !== b[f] || (g && f <= k && (k--, f <= q && q--), b.splice(f--, 1), !a.unique)); f++);
                return this
            },
            has: function(a) {
                if (b) for (var c = 0,
                d = b.length; c < d; c++) if (a === b[c]) return ! 0;
                return ! 1
            },
            empty: function() {
                b = [];
                return this
            },
            disable: function() {
                b = c = e = d;
                return this
            },
            disabled: function() {
                return ! b
            },
            lock: function() {
                c = d;
                e && !0 !== e || p.disable();
                return this
            },
            locked: function() {
                return ! c
            },
            fireWith: function(b, d) {
                c && (g ? a.once || c.push([b, d]) : (!a.once || !e) && l(b, d));
                return this
            },
            fire: function() {
                p.fireWith(this, arguments);
                return this
            },
            fired: function() {
                return !! f
            }
        };
        return p
    };
    var K = [].slice;
    m.extend({
        Deferred: function(a) {
            var b = m.Callbacks("once memory"),
            c = m.Callbacks("once memory"),
            d = m.Callbacks("memory"),
            e = "pending",
            f = {
                resolve: b,
                reject: c,
                notify: d
            },
            g = {
                done: b.add,
                fail: c.add,
                progress: d.add,
                state: function() {
                    return e
                },
                isResolved: b.fired,
                isRejected: c.fired,
                then: function(a, b, c) {
                    h.done(a).fail(b).progress(c);
                    return this
                },
                always: function() {
                    h.done.apply(h, arguments).fail.apply(h, arguments);
                    return this
                },
                pipe: function(a, b, c) {
                    return m.Deferred(function(d) {
                        m.each({
                            done: [a, "resolve"],
                            fail: [b, "reject"],
                            progress: [c, "notify"]
                        },
                        function(a, b) {
                            var c = b[0],
                            e = b[1],
                            f;
                            m.isFunction(c) ? h[a](function() { (f = c.apply(this, arguments)) && m.isFunction(f.promise) ? f.promise().then(d.resolve, d.reject, d.notify) : d[e + "With"](this === h ? d: this, [f])
                            }) : h[a](d[e])
                        })
                    }).promise()
                },
                promise: function(a) {
                    if (null == a) a = g;
                    else for (var b in g) a[b] = g[b];
                    return a
                }
            },
            h = g.promise({}),
            k;
            for (k in f) h[k] = f[k].fire,
            h[k + "With"] = f[k].fireWith;
            h.done(function() {
                e = "resolved"
            },
            c.disable, d.lock).fail(function() {
                e = "rejected"
            },
            b.disable, d.lock);
            a && a.call(h, h);
            return h
        },
        when: function(a) {
            function b(a) {
                return function(b) {
                    g[a] = 1 < arguments.length ? K.call(arguments, 0) : b;
                    k.notifyWith(q, g)
                }
            }
            function c(a) {
                return function(b) {
                    d[a] = 1 < arguments.length ? K.call(arguments, 0) : b; --h || k.resolveWith(k, d)
                }
            }
            var d = K.call(arguments, 0),
            e = 0,
            f = d.length,
            g = Array(f),
            h = f,
            k = 1 >= f && a && m.isFunction(a.promise) ? a: m.Deferred(),
            q = k.promise();
            if (1 < f) {
                for (; e < f; e++) d[e] && d[e].promise && m.isFunction(d[e].promise) ? d[e].promise().then(c(e), k.reject, b(e)) : --h;
                h || k.resolveWith(k, d)
            } else k !== a && k.resolveWith(k, f ? [a] : []);
            return q
        }
    });
    m.support = function() {
        var b, c, d, e, f, g, h, k, q = C.createElement("div");
        q.setAttribute("className", "t");
        q.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
        c = q.getElementsByTagName("*");
        d = q.getElementsByTagName("a")[0];
        if (!c || !c.length || !d) return {};
        e = C.createElement("select");
        f = e.appendChild(C.createElement("option"));
        c = q.getElementsByTagName("input")[0];
        b = {
            leadingWhitespace: 3 === q.firstChild.nodeType,
            tbody: !q.getElementsByTagName("tbody").length,
            htmlSerialize: !!q.getElementsByTagName("link").length,
            style: /top/.test(d.getAttribute("style")),
            hrefNormalized: "/a" === d.getAttribute("href"),
            opacity: /^0.55/.test(d.style.opacity),
            cssFloat: !!d.style.cssFloat,
            checkOn: "on" === c.value,
            optSelected: f.selected,
            getSetAttribute: "t" !== q.className,
            enctype: !!C.createElement("form").enctype,
            html5Clone: "<:nav></:nav>" !== C.createElement("nav").cloneNode(!0).outerHTML,
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            pixelMargin: !0
        };
        m.boxModel = b.boxModel = "CSS1Compat" === C.compatMode;
        c.checked = !0;
        b.noCloneChecked = c.cloneNode(!0).checked;
        e.disabled = !0;
        b.optDisabled = !f.disabled;
        try {
            delete q.test
        } catch(n) {
            b.deleteExpando = !1
        } ! q.addEventListener && q.attachEvent && q.fireEvent && (q.attachEvent("onclick",
        function() {
            b.noCloneEvent = !1
        }), q.cloneNode(!0).fireEvent("onclick"));
        c = C.createElement("input");
        c.value = "t";
        c.setAttribute("type", "radio");
        b.radioValue = "t" === c.value;
        c.setAttribute("checked", "checked");
        c.setAttribute("name", "t");
        q.appendChild(c);
        d = C.createDocumentFragment();
        d.appendChild(q.lastChild);
        b.checkClone = d.cloneNode(!0).cloneNode(!0).lastChild.checked;
        b.appendChecked = c.checked;
        d.removeChild(c);
        d.appendChild(q);
        if (q.attachEvent) for (h in {
            submit: 1,
            change: 1,
            focusin: 1
        }) c = "on" + h,
        (k = c in q) || (q.setAttribute(c, "return;"), k = "function" == typeof q[c]),
        b[h + "Bubbles"] = k;
        d.removeChild(q);
        d = e = f = q = c = null;
        m(function() {
            var c, d, e, f, h, n, l = C.getElementsByTagName("body")[0]; ! l || (c = C.createElement("div"), c.style.cssText = "padding:0;margin:0;border:0;visibility:hidden;width:0;height:0;position:static;top:0;margin-top:1px", l.insertBefore(c, l.firstChild), q = C.createElement("div"), c.appendChild(q), q.innerHTML = "<table><tr><td style='padding:0;margin:0;border:0;display:none'></td><td>t</td></tr></table>", g = q.getElementsByTagName("td"), k = 0 === g[0].offsetHeight, g[0].style.display = "", g[1].style.display = "none", b.reliableHiddenOffsets = k && 0 === g[0].offsetHeight, a.getComputedStyle && (q.innerHTML = "", n = C.createElement("div"), n.style.width = "0", n.style.marginRight = "0", q.style.width = "2px", q.appendChild(n), b.reliableMarginRight = 0 === (parseInt((a.getComputedStyle(n, null) || {
                marginRight: 0
            }).marginRight, 10) || 0)), "undefined" != typeof q.style.zoom && (q.innerHTML = "", q.style.width = q.style.padding = "1px", q.style.border = 0, q.style.overflow = "hidden", q.style.display = "inline", q.style.zoom = 1, b.inlineBlockNeedsLayout = 3 === q.offsetWidth, q.style.display = "block", q.style.overflow = "visible", q.innerHTML = "<div style='width:5px;'></div>", b.shrinkWrapBlocks = 3 !== q.offsetWidth), q.style.cssText = "position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:0;visibility:hidden;", q.innerHTML = "<div style='position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:5px solid #000;display:block;'><div style='padding:0;margin:0;border:0;display:block;overflow:hidden;'></div></div><table style='position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:5px solid #000;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>", d = q.firstChild, e = d.firstChild, f = d.nextSibling.firstChild.firstChild, h = {
                doesNotAddBorder: 5 !== e.offsetTop,
                doesAddBorderForTableAndCells: 5 === f.offsetTop
            },
            e.style.position = "fixed", e.style.top = "20px", h.fixedPosition = 20 === e.offsetTop || 15 === e.offsetTop, e.style.position = e.style.top = "", d.style.overflow = "hidden", d.style.position = "relative", h.subtractsBorderForOverflowNotVisible = -5 === e.offsetTop, h.doesNotIncludeMarginInBodyOffset = 1 !== l.offsetTop, a.getComputedStyle && (q.style.marginTop = "1%", b.pixelMargin = "1%" !== (a.getComputedStyle(q, null) || {
                marginTop: 0
            }).marginTop), "undefined" != typeof c.style.zoom && (c.style.zoom = 1), l.removeChild(c), q = null, m.extend(b, h))
        });
        return b
    } ();
    var O = /^(?:\{.*\}|\[.*\])$/,
    P = /([A-Z])/g;
    m.extend({
        cache: {},
        uuid: 0,
        expando: "jQuery" + (m.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(a) {
            a = a.nodeType ? m.cache[a[m.expando]] : a[m.expando];
            return !! a && !x(a)
        },
        data: function(a, b, c, e) {
            if (m.acceptData(a)) {
                var f, g;
                f = m.expando;
                var h = "string" == typeof b,
                k = a.nodeType,
                q = k ? m.cache: a,
                n = k ? a[f] : a[f] && f,
                l = "events" === b;
                if (n && q[n] && (l || e || q[n].data) || !h || c !== d) {
                    n || (k ? a[f] = n = ++m.uuid: n = f);
                    q[n] || (q[n] = {},
                    k || (q[n].toJSON = m.noop));
                    if ("object" == typeof b || "function" == typeof b) e ? q[n] = m.extend(q[n], b) : q[n].data = m.extend(q[n].data, b);
                    a = f = q[n];
                    e || (f.data || (f.data = {}), f = f.data);
                    c !== d && (f[m.camelCase(b)] = c);
                    if (l && !f[b]) return a.events;
                    h ? (g = f[b], null == g && (g = f[m.camelCase(b)])) : g = f;
                    return g
                }
            }
        },
        removeData: function(a, b, c) {
            if (m.acceptData(a)) {
                var d, e, f, g = m.expando,
                h = a.nodeType,
                k = h ? m.cache: a,
                q = h ? a[g] : g;
                if (k[q]) {
                    if (b && (d = c ? k[q] : k[q].data)) {
                        m.isArray(b) || (b in d ? b = [b] : (b = m.camelCase(b), b in d ? b = [b] : b = b.split(" ")));
                        e = 0;
                        for (f = b.length; e < f; e++) delete d[b[e]];
                        if (! (c ? x: m.isEmptyObject)(d)) return
                    }
                    if (!c && (delete k[q].data, !x(k[q]))) return;
                    m.support.deleteExpando || !k.setInterval ? delete k[q] : k[q] = null;
                    h && (m.support.deleteExpando ? delete a[g] : a.removeAttribute ? a.removeAttribute(g) : a[g] = null)
                }
            }
        },
        _data: function(a, b, c) {
            return m.data(a, b, c, !0)
        },
        acceptData: function(a) {
            if (a.nodeName) {
                var b = m.noData[a.nodeName.toLowerCase()];
                if (b) return ! 0 !== b && a.getAttribute("classid") === b
            }
            return ! 0
        }
    });
    m.fn.extend({
        data: function(a, b) {
            var c, e, f, g, h, k = this[0],
            q = 0,
            n = null;
            if (a === d) {
                if (this.length && (n = m.data(k), 1 === k.nodeType && !m._data(k, "parsedAttrs"))) {
                    f = k.attributes;
                    for (h = f.length; q < h; q++) g = f[q].name,
                    0 === g.indexOf("data-") && (g = m.camelCase(g.substring(5)), D(k, g, n[g]));
                    m._data(k, "parsedAttrs", !0)
                }
                return n
            }
            if ("object" == typeof a) return this.each(function() {
                m.data(this, a)
            });
            c = a.split(".", 2);
            c[1] = c[1] ? "." + c[1] : "";
            e = c[1] + "!";
            return m.access(this,
            function(b) {
                if (b === d) return n = this.triggerHandler("getData" + e, [c[0]]),
                n === d && k && (n = m.data(k, a), n = D(k, a, n)),
                n === d && c[1] ? this.data(c[0]) : n;
                c[1] = b;
                this.each(function() {
                    var d = m(this);
                    d.triggerHandler("setData" + e, c);
                    m.data(this, a, b);
                    d.triggerHandler("changeData" + e, c)
                })
            },
            null, b, 1 < arguments.length, null, !1)
        },
        removeData: function(a) {
            return this.each(function() {
                m.removeData(this, a)
            })
        }
    });
    m.extend({
        _mark: function(a, b) {
            a && (b = (b || "fx") + "mark", m._data(a, b, (m._data(a, b) || 0) + 1))
        },
        _unmark: function(a, b, c) { ! 0 !== a && (c = b, b = a, a = !1);
            if (b) {
                c = c || "fx";
                var d = c + "mark"; (a = a ? 0 : (m._data(b, d) || 1) - 1) ? m._data(b, d, a) : (m.removeData(b, d, !0), B(b, c, "mark"))
            }
        },
        queue: function(a, b, c) {
            var d;
            if (a) return b = (b || "fx") + "queue",
            d = m._data(a, b),
            c && (!d || m.isArray(c) ? d = m._data(a, b, m.makeArray(c)) : d.push(c)),
            d || []
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = m.queue(a, b),
            d = c.shift(),
            e = {};
            "inprogress" === d && (d = c.shift());
            d && ("fx" === b && c.unshift("inprogress"), m._data(a, b + ".run", e), d.call(a,
            function() {
                m.dequeue(a, b)
            },
            e));
            c.length || (m.removeData(a, b + "queue " + b + ".run", !0), B(a, b, "queue"))
        }
    });
    m.fn.extend({
        queue: function(a, b) {
            var c = 2;
            "string" != typeof a && (b = a, a = "fx", c--);
            return arguments.length < c ? m.queue(this[0], a) : b === d ? this: this.each(function() {
                var c = m.queue(this, a, b);
                "fx" === a && "inprogress" !== c[0] && m.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                m.dequeue(this, a)
            })
        },
        delay: function(a, b) {
            a = m.fx ? m.fx.speeds[a] || a: a;
            return this.queue(b || "fx",
            function(b, c) {
                var d = setTimeout(b, a);
                c.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, b) {
            function c() {--h || e.resolveWith(f, [f])
            }
            "string" != typeof a && (b = a, a = d);
            a = a || "fx";
            for (var e = m.Deferred(), f = this, g = f.length, h = 1, k = a + "defer", q = a + "queue", n = a + "mark", l; g--;) if (l = m.data(f[g], k, d, !0) || (m.data(f[g], q, d, !0) || m.data(f[g], n, d, !0)) && m.data(f[g], k, m.Callbacks("once memory"), !0)) h++,
            l.add(c);
            c();
            return e.promise(b)
        }
    });
    var M = /[\n\t\r]/g,
    N = /\s+/,
    R = /\r/g,
    Q = /^(?:button|input)$/i,
    V = /^(?:button|input|object|select|textarea)$/i,
    G = /^a(?:rea)?$/i,
    H = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
    U = m.support.getSetAttribute,
    S, Y, aa;
    m.fn.extend({
        attr: function(a, b) {
            return m.access(this, m.attr, a, b, 1 < arguments.length)
        },
        removeAttr: function(a) {
            return this.each(function() {
                m.removeAttr(this, a)
            })
        },
        prop: function(a, b) {
            return m.access(this, m.prop, a, b, 1 < arguments.length)
        },
        removeProp: function(a) {
            a = m.propFix[a] || a;
            return this.each(function() {
                try {
                    this[a] = d,
                    delete this[a]
                } catch(b) {}
            })
        },
        addClass: function(a) {
            var b, c, d, e, f, g, h;
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).addClass(a.call(this, b, this.className))
            });
            if (a && "string" == typeof a) for (b = a.split(N), c = 0, d = this.length; c < d; c++) if (e = this[c], 1 === e.nodeType) if (e.className || 1 !== b.length) {
                f = " " + e.className + " ";
                g = 0;
                for (h = b.length; g < h; g++)~f.indexOf(" " + b[g] + " ") || (f += b[g] + " ");
                e.className = m.trim(f)
            } else e.className = a;
            return this
        },
        removeClass: function(a) {
            var b, c, e, f, g, h, k;
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).removeClass(a.call(this, b, this.className))
            });
            if (a && "string" == typeof a || a === d) for (b = (a || "").split(N), c = 0, e = this.length; c < e; c++) if (f = this[c], 1 === f.nodeType && f.className) if (a) {
                g = (" " + f.className + " ").replace(M, " ");
                h = 0;
                for (k = b.length; h < k; h++) g = g.replace(" " + b[h] + " ", " ");
                f.className = m.trim(g)
            } else f.className = "";
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a,
            d = "boolean" == typeof b;
            return m.isFunction(a) ? this.each(function(c) {
                m(this).toggleClass(a.call(this, c, this.className, b), b)
            }) : this.each(function() {
                if ("string" === c) for (var e, f = 0,
                g = m(this), h = b, k = a.split(N); e = k[f++];) h = d ? h: !g.hasClass(e),
                g[h ? "addClass": "removeClass"](e);
                else if ("undefined" === c || "boolean" === c) this.className && m._data(this, "__className__", this.className),
                this.className = this.className || !1 === a ? "": m._data(this, "__className__") || ""
            })
        },
        hasClass: function(a) {
            a = " " + a + " ";
            for (var b = 0,
            c = this.length; b < c; b++) if (1 === this[b].nodeType && -1 < (" " + this[b].className + " ").replace(M, " ").indexOf(a)) return ! 0;
            return ! 1
        },
        val: function(a) {
            var b, c, e, f = this[0];
            if (arguments.length) return e = m.isFunction(a),
            this.each(function(c) {
                var f = m(this),
                g;
                1 === this.nodeType && (e ? g = a.call(this, c, f.val()) : g = a, null == g ? g = "": "number" == typeof g ? g += "": m.isArray(g) && (g = m.map(g,
                function(a) {
                    return null == a ? "": a + ""
                })), b = m.valHooks[this.type] || m.valHooks[this.nodeName.toLowerCase()], b && "set" in b && b.set(this, g, "value") !== d || (this.value = g))
            });
            if (f) {
                if ((b = m.valHooks[f.type] || m.valHooks[f.nodeName.toLowerCase()]) && "get" in b && (c = b.get(f, "value")) !== d) return c;
                c = f.value;
                return "string" == typeof c ? c.replace(R, "") : null == c ? "": c
            }
        }
    });
    m.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = a.attributes.value;
                    return ! b || b.specified ? a.value: a.text
                }
            },
            select: {
                get: function(a) {
                    var b, c, d = a.selectedIndex,
                    e = [],
                    f = a.options,
                    g = "select-one" === a.type;
                    if (0 > d) return null;
                    a = g ? d: 0;
                    for (c = g ? d + 1 : f.length; a < c; a++) if (b = f[a], b.selected && !((m.support.optDisabled ? b.disabled: null !== b.getAttribute("disabled")) || b.parentNode.disabled && m.nodeName(b.parentNode, "optgroup"))) {
                        b = m(b).val();
                        if (g) return b;
                        e.push(b)
                    }
                    return g && !e.length && f.length ? m(f[d]).val() : e
                },
                set: function(a, b) {
                    var c = m.makeArray(b);
                    m(a).find("option").each(function() {
                        this.selected = 0 <= m.inArray(m(this).val(), c)
                    });
                    c.length || (a.selectedIndex = -1);
                    return c
                }
            }
        },
        attrFn: {
            val: !0,
            css: !0,
            html: !0,
            text: !0,
            data: !0,
            width: !0,
            height: !0,
            offset: !0
        },
        attr: function(a, b, c, e) {
            var f, g, h = a.nodeType;
            if (a && 3 !== h && 8 !== h && 2 !== h) {
                if (e && b in m.attrFn) return m(a)[b](c);
                if ("undefined" == typeof a.getAttribute) return m.prop(a, b, c); (e = 1 !== h || !m.isXMLDoc(a)) && (b = b.toLowerCase(), g = m.attrHooks[b] || (H.test(b) ? Y: S));
                if (c !== d) {
                    if (null === c) {
                        m.removeAttr(a, b);
                        return
                    }
                    if (g && "set" in g && e && (f = g.set(a, c, b)) !== d) return f;
                    a.setAttribute(b, "" + c);
                    return c
                }
                if (g && "get" in g && e && null !== (f = g.get(a, b))) return f;
                f = a.getAttribute(b);
                return null === f ? d: f
            }
        },
        removeAttr: function(a, b) {
            var c, d, e, f, g, h = 0;
            if (b && 1 === a.nodeType) for (d = b.toLowerCase().split(N), f = d.length; h < f; h++)(e = d[h]) && (c = m.propFix[e] || e, g = H.test(e), g || m.attr(a, e, ""), a.removeAttribute(U ? e: c), g && c in a && (a[c] = !1))
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (Q.test(a.nodeName) && a.parentNode) m.error("type property can't be changed");
                    else if (!m.support.radioValue && "radio" === b && m.nodeName(a, "input")) {
                        var c = a.value;
                        a.setAttribute("type", b);
                        c && (a.value = c);
                        return b
                    }
                }
            },
            value: {
                get: function(a, b) {
                    return S && m.nodeName(a, "button") ? S.get(a, b) : b in a ? a.value: null
                },
                set: function(a, b, c) {
                    if (S && m.nodeName(a, "button")) return S.set(a, b, c);
                    a.value = b
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(a, b, c) {
            var e, f, g;
            g = a.nodeType;
            if (a && 3 !== g && 8 !== g && 2 !== g) return (g = 1 !== g || !m.isXMLDoc(a)) && (b = m.propFix[b] || b, f = m.propHooks[b]),
            c !== d ? f && "set" in f && (e = f.set(a, c, b)) !== d ? e: a[b] = c: f && "get" in f && null !== (e = f.get(a, b)) ? e: a[b]
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var b = a.getAttributeNode("tabindex");
                    return b && b.specified ? parseInt(b.value, 10) : V.test(a.nodeName) || G.test(a.nodeName) && a.href ? 0 : d
                }
            }
        }
    });
    m.attrHooks.tabindex = m.propHooks.tabIndex;
    Y = {
        get: function(a, b) {
            var c, e = m.prop(a, b);
            return ! 0 === e || "boolean" != typeof e && (c = a.getAttributeNode(b)) && !1 !== c.nodeValue ? b.toLowerCase() : d
        },
        set: function(a, b, c) {
            var d; ! 1 === b ? m.removeAttr(a, c) : (d = m.propFix[c] || c, d in a && (a[d] = !0), a.setAttribute(c, c.toLowerCase()));
            return c
        }
    };
    U || (aa = {
        name: !0,
        id: !0,
        coords: !0
    },
    S = m.valHooks.button = {
        get: function(a, b) {
            var c;
            return (c = a.getAttributeNode(b)) && (aa[b] ? "" !== c.nodeValue: c.specified) ? c.nodeValue: d
        },
        set: function(a, b, c) {
            var d = a.getAttributeNode(c);
            d || (d = C.createAttribute(c), a.setAttributeNode(d));
            return d.nodeValue = b + ""
        }
    },
    m.attrHooks.tabindex.set = S.set, m.each(["width", "height"],
    function(a, b) {
        m.attrHooks[b] = m.extend(m.attrHooks[b], {
            set: function(a, c) {
                if ("" === c) return a.setAttribute(b, "auto"),
                c
            }
        })
    }), m.attrHooks.contenteditable = {
        get: S.get,
        set: function(a, b, c) {
            "" === b && (b = "false");
            S.set(a, b, c)
        }
    });
    m.support.hrefNormalized || m.each(["href", "src", "width", "height"],
    function(a, b) {
        m.attrHooks[b] = m.extend(m.attrHooks[b], {
            get: function(a) {
                a = a.getAttribute(b, 2);
                return null === a ? d: a
            }
        })
    });
    m.support.style || (m.attrHooks.style = {
        get: function(a) {
            return a.style.cssText.toLowerCase() || d
        },
        set: function(a, b) {
            return a.style.cssText = "" + b
        }
    });
    m.support.optSelected || (m.propHooks.selected = m.extend(m.propHooks.selected, {
        get: function(a) {
            a = a.parentNode;
            a && (a.selectedIndex, a.parentNode && a.parentNode.selectedIndex);
            return null
        }
    }));
    m.support.enctype || (m.propFix.enctype = "encoding");
    m.support.checkOn || m.each(["radio", "checkbox"],
    function() {
        m.valHooks[this] = {
            get: function(a) {
                return null === a.getAttribute("value") ? "on": a.value
            }
        }
    });
    m.each(["radio", "checkbox"],
    function() {
        m.valHooks[this] = m.extend(m.valHooks[this], {
            set: function(a, b) {
                if (m.isArray(b)) return a.checked = 0 <= m.inArray(m(a).val(), b)
            }
        })
    });
    var ca = /^(?:textarea|input|select)$/i,
    W = /^([^\.]*)?(?:\.(.+))?$/,
    T = /(?:^|\s)hover(\.\S+)?\b/,
    X = /^key/,
    Ra = /^(?:mouse|contextmenu)|click/,
    xa = /^(?:focusinfocus|focusoutblur)$/,
    Sa = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
    Ta = function(a) { (a = Sa.exec(a)) && (a[1] = (a[1] || "").toLowerCase(), a[3] = a[3] && RegExp("(?:^|\\s)" + a[3] + "(?:\\s|$)"));
        return a
    },
    ya = function(a) {
        return m.event.special.hover ? a: a.replace(T, "mouseenter$1 mouseleave$1")
    };
    m.event = {
        add: function(a, b, c, e, f) {
            var g, h, k, q, n, l, p, r, t;
            if (3 !== a.nodeType && 8 !== a.nodeType && b && c && (g = m._data(a))) {
                c.handler && (p = c, c = p.handler, f = p.selector);
                c.guid || (c.guid = m.guid++); (k = g.events) || (g.events = k = {}); (h = g.handle) || (g.handle = h = function(a) {
                    return "undefined" == typeof m || a && m.event.triggered === a.type ? d: m.event.dispatch.apply(h.elem, arguments)
                },
                h.elem = a);
                b = m.trim(ya(b)).split(" ");
                for (g = 0; g < b.length; g++) q = W.exec(b[g]) || [],
                n = q[1],
                l = (q[2] || "").split(".").sort(),
                t = m.event.special[n] || {},
                n = (f ? t.delegateType: t.bindType) || n,
                t = m.event.special[n] || {},
                q = m.extend({
                    type: n,
                    origType: q[1],
                    data: e,
                    handler: c,
                    guid: c.guid,
                    selector: f,
                    quick: f && Ta(f),
                    namespace: l.join(".")
                },
                p),
                r = k[n],
                r || (r = k[n] = [], r.delegateCount = 0, t.setup && !1 !== t.setup.call(a, e, l, h) || (a.addEventListener ? a.addEventListener(n, h, !1) : a.attachEvent && a.attachEvent("on" + n, h))),
                t.add && (t.add.call(a, q), q.handler.guid || (q.handler.guid = c.guid)),
                f ? r.splice(r.delegateCount++, 0, q) : r.push(q),
                m.event.global[n] = !0;
                a = null
            }
        },
        global: {},
        remove: function(a, b, c, d, e) {
            var f = m.hasData(a) && m._data(a),
            g,
            h,
            k,
            q,
            n,
            l,
            p,
            r,
            t,
            s,
            w;
            if (f && (p = f.events)) {
                b = m.trim(ya(b || "")).split(" ");
                for (g = 0; g < b.length; g++) if (h = W.exec(b[g]) || [], k = q = h[1], h = h[2], k) {
                    r = m.event.special[k] || {};
                    k = (d ? r.delegateType: r.bindType) || k;
                    s = p[k] || [];
                    n = s.length;
                    h = h ? RegExp("(^|\\.)" + h.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
                    for (l = 0; l < s.length; l++) w = s[l],
                    !e && q !== w.origType || c && c.guid !== w.guid || h && !h.test(w.namespace) || d && !(d === w.selector || "**" === d && w.selector) || (s.splice(l--, 1), w.selector && s.delegateCount--, !r.remove || r.remove.call(a, w));
                    0 === s.length && n !== s.length && ((!r.teardown || !1 === r.teardown.call(a, h)) && m.removeEvent(a, k, f.handle), delete p[k])
                } else for (k in p) m.event.remove(a, k + b[g], c, d, !0);
                m.isEmptyObject(p) && (t = f.handle, t && (t.elem = null), m.removeData(a, ["events", "handle"], !0))
            }
        },
        customEvent: {
            getData: !0,
            setData: !0,
            changeData: !0
        },
        trigger: function(b, c, e, f) {
            if (!e || 3 !== e.nodeType && 8 !== e.nodeType) {
                var g = b.type || b,
                h = [],
                k,
                q,
                n,
                l,
                p,
                r;
                if (!xa.test(g + m.event.triggered) && (0 <= g.indexOf("!") && (g = g.slice(0, -1), k = !0), 0 <= g.indexOf(".") && (h = g.split("."), g = h.shift(), h.sort()), e && !m.event.customEvent[g] || m.event.global[g])) if (b = "object" == typeof b ? b[m.expando] ? b: new m.Event(g, b) : new m.Event(g), b.type = g, b.isTrigger = !0, b.exclusive = k, b.namespace = h.join("."), b.namespace_re = b.namespace ? RegExp("(^|\\.)" + h.join("\\.(?:.*\\.)?") + "(\\.|$)") : null, k = 0 > g.indexOf(":") ? "on" + g: "", e) {
                    if (b.result = d, b.target || (b.target = e), c = null != c ? m.makeArray(c) : [], c.unshift(b), l = m.event.special[g] || {},
                    !l.trigger || !1 !== l.trigger.apply(e, c)) {
                        r = [[e, l.bindType || g]];
                        if (!f && !l.noBubble && !m.isWindow(e)) {
                            q = l.delegateType || g;
                            h = xa.test(q + g) ? e: e.parentNode;
                            for (n = null; h; h = h.parentNode) r.push([h, q]),
                            n = h;
                            n && n === e.ownerDocument && r.push([n.defaultView || n.parentWindow || a, q])
                        }
                        for (q = 0; q < r.length && !b.isPropagationStopped(); q++) h = r[q][0],
                        b.type = r[q][1],
                        (p = (m._data(h, "events") || {})[b.type] && m._data(h, "handle")) && p.apply(h, c),
                        (p = k && h[k]) && m.acceptData(h) && !1 === p.apply(h, c) && b.preventDefault();
                        b.type = g;
                        f || b.isDefaultPrevented() || l._default && !1 !== l._default.apply(e.ownerDocument, c) || "click" === g && m.nodeName(e, "a") || m.acceptData(e) && k && e[g] && ("focus" !== g && "blur" !== g || 0 !== b.target.offsetWidth) && !m.isWindow(e) && (n = e[k], n && (e[k] = null), m.event.triggered = g, e[g](), m.event.triggered = d, n && (e[k] = n));
                        return b.result
                    }
                } else for (q in e = m.cache, e) e[q].events && e[q].events[g] && m.event.trigger(b, c, e[q].handle.elem, !0)
            }
        },
        dispatch: function(b) {
            b = m.event.fix(b || a.event);
            var c = (m._data(this, "events") || {})[b.type] || [],
            e = c.delegateCount,
            f = [].slice.call(arguments, 0),
            g = !b.exclusive && !b.namespace,
            h = m.event.special[b.type] || {},
            k = [],
            q,
            n,
            l,
            p,
            r,
            t,
            s;
            f[0] = b;
            b.delegateTarget = this;
            if (!h.preDispatch || !1 !== h.preDispatch.call(this, b)) {
                if (e && (!b.button || "click" !== b.type)) for (l = m(this), l.context = this.ownerDocument || this, n = b.target; n != this; n = n.parentNode || this) if (!0 !== n.disabled) {
                    r = {};
                    t = [];
                    l[0] = n;
                    for (q = 0; q < e; q++) {
                        p = c[q];
                        s = p.selector;
                        if (r[s] === d) {
                            var w = r,
                            u = s,
                            v;
                            if (p.quick) {
                                v = p.quick;
                                var K = n.attributes || {};
                                v = (!v[1] || n.nodeName.toLowerCase() === v[1]) && (!v[2] || (K.id || {}).value === v[2]) && (!v[3] || v[3].test((K["class"] || {}).value))
                            } else v = l.is(s);
                            w[u] = v
                        }
                        r[s] && t.push(p)
                    }
                    t.length && k.push({
                        elem: n,
                        matches: t
                    })
                }
                c.length > e && k.push({
                    elem: this,
                    matches: c.slice(e)
                });
                for (q = 0; q < k.length && !b.isPropagationStopped(); q++) for (e = k[q], b.currentTarget = e.elem, c = 0; c < e.matches.length && !b.isImmediatePropagationStopped(); c++) if (p = e.matches[c], g || !b.namespace && !p.namespace || b.namespace_re && b.namespace_re.test(p.namespace)) b.data = p.data,
                b.handleObj = p,
                p = ((m.event.special[p.origType] || {}).handle || p.handler).apply(e.elem, f),
                p !== d && (b.result = p, !1 === p && (b.preventDefault(), b.stopPropagation()));
                h.postDispatch && h.postDispatch.call(this, b);
                return b.result
            }
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: ["char", "charCode", "key", "keyCode"],
            filter: function(a, b) {
                null == a.which && (a.which = null != b.charCode ? b.charCode: b.keyCode);
                return a
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, b) {
                var c, e, f, g = b.button,
                h = b.fromElement;
                null == a.pageX && null != b.clientX && (c = a.target.ownerDocument || C, e = c.documentElement, f = c.body, a.pageX = b.clientX + (e && e.scrollLeft || f && f.scrollLeft || 0) - (e && e.clientLeft || f && f.clientLeft || 0), a.pageY = b.clientY + (e && e.scrollTop || f && f.scrollTop || 0) - (e && e.clientTop || f && f.clientTop || 0)); ! a.relatedTarget && h && (a.relatedTarget = h === a.target ? b.toElement: h); ! a.which && g !== d && (a.which = g & 1 ? 1 : g & 2 ? 3 : g & 4 ? 2 : 0);
                return a
            }
        },
        fix: function(a) {
            if (a[m.expando]) return a;
            var b, c, e = a,
            f = m.event.fixHooks[a.type] || {},
            g = f.props ? this.props.concat(f.props) : this.props;
            a = m.Event(e);
            for (b = g.length; b;) c = g[--b],
            a[c] = e[c];
            a.target || (a.target = e.srcElement || C);
            3 === a.target.nodeType && (a.target = a.target.parentNode);
            a.metaKey === d && (a.metaKey = a.ctrlKey);
            return f.filter ? f.filter(a, e) : a
        },
        special: {
            ready: {
                setup: m.bindReady
            },
            load: {
                noBubble: !0
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(a, b, c) {
                    m.isWindow(this) && (this.onbeforeunload = c)
                },
                teardown: function(a, b) {
                    this.onbeforeunload === b && (this.onbeforeunload = null)
                }
            }
        },
        simulate: function(a, b, c, d) {
            a = m.extend(new m.Event, c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? m.event.trigger(a, null, b) : m.event.dispatch.call(b, a);
            a.isDefaultPrevented() && c.preventDefault()
        }
    };
    m.event.handle = m.event.dispatch;
    m.removeEvent = C.removeEventListener ?
    function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1)
    }: function(a, b, c) {
        a.detachEvent && a.detachEvent("on" + b, c)
    };
    m.Event = function(a, b) {
        if (! (this instanceof m.Event)) return new m.Event(a, b);
        a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || !1 === a.returnValue || a.getPreventDefault && a.getPreventDefault() ? E: z) : this.type = a;
        b && m.extend(this, b);
        this.timeStamp = a && a.timeStamp || m.now();
        this[m.expando] = !0
    };
    m.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = E;
            var a = this.originalEvent; ! a || (a.preventDefault ? a.preventDefault() : a.returnValue = !1)
        },
        stopPropagation: function() {
            this.isPropagationStopped = E;
            var a = this.originalEvent; ! a || (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0)
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = E;
            this.stopPropagation()
        },
        isDefaultPrevented: z,
        isPropagationStopped: z,
        isImmediatePropagationStopped: z
    };
    m.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    },
    function(a, b) {
        m.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c = a.relatedTarget,
                d = a.handleObj,
                e;
                if (!c || c !== this && !m.contains(this, c)) a.type = d.origType,
                e = d.handler.apply(this, arguments),
                a.type = b;
                return e
            }
        }
    });
    m.support.submitBubbles || (m.event.special.submit = {
        setup: function() {
            if (m.nodeName(this, "form")) return ! 1;
            m.event.add(this, "click._submit keypress._submit",
            function(a) {
                a = a.target; (a = m.nodeName(a, "input") || m.nodeName(a, "button") ? a.form: d) && !a._submit_attached && (m.event.add(a, "submit._submit",
                function(a) {
                    a._submit_bubble = !0
                }), a._submit_attached = !0)
            })
        },
        postDispatch: function(a) {
            a._submit_bubble && (delete a._submit_bubble, this.parentNode && !a.isTrigger && m.event.simulate("submit", this.parentNode, a, !0))
        },
        teardown: function() {
            if (m.nodeName(this, "form")) return ! 1;
            m.event.remove(this, "._submit")
        }
    });
    m.support.changeBubbles || (m.event.special.change = {
        setup: function() {
            if (ca.test(this.nodeName)) {
                if ("checkbox" === this.type || "radio" === this.type) m.event.add(this, "propertychange._change",
                function(a) {
                    "checked" === a.originalEvent.propertyName && (this._just_changed = !0)
                }),
                m.event.add(this, "click._change",
                function(a) {
                    this._just_changed && !a.isTrigger && (this._just_changed = !1, m.event.simulate("change", this, a, !0))
                });
                return ! 1
            }
            m.event.add(this, "beforeactivate._change",
            function(a) {
                a = a.target;
                ca.test(a.nodeName) && !a._change_attached && (m.event.add(a, "change._change",
                function(a) {
                    this.parentNode && !a.isSimulated && !a.isTrigger && m.event.simulate("change", this.parentNode, a, !0)
                }), a._change_attached = !0)
            })
        },
        handle: function(a) {
            var b = a.target;
            if (this !== b || a.isSimulated || a.isTrigger || "radio" !== b.type && "checkbox" !== b.type) return a.handleObj.handler.apply(this, arguments)
        },
        teardown: function() {
            m.event.remove(this, "._change");
            return ca.test(this.nodeName)
        }
    });
    m.support.focusinBubbles || m.each({
        focus: "focusin",
        blur: "focusout"
    },
    function(a, b) {
        var c = 0,
        d = function(a) {
            m.event.simulate(b, a.target, m.event.fix(a), !0)
        };
        m.event.special[b] = {
            setup: function() {
                0 === c++&&C.addEventListener(a, d, !0)
            },
            teardown: function() {
                0 === --c && C.removeEventListener(a, d, !0)
            }
        }
    });
    m.fn.extend({
        on: function(a, b, c, e, f) {
            var g, h;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b, b = d);
                for (h in a) this.on(h, b, c, a[h], f);
                return this
            }
            null == c && null == e ? (e = b, c = b = d) : null == e && ("string" == typeof b ? (e = c, c = d) : (e = c, c = b, b = d));
            if (!1 === e) e = z;
            else if (!e) return this;
            1 === f && (g = e, e = function(a) {
                m().off(a);
                return g.apply(this, arguments)
            },
            e.guid = g.guid || (g.guid = m.guid++));
            return this.each(function() {
                m.event.add(this, a, e, c, b)
            })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, b, c) {
            if (a && a.preventDefault && a.handleObj) {
                var e = a.handleObj;
                m(a.delegateTarget).off(e.namespace ? e.origType + "." + e.namespace: e.origType, e.selector, e.handler);
                return this
            }
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this
            }
            if (!1 === b || "function" == typeof b) c = b,
            b = d; ! 1 === c && (c = z);
            return this.each(function() {
                m.event.remove(this, a, c, b)
            })
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        live: function(a, b, c) {
            m(this.context).on(a, this.selector, b, c);
            return this
        },
        die: function(a, b) {
            m(this.context).off(a, this.selector || "**", b);
            return this
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return 1 == arguments.length ? this.off(a, "**") : this.off(b, a, c)
        },
        trigger: function(a, b) {
            return this.each(function() {
                m.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            if (this[0]) return m.event.trigger(a, b, this[0], !0)
        },
        toggle: function(a) {
            var b = arguments,
            c = a.guid || m.guid++,
            d = 0,
            e = function(c) {
                var e = (m._data(this, "lastToggle" + a.guid) || 0) % d;
                m._data(this, "lastToggle" + a.guid, e + 1);
                c.preventDefault();
                return b[e].apply(this, arguments) || !1
            };
            for (e.guid = c; d < b.length;) b[d++].guid = c;
            return this.click(e)
        },
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        }
    });
    m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),
    function(a, b) {
        m.fn[b] = function(a, c) {
            null == c && (c = a, a = null);
            return 0 < arguments.length ? this.on(b, null, a, c) : this.trigger(b)
        };
        m.attrFn && (m.attrFn[b] = !0);
        X.test(b) && (m.event.fixHooks[b] = m.event.keyHooks);
        Ra.test(b) && (m.event.fixHooks[b] = m.event.mouseHooks)
    }); (function() {
        function a(b, c, d, f, g, h) {
            g = 0;
            for (var k = f.length; g < k; g++) {
                var q = f[g];
                if (q) {
                    for (var n = !1,
                    q = q[b]; q;) {
                        if (q[e] === d) {
                            n = f[q.sizset];
                            break
                        }
                        if (1 === q.nodeType) if (h || (q[e] = d, q.sizset = g), "string" != typeof c) {
                            if (q === c) {
                                n = !0;
                                break
                            }
                        } else if (0 < p.filter(c, [q]).length) {
                            n = q;
                            break
                        }
                        q = q[b]
                    }
                    f[g] = n
                }
            }
        }
        function b(a, c, d, f, g, h) {
            g = 0;
            for (var k = f.length; g < k; g++) {
                var q = f[g];
                if (q) {
                    for (var n = !1,
                    q = q[a]; q;) {
                        if (q[e] === d) {
                            n = f[q.sizset];
                            break
                        }
                        1 === q.nodeType && !h && (q[e] = d, q.sizset = g);
                        if (q.nodeName.toLowerCase() === c) {
                            n = q;
                            break
                        }
                        q = q[a]
                    }
                    f[g] = n
                }
            }
        }
        var c = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
        e = "sizcache" + (Math.random() + "").replace(".", ""),
        f = 0,
        g = Object.prototype.toString,
        h = !1,
        k = !0,
        q = /\\/g,
        n = /\r\n/g,
        l = /\W/; [0, 0].sort(function() {
            k = !1;
            return 0
        });
        var p = function(a, b, d, e) {
            d = d || [];
            var f = b = b || C;
            if (1 !== b.nodeType && 9 !== b.nodeType) return [];
            if (!a || "string" != typeof a) return d;
            var h, k, q, n, m, l, r = !0,
            w = p.isXML(b),
            u = [],
            K = a;
            do
            if (c.exec(""), h = c.exec(K)) if (K = h[3], u.push(h[1]), h[2]) {
                n = h[3];
                break
            }
            while (h);
            if (1 < u.length && s.exec(a)) if (2 === u.length && t.relative[u[0]]) k = H(u[0] + u[1], b, e);
            else for (k = t.relative[u[0]] ? [b] : p(u.shift(), b); u.length;) a = u.shift(),
            t.relative[a] && (a += u.shift()),
            k = H(a, k, e);
            else if (!e && 1 < u.length && 9 === b.nodeType && !w && t.match.ID.test(u[0]) && !t.match.ID.test(u[u.length - 1]) && (m = p.find(u.shift(), b, w), b = m.expr ? p.filter(m.expr, m.set)[0] : m.set[0]), b) for (m = e ? {
                expr: u.pop(),
                set: v(e)
            }: p.find(u.pop(), 1 !== u.length || "~" !== u[0] && "+" !== u[0] || !b.parentNode ? b: b.parentNode, w), k = m.expr ? p.filter(m.expr, m.set) : m.set, 0 < u.length ? q = v(k) : r = !1; u.length;) h = l = u.pop(),
            t.relative[l] ? h = u.pop() : l = "",
            null == h && (h = b),
            t.relative[l](q, h, w);
            else q = [];
            q || (q = k);
            q || p.error(l || a);
            if ("[object Array]" === g.call(q)) if (r) if (b && 1 === b.nodeType) for (a = 0; null != q[a]; a++) q[a] && (!0 === q[a] || 1 === q[a].nodeType && p.contains(b, q[a])) && d.push(k[a]);
            else for (a = 0; null != q[a]; a++) q[a] && 1 === q[a].nodeType && d.push(k[a]);
            else d.push.apply(d, q);
            else v(q, d);
            n && (p(n, f, d, e), p.uniqueSort(d));
            return d
        };
        p.uniqueSort = function(a) {
            if (O && (h = k, a.sort(O), h)) for (var b = 1; b < a.length; b++) a[b] === a[b - 1] && a.splice(b--, 1);
            return a
        };
        p.matches = function(a, b) {
            return p(a, null, null, b)
        };
        p.matchesSelector = function(a, b) {
            return 0 < p(b, null, null, [a]).length
        };
        p.find = function(a, b, c) {
            var d, e, f, g, h, k;
            if (!a) return [];
            e = 0;
            for (f = t.order.length; e < f; e++) if (h = t.order[e], g = t.leftMatch[h].exec(a)) if (k = g[1], g.splice(1, 1), "\\" !== k.substr(k.length - 1) && (g[1] = (g[1] || "").replace(q, ""), d = t.find[h](g, b, c), null != d)) {
                a = a.replace(t.match[h], "");
                break
            }
            d || (d = "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName("*") : []);
            return {
                set: d,
                expr: a
            }
        };
        p.filter = function(a, b, c, e) {
            for (var f, g, h, k, q, n, m, l, r = a,
            s = [], w = b, u = b && b[0] && p.isXML(b[0]); a && b.length;) {
                for (h in t.filter) if (null != (f = t.leftMatch[h].exec(a)) && f[2] && (n = t.filter[h], q = f[1], g = !1, f.splice(1, 1), "\\" !== q.substr(q.length - 1))) {
                    w === s && (s = []);
                    if (t.preFilter[h]) if (f = t.preFilter[h](f, w, c, s, e, u), !f) g = k = !0;
                    else if (!0 === f) continue;
                    if (f) for (m = 0; null != (q = w[m]); m++) q && (k = n(q, f, m, w), l = e ^ k, c && null != k ? l ? g = !0 : w[m] = !1 : l && (s.push(q), g = !0));
                    if (k !== d) {
                        c || (w = s);
                        a = a.replace(t.match[h], "");
                        if (!g) return [];
                        break
                    }
                }
                if (a === r) if (null == g) p.error(a);
                else break;
                r = a
            }
            return w
        };
        p.error = function(a) {
            throw Error("Syntax error, unrecognized expression: " + a);
        };
        var r = p.getText = function(a) {
            var b, c;
            b = a.nodeType;
            var d = "";
            if (b) if (1 === b || 9 === b || 11 === b) {
                if ("string" == typeof a.textContent) return a.textContent;
                if ("string" == typeof a.innerText) return a.innerText.replace(n, "");
                for (a = a.firstChild; a; a = a.nextSibling) d += r(a)
            } else {
                if (3 === b || 4 === b) return a.nodeValue
            } else for (b = 0; c = a[b]; b++) 8 !== c.nodeType && (d += r(c));
            return d
        },
        t = p.selectors = {
            order: ["ID", "NAME", "TAG"],
            match: {
                ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
                ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
                TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
                CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
                POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
                PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
            },
            leftMatch: {},
            attrMap: {
                "class": "className",
                "for": "htmlFor"
            },
            attrHandle: {
                href: function(a) {
                    return a.getAttribute("href")
                },
                type: function(a) {
                    return a.getAttribute("type")
                }
            },
            relative: {
                "+": function(a, b) {
                    var c = "string" == typeof b,
                    d = c && !l.test(b),
                    c = c && !d;
                    d && (b = b.toLowerCase());
                    for (var d = 0,
                    e = a.length,
                    f; d < e; d++) if (f = a[d]) {
                        for (; (f = f.previousSibling) && 1 !== f.nodeType;);
                        a[d] = c || f && f.nodeName.toLowerCase() === b ? f || !1 : f === b
                    }
                    c && p.filter(b, a, !0)
                },
                ">": function(a, b) {
                    var c, d = "string" == typeof b,
                    e = 0,
                    f = a.length;
                    if (d && !l.test(b)) for (b = b.toLowerCase(); e < f; e++) {
                        if (c = a[e]) c = c.parentNode,
                        a[e] = c.nodeName.toLowerCase() === b ? c: !1
                    } else {
                        for (; e < f; e++)(c = a[e]) && (a[e] = d ? c.parentNode: c.parentNode === b);
                        d && p.filter(b, a, !0)
                    }
                },
                "": function(c, d, e) {
                    var g, h = f++,
                    k = a;
                    "string" == typeof d && !l.test(d) && (d = d.toLowerCase(), g = d, k = b);
                    k("parentNode", d, h, c, g, e)
                },
                "~": function(c, d, e) {
                    var g, h = f++,
                    k = a;
                    "string" == typeof d && !l.test(d) && (d = d.toLowerCase(), g = d, k = b);
                    k("previousSibling", d, h, c, g, e)
                }
            },
            find: {
                ID: function(a, b, c) {
                    if ("undefined" != typeof b.getElementById && !c) return (a = b.getElementById(a[1])) && a.parentNode ? [a] : []
                },
                NAME: function(a, b) {
                    if ("undefined" != typeof b.getElementsByName) {
                        for (var c = [], d = b.getElementsByName(a[1]), e = 0, f = d.length; e < f; e++) d[e].getAttribute("name") === a[1] && c.push(d[e]);
                        return 0 === c.length ? null: c
                    }
                },
                TAG: function(a, b) {
                    if ("undefined" != typeof b.getElementsByTagName) return b.getElementsByTagName(a[1])
                }
            },
            preFilter: {
                CLASS: function(a, b, c, d, e, f) {
                    a = " " + a[1].replace(q, "") + " ";
                    if (f) return a;
                    f = 0;
                    for (var g; null != (g = b[f]); f++) g && (e ^ (g.className && 0 <= (" " + g.className + " ").replace(/[\t\n\r]/g, " ").indexOf(a)) ? c || d.push(g) : c && (b[f] = !1));
                    return ! 1
                },
                ID: function(a) {
                    return a[1].replace(q, "")
                },
                TAG: function(a, b) {
                    return a[1].replace(q, "").toLowerCase()
                },
                CHILD: function(a) {
                    if ("nth" === a[1]) {
                        a[2] || p.error(a[0]);
                        a[2] = a[2].replace(/^\+|\s*/g, "");
                        var b = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec("even" === a[2] && "2n" || "odd" === a[2] && "2n+1" || !/\D/.test(a[2]) && "0n+" + a[2] || a[2]);
                        a[2] = b[1] + (b[2] || 1) - 0;
                        a[3] = b[3] - 0
                    } else a[2] && p.error(a[0]);
                    a[0] = f++;
                    return a
                },
                ATTR: function(a, b, c, d, e, f) {
                    b = a[1] = a[1].replace(q, ""); ! f && t.attrMap[b] && (a[1] = t.attrMap[b]);
                    a[4] = (a[4] || a[5] || "").replace(q, "");
                    "~=" === a[2] && (a[4] = " " + a[4] + " ");
                    return a
                },
                PSEUDO: function(a, b, d, e, f) {
                    if ("not" === a[1]) if (1 < (c.exec(a[3]) || "").length || /^\w/.test(a[3])) a[3] = p(a[3], null, null, b);
                    else return a = p.filter(a[3], b, d, 1 ^ f),
                    d || e.push.apply(e, a),
                    !1;
                    else if (t.match.POS.test(a[0]) || t.match.CHILD.test(a[0])) return ! 0;
                    return a
                },
                POS: function(a) {
                    a.unshift(!0);
                    return a
                }
            },
            filters: {
                enabled: function(a) {
                    return ! 1 === a.disabled && "hidden" !== a.type
                },
                disabled: function(a) {
                    return ! 0 === a.disabled
                },
                checked: function(a) {
                    return ! 0 === a.checked
                },
                selected: function(a) {
                    a.parentNode && a.parentNode.selectedIndex;
                    return ! 0 === a.selected
                },
                parent: function(a) {
                    return !! a.firstChild
                },
                empty: function(a) {
                    return ! a.firstChild
                },
                has: function(a, b, c) {
                    return !! p(c[3], a).length
                },
                header: function(a) {
                    return /h\d/i.test(a.nodeName)
                },
                text: function(a) {
                    var b = a.getAttribute("type"),
                    c = a.type;
                    return "input" === a.nodeName.toLowerCase() && "text" === c && (b === c || null === b)
                },
                radio: function(a) {
                    return "input" === a.nodeName.toLowerCase() && "radio" === a.type
                },
                checkbox: function(a) {
                    return "input" === a.nodeName.toLowerCase() && "checkbox" === a.type
                },
                file: function(a) {
                    return "input" === a.nodeName.toLowerCase() && "file" === a.type
                },
                password: function(a) {
                    return "input" === a.nodeName.toLowerCase() && "password" === a.type
                },
                submit: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return ("input" === b || "button" === b) && "submit" === a.type
                },
                image: function(a) {
                    return "input" === a.nodeName.toLowerCase() && "image" === a.type
                },
                reset: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return ("input" === b || "button" === b) && "reset" === a.type
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b
                },
                input: function(a) {
                    return /input|select|textarea|button/i.test(a.nodeName)
                },
                focus: function(a) {
                    return a === a.ownerDocument.activeElement
                }
            },
            setFilters: {
                first: function(a, b) {
                    return 0 === b
                },
                last: function(a, b, c, d) {
                    return b === d.length - 1
                },
                even: function(a, b) {
                    return 0 === b % 2
                },
                odd: function(a, b) {
                    return 1 === b % 2
                },
                lt: function(a, b, c) {
                    return b < c[3] - 0
                },
                gt: function(a, b, c) {
                    return b > c[3] - 0
                },
                nth: function(a, b, c) {
                    return c[3] - 0 === b
                },
                eq: function(a, b, c) {
                    return c[3] - 0 === b
                }
            },
            filter: {
                PSEUDO: function(a, b, c, d) {
                    var e = b[1],
                    f = t.filters[e];
                    if (f) return f(a, c, b, d);
                    if ("contains" === e) return 0 <= (a.textContent || a.innerText || r([a]) || "").indexOf(b[3]);
                    if ("not" === e) {
                        b = b[3];
                        c = 0;
                        for (d = b.length; c < d; c++) if (b[c] === a) return ! 1;
                        return ! 0
                    }
                    p.error(e)
                },
                CHILD: function(a, b) {
                    var c, d, f, g, h, k;
                    c = b[1];
                    k = a;
                    switch (c) {
                    case "only":
                    case "first":
                        for (; k = k.previousSibling;) if (1 === k.nodeType) return ! 1;
                        if ("first" === c) return ! 0;
                        k = a;
                    case "last":
                        for (; k = k.nextSibling;) if (1 === k.nodeType) return ! 1;
                        return ! 0;
                    case "nth":
                        c = b[2];
                        d = b[3];
                        if (1 === c && 0 === d) return ! 0;
                        f = b[0];
                        if ((g = a.parentNode) && (g[e] !== f || !a.nodeIndex)) {
                            h = 0;
                            for (k = g.firstChild; k; k = k.nextSibling) 1 === k.nodeType && (k.nodeIndex = ++h);
                            g[e] = f
                        }
                        k = a.nodeIndex - d;
                        return 0 === c ? 0 === k: 0 === k % c && 0 <= k / c
                    }
                },
                ID: function(a, b) {
                    return 1 === a.nodeType && a.getAttribute("id") === b
                },
                TAG: function(a, b) {
                    return "*" === b && 1 === a.nodeType || !!a.nodeName && a.nodeName.toLowerCase() === b
                },
                CLASS: function(a, b) {
                    return - 1 < (" " + (a.className || a.getAttribute("class")) + " ").indexOf(b)
                },
                ATTR: function(a, b) {
                    var c = b[1],
                    c = p.attr ? p.attr(a, c) : t.attrHandle[c] ? t.attrHandle[c](a) : null != a[c] ? a[c] : a.getAttribute(c),
                    d = c + "",
                    e = b[2],
                    f = b[4];
                    return null == c ? "!=" === e: !e && p.attr ? null != c: "=" === e ? d === f: "*=" === e ? 0 <= d.indexOf(f) : "~=" === e ? 0 <= (" " + d + " ").indexOf(f) : f ? "!=" === e ? d !== f: "^=" === e ? 0 === d.indexOf(f) : "$=" === e ? d.substr(d.length - f.length) === f: "|=" === e ? d === f || d.substr(0, f.length + 1) === f + "-": !1 : d && !1 !== c
                },
                POS: function(a, b, c, d) {
                    var e = t.setFilters[b[2]];
                    if (e) return e(a, c, b, d)
                }
            }
        },
        s = t.match.POS,
        w = function(a, b) {
            return "\\" + (b - 0 + 1)
        },
        u;
        for (u in t.match) t.match[u] = RegExp(t.match[u].source + /(?![^\[]*\])(?![^\(]*\))/.source),
        t.leftMatch[u] = RegExp(/(^(?:.|\r|\n)*?)/.source + t.match[u].source.replace(/\\(\d+)/g, w));
        t.match.globalPOS = s;
        var v = function(a, b) {
            a = Array.prototype.slice.call(a, 0);
            return b ? (b.push.apply(b, a), b) : a
        };
        try {
            Array.prototype.slice.call(C.documentElement.childNodes, 0)[0].nodeType
        } catch(K) {
            v = function(a, b) {
                var c = 0,
                d = b || [];
                if ("[object Array]" === g.call(a)) Array.prototype.push.apply(d, a);
                else if ("number" == typeof a.length) for (var e = a.length; c < e; c++) d.push(a[c]);
                else for (; a[c]; c++) d.push(a[c]);
                return d
            }
        }
        var O, A;
        C.documentElement.compareDocumentPosition ? O = function(a, b) {
            return a === b ? (h = !0, 0) : a.compareDocumentPosition && b.compareDocumentPosition ? a.compareDocumentPosition(b) & 4 ? -1 : 1 : a.compareDocumentPosition ? -1 : 1
        }: (O = function(a, b) {
            if (a === b) return h = !0,
            0;
            if (a.sourceIndex && b.sourceIndex) return a.sourceIndex - b.sourceIndex;
            var c, d, e = [],
            f = [];
            c = a.parentNode;
            d = b.parentNode;
            var g = c;
            if (c === d) return A(a, b);
            if (!c) return - 1;
            if (!d) return 1;
            for (; g;) e.unshift(g),
            g = g.parentNode;
            for (g = d; g;) f.unshift(g),
            g = g.parentNode;
            c = e.length;
            d = f.length;
            for (g = 0; g < c && g < d; g++) if (e[g] !== f[g]) return A(e[g], f[g]);
            return g === c ? A(a, f[g], -1) : A(e[g], b, 1)
        },
        A = function(a, b, c) {
            if (a === b) return c;
            for (a = a.nextSibling; a;) {
                if (a === b) return - 1;
                a = a.nextSibling
            }
            return 1
        }); (function() {
            var a = C.createElement("div"),
            b = "script" + (new Date).getTime(),
            c = C.documentElement;
            a.innerHTML = "<a name='" + b + "'/>";
            c.insertBefore(a, c.firstChild);
            C.getElementById(b) && (t.find.ID = function(a, b, c) {
                if ("undefined" != typeof b.getElementById && !c) return (b = b.getElementById(a[1])) ? b.id === a[1] || "undefined" != typeof b.getAttributeNode && b.getAttributeNode("id").nodeValue === a[1] ? [b] : d: []
            },
            t.filter.ID = function(a, b) {
                var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
                return 1 === a.nodeType && c && c.nodeValue === b
            });
            c.removeChild(a);
            c = a = null
        })(); (function() {
            var a = C.createElement("div");
            a.appendChild(C.createComment(""));
            0 < a.getElementsByTagName("*").length && (t.find.TAG = function(a, b) {
                var c = b.getElementsByTagName(a[1]);
                if ("*" === a[1]) {
                    for (var d = [], e = 0; c[e]; e++) 1 === c[e].nodeType && d.push(c[e]);
                    c = d
                }
                return c
            });
            a.innerHTML = "<a href='#'></a>";
            a.firstChild && "undefined" != typeof a.firstChild.getAttribute && "#" !== a.firstChild.getAttribute("href") && (t.attrHandle.href = function(a) {
                return a.getAttribute("href", 2)
            });
            a = null
        })();
        C.querySelectorAll &&
        function() {
            var a = p,
            b = C.createElement("div");
            b.innerHTML = "<p class='TEST'></p>";
            if (!b.querySelectorAll || 0 !== b.querySelectorAll(".TEST").length) {
                p = function(b, c, d, e) {
                    c = c || C;
                    if (!e && !p.isXML(c)) {
                        var f = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);
                        if (f && (1 === c.nodeType || 9 === c.nodeType)) {
                            if (f[1]) return v(c.getElementsByTagName(b), d);
                            if (f[2] && t.find.CLASS && c.getElementsByClassName) return v(c.getElementsByClassName(f[2]), d)
                        }
                        if (9 === c.nodeType) {
                            if ("body" === b && c.body) return v([c.body], d);
                            if (f && f[3]) {
                                var g = c.getElementById(f[3]);
                                if (!g || !g.parentNode) return v([], d);
                                if (g.id === f[3]) return v([g], d)
                            }
                            try {
                                return v(c.querySelectorAll(b), d)
                            } catch(h) {}
                        } else if (1 === c.nodeType && "object" !== c.nodeName.toLowerCase()) {
                            var f = c,
                            k = (g = c.getAttribute("id")) || "__sizzle__",
                            q = c.parentNode,
                            n = /^\s*[+~]/.test(b);
                            g ? k = k.replace(/'/g, "\\$&") : c.setAttribute("id", k);
                            n && q && (c = c.parentNode);
                            try {
                                if (!n || q) return v(c.querySelectorAll("[id='" + k + "'] " + b), d)
                            } catch(m) {} finally {
                                g || f.removeAttribute("id")
                            }
                        }
                    }
                    return a(b, c, d, e)
                };
                for (var c in a) p[c] = a[c];
                b = null
            }
        } (); (function() {
            var a = C.documentElement,
            b = a.matchesSelector || a.mozMatchesSelector || a.webkitMatchesSelector || a.msMatchesSelector;
            if (b) {
                var c = !b.call(C.createElement("div"), "div"),
                d = !1;
                try {
                    b.call(C.documentElement, "[test!='']:sizzle")
                } catch(e) {
                    d = !0
                }
                p.matchesSelector = function(a, e) {
                    e = e.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                    if (!p.isXML(a)) try {
                        if (d || !t.match.PSEUDO.test(e) && !/!=/.test(e)) {
                            var f = b.call(a, e);
                            if (f || !c || a.document && 11 !== a.document.nodeType) return f
                        }
                    } catch(g) {}
                    return 0 < p(e, null, null, [a]).length
                }
            }
        })(); (function() {
            var a = C.createElement("div");
            a.innerHTML = "<div class='test e'></div><div class='test'></div>";
            a.getElementsByClassName && 0 !== a.getElementsByClassName("e").length && (a.lastChild.className = "e", 1 !== a.getElementsByClassName("e").length && (t.order.splice(1, 0, "CLASS"), t.find.CLASS = function(a, b, c) {
                if ("undefined" != typeof b.getElementsByClassName && !c) return b.getElementsByClassName(a[1])
            },
            a = null))
        })();
        C.documentElement.contains ? p.contains = function(a, b) {
            return a !== b && (a.contains ? a.contains(b) : !0)
        }: C.documentElement.compareDocumentPosition ? p.contains = function(a, b) {
            return !! (a.compareDocumentPosition(b) & 16)
        }: p.contains = function() {
            return ! 1
        };
        p.isXML = function(a) {
            return (a = (a ? a.ownerDocument || a: 0).documentElement) ? "HTML" !== a.nodeName: !1
        };
        var H = function(a, b, c) {
            var d, e = [],
            f = "";
            for (b = b.nodeType ? [b] : b; d = t.match.PSEUDO.exec(a);) f += d[0],
            a = a.replace(t.match.PSEUDO, "");
            a = t.relative[a] ? a + "*": a;
            d = 0;
            for (var g = b.length; d < g; d++) p(a, b[d], e, c);
            return p.filter(f, e)
        };
        p.attr = m.attr;
        p.selectors.attrMap = {};
        m.find = p;
        m.expr = p.selectors;
        m.expr[":"] = m.expr.filters;
        m.unique = p.uniqueSort;
        m.text = p.getText;
        m.isXMLDoc = p.isXML;
        m.contains = p.contains
    })();
    var Ua = /Until$/,
    Va = /^(?:parents|prevUntil|prevAll)/,
    Wa = /,/,
    Qa = /^.[^:#\[\.,]*$/,
    Xa = Array.prototype.slice,
    za = m.expr.match.globalPOS,
    Ya = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    m.fn.extend({
        find: function(a) {
            var b = this,
            c, d;
            if ("string" != typeof a) return m(a).filter(function() {
                c = 0;
                for (d = b.length; c < d; c++) if (m.contains(b[c], this)) return ! 0
            });
            var e = this.pushStack("", "find", a),
            f,
            g,
            h;
            c = 0;
            for (d = this.length; c < d; c++) if (f = e.length, m.find(a, this[c], e), 0 < c) for (g = f; g < e.length; g++) for (h = 0; h < f; h++) if (e[h] === e[g]) {
                e.splice(g--, 1);
                break
            }
            return e
        },
        has: function(a) {
            var b = m(a);
            return this.filter(function() {
                for (var a = 0,
                c = b.length; a < c; a++) if (m.contains(this, b[a])) return ! 0
            })
        },
        not: function(a) {
            return this.pushStack(A(this, a, !1), "not", a)
        },
        filter: function(a) {
            return this.pushStack(A(this, a, !0), "filter", a)
        },
        is: function(a) {
            return !! a && ("string" == typeof a ? za.test(a) ? 0 <= m(a, this.context).index(this[0]) : 0 < m.filter(a, this).length: 0 < this.filter(a).length)
        },
        closest: function(a, b) {
            var c = [],
            d,
            e,
            f = this[0];
            if (m.isArray(a)) {
                for (e = 1; f && f.ownerDocument && f !== b;) {
                    for (d = 0; d < a.length; d++) m(f).is(a[d]) && c.push({
                        selector: a[d],
                        elem: f,
                        level: e
                    });
                    f = f.parentNode;
                    e++
                }
                return c
            }
            var g = za.test(a) || "string" != typeof a ? m(a, b || this.context) : 0;
            d = 0;
            for (e = this.length; d < e; d++) for (f = this[d]; f;) {
                if (g ? -1 < g.index(f) : m.find.matchesSelector(f, a)) {
                    c.push(f);
                    break
                }
                f = f.parentNode;
                if (!f || !f.ownerDocument || f === b || 11 === f.nodeType) break
            }
            c = 1 < c.length ? m.unique(c) : c;
            return this.pushStack(c, "closest", a)
        },
        index: function(a) {
            return a ? "string" == typeof a ? m.inArray(this[0], m(a)) : m.inArray(a.jquery ? a[0] : a, this) : this[0] && this[0].parentNode ? this.prevAll().length: -1
        },
        add: function(a, b) {
            var c = "string" == typeof a ? m(a, b) : m.makeArray(a && a.nodeType ? [a] : a),
            d = m.merge(this.get(), c);
            return this.pushStack(c[0] && c[0].parentNode && 11 !== c[0].parentNode.nodeType && d[0] && d[0].parentNode && 11 !== d[0].parentNode.nodeType ? m.unique(d) : d)
        },
        andSelf: function() {
            return this.add(this.prevObject)
        }
    });
    m.each({
        parent: function(a) {
            return (a = a.parentNode) && 11 !== a.nodeType ? a: null
        },
        parents: function(a) {
            return m.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return m.dir(a, "parentNode", c)
        },
        next: function(a) {
            return m.nth(a, 2, "nextSibling")
        },
        prev: function(a) {
            return m.nth(a, 2, "previousSibling")
        },
        nextAll: function(a) {
            return m.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return m.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return m.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return m.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return m.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return m.sibling(a.firstChild)
        },
        contents: function(a) {
            return m.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document: m.makeArray(a.childNodes)
        }
    },
    function(a, b) {
        m.fn[a] = function(c, d) {
            var e = m.map(this, b, c);
            Ua.test(a) || (d = c);
            d && "string" == typeof d && (e = m.filter(d, e));
            e = 1 < this.length && !Ya[a] ? m.unique(e) : e; (1 < this.length || Wa.test(d)) && Va.test(a) && (e = e.reverse());
            return this.pushStack(e, a, Xa.call(arguments).join(","))
        }
    });
    m.extend({
        filter: function(a, b, c) {
            c && (a = ":not(" + a + ")");
            return 1 === b.length ? m.find.matchesSelector(b[0], a) ? [b[0]] : [] : m.find.matches(a, b)
        },
        dir: function(a, b, c) {
            var e = [];
            for (a = a[b]; a && 9 !== a.nodeType && (c === d || 1 !== a.nodeType || !m(a).is(c));) 1 === a.nodeType && e.push(a),
            a = a[b];
            return e
        },
        nth: function(a, b, c, d) {
            b = b || 1;
            for (d = 0; a && (1 !== a.nodeType || ++d !== b); a = a[c]);
            return a
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
            return c
        }
    });
    var wa = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
    Za = / jQuery\d+="(?:\d+|null)"/g,
    qa = /^\s+/,
    Aa = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
    Ba = /<([\w:]+)/,
    $a = /<tbody/i,
    ab = /<|&#?\w+;/,
    bb = /<(?:script|style)/i,
    cb = /<(?:script|object|embed|option|style)/i,
    Ca = RegExp("<(?:" + wa + ")[\\s/>]", "i"),
    Da = /checked\s*(?:[^=]|=\s*.checked.)/i,
    Ea = /\/(java|ecma)script/i,
    db = /^\s*<!(?:\[CDATA\[|\-\-)/,
    Z = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        legend: [1, "<fieldset>", "</fieldset>"],
        thead: [1, "<table>", "</table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
        area: [1, "<map>", "</map>"],
        _default: [0, "", ""]
    },
    ra = v(C);
    Z.optgroup = Z.option;
    Z.tbody = Z.tfoot = Z.colgroup = Z.caption = Z.thead;
    Z.th = Z.td;
    m.support.htmlSerialize || (Z._default = [1, "div<div>", "</div>"]);
    m.fn.extend({
        text: function(a) {
            return m.access(this,
            function(a) {
                return a === d ? m.text(this) : this.empty().append((this[0] && this[0].ownerDocument || C).createTextNode(a))
            },
            null, a, arguments.length)
        },
        wrapAll: function(a) {
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).wrapAll(a.call(this, b))
            });
            if (this[0]) {
                var b = m(a, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && b.insertBefore(this[0]);
                b.map(function() {
                    for (var a = this; a.firstChild && 1 === a.firstChild.nodeType;) a = a.firstChild;
                    return a
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            return m.isFunction(a) ? this.each(function(b) {
                m(this).wrapInner(a.call(this, b))
            }) : this.each(function() {
                var b = m(this),
                c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = m.isFunction(a);
            return this.each(function(c) {
                m(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                m.nodeName(this, "body") || m(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, !0,
            function(a) {
                1 === this.nodeType && this.appendChild(a)
            })
        },
        prepend: function() {
            return this.domManip(arguments, !0,
            function(a) {
                1 === this.nodeType && this.insertBefore(a, this.firstChild)
            })
        },
        before: function() {
            if (this[0] && this[0].parentNode) return this.domManip(arguments, !1,
            function(a) {
                this.parentNode.insertBefore(a, this)
            });
            if (arguments.length) {
                var a = m.clean(arguments);
                a.push.apply(a, this.toArray());
                return this.pushStack(a, "before", arguments)
            }
        },
        after: function() {
            if (this[0] && this[0].parentNode) return this.domManip(arguments, !1,
            function(a) {
                this.parentNode.insertBefore(a, this.nextSibling)
            });
            if (arguments.length) {
                var a = this.pushStack(this, "after", arguments);
                a.push.apply(a, m.clean(arguments));
                return a
            }
        },
        remove: function(a, b) {
            for (var c = 0,
            d; null != (d = this[c]); c++) if (!a || m.filter(a, [d]).length) ! b && 1 === d.nodeType && (m.cleanData(d.getElementsByTagName("*")), m.cleanData([d])),
            d.parentNode && d.parentNode.removeChild(d);
            return this
        },
        empty: function() {
            for (var a = 0,
            b; null != (b = this[a]); a++) for (1 === b.nodeType && m.cleanData(b.getElementsByTagName("*")); b.firstChild;) b.removeChild(b.firstChild);
            return this
        },
        clone: function(a, b) {
            a = null == a ? !1 : a;
            b = null == b ? a: b;
            return this.map(function() {
                return m.clone(this, a, b)
            })
        },
        html: function(a) {
            return m.access(this,
            function(a) {
                var b = this[0] || {},
                c = 0,
                e = this.length;
                if (a === d) return 1 === b.nodeType ? b.innerHTML.replace(Za, "") : null;
                if ("string" == typeof a && !(bb.test(a) || !m.support.leadingWhitespace && qa.test(a) || Z[(Ba.exec(a) || ["", ""])[1].toLowerCase()])) {
                    a = a.replace(Aa, "<$1></$2>");
                    try {
                        for (; c < e; c++) b = this[c] || {},
                        1 === b.nodeType && (m.cleanData(b.getElementsByTagName("*")), b.innerHTML = a);
                        b = 0
                    } catch(f) {}
                }
                b && this.empty().append(a)
            },
            null, a, arguments.length)
        },
        replaceWith: function(a) {
            if (this[0] && this[0].parentNode) {
                if (m.isFunction(a)) return this.each(function(b) {
                    var c = m(this),
                    d = c.html();
                    c.replaceWith(a.call(this, b, d))
                });
                "string" != typeof a && (a = m(a).detach());
                return this.each(function() {
                    var b = this.nextSibling,
                    c = this.parentNode;
                    m(this).remove();
                    b ? m(b).before(a) : m(c).append(a)
                })
            }
            return this.length ? this.pushStack(m(m.isFunction(a) ? a() : a), "replaceWith", a) : this
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, b, c) {
            var e, f, g, h = a[0],
            k = [];
            if (!m.support.checkClone && 3 === arguments.length && "string" == typeof h && Da.test(h)) return this.each(function() {
                m(this).domManip(a, b, c, !0)
            });
            if (m.isFunction(h)) return this.each(function(e) {
                var f = m(this);
                a[0] = h.call(this, e, b ? f.html() : d);
                f.domManip(a, b, c)
            });
            if (this[0]) {
                g = h && h.parentNode;
                m.support.parentNode && g && 11 === g.nodeType && g.childNodes.length === this.length ? e = {
                    fragment: g
                }: e = m.buildFragment(a, this, k);
                g = e.fragment;
                1 === g.childNodes.length ? f = g = g.firstChild: f = g.firstChild;
                if (f) {
                    b = b && m.nodeName(f, "tr");
                    f = 0;
                    for (var q = this.length,
                    n = q - 1; f < q; f++) c.call(b ? m.nodeName(this[f], "table") ? this[f].getElementsByTagName("tbody")[0] || this[f].appendChild(this[f].ownerDocument.createElement("tbody")) : this[f] : this[f], e.cacheable || 1 < q && f < n ? m.clone(g, !0, !0) : g)
                }
                k.length && m.each(k,
                function(a, b) {
                    b.src ? m.ajax({
                        type: "GET",
                        global: !1,
                        url: b.src,
                        async: !1,
                        dataType: "script"
                    }) : m.globalEval((b.text || b.textContent || b.innerHTML || "").replace(db, "/*$0*/"));
                    b.parentNode && b.parentNode.removeChild(b)
                })
            }
            return this
        }
    });
    m.buildFragment = function(a, b, c) {
        var d, e, f, g, h = a[0];
        b && b[0] && (g = b[0].ownerDocument || b[0]);
        g.createDocumentFragment || (g = C);
        1 === a.length && "string" == typeof h && 512 > h.length && g === C && "<" === h.charAt(0) && !(cb.test(h) || !m.support.checkClone && Da.test(h) || !m.support.html5Clone && Ca.test(h)) && (e = !0, f = m.fragments[h], f && 1 !== f && (d = f));
        d || (d = g.createDocumentFragment(), m.clean(a, g, d, c));
        e && (m.fragments[h] = f ? d: 1);
        return {
            fragment: d,
            cacheable: e
        }
    };
    m.fragments = {};
    m.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    },
    function(a, b) {
        m.fn[a] = function(c) {
            var d = [];
            c = m(c);
            var e = 1 === this.length && this[0].parentNode;
            if (e && 11 === e.nodeType && 1 === e.childNodes.length && 1 === c.length) return c[b](this[0]),
            this;
            for (var e = 0,
            f = c.length; e < f; e++) {
                var g = (0 < e ? this.clone(!0) : this).get();
                m(c[e])[b](g);
                d = d.concat(g)
            }
            return this.pushStack(d, a, c.selector)
        }
    });
    m.extend({
        clone: function(a, b, c) {
            var d, e, f;
            m.support.html5Clone || m.isXMLDoc(a) || !Ca.test("<" + a.nodeName + ">") ? d = a.cloneNode(!0) : (d = C.createElement("div"), ra.appendChild(d), d.innerHTML = a.outerHTML, d = d.firstChild);
            var g = d;
            if (! (m.support.noCloneEvent && m.support.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || m.isXMLDoc(a))) for (u(a, g), d = t(a), e = t(g), f = 0; d[f]; ++f) e[f] && u(d[f], e[f]);
            if (b && (w(a, g), c)) for (d = t(a), e = t(g), f = 0; d[f]; ++f) w(d[f], e[f]);
            return g
        },
        clean: function(a, b, c, d) {
            var e, f = [];
            b = b || C;
            "undefined" == typeof b.createElement && (b = b.ownerDocument || b[0] && b[0].ownerDocument || C);
            for (var g = 0,
            h; null != (h = a[g]); g++) if ("number" == typeof h && (h += ""), h) {
                if ("string" == typeof h) if (ab.test(h)) {
                    h = h.replace(Aa, "<$1></$2>");
                    e = (Ba.exec(h) || ["", ""])[1].toLowerCase();
                    var k = Z[e] || Z._default,
                    q = k[0],
                    n = b.createElement("div"),
                    l = ra.childNodes,
                    p;
                    b === C ? ra.appendChild(n) : v(b).appendChild(n);
                    for (n.innerHTML = k[1] + h + k[2]; q--;) n = n.lastChild;
                    if (!m.support.tbody) for (q = $a.test(h), k = "table" !== e || q ? "<table>" !== k[1] || q ? [] : n.childNodes: n.firstChild && n.firstChild.childNodes, e = k.length - 1; 0 <= e; --e) m.nodeName(k[e], "tbody") && !k[e].childNodes.length && k[e].parentNode.removeChild(k[e]); ! m.support.leadingWhitespace && qa.test(h) && n.insertBefore(b.createTextNode(qa.exec(h)[0]), n.firstChild);
                    h = n.childNodes;
                    n && (n.parentNode.removeChild(n), 0 < l.length && (p = l[l.length - 1], p && p.parentNode && p.parentNode.removeChild(p)))
                } else h = b.createTextNode(h);
                var t;
                if (!m.support.appendChecked) if (h[0] && "number" == typeof(t = h.length)) for (e = 0; e < t; e++) r(h[e]);
                else r(h);
                h.nodeType ? f.push(h) : f = m.merge(f, h)
            }
            if (c) for (a = function(a) {
                return ! a.type || Ea.test(a.type)
            },
            g = 0; f[g]; g++) b = f[g],
            d && m.nodeName(b, "script") && (!b.type || Ea.test(b.type)) ? d.push(b.parentNode ? b.parentNode.removeChild(b) : b) : (1 === b.nodeType && (h = m.grep(b.getElementsByTagName("script"), a), f.splice.apply(f, [g + 1, 0].concat(h))), c.appendChild(b));
            return f
        },
        cleanData: function(a) {
            for (var b, c, d = m.cache,
            e = m.event.special,
            f = m.support.deleteExpando,
            g = 0,
            h; null != (h = a[g]); g++) if (!h.nodeName || !m.noData[h.nodeName.toLowerCase()]) if (c = h[m.expando]) {
                if ((b = d[c]) && b.events) {
                    for (var k in b.events) e[k] ? m.event.remove(h, k) : m.removeEvent(h, k, b.handle);
                    b.handle && (b.handle.elem = null)
                }
                f ? delete h[m.expando] : h.removeAttribute && h.removeAttribute(m.expando);
                delete d[c]
            }
        }
    });
    var sa = /alpha\([^)]*\)/i,
    eb = /opacity=([^)]*)/,
    fb = /([A-Z]|^ms)/g,
    gb = /^[\-+]?(?:\d*\.)?\d+$/i,
    pa = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,
    hb = /^([\-+])=([\-+.\de]+)/,
    ib = /^margin/,
    jb = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    },
    da = ["Top", "Right", "Bottom", "Left"],
    ha,
    Fa,
    Ga;
    m.fn.css = function(a, b) {
        return m.access(this,
        function(a, b, c) {
            return c !== d ? m.style(a, b, c) : m.css(a, b)
        },
        a, b, 1 < arguments.length)
    };
    m.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = ha(a, "opacity");
                        return "" === c ? "1": c
                    }
                    return a.style.opacity
                }
            }
        },
        cssNumber: {
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": m.support.cssFloat ? "cssFloat": "styleFloat"
        },
        style: function(a, b, c, e) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var f, g = m.camelCase(b),
                h = a.style,
                k = m.cssHooks[g];
                b = m.cssProps[g] || g;
                if (c === d) return k && "get" in k && (f = k.get(a, !1, e)) !== d ? f: h[b];
                e = typeof c;
                "string" === e && (f = hb.exec(c)) && (c = +(f[1] + 1) * +f[2] + parseFloat(m.css(a, b)), e = "number");
                if (! (null == c || "number" === e && isNaN(c) || ("number" === e && !m.cssNumber[g] && (c += "px"), k && "set" in k && (c = k.set(a, c)) === d))) try {
                    h[b] = c
                } catch(q) {}
            }
        },
        css: function(a, b, c) {
            var e, f;
            b = m.camelCase(b);
            f = m.cssHooks[b];
            b = m.cssProps[b] || b;
            "cssFloat" === b && (b = "float");
            if (f && "get" in f && (e = f.get(a, !0, c)) !== d) return e;
            if (ha) return ha(a, b)
        },
        swap: function(a, b, c) {
            var d = {},
            e;
            for (e in b) d[e] = a.style[e],
            a.style[e] = b[e];
            c = c.call(a);
            for (e in b) a.style[e] = d[e];
            return c
        }
    });
    m.curCSS = m.css;
    C.defaultView && C.defaultView.getComputedStyle && (Fa = function(a, b) {
        var c, d, e, f, g = a.style;
        b = b.replace(fb, "-$1").toLowerCase(); (d = a.ownerDocument.defaultView) && (e = d.getComputedStyle(a, null)) && (c = e.getPropertyValue(b), "" === c && !m.contains(a.ownerDocument.documentElement, a) && (c = m.style(a, b))); ! m.support.pixelMargin && e && ib.test(b) && pa.test(c) && (f = g.width, g.width = c, c = e.width, g.width = f);
        return c
    });
    C.documentElement.currentStyle && (Ga = function(a, b) {
        var c, d, e, f = a.currentStyle && a.currentStyle[b],
        g = a.style;
        null == f && g && (e = g[b]) && (f = e);
        pa.test(f) && (c = g.left, d = a.runtimeStyle && a.runtimeStyle.left, d && (a.runtimeStyle.left = a.currentStyle.left), g.left = "fontSize" === b ? "1em": f, f = g.pixelLeft + "px", g.left = c, d && (a.runtimeStyle.left = d));
        return "" === f ? "auto": f
    });
    ha = Fa || Ga;
    m.each(["height", "width"],
    function(a, b) {
        m.cssHooks[b] = {
            get: function(a, c, d) {
                if (c) return 0 !== a.offsetWidth ? s(a, b, d) : m.swap(a, jb,
                function() {
                    return s(a, b, d)
                })
            },
            set: function(a, b) {
                return gb.test(b) ? b + "px": b
            }
        }
    });
    m.support.opacity || (m.cssHooks.opacity = {
        get: function(a, b) {
            return eb.test((b && a.currentStyle ? a.currentStyle.filter: a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "": b ? "1": ""
        },
        set: function(a, b) {
            var c = a.style,
            d = a.currentStyle,
            e = m.isNumeric(b) ? "alpha(opacity=" + 100 * b + ")": "",
            f = d && d.filter || c.filter || "";
            c.zoom = 1;
            if (1 <= b && "" === m.trim(f.replace(sa, "")) && (c.removeAttribute("filter"), d && !d.filter)) return;
            c.filter = sa.test(f) ? f.replace(sa, e) : f + " " + e
        }
    });
    m(function() {
        m.support.reliableMarginRight || (m.cssHooks.marginRight = {
            get: function(a, b) {
                return m.swap(a, {
                    display: "inline-block"
                },
                function() {
                    return b ? ha(a, "margin-right") : a.style.marginRight
                })
            }
        })
    });
    m.expr && m.expr.filters && (m.expr.filters.hidden = function(a) {
        var b = a.offsetHeight;
        return 0 === a.offsetWidth && 0 === b || !m.support.reliableHiddenOffsets && "none" === (a.style && a.style.display || m.css(a, "display"))
    },
    m.expr.filters.visible = function(a) {
        return ! m.expr.filters.hidden(a)
    });
    m.each({
        margin: "",
        padding: "",
        border: "Width"
    },
    function(a, b) {
        m.cssHooks[a + b] = {
            expand: function(c) {
                var d = "string" == typeof c ? c.split(" ") : [c],
                e = {};
                for (c = 0; 4 > c; c++) e[a + da[c] + b] = d[c] || d[c - 2] || d[0];
                return e
            }
        }
    });
    var kb = /%20/g,
    Pa = /\[\]$/,
    Ha = /\r?\n/g,
    lb = /#.*$/,
    mb = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
    nb = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
    ob = /^(?:GET|HEAD)$/,
    pb = /^\/\//,
    Ia = /\?/,
    qb = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
    rb = /^(?:select|textarea)/i,
    va = /\s+/,
    sb = /([?&])_=[^&]*/,
    Ja = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
    Ka = m.fn.load,
    oa = {},
    La = {},
    ea, fa, Ma = ["*/"] + ["*"];
    try {
        ea = J.href
    } catch(yb) {
        ea = C.createElement("a"),
        ea.href = "",
        ea = ea.href
    }
    fa = Ja.exec(ea.toLowerCase()) || [];
    m.fn.extend({
        load: function(a, b, c) {
            if ("string" != typeof a && Ka) return Ka.apply(this, arguments);
            if (!this.length) return this;
            var e = a.indexOf(" ");
            if (0 <= e) {
                var f = a.slice(e, a.length);
                a = a.slice(0, e)
            }
            e = "GET";
            b && (m.isFunction(b) ? (c = b, b = d) : "object" == typeof b && (b = m.param(b, m.ajaxSettings.traditional), e = "POST"));
            var g = this;
            m.ajax({
                url: a,
                type: e,
                dataType: "html",
                data: b,
                complete: function(a, b, d) {
                    d = a.responseText;
                    a.isResolved() && (a.done(function(a) {
                        d = a
                    }), g.html(f ? m("<div>").append(d.replace(qb, "")).find(f) : d));
                    c && g.each(c, [d, b, a])
                }
            });
            return this
        },
        serialize: function() {
            return m.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? m.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || rb.test(this.nodeName) || nb.test(this.type))
            }).map(function(a, b) {
                var c = m(this).val();
                return null == c ? null: m.isArray(c) ? m.map(c,
                function(a, c) {
                    return {
                        name: b.name,
                        value: a.replace(Ha, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(Ha, "\r\n")
                }
            }).get()
        }
    });
    m.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),
    function(a, b) {
        m.fn[b] = function(a) {
            return this.on(b, a)
        }
    });
    m.each(["get", "post"],
    function(a, b) {
        m[b] = function(a, c, e, f) {
            m.isFunction(c) && (f = f || e, e = c, c = d);
            return m.ajax({
                type: b,
                url: a,
                data: c,
                success: e,
                dataType: f
            })
        }
    });
    m.extend({
        getScript: function(a, b) {
            return m.get(a, d, b, "script")
        },
        getJSON: function(a, b, c) {
            return m.get(a, b, c, "json")
        },
        ajaxSetup: function(a, b) {
            b ? l(a, m.ajaxSettings) : (b = a, a = m.ajaxSettings);
            l(a, b);
            return a
        },
        ajaxSettings: {
            url: ea,
            isLocal: /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/.test(fa[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": Ma
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": a.String,
                "text html": !0,
                "text json": m.parseJSON,
                "text xml": m.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: p(oa),
        ajaxTransport: p(La),
        ajax: function(a, b) {
            function c(a, b, n, p) {
                if (2 !== K) {
                    K = 2;
                    u && clearTimeout(u);
                    w = d;
                    t = p || "";
                    H.readyState = 0 < a ? 4 : 0;
                    var r, s, v;
                    p = b;
                    if (n) {
                        var A = e,
                        B = H,
                        E = A.contents,
                        P = A.dataTypes,
                        z = A.responseFields,
                        x, F, N, L;
                        for (F in z) F in n && (B[z[F]] = n[F]);
                        for (;
                        "*" === P[0];) P.shift(),
                        x === d && (x = A.mimeType || B.getResponseHeader("content-type"));
                        if (x) for (F in E) if (E[F] && E[F].test(x)) {
                            P.unshift(F);
                            break
                        }
                        if (P[0] in n) N = P[0];
                        else {
                            for (F in n) {
                                if (!P[0] || A.converters[F + " " + P[0]]) {
                                    N = F;
                                    break
                                }
                                L || (L = F)
                            }
                            N = N || L
                        }
                        N ? (N !== P[0] && P.unshift(N), n = n[N]) : n = void 0
                    } else n = d;
                    if (200 <= a && 300 > a || 304 === a) {
                        if (e.ifModified) {
                            if (x = H.getResponseHeader("Last-Modified")) m.lastModified[l] = x;
                            if (x = H.getResponseHeader("Etag")) m.etag[l] = x
                        }
                        if (304 === a) p = "notmodified",
                        r = !0;
                        else try {
                            x = e;
                            x.dataFilter && (n = x.dataFilter(n, x.dataType));
                            var U = x.dataTypes;
                            F = {};
                            var M, G, C = U.length,
                            S, T = U[0],
                            D,
                            J,
                            Q,
                            I,
                            X;
                            for (M = 1; M < C; M++) {
                                if (1 === M) for (G in x.converters)"string" == typeof G && (F[G.toLowerCase()] = x.converters[G]);
                                D = T;
                                T = U[M];
                                if ("*" === T) T = D;
                                else if ("*" !== D && D !== T) {
                                    J = D + " " + T;
                                    Q = F[J] || F["* " + T];
                                    if (!Q) for (I in X = d, F) if (S = I.split(" "), S[0] === D || "*" === S[0]) if (X = F[S[1] + " " + T]) {
                                        I = F[I]; ! 0 === I ? Q = X: !0 === X && (Q = I);
                                        break
                                    }
                                    Q || X || m.error("No conversion from " + J.replace(" ", " to ")); ! 0 !== Q && (n = Q ? Q(n) : X(I(n)))
                                }
                            }
                            s = n;
                            p = "success";
                            r = !0
                        } catch(Oa) {
                            p = "parsererror",
                            v = Oa
                        }
                    } else if (v = p, !p || a) p = "error",
                    0 > a && (a = 0);
                    H.status = a;
                    H.statusText = "" + (b || p);
                    r ? h.resolveWith(f, [s, p, H]) : h.rejectWith(f, [H, p, v]);
                    H.statusCode(q);
                    q = d;
                    O && g.trigger("ajax" + (r ? "Success": "Error"), [H, e, r ? s: v]);
                    k.fireWith(f, [H, p]);
                    O && (g.trigger("ajaxComplete", [H, e]), --m.active || m.event.trigger("ajaxStop"))
                }
            }
            "object" == typeof a && (b = a, a = d);
            b = b || {};
            var e = m.ajaxSetup({},
            b),
            f = e.context || e,
            g = f !== e && (f.nodeType || f instanceof m) ? m(f) : m.event,
            h = m.Deferred(),
            k = m.Callbacks("once memory"),
            q = e.statusCode || {},
            l,
            p = {},
            r = {},
            t,
            s,
            w,
            u,
            v,
            K = 0,
            O,
            A,
            H = {
                readyState: 0,
                setRequestHeader: function(a, b) {
                    if (!K) {
                        var c = a.toLowerCase();
                        a = r[c] = r[c] || a;
                        p[a] = b
                    }
                    return this
                },
                getAllResponseHeaders: function() {
                    return 2 === K ? t: null
                },
                getResponseHeader: function(a) {
                    var b;
                    if (2 === K) {
                        if (!s) for (s = {}; b = mb.exec(t);) s[b[1].toLowerCase()] = b[2];
                        b = s[a.toLowerCase()]
                    }
                    return b === d ? null: b
                },
                overrideMimeType: function(a) {
                    K || (e.mimeType = a);
                    return this
                },
                abort: function(a) {
                    a = a || "abort";
                    w && w.abort(a);
                    c(0, a);
                    return this
                }
            };
            h.promise(H);
            H.success = H.done;
            H.error = H.fail;
            H.complete = k.add;
            H.statusCode = function(a) {
                if (a) {
                    var b;
                    if (2 > K) for (b in a) q[b] = [q[b], a[b]];
                    else b = a[H.status],
                    H.then(b, b)
                }
                return this
            };
            e.url = ((a || e.url) + "").replace(lb, "").replace(pb, fa[1] + "//");
            e.dataTypes = m.trim(e.dataType || "*").toLowerCase().split(va);
            null == e.crossDomain && (v = Ja.exec(e.url.toLowerCase()), e.crossDomain = !(!v || v[1] == fa[1] && v[2] == fa[2] && (v[3] || ("http:" === v[1] ? 80 : 443)) == (fa[3] || ("http:" === fa[1] ? 80 : 443))));
            e.data && e.processData && "string" != typeof e.data && (e.data = m.param(e.data, e.traditional));
            n(oa, e, b, H);
            if (2 === K) return ! 1;
            O = e.global;
            e.type = e.type.toUpperCase();
            e.hasContent = !ob.test(e.type);
            O && 0 === m.active++&&m.event.trigger("ajaxStart");
            if (!e.hasContent && (e.data && (e.url += (Ia.test(e.url) ? "&": "?") + e.data, delete e.data), l = e.url, !1 === e.cache)) {
                v = m.now();
                var B = e.url.replace(sb, "$1_=" + v);
                e.url = B + (B === e.url ? (Ia.test(e.url) ? "&": "?") + "_=" + v: "")
            } (e.data && e.hasContent && !1 !== e.contentType || b.contentType) && H.setRequestHeader("Content-Type", e.contentType);
            e.ifModified && (l = l || e.url, m.lastModified[l] && H.setRequestHeader("If-Modified-Since", m.lastModified[l]), m.etag[l] && H.setRequestHeader("If-None-Match", m.etag[l]));
            H.setRequestHeader("Accept", e.dataTypes[0] && e.accepts[e.dataTypes[0]] ? e.accepts[e.dataTypes[0]] + ("*" !== e.dataTypes[0] ? ", " + Ma + "; q=0.01": "") : e.accepts["*"]);
            for (A in e.headers) H.setRequestHeader(A, e.headers[A]);
            if (e.beforeSend && (!1 === e.beforeSend.call(f, H, e) || 2 === K)) return H.abort(),
            !1;
            for (A in {
                success: 1,
                error: 1,
                complete: 1
            }) H[A](e[A]);
            if (w = n(La, e, b, H)) {
                H.readyState = 1;
                O && g.trigger("ajaxSend", [H, e]);
                e.async && 0 < e.timeout && (u = setTimeout(function() {
                    H.abort("timeout")
                },
                e.timeout));
                try {
                    K = 1,
                    w.send(p, c)
                } catch(E) {
                    if (2 > K) c( - 1, E);
                    else throw E;
                }
            } else c( - 1, "No Transport");
            return H
        },
        param: function(a, b) {
            var c = [],
            e = function(a, b) {
                b = m.isFunction(b) ? b() : b;
                c[c.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
            };
            b === d && (b = m.ajaxSettings.traditional);
            if (m.isArray(a) || a.jquery && !m.isPlainObject(a)) m.each(a,
            function() {
                e(this.name, this.value)
            });
            else for (var f in a) h(f, a[f], b, e);
            return c.join("&").replace(kb, "+")
        }
    });
    m.extend({
        active: 0,
        lastModified: {},
        etag: {}
    });
    var tb = m.now(),
    la = /(\=)\?(&|$)|\?\?/i;
    m.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            return m.expando + "_" + tb++
        }
    });
    m.ajaxPrefilter("json jsonp",
    function(b, c, d) {
        c = "string" == typeof b.data && /^application\/x\-www\-form\-urlencoded/.test(b.contentType);
        if ("jsonp" === b.dataTypes[0] || !1 !== b.jsonp && (la.test(b.url) || c && la.test(b.data))) {
            var e, f = b.jsonpCallback = m.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback,
            g = a[f],
            h = b.url,
            k = b.data,
            q = "$1" + f + "$2"; ! 1 !== b.jsonp && (h = h.replace(la, q), b.url === h && (c && (k = k.replace(la, q)), b.data === k && (h += (/\?/.test(h) ? "&": "?") + b.jsonp + "=" + f)));
            b.url = h;
            b.data = k;
            a[f] = function(a) {
                e = [a]
            };
            d.always(function() {
                a[f] = g;
                e && m.isFunction(g) && a[f](e[0])
            });
            b.converters["script json"] = function() {
                e || m.error(f + " was not called");
                return e[0]
            };
            b.dataTypes[0] = "json";
            return "script"
        }
    });
    m.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(a) {
                m.globalEval(a);
                return a
            }
        }
    });
    m.ajaxPrefilter("script",
    function(a) {
        a.cache === d && (a.cache = !1);
        a.crossDomain && (a.type = "GET", a.global = !1)
    });
    m.ajaxTransport("script",
    function(a) {
        if (a.crossDomain) {
            var b, c = C.head || C.getElementsByTagName("head")[0] || C.documentElement;
            return {
                send: function(e, f) {
                    b = C.createElement("script");
                    b.async = "async";
                    a.scriptCharset && (b.charset = a.scriptCharset);
                    b.src = a.url;
                    b.onload = b.onreadystatechange = function(a, e) {
                        if (e || !b.readyState || /loaded|complete/.test(b.readyState)) b.onload = b.onreadystatechange = null,
                        c && b.parentNode && c.removeChild(b),
                        b = d,
                        e || f(200, "success")
                    };
                    c.insertBefore(b, c.firstChild)
                },
                abort: function() {
                    b && b.onload(0, 1)
                }
            }
        }
    });
    var ta = a.ActiveXObject ?
    function() {
        for (var a in ia) ia[a](0, 1)
    }: !1,
    ub = 0,
    ia;
    m.ajaxSettings.xhr = a.ActiveXObject ?
    function() {
        var b;
        if (! (b = !this.isLocal && k())) a: {
            try {
                b = new a.ActiveXObject("Microsoft.XMLHTTP");
                break a
            } catch(c) {}
            b = void 0
        }
        return b
    }: k; (function(a) {
        m.extend(m.support, {
            ajax: !!a,
            cors: !!a && "withCredentials" in a
        })
    })(m.ajaxSettings.xhr());
    m.support.ajax && m.ajaxTransport(function(b) {
        if (!b.crossDomain || m.support.cors) {
            var c;
            return {
                send: function(e, f) {
                    var g = b.xhr(),
                    h,
                    k;
                    b.username ? g.open(b.type, b.url, b.async, b.username, b.password) : g.open(b.type, b.url, b.async);
                    if (b.xhrFields) for (k in b.xhrFields) g[k] = b.xhrFields[k];
                    b.mimeType && g.overrideMimeType && g.overrideMimeType(b.mimeType);
                    b.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (k in e) g.setRequestHeader(k, e[k])
                    } catch(q) {}
                    g.send(b.hasContent && b.data || null);
                    c = function(a, e) {
                        var k, q, n, l, p;
                        try {
                            if (c && (e || 4 === g.readyState)) if (c = d, h && (g.onreadystatechange = m.noop, ta && delete ia[h]), e) 4 !== g.readyState && g.abort();
                            else {
                                k = g.status;
                                n = g.getAllResponseHeaders();
                                l = {}; (p = g.responseXML) && p.documentElement && (l.xml = p);
                                try {
                                    l.text = g.responseText
                                } catch(r) {}
                                try {
                                    q = g.statusText
                                } catch(t) {
                                    q = ""
                                }
                                k || !b.isLocal || b.crossDomain ? 1223 === k && (k = 204) : k = l.text ? 200 : 404
                            }
                        } catch(s) {
                            e || f( - 1, s)
                        }
                        l && f(k, q, l, n)
                    };
                    b.async && 4 !== g.readyState ? (h = ++ub, ta && (ia || (ia = {},
                    m(a).unload(ta)), ia[h] = c), g.onreadystatechange = c) : c()
                },
                abort: function() {
                    c && c(0, 1)
                }
            }
        }
    });
    var na = {},
    ba, ga, vb = /^(?:toggle|show|hide)$/,
    wb = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
    ma, ja = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"], ["opacity"]],
    ka;
    m.fn.extend({
        show: function(a, b, d) {
            var f;
            if (a || 0 === a) return this.animate(e("show", 3), a, b, d);
            b = 0;
            for (d = this.length; b < d; b++) a = this[b],
            a.style && (f = a.style.display, !m._data(a, "olddisplay") && "none" === f && (f = a.style.display = ""), ("" === f && "none" === m.css(a, "display") || !m.contains(a.ownerDocument.documentElement, a)) && m._data(a, "olddisplay", c(a.nodeName)));
            for (b = 0; b < d; b++) if (a = this[b], a.style && (f = a.style.display, "" === f || "none" === f)) a.style.display = m._data(a, "olddisplay") || "";
            return this
        },
        hide: function(a, b, c) {
            if (a || 0 === a) return this.animate(e("hide", 3), a, b, c);
            var d;
            b = 0;
            for (c = this.length; b < c; b++) a = this[b],
            a.style && (d = m.css(a, "display"), "none" !== d && !m._data(a, "olddisplay") && m._data(a, "olddisplay", d));
            for (b = 0; b < c; b++) this[b].style && (this[b].style.display = "none");
            return this
        },
        _toggle: m.fn.toggle,
        toggle: function(a, b, c) {
            var d = "boolean" == typeof a;
            m.isFunction(a) && m.isFunction(b) ? this._toggle.apply(this, arguments) : null == a || d ? this.each(function() {
                var b = d ? a: m(this).is(":hidden");
                m(this)[b ? "show": "hide"]()
            }) : this.animate(e("toggle", 3), a, b, c);
            return this
        },
        fadeTo: function(a, b, c, d) {
            return this.filter(":hidden").css("opacity", 0).show().end().animate({
                opacity: b
            },
            a, c, d)
        },
        animate: function(a, b, d, e) {
            function f() { ! 1 === g.queue && m._mark(this);
                var b = m.extend({},
                g),
                d = 1 === this.nodeType,
                e = d && m(this).is(":hidden"),
                h,
                k,
                q,
                n,
                l,
                p,
                r,
                t,
                s;
                b.animatedProperties = {};
                for (q in a) if (h = m.camelCase(q), q !== h && (a[h] = a[q], delete a[q]), (k = m.cssHooks[h]) && "expand" in k) for (q in n = k.expand(a[h]), delete a[h], n) q in a || (a[q] = n[q]);
                for (h in a) {
                    k = a[h];
                    m.isArray(k) ? (b.animatedProperties[h] = k[1], k = a[h] = k[0]) : b.animatedProperties[h] = b.specialEasing && b.specialEasing[h] || b.easing || "swing";
                    if ("hide" === k && e || "show" === k && !e) return b.complete.call(this);
                    d && ("height" === h || "width" === h) && (b.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY], "inline" === m.css(this, "display") && "none" === m.css(this, "float") && (m.support.inlineBlockNeedsLayout && "inline" !== c(this.nodeName) ? this.style.zoom = 1 : this.style.display = "inline-block"))
                }
                null != b.overflow && (this.style.overflow = "hidden");
                for (q in a) d = new m.fx(this, b, q),
                k = a[q],
                vb.test(k) ? (s = m._data(this, "toggle" + q) || ("toggle" === k ? e ? "show": "hide": 0), s ? (m._data(this, "toggle" + q, "show" === s ? "hide": "show"), d[s]()) : d[k]()) : (l = wb.exec(k), p = d.cur(), l ? (r = parseFloat(l[2]), t = l[3] || (m.cssNumber[q] ? "": "px"), "px" !== t && (m.style(this, q, (r || 1) + t), p *= (r || 1) / d.cur(), m.style(this, q, p + t)), l[1] && (r = ("-=" === l[1] ? -1 : 1) * r + p), d.custom(p, r, t)) : d.custom(p, k, ""));
                return ! 0
            }
            var g = m.speed(b, d, e);
            if (m.isEmptyObject(a)) return this.each(g.complete, [!1]);
            a = m.extend({},
            a);
            return ! 1 === g.queue ? this.each(f) : this.queue(g.queue, f)
        },
        stop: function(a, b, c) {
            "string" != typeof a && (c = b, b = a, a = d);
            b && !1 !== a && this.queue(a || "fx", []);
            return this.each(function() {
                var b, d = !1,
                e = m.timers,
                f = m._data(this);
                c || m._unmark(!0, this);
                if (null == a) for (b in f) {
                    if (f[b] && f[b].stop && b.indexOf(".run") === b.length - 4) {
                        var g = f[b];
                        m.removeData(this, b, !0);
                        g.stop(c)
                    }
                } else f[b = a + ".run"] && f[b].stop && (f = f[b], m.removeData(this, b, !0), f.stop(c));
                for (b = e.length; b--;) e[b].elem !== this || null != a && e[b].queue !== a || (c ? e[b](!0) : e[b].saveState(), d = !0, e.splice(b, 1));
                c && d || m.dequeue(this, a)
            })
        }
    });
    m.each({
        slideDown: e("show", 1),
        slideUp: e("hide", 1),
        slideToggle: e("toggle", 1),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    },
    function(a, b) {
        m.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d)
        }
    });
    m.extend({
        speed: function(a, b, c) {
            var d = a && "object" == typeof a ? m.extend({},
            a) : {
                complete: c || !c && b || m.isFunction(a) && a,
                duration: a,
                easing: c && b || b && !m.isFunction(b) && b
            };
            d.duration = m.fx.off ? 0 : "number" == typeof d.duration ? d.duration: d.duration in m.fx.speeds ? m.fx.speeds[d.duration] : m.fx.speeds._default;
            if (null == d.queue || !0 === d.queue) d.queue = "fx";
            d.old = d.complete;
            d.complete = function(a) {
                m.isFunction(d.old) && d.old.call(this);
                d.queue ? m.dequeue(this, d.queue) : !1 !== a && m._unmark(this)
            };
            return d
        },
        easing: {
            linear: function(a) {
                return a
            },
            swing: function(a) {
                return - Math.cos(a * Math.PI) / 2 + 0.5
            }
        },
        timers: [],
        fx: function(a, b, c) {
            this.options = b;
            this.elem = a;
            this.prop = c;
            b.orig = b.orig || {}
        }
    });
    m.fx.prototype = {
        update: function() {
            this.options.step && this.options.step.call(this.elem, this.now, this); (m.fx.step[this.prop] || m.fx.step._default)(this)
        },
        cur: function() {
            if (null != this.elem[this.prop] && (!this.elem.style || null == this.elem.style[this.prop])) return this.elem[this.prop];
            var a, b = m.css(this.elem, this.prop);
            return isNaN(a = parseFloat(b)) ? b && "auto" !== b ? b: 0 : a
        },
        custom: function(a, b, c) {
            function e(a) {
                return g.step(a)
            }
            var g = this,
            h = m.fx;
            this.startTime = ka || f();
            this.end = b;
            this.now = this.start = a;
            this.pos = this.state = 0;
            this.unit = c || this.unit || (m.cssNumber[this.prop] ? "": "px");
            e.queue = this.options.queue;
            e.elem = this.elem;
            e.saveState = function() {
                m._data(g.elem, "fxshow" + g.prop) === d && (g.options.hide ? m._data(g.elem, "fxshow" + g.prop, g.start) : g.options.show && m._data(g.elem, "fxshow" + g.prop, g.end))
            };
            e() && m.timers.push(e) && !ma && (ma = setInterval(h.tick, h.interval))
        },
        show: function() {
            var a = m._data(this.elem, "fxshow" + this.prop);
            this.options.orig[this.prop] = a || m.style(this.elem, this.prop);
            this.options.show = !0;
            a !== d ? this.custom(this.cur(), a) : this.custom("width" === this.prop || "height" === this.prop ? 1 : 0, this.cur());
            m(this.elem).show()
        },
        hide: function() {
            this.options.orig[this.prop] = m._data(this.elem, "fxshow" + this.prop) || m.style(this.elem, this.prop);
            this.options.hide = !0;
            this.custom(this.cur(), 0)
        },
        step: function(a) {
            var b, c, d = ka || f(),
            e = !0,
            g = this.elem,
            h = this.options;
            if (a || d >= h.duration + this.startTime) {
                this.now = this.end;
                this.pos = this.state = 1;
                this.update();
                h.animatedProperties[this.prop] = !0;
                for (b in h.animatedProperties) ! 0 !== h.animatedProperties[b] && (e = !1);
                if (e) {
                    null != h.overflow && !m.support.shrinkWrapBlocks && m.each(["", "X", "Y"],
                    function(a, b) {
                        g.style["overflow" + b] = h.overflow[a]
                    });
                    h.hide && m(g).hide();
                    if (h.hide || h.show) for (b in h.animatedProperties) m.style(g, b, h.orig[b]),
                    m.removeData(g, "fxshow" + b, !0),
                    m.removeData(g, "toggle" + b, !0); (a = h.complete) && (h.complete = !1, a.call(g))
                }
                return ! 1
            }
            Infinity == h.duration ? this.now = d: (c = d - this.startTime, this.state = c / h.duration, this.pos = m.easing[h.animatedProperties[this.prop]](this.state, c, 0, 1, h.duration), this.now = this.start + (this.end - this.start) * this.pos);
            this.update();
            return ! 0
        }
    };
    m.extend(m.fx, {
        tick: function() {
            for (var a, b = m.timers,
            c = 0; c < b.length; c++) a = b[c],
            !a() && b[c] === a && b.splice(c--, 1);
            b.length || m.fx.stop()
        },
        interval: 13,
        stop: function() {
            clearInterval(ma);
            ma = null
        },
        speeds: {
            slow: 600,
            fast: 200,
            _default: 400
        },
        step: {
            opacity: function(a) {
                m.style(a.elem, "opacity", a.now)
            },
            _default: function(a) {
                a.elem.style && null != a.elem.style[a.prop] ? a.elem.style[a.prop] = a.now + a.unit: a.elem[a.prop] = a.now
            }
        }
    });
    m.each(ja.concat.apply([], ja),
    function(a, b) {
        b.indexOf("margin") && (m.fx.step[b] = function(a) {
            m.style(a.elem, b, Math.max(0, a.now) + a.unit)
        })
    });
    m.expr && m.expr.filters && (m.expr.filters.animated = function(a) {
        return m.grep(m.timers,
        function(b) {
            return a === b.elem
        }).length
    });
    var ua, xb = /^t(?:able|d|h)$/i,
    Na = /^(?:body|html)$/i;
    "getBoundingClientRect" in C.documentElement ? ua = function(a, c, d, e) {
        try {
            e = a.getBoundingClientRect()
        } catch(f) {}
        if (!e || !m.contains(d, a)) return e ? {
            top: e.top,
            left: e.left
        }: {
            top: 0,
            left: 0
        };
        a = c.body;
        c = b(c);
        return {
            top: e.top + (c.pageYOffset || m.support.boxModel && d.scrollTop || a.scrollTop) - (d.clientTop || a.clientTop || 0),
            left: e.left + (c.pageXOffset || m.support.boxModel && d.scrollLeft || a.scrollLeft) - (d.clientLeft || a.clientLeft || 0)
        }
    }: ua = function(a, b, c) {
        var d, e = a.offsetParent,
        f = b.body;
        d = (b = b.defaultView) ? b.getComputedStyle(a, null) : a.currentStyle;
        for (var g = a.offsetTop,
        h = a.offsetLeft; (a = a.parentNode) && a !== f && a !== c && (!m.support.fixedPosition || "fixed" !== d.position);) d = b ? b.getComputedStyle(a, null) : a.currentStyle,
        g -= a.scrollTop,
        h -= a.scrollLeft,
        a === e && (g += a.offsetTop, h += a.offsetLeft, m.support.doesNotAddBorder && (!m.support.doesAddBorderForTableAndCells || !xb.test(a.nodeName)) && (g += parseFloat(d.borderTopWidth) || 0, h += parseFloat(d.borderLeftWidth) || 0), e = a.offsetParent),
        m.support.subtractsBorderForOverflowNotVisible && "visible" !== d.overflow && (g += parseFloat(d.borderTopWidth) || 0, h += parseFloat(d.borderLeftWidth) || 0);
        if ("relative" === d.position || "static" === d.position) g += f.offsetTop,
        h += f.offsetLeft;
        m.support.fixedPosition && "fixed" === d.position && (g += Math.max(c.scrollTop, f.scrollTop), h += Math.max(c.scrollLeft, f.scrollLeft));
        return {
            top: g,
            left: h
        }
    };
    m.fn.offset = function(a) {
        if (arguments.length) return a === d ? this: this.each(function(b) {
            m.offset.setOffset(this, a, b)
        });
        var b = this[0],
        c = b && b.ownerDocument;
        return c ? b === c.body ? m.offset.bodyOffset(b) : ua(b, c, c.documentElement) : null
    };
    m.offset = {
        bodyOffset: function(a) {
            var b = a.offsetTop,
            c = a.offsetLeft;
            m.support.doesNotIncludeMarginInBodyOffset && (b += parseFloat(m.css(a, "marginTop")) || 0, c += parseFloat(m.css(a, "marginLeft")) || 0);
            return {
                top: b,
                left: c
            }
        },
        setOffset: function(a, b, c) {
            var d = m.css(a, "position");
            "static" === d && (a.style.position = "relative");
            var e = m(a),
            f = e.offset(),
            g = m.css(a, "top"),
            h = m.css(a, "left"),
            k = {},
            q = {},
            n,
            l; ("absolute" === d || "fixed" === d) && -1 < m.inArray("auto", [g, h]) ? (q = e.position(), n = q.top, l = q.left) : (n = parseFloat(g) || 0, l = parseFloat(h) || 0);
            m.isFunction(b) && (b = b.call(a, c, f));
            null != b.top && (k.top = b.top - f.top + n);
            null != b.left && (k.left = b.left - f.left + l);
            "using" in b ? b.using.call(a, k) : e.css(k)
        }
    };
    m.fn.extend({
        position: function() {
            if (!this[0]) return null;
            var a = this[0],
            b = this.offsetParent(),
            c = this.offset(),
            d = Na.test(b[0].nodeName) ? {
                top: 0,
                left: 0
            }: b.offset();
            c.top -= parseFloat(m.css(a, "marginTop")) || 0;
            c.left -= parseFloat(m.css(a, "marginLeft")) || 0;
            d.top += parseFloat(m.css(b[0], "borderTopWidth")) || 0;
            d.left += parseFloat(m.css(b[0], "borderLeftWidth")) || 0;
            return {
                top: c.top - d.top,
                left: c.left - d.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var a = this.offsetParent || C.body; a && !Na.test(a.nodeName) && "static" === m.css(a, "position");) a = a.offsetParent;
                return a
            })
        }
    });
    m.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    },
    function(a, c) {
        var e = /Y/.test(c);
        m.fn[a] = function(f) {
            return m.access(this,
            function(a, f, g) {
                var h = b(a);
                if (g === d) return h ? c in h ? h[c] : m.support.boxModel && h.document.documentElement[f] || h.document.body[f] : a[f];
                h ? h.scrollTo(e ? m(h).scrollLeft() : g, e ? g: m(h).scrollTop()) : a[f] = g
            },
            a, f, arguments.length, null)
        }
    });
    m.each({
        Height: "height",
        Width: "width"
    },
    function(a, b) {
        var c = "client" + a,
        e = "scroll" + a,
        f = "offset" + a;
        m.fn["inner" + a] = function() {
            var a = this[0];
            return a ? a.style ? parseFloat(m.css(a, b, "padding")) : this[b]() : null
        };
        m.fn["outer" + a] = function(a) {
            var c = this[0];
            return c ? c.style ? parseFloat(m.css(c, b, a ? "margin": "border")) : this[b]() : null
        };
        m.fn[b] = function(a) {
            return m.access(this,
            function(a, b, g) {
                if (m.isWindow(a)) return b = a.document,
                a = b.documentElement[c],
                m.support.boxModel && a || b.body && b.body[c] || a;
                if (9 === a.nodeType) return b = a.documentElement,
                b[c] >= b[e] ? b[c] : Math.max(a.body[e], b[e], a.body[f], b[f]);
                if (g === d) return a = m.css(a, b),
                b = parseFloat(a),
                m.isNumeric(b) ? b: a;
                m(a).css(b, g)
            },
            b, a, arguments.length, null)
        }
    });
    a.jQuery = a.$ = m;
    "function" == typeof define && define.amd && define.amd.jQuery && define("jquery", [],
    function() {
        return m
    })
})(window);
jQuery.cookie = function(a, d, b) {
    if ("undefined" != typeof d) {
        b = b || {};
        null === d && (d = "", b.expires = -1);
        var c = "";
        b.expires && ("number" == typeof b.expires || b.expires.toUTCString) && ("number" == typeof b.expires ? (c = new Date, c.setTime(c.getTime() + 864E5 * b.expires)) : c = b.expires, c = "; expires=" + c.toUTCString());
        var e = b.path ? "; path=" + b.path: "",
        g = b.domain ? "; domain=" + b.domain: "";
        b = b.secure ? "; secure": "";
        document.cookie = [a, "=", encodeURIComponent(d), c, e, g, b].join("")
    } else {
        d = null;
        if (document.cookie && "" != document.cookie) for (b = document.cookie.split(";"), c = 0; c < b.length; c++) if (e = jQuery.trim(b[c]), e.substring(0, a.length + 1) == a + "=") {
            d = decodeURIComponent(e.substring(a.length + 1));
            break
        }
        return d
    }
}; (function(a) {
    a.extend(a.fn, {
        validate: function(d) {
            if (!this.length) return d && d.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing."),
            void 0;
            var b = a.data(this[0], "validator");
            return b ? b: (b = new a.validator(d, this[0]), a.data(this[0], "validator", b), b.settings.onsubmit && (this.validateDelegate(":submit", "click",
            function(c) {
                b.settings.submitHandler && (b.submitButton = c.target);
                a(c.target).hasClass("cancel") && (b.cancelSubmit = !0);
                void 0 !== a(c.target).attr("formnovalidate") && "" !== a(c.target).attr("formnovalidate") && (b.cancelSubmit = !0)
            }), this.submit(function(c) {
                function d() {
                    var e;
                    return b.settings.submitHandler ? (b.submitButton && (e = a("<input type='hidden'/>").attr("name", b.submitButton.name).val(a(b.submitButton).val()).appendTo(b.currentForm)), b.settings.submitHandler.call(b, b.currentForm, c), b.submitButton && e.remove(), !1) : !0
                }
                return b.settings.debug && c.preventDefault(),
                b.cancelSubmit ? (b.cancelSubmit = !1, d()) : b.form() ? b.pendingRequest ? (b.formSubmitted = !0, !1) : d() : (b.focusInvalid(), !1)
            })), b)
        },
        valid: function() {
            if (a(this[0]).is("form")) return this.validate().form();
            var d = !0,
            b = a(this[0].form).validate();
            return this.each(function() {
                d = d && b.element(this)
            }),
            d
        },
        removeAttrs: function(d) {
            var b = {},
            c = this;
            return a.each(d.split(/\s/),
            function(a, d) {
                b[d] = c.attr(d);
                c.removeAttr(d)
            }),
            b
        },
        rules: function(d, b) {
            var c = this[0];
            if (d) {
                var e = a.data(c.form, "validator").settings,
                g = e.rules,
                f = a.validator.staticRules(c);
                switch (d) {
                case "add":
                    a.extend(f, a.validator.normalizeRule(b));
                    delete f.messages;
                    g[c.name] = f;
                    b.messages && (e.messages[c.name] = a.extend(e.messages[c.name], b.messages));
                    break;
                case "remove":
                    if (!b) return delete g[c.name],
                    f;
                    var k = {};
                    return a.each(b.split(/\s/),
                    function(a, b) {
                        k[b] = f[b];
                        delete f[b]
                    }),
                    k
                }
            }
            c = a.validator.normalizeRules(a.extend({},
            a.validator.classRules(c), a.validator.attributeRules(c), a.validator.dataRules(c), a.validator.staticRules(c)), c);
            c.required && (e = c.required, delete c.required, c = a.extend({
                required: e
            },
            c));
            return c
        }
    });
    a.extend(a.expr[":"], {
        blank: function(d) {
            return ! a.trim("" + a(d).val())
        },
        filled: function(d) {
            return !! a.trim("" + a(d).val())
        },
        unchecked: function(d) {
            return ! a(d).prop("checked")
        }
    });
    a.validator = function(d, b) {
        this.settings = a.extend(!0, {},
        a.validator.defaults, d);
        this.currentForm = b;
        this.init()
    };
    a.validator.format = function(d, b) {
        return 1 === arguments.length ?
        function() {
            var b = a.makeArray(arguments);
            return b.unshift(d),
            a.validator.format.apply(this, b)
        }: (2 < arguments.length && b.constructor !== Array && (b = a.makeArray(arguments).slice(1)), b.constructor !== Array && (b = [b]), a.each(b,
        function(a, b) {
            d = d.replace(RegExp("\\{" + a + "\\}", "g"),
            function() {
                return b
            })
        }), d)
    };
    a.extend(a.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            validClass: "valid",
            errorElement: "label",
            focusInvalid: !0,
            errorContainer: a([]),
            errorLabelContainer: a([]),
            onsubmit: !0,
            ignore: ":hidden",
            ignoreTitle: !1,
            onfocusin: function(a) {
                this.lastActive = a;
                this.settings.focusCleanup && !this.blockFocusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass), this.addWrapper(this.errorsFor(a)).hide())
            },
            onfocusout: function(a) {
                this.checkable(a) || !(a.name in this.submitted) && this.optional(a) || this.element(a)
            },
            onkeyup: function(a, b) { (9 !== b.which || "" !== this.elementValue(a)) && (a.name in this.submitted || a === this.lastElement) && this.element(a)
            },
            onclick: function(a) {
                a.name in this.submitted ? this.element(a) : a.parentNode.name in this.submitted && this.element(a.parentNode)
            },
            highlight: function(d, b, c) {
                "radio" === d.type ? this.findByName(d.name).addClass(b).removeClass(c) : a(d).addClass(b).removeClass(c)
            },
            unhighlight: function(d, b, c) {
                "radio" === d.type ? this.findByName(d.name).removeClass(b).addClass(c) : a(d).removeClass(b).addClass(c)
            }
        },
        setDefaults: function(d) {
            a.extend(a.validator.defaults, d)
        },
        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date (ISO).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            creditcard: "Please enter a valid credit card number.",
            equalTo: "Please enter the same value again.",
            maxlength: a.validator.format("Please enter no more than {0} characters."),
            minlength: a.validator.format("Please enter at least {0} characters."),
            rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."),
            range: a.validator.format("Please enter a value between {0} and {1}."),
            max: a.validator.format("Please enter a value less than or equal to {0}."),
            min: a.validator.format("Please enter a value greater than or equal to {0}.")
        },
        autoCreateRanges: !1,
        prototype: {
            init: function() {
                function d(b) {
                    var c = a.data(this[0].form, "validator"),
                    d = "on" + b.type.replace(/^validate/, "");
                    c.settings[d] && c.settings[d].call(c, this[0], b)
                }
                this.labelContainer = a(this.settings.errorLabelContainer);
                this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm);
                this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer);
                this.submitted = {};
                this.valueCache = {};
                this.pendingRequest = 0;
                this.pending = {};
                this.invalid = {};
                this.reset();
                var b = this.groups = {};
                a.each(this.settings.groups,
                function(c, d) {
                    "string" == typeof d && (d = d.split(/\s/));
                    a.each(d,
                    function(a, d) {
                        b[d] = c
                    })
                });
                var c = this.settings.rules;
                a.each(c,
                function(b, d) {
                    c[b] = a.validator.normalizeRule(d)
                });
                a(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'] ", "focusin focusout keyup", d).validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", d);
                this.settings.invalidHandler && a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler)
            },
            form: function() {
                return this.checkForm(),
                a.extend(this.submitted, this.errorMap),
                this.invalid = a.extend({},
                this.errorMap),
                this.valid() || a(this.currentForm).triggerHandler("invalid-form", [this]),
                this.showErrors(),
                this.valid()
            },
            checkForm: function() {
                this.prepareForm();
                for (var a = 0,
                b = this.currentElements = this.elements(); b[a]; a++) this.check(b[a]);
                return this.valid()
            },
            element: function(d) {
                this.lastElement = d = this.validationTargetFor(this.clean(d));
                this.prepareElement(d);
                this.currentElements = a(d);
                var b = !1 !== this.check(d);
                return b ? delete this.invalid[d.name] : this.invalid[d.name] = !0,
                this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)),
                this.showErrors(),
                b
            },
            showErrors: function(d) {
                if (d) {
                    a.extend(this.errorMap, d);
                    this.errorList = [];
                    for (var b in d) this.errorList.push({
                        message: d[b],
                        element: this.findByName(b)[0]
                    });
                    this.successList = a.grep(this.successList,
                    function(a) {
                        return ! (a.name in d)
                    })
                }
                this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
            },
            resetForm: function() {
                a.fn.resetForm && a(this.currentForm).resetForm();
                this.submitted = {};
                this.lastElement = null;
                this.prepareForm();
                this.hideErrors();
                this.elements().removeClass(this.settings.errorClass).removeData("previousValue")
            },
            numberOfInvalids: function() {
                return this.objectLength(this.invalid)
            },
            objectLength: function(a) {
                var b = 0,
                c;
                for (c in a) b++;
                return b
            },
            hideErrors: function() {
                this.addWrapper(this.toHide).hide()
            },
            valid: function() {
                return 0 === this.size()
            },
            size: function() {
                return this.errorList.length
            },
            focusInvalid: function() {
                if (this.settings.focusInvalid) try {
                    a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
                } catch(d) {}
            },
            findLastActive: function() {
                var d = this.lastActive;
                return d && 1 === a.grep(this.errorList,
                function(a) {
                    return a.element.name === d.name
                }).length && d
            },
            elements: function() {
                var d = this,
                b = {};
                return a(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function() {
                    return ! this.name && d.settings.debug && window.console && console.error("%o has no name assigned", this),
                    this.name in b || !d.objectLength(a(this).rules()) ? !1 : (b[this.name] = !0, !0)
                })
            },
            clean: function(d) {
                return a(d)[0]
            },
            errors: function() {
                var d = this.settings.errorClass.replace(" ", ".");
                return a(this.settings.errorElement + "." + d, this.errorContext)
            },
            reset: function() {
                this.successList = [];
                this.errorList = [];
                this.errorMap = {};
                this.toShow = a([]);
                this.toHide = a([]);
                this.currentElements = a([])
            },
            prepareForm: function() {
                this.reset();
                this.toHide = this.errors().add(this.containers)
            },
            prepareElement: function(a) {
                this.reset();
                this.toHide = this.errorsFor(a)
            },
            elementValue: function(d) {
                var b = a(d).attr("type"),
                c = a(d).val();
                return "radio" === b || "checkbox" === b ? a("input[name='" + a(d).attr("name") + "']:checked").val() : "string" == typeof c ? c.replace(/\r/g, "") : c
            },
            check: function(d) {
                d = this.validationTargetFor(this.clean(d));
                var b, c = a(d).rules(),
                e = !1,
                g = this.elementValue(d),
                f;
                for (f in c) {
                    var k = {
                        method: f,
                        parameters: c[f]
                    };
                    try {
                        if (b = a.validator.methods[f].call(this, g, d, k.parameters), "dependency-mismatch" === b) e = !0;
                        else {
                            if (e = !1, "pending" === b) return this.toHide = this.toHide.not(this.errorsFor(d)),
                            void 0;
                            if (!b) return this.formatAndAdd(d, k),
                            !1
                        }
                    } catch(h) {
                        throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + d.id + ", check the '" + k.method + "' method.", h),
                        h;
                    }
                }
                return e ? void 0 : (this.objectLength(c) && this.successList.push(d), !0)
            },
            customDataMessage: function(d, b) {
                return a(d).data("msg-" + b.toLowerCase()) || d.attributes && a(d).attr("data-msg-" + b.toLowerCase())
            },
            customMessage: function(a, b) {
                var c = this.settings.messages[a];
                return c && (c.constructor === String ? c: c[b])
            },
            findDefined: function() {
                for (var a = 0; arguments.length > a; a++) if (void 0 !== arguments[a]) return arguments[a]
            },
            defaultMessage: function(d, b) {
                return this.findDefined(this.customMessage(d.name, b), this.customDataMessage(d, b), !this.settings.ignoreTitle && d.title || void 0, a.validator.messages[b], "<strong>Warning: No message defined for " + d.name + "</strong>")
            },
            formatAndAdd: function(d, b) {
                var c = this.defaultMessage(d, b.method),
                e = /\$?\{(\d+)\}/g;
                "function" == typeof c ? c = c.call(this, b.parameters, d) : e.test(c) && (c = a.validator.format(c.replace(e, "{$1}"), b.parameters));
                this.errorList.push({
                    message: c,
                    element: d
                });
                this.errorMap[d.name] = c;
                this.submitted[d.name] = c
            },
            addWrapper: function(a) {
                return this.settings.wrapper && (a = a.add(a.parent(this.settings.wrapper))),
                a
            },
            defaultShowErrors: function() {
                var a, b;
                for (a = 0; this.errorList[a]; a++) b = this.errorList[a],
                this.settings.highlight && this.settings.highlight.call(this, b.element, this.settings.errorClass, this.settings.validClass),
                this.showLabel(b.element, b.message);
                if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (a = 0; this.successList[a]; a++) this.showLabel(this.successList[a]);
                if (this.settings.unhighlight) for (a = 0, b = this.validElements(); b[a]; a++) this.settings.unhighlight.call(this, b[a], this.settings.errorClass, this.settings.validClass);
                this.toHide = this.toHide.not(this.toShow);
                this.hideErrors();
                this.addWrapper(this.toShow).show()
            },
            validElements: function() {
                return this.currentElements.not(this.invalidElements())
            },
            invalidElements: function() {
                return a(this.errorList).map(function() {
                    return this.element
                })
            },
            showLabel: function(d, b) {
                var c = this.errorsFor(d);
                c.length ? (c.removeClass(this.settings.validClass).addClass(this.settings.errorClass), c.html(b)) : (c = a("<" + this.settings.errorElement + ">").attr("for", this.idOrName(d)).addClass(this.settings.errorClass).html(b || ""), this.settings.wrapper && (c = c.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.append(c).length || (this.settings.errorPlacement ? this.settings.errorPlacement(c, a(d)) : c.insertAfter(d))); ! b && this.settings.success && (c.text(""), "string" == typeof this.settings.success ? c.addClass(this.settings.success) : this.settings.success(c, d));
                this.toShow = this.toShow.add(c)
            },
            errorsFor: function(d) {
                var b = this.idOrName(d);
                return this.errors().filter(function() {
                    return a(this).attr("for") === b
                })
            },
            idOrName: function(a) {
                return this.groups[a.name] || (this.checkable(a) ? a.name: a.id || a.name)
            },
            validationTargetFor: function(a) {
                return this.checkable(a) && (a = this.findByName(a.name).not(this.settings.ignore)[0]),
                a
            },
            checkable: function(a) {
                return /radio|checkbox/i.test(a.type)
            },
            findByName: function(d) {
                return a(this.currentForm).find("[name='" + d + "']")
            },
            getLength: function(d, b) {
                switch (b.nodeName.toLowerCase()) {
                case "select":
                    return a("option:selected", b).length;
                case "input":
                    if (this.checkable(b)) return this.findByName(b.name).filter(":checked").length
                }
                return d.length
            },
            depend: function(a, b) {
                return this.dependTypes[typeof a] ? this.dependTypes[typeof a](a, b) : !0
            },
            dependTypes: {
                "boolean": function(a) {
                    return a
                },
                string: function(d, b) {
                    return !! a(d, b.form).length
                },
                "function": function(a, b) {
                    return a(b)
                }
            },
            optional: function(d) {
                var b = this.elementValue(d);
                return ! a.validator.methods.required.call(this, b, d) && "dependency-mismatch"
            },
            startRequest: function(a) {
                this.pending[a.name] || (this.pendingRequest++, this.pending[a.name] = !0)
            },
            stopRequest: function(d, b) {
                this.pendingRequest--;
                0 > this.pendingRequest && (this.pendingRequest = 0);
                delete this.pending[d.name];
                b && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (a(this.currentForm).submit(), this.formSubmitted = !1) : !b && 0 === this.pendingRequest && this.formSubmitted && (a(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1)
            },
            previousValue: function(d) {
                return a.data(d, "previousValue") || a.data(d, "previousValue", {
                    old: null,
                    valid: !0,
                    message: this.defaultMessage(d, "remote")
                })
            }
        },
        classRuleSettings: {
            required: {
                required: !0
            },
            email: {
                email: !0
            },
            url: {
                url: !0
            },
            date: {
                date: !0
            },
            dateISO: {
                dateISO: !0
            },
            number: {
                number: !0
            },
            digits: {
                digits: !0
            },
            creditcard: {
                creditcard: !0
            }
        },
        addClassRules: function(d, b) {
            d.constructor === String ? this.classRuleSettings[d] = b: a.extend(this.classRuleSettings, d)
        },
        classRules: function(d) {
            var b = {};
            d = a(d).attr("class");
            return d && a.each(d.split(" "),
            function() {
                this in a.validator.classRuleSettings && a.extend(b, a.validator.classRuleSettings[this])
            }),
            b
        },
        attributeRules: function(d) {
            var b = {};
            d = a(d);
            var c = d[0].getAttribute("type"),
            e;
            for (e in a.validator.methods) {
                var g;
                "required" === e ? (g = d.get(0).getAttribute(e), "" === g && (g = !0), g = !!g) : g = d.attr(e);
                /min|max/.test(e) && (null === c || /number|range|text/.test(c)) && (g = Number(g));
                g ? b[e] = g: c === e && "range" !== c && (b[e] = !0)
            }
            return b.maxlength && /-1|2147483647|524288/.test(b.maxlength) && delete b.maxlength,
            b
        },
        dataRules: function(d) {
            var b, c = {},
            e = a(d);
            for (b in a.validator.methods) d = e.data("rule-" + b.toLowerCase()),
            void 0 !== d && (c[b] = d);
            return c
        },
        staticRules: function(d) {
            var b = {},
            c = a.data(d.form, "validator");
            return c.settings.rules && (b = a.validator.normalizeRule(c.settings.rules[d.name]) || {}),
            b
        },
        normalizeRules: function(d, b) {
            return a.each(d,
            function(c, e) {
                if (!1 === e) return delete d[c],
                void 0;
                if (e.param || e.depends) {
                    var g = !0;
                    switch (typeof e.depends) {
                    case "string":
                        g = !!a(e.depends, b.form).length;
                        break;
                    case "function":
                        g = e.depends.call(b, b)
                    }
                    g ? d[c] = void 0 !== e.param ? e.param: !0 : delete d[c]
                }
            }),
            a.each(d,
            function(c, e) {
                d[c] = a.isFunction(e) ? e(b) : e
            }),
            a.each(["minlength", "maxlength"],
            function() {
                d[this] && (d[this] = Number(d[this]))
            }),
            a.each(["rangelength", "range"],
            function() {
                var b;
                d[this] && (a.isArray(d[this]) ? d[this] = [Number(d[this][0]), Number(d[this][1])] : "string" == typeof d[this] && (b = d[this].split(/[\s,]+/), d[this] = [Number(b[0]), Number(b[1])]))
            }),
            a.validator.autoCreateRanges && (d.min && d.max && (d.range = [d.min, d.max], delete d.min, delete d.max), d.minlength && d.maxlength && (d.rangelength = [d.minlength, d.maxlength], delete d.minlength, delete d.maxlength)),
            d
        },
        normalizeRule: function(d) {
            if ("string" == typeof d) {
                var b = {};
                a.each(d.split(/\s/),
                function() {
                    b[this] = !0
                });
                d = b
            }
            return d
        },
        addMethod: function(d, b, c) {
            a.validator.methods[d] = b;
            a.validator.messages[d] = void 0 !== c ? c: a.validator.messages[d];
            3 > b.length && a.validator.addClassRules(d, a.validator.normalizeRule(d))
        },
        methods: {
            required: function(d, b, c) {
                return this.depend(c, b) ? "select" === b.nodeName.toLowerCase() ? (d = a(b).val()) && 0 < d.length: this.checkable(b) ? 0 < this.getLength(d, b) : 0 < a.trim(d).length: "dependency-mismatch"
            },
            email: function(a, b) {
                return this.optional(b) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(a)
            },
            url: function(a, b) {
                return this.optional(b) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)
            },
            date: function(a, b) {
                return this.optional(b) || !/Invalid|NaN/.test("" + new Date(a))
            },
            dateISO: function(a, b) {
                return this.optional(b) || /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(a)
            },
            number: function(a, b) {
                return this.optional(b) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)
            },
            digits: function(a, b) {
                return this.optional(b) || /^\d+$/.test(a)
            },
            creditcard: function(a, b) {
                if (this.optional(b)) return "dependency-mismatch";
                if (/[^0-9 \-]+/.test(a)) return ! 1;
                var c = 0,
                e = 0,
                g = !1;
                a = a.replace(/\D/g, "");
                for (var f = a.length - 1; 0 <= f; f--) e = a.charAt(f),
                e = parseInt(e, 10),
                g && 9 < (e *= 2) && (e -= 9),
                c += e,
                g = !g;
                return 0 === c % 10
            },
            minlength: function(d, b, c) {
                d = a.isArray(d) ? d.length: this.getLength(a.trim(d), b);
                return this.optional(b) || d >= c
            },
            maxlength: function(d, b, c) {
                d = a.isArray(d) ? d.length: this.getLength(a.trim(d), b);
                return this.optional(b) || c >= d
            },
            rangelength: function(d, b, c) {
                d = a.isArray(d) ? d.length: this.getLength(a.trim(d), b);
                return this.optional(b) || d >= c[0] && c[1] >= d
            },
            min: function(a, b, c) {
                return this.optional(b) || a >= c
            },
            max: function(a, b, c) {
                return this.optional(b) || c >= a
            },
            range: function(a, b, c) {
                return this.optional(b) || a >= c[0] && c[1] >= a
            },
            equalTo: function(d, b, c) {
                c = a(c);
                return this.settings.onfocusout && c.unbind(".validate-equalTo").bind("blur.validate-equalTo",
                function() {
                    a(b).valid()
                }),
                d === c.val()
            },
            remote: function(d, b, c) {
                if (this.optional(b)) return "dependency-mismatch";
                var e = this.previousValue(b);
                if (this.settings.messages[b.name] || (this.settings.messages[b.name] = {}), e.originalMessage = this.settings.messages[b.name].remote, this.settings.messages[b.name].remote = e.message, c = "string" == typeof c && {
                    url: c
                } || c, e.old === d) return e.valid;
                e.old = d;
                var g = this;
                this.startRequest(b);
                var f = {};
                return f[b.name] = d,
                a.ajax(a.extend(!0, {
                    url: c,
                    mode: "abort",
                    port: "validate" + b.name,
                    dataType: "json",
                    data: f,
                    success: function(c) {
                        g.settings.messages[b.name].remote = e.originalMessage;
                        var f = !0 === c || "true" === c;
                        if (f) {
                            var l = g.formSubmitted;
                            g.prepareElement(b);
                            g.formSubmitted = l;
                            g.successList.push(b);
                            delete g.invalid[b.name];
                            g.showErrors()
                        } else l = {},
                        c = c || g.defaultMessage(b, "remote"),
                        l[b.name] = e.message = a.isFunction(c) ? c(d) : c,
                        g.invalid[b.name] = !0,
                        g.showErrors(l);
                        e.valid = f;
                        g.stopRequest(b, f)
                    }
                },
                c)),
                "pending"
            }
        }
    });
    a.format = a.validator.format
})(jQuery); (function(a) {
    var d = {};
    if (a.ajaxPrefilter) a.ajaxPrefilter(function(a, b, g) {
        b = a.port;
        "abort" === a.mode && (d[b] && d[b].abort(), d[b] = g)
    });
    else {
        var b = a.ajax;
        a.ajax = function(c) {
            var e = ("port" in c ? c: a.ajaxSettings).port;
            return "abort" === ("mode" in c ? c: a.ajaxSettings).mode ? (d[e] && d[e].abort(), d[e] = b.apply(this, arguments), d[e]) : b.apply(this, arguments)
        }
    }
})(jQuery); (function(a) {
    a.extend(a.fn, {
        validateDelegate: function(d, b, c) {
            return this.bind(b,
            function(b) {
                var g = a(b.target);
                return g.is(d) ? c.apply(g, arguments) : void 0
            })
        }
    })
})(jQuery); (function(a) {
    function d(a) {
        return a && a.constructor === Number ? a + "px": a
    }
    a.fn.bgiframe = a.browser.msie && /msie 6\.0/i.test(navigator.userAgent) ?
    function(b) {
        b = a.extend({
            top: "auto",
            left: "auto",
            width: "auto",
            height: "auto",
            opacity: !0,
            src: "javascript:false;"
        },
        b);
        var c = '<iframe class="bgiframe"frameborder="0"tabindex="-1"src="' + b.src + '"style="display:block;position:absolute;z-index:-1;' + (!1 !== b.opacity ? "filter:Alpha(Opacity='0');": "") + "top:" + ("auto" == b.top ? "expression(((parseInt(this.parentNode.currentStyle.borderTopWidth)||0)*-1)+'px')": d(b.top)) + ";left:" + ("auto" == b.left ? "expression(((parseInt(this.parentNode.currentStyle.borderLeftWidth)||0)*-1)+'px')": d(b.left)) + ";width:" + ("auto" == b.width ? "expression(this.parentNode.offsetWidth+'px')": d(b.width)) + ";height:" + ("auto" == b.height ? "expression(this.parentNode.offsetHeight+'px')": d(b.height)) + ';"/>';
        return this.each(function() {
            0 === a(this).children("iframe.bgiframe").length && this.insertBefore(document.createElement(c), this.firstChild)
        })
    }: function() {
        return this
    };
    a.fn.bgIframe = a.fn.bgiframe
})(jQuery);
jQuery.fn.extend({
    everyTime: function(a, d, b, c) {
        return this.each(function() {
            jQuery.timer.add(this, a, d, b, c)
        })
    },
    oneTime: function(a, d, b) {
        return this.each(function() {
            jQuery.timer.add(this, a, d, b, 1)
        })
    },
    stopTime: function(a, d) {
        return this.each(function() {
            jQuery.timer.remove(this, a, d)
        })
    }
});
jQuery.extend({
    timer: {
        global: [],
        guid: 1,
        dataKey: "jQuery.timer",
        regex: /^([0-9]+(?:\.[0-9]*)?)\s*(.*s)?$/,
        powers: {
            ms: 1,
            cs: 10,
            ds: 100,
            s: 1E3,
            das: 1E4,
            hs: 1E5,
            ks: 1E6
        },
        timeParse: function(a) {
            if (void 0 == a || null == a) return null;
            var d = this.regex.exec(jQuery.trim(a.toString()));
            return d[2] ? parseFloat(d[1]) * (this.powers[d[2]] || 1) : a
        },
        add: function(a, d, b, c, e) {
            var g = 0;
            jQuery.isFunction(b) && (e || (e = c), c = b, b = d);
            d = jQuery.timer.timeParse(d);
            if (! ("number" != typeof d || isNaN(d) || 0 > d)) {
                if ("number" != typeof e || isNaN(e) || 0 > e) e = 0;
                e = e || 0;
                var f = jQuery.data(a, this.dataKey) || jQuery.data(a, this.dataKey, {});
                f[b] || (f[b] = {});
                c.timerID = c.timerID || this.guid++;
                var k = function() { (++g > e && 0 !== e || !1 === c.call(a, g)) && jQuery.timer.remove(a, b, c)
                };
                k.timerID = c.timerID;
                f[b][c.timerID] || (f[b][c.timerID] = window.setInterval(k, d));
                this.global.push(a)
            }
        },
        remove: function(a, d, b) {
            var c = jQuery.data(a, this.dataKey),
            e;
            if (c) {
                if (!d) for (d in c) this.remove(a, d, b);
                else if (c[d]) {
                    if (b) b.timerID && (window.clearInterval(c[d][b.timerID]), delete c[d][b.timerID]);
                    else for (b in c[d]) window.clearInterval(c[d][b]),
                    delete c[d][b];
                    for (e in c[d]) break;
                    e || (e = null, delete c[d])
                }
                for (e in c) break;
                e || jQuery.removeData(a, this.dataKey)
            }
        }
    }
});
jQuery(window).bind("unload",
function() {
    jQuery.each(jQuery.timer.global,
    function(a, d) {
        jQuery.timer.remove(d)
    })
});
jQuery.easing.jswing = jQuery.easing.swing;
jQuery.extend(jQuery.easing, {
    def: "easeOutQuad",
    swing: function(a, d, b, c, e) {
        return jQuery.easing[jQuery.easing.def](a, d, b, c, e)
    },
    easeInQuad: function(a, d, b, c, e) {
        return c * (d /= e) * d + b
    },
    easeOutQuad: function(a, d, b, c, e) {
        return - c * (d /= e) * (d - 2) + b
    },
    easeInOutQuad: function(a, d, b, c, e) {
        return 1 > (d /= e / 2) ? c / 2 * d * d + b: -c / 2 * (--d * (d - 2) - 1) + b
    },
    easeInCubic: function(a, d, b, c, e) {
        return c * (d /= e) * d * d + b
    },
    easeOutCubic: function(a, d, b, c, e) {
        return c * ((d = d / e - 1) * d * d + 1) + b
    },
    easeInOutCubic: function(a, d, b, c, e) {
        return 1 > (d /= e / 2) ? c / 2 * d * d * d + b: c / 2 * ((d -= 2) * d * d + 2) + b
    },
    easeInQuart: function(a, d, b, c, e) {
        return c * (d /= e) * d * d * d + b
    },
    easeOutQuart: function(a, d, b, c, e) {
        return - c * ((d = d / e - 1) * d * d * d - 1) + b
    },
    easeInOutQuart: function(a, d, b, c, e) {
        return 1 > (d /= e / 2) ? c / 2 * d * d * d * d + b: -c / 2 * ((d -= 2) * d * d * d - 2) + b
    },
    easeInQuint: function(a, d, b, c, e) {
        return c * (d /= e) * d * d * d * d + b
    },
    easeOutQuint: function(a, d, b, c, e) {
        return c * ((d = d / e - 1) * d * d * d * d + 1) + b
    },
    easeInOutQuint: function(a, d, b, c, e) {
        return 1 > (d /= e / 2) ? c / 2 * d * d * d * d * d + b: c / 2 * ((d -= 2) * d * d * d * d + 2) + b
    },
    easeInSine: function(a, d, b, c, e) {
        return - c * Math.cos(d / e * (Math.PI / 2)) + c + b
    },
    easeOutSine: function(a, d, b, c, e) {
        return c * Math.sin(d / e * (Math.PI / 2)) + b
    },
    easeInOutSine: function(a, d, b, c, e) {
        return - c / 2 * (Math.cos(Math.PI * d / e) - 1) + b
    },
    easeInExpo: function(a, d, b, c, e) {
        return 0 == d ? b: c * Math.pow(2, 10 * (d / e - 1)) + b
    },
    easeOutExpo: function(a, d, b, c, e) {
        return d == e ? b + c: c * ( - Math.pow(2, -10 * d / e) + 1) + b
    },
    easeInOutExpo: function(a, d, b, c, e) {
        return 0 == d ? b: d == e ? b + c: 1 > (d /= e / 2) ? c / 2 * Math.pow(2, 10 * (d - 1)) + b: c / 2 * ( - Math.pow(2, -10 * --d) + 2) + b
    },
    easeInCirc: function(a, d, b, c, e) {
        return - c * (Math.sqrt(1 - (d /= e) * d) - 1) + b
    },
    easeOutCirc: function(a, d, b, c, e) {
        return c * Math.sqrt(1 - (d = d / e - 1) * d) + b
    },
    easeInOutCirc: function(a, d, b, c, e) {
        return 1 > (d /= e / 2) ? -c / 2 * (Math.sqrt(1 - d * d) - 1) + b: c / 2 * (Math.sqrt(1 - (d -= 2) * d) + 1) + b
    },
    easeInElastic: function(a, d, b, c, e) {
        a = 1.70158;
        var g = 0,
        f = c;
        if (0 == d) return b;
        if (1 == (d /= e)) return b + c;
        g || (g = 0.3 * e);
        f < Math.abs(c) ? (f = c, a = g / 4) : a = g / (2 * Math.PI) * Math.asin(c / f);
        return - (f * Math.pow(2, 10 * (d -= 1)) * Math.sin(2 * (d * e - a) * Math.PI / g)) + b
    },
    easeOutElastic: function(a, d, b, c, e) {
        a = 1.70158;
        var g = 0,
        f = c;
        if (0 == d) return b;
        if (1 == (d /= e)) return b + c;
        g || (g = 0.3 * e);
        f < Math.abs(c) ? (f = c, a = g / 4) : a = g / (2 * Math.PI) * Math.asin(c / f);
        return f * Math.pow(2, -10 * d) * Math.sin(2 * (d * e - a) * Math.PI / g) + c + b
    },
    easeInOutElastic: function(a, d, b, c, e) {
        a = 1.70158;
        var g = 0,
        f = c;
        if (0 == d) return b;
        if (2 == (d /= e / 2)) return b + c;
        g || (g = 0.3 * 1.5 * e);
        f < Math.abs(c) ? (f = c, a = g / 4) : a = g / (2 * Math.PI) * Math.asin(c / f);
        return 1 > d ? -0.5 * f * Math.pow(2, 10 * (d -= 1)) * Math.sin(2 * (d * e - a) * Math.PI / g) + b: 0.5 * f * Math.pow(2, -10 * (d -= 1)) * Math.sin(2 * (d * e - a) * Math.PI / g) + c + b
    },
    easeInBack: function(a, d, b, c, e, g) {
        void 0 == g && (g = 1.70158);
        return c * (d /= e) * d * ((g + 1) * d - g) + b
    },
    easeOutBack: function(a, d, b, c, e, g) {
        void 0 == g && (g = 1.70158);
        return c * ((d = d / e - 1) * d * ((g + 1) * d + g) + 1) + b
    },
    easeInOutBack: function(a, d, b, c, e, g) {
        void 0 == g && (g = 1.70158);
        return 1 > (d /= e / 2) ? c / 2 * d * d * (((g *= 1.525) + 1) * d - g) + b: c / 2 * ((d -= 2) * d * (((g *= 1.525) + 1) * d + g) + 2) + b
    },
    easeInBounce: function(a, d, b, c, e) {
        return c - jQuery.easing.easeOutBounce(a, e - d, 0, c, e) + b
    },
    easeOutBounce: function(a, d, b, c, e) {
        return (d /= e) < 1 / 2.75 ? 7.5625 * c * d * d + b: d < 2 / 2.75 ? c * (7.5625 * (d -= 1.5 / 2.75) * d + 0.75) + b: d < 2.5 / 2.75 ? c * (7.5625 * (d -= 2.25 / 2.75) * d + 0.9375) + b: c * (7.5625 * (d -= 2.625 / 2.75) * d + 0.984375) + b
    },
    easeInOutBounce: function(a, d, b, c, e) {
        return d < e / 2 ? 0.5 * jQuery.easing.easeInBounce(a, 2 * d, 0, c, e) + b: 0.5 * jQuery.easing.easeOutBounce(a, 2 * d - e, 0, c, e) + 0.5 * c + b
    }
});
"function" !== typeof Object.create && (Object.create = function(a) {
    function d() {}
    d.prototype = a;
    return new d
});
var gallaryClickBinded = !1,
bigImageOpenurl = void 0; (function(a) {
    var d = function(a) {
        this.src = {
            panel: a.attr("src"),
            frame: a.data("frame") || a.attr("src")
        };
        this.scale = {
            panel: null,
            frame: null
        };
        this.width = this.height = 0;
        this.attrs = {
            title: a.attr("title") || a.attr("alt"),
            description: a.data("description")
        };
        this.dom_obj = this.href = null;
        return this
    },
    b = {
        getInt: function(a) {
            a = parseInt(a, 10);
            return isNaN(a) ? 0 : a
        },
        innerWidth: function(a) {
            return this.getInt(a.css("width")) || 0
        },
        outerWidth: function(a) {
            return this.innerWidth(a) + this.extraWidth(a)
        },
        extraWidth: function(a) {
            return this.getInt(a.css("paddingLeft")) + this.getInt(a.css("paddingRight")) + this.getInt(a.css("borderLeftWidth")) + this.getInt(a.css("borderRightWidth"))
        },
        innerHeight: function(a) {
            return this.getInt(a.css("height")) || 0
        },
        outerHeight: function(a) {
            return this.innerHeight(a) + this.extraHeight(a)
        },
        extraHeight: function(a) {
            return this.getInt(a.css("paddingTop")) + this.getInt(a.css("paddingBottom")) + this.getInt(a.css("borderTopWidth")) + this.getInt(a.css("borderBottomWidth"))
        }
    },
    c = {
        elems: ".gv_galleryWrap .gv_gallery .gv_panelWrap .gv_panel img.gv_image .gv_infobar .gv_filmstripWrap .gv_filmstrip .gv_frame .gv_thumbnail .gv_caption img.gv_thumb .gv_navWrap .gv_navNext .gv_navPrev .gv_navPlay .gv_panelNavNext .gv_panelNavPrev .gv_overlay .gv_showOverlay .gv_imageStore".split(" "),
        createElem: function(b, c) {
            c = document.createElement(c);
            return a(c).attr(b)
        },
        getPos: function(a) {
            var b = this.dom;
            a = a[0];
            var c = a.id,
            d = 0,
            h = 0;
            if (!a) return {
                top: 0,
                left: 0
            };
            if (a.offsetParent) {
                do d += a.offsetLeft,
                h += a.offsetTop;
                while (a = a.offsetParent)
            }
            if (c === this.id) return {
                left: d,
                top: h
            };
            a = this.getPos(b.galleryWrap);
            return {
                left: d - a.left,
                top: h - a.top
            }
        },
        mouseIsOverGallery: function(a, c) {
            var d = this.dom,
            k = this.getPos(d.gv_galleryWrap),
            h = k.top,
            k = k.left;
            return a > k && a < k + b.outerWidth(d.gv_galleryWrap) && c > h && c < h + b.outerHeight(d.gv_galleryWrap)
        },
        mouseIsOverPanel: function(a, c) {
            var d = this.dom,
            k = this.getPos(d.gv_panelWrap),
            h = this.getPos(d.gv_galleryWrap),
            l = k.top + h.top,
            k = k.left + h.left;
            return a > k && a < k + b.outerWidth(d.gv_panelWrap) && c > l && c < l + b.outerHeight(d.gv_panelWrap)
        },
        storeImages: function() {
            var b = this;
            this.sourceImgs = a("li>img", this.$el);
            this.numImages = this.sourceImgs.length;
            this.gvImages = [];
            this.sourceImgs.each(function(c, f) {
                b.gvImages[c] = new d(a(f))
            })
        },
        setDimensions: function() {
            var c = this.dom,
            d = b.innerWidth(c.gv_navPrev),
            f = b.innerWidth(c.gv_navPlay),
            k = b.innerWidth(c.gv_navNext),
            h = this.opts.frame_width,
            l = 0,
            n = 0,
            l = b.innerHeight(c.gv_navPrev),
            n = b.innerHeight(c.gv_navPlay),
            p = b.innerHeight(c.gv_navNext),
            s = this.opts.frame_height + (this.opts.show_captions ? b.outerHeight(c.gv_caption) : 0),
            r = 0,
            q = 0;
            "horizontal" === this.filmstripOrientation ? c.gv_navWrap.css({
                width: d + f + k,
                height: Math.max(l, n, p)
            }) : "scroll" === this.opts.filmstrip_style && this.opts.frame_width < d + f + k ? c.gv_navWrap.css({
                width: Math.max(d, f, k),
                height: l + n + p
            }) : c.gv_navWrap.css({
                width: d + f + k,
                height: Math.max(l, n, p)
            });
            "vertical" === this.filmstripOrientation && h < d + f + k ? c.gv_navWrap.css({
                width: Math.max(d, f, k),
                height: l + n + p
            }) : c.gv_navWrap.css({
                width: d + f + k,
                height: Math.max(l, n, p)
            });
            c.gv_panel.css({
                overflow: "hidden",
                width: this.opts.panel_width,
                height: this.opts.panel_height
            });
            c.gv_panelWrap.css({
                width: b.outerWidth(c.gv_panel),
                height: b.outerHeight(c.gv_panel)
            });
            c.gv_overlay.css({
                width: this.opts.panel_width
            });
            a.each(this.gvImages,
            function(a, b) {
                c.gv_panelWrap.append(c.gv_panel.clone(!0))
            });
            c.gv_panels = c.gv_panelWrap.find(".gv_panel");
            c.gv_panels.remove();
            c.gv_thumbnail.css({
                width: this.opts.frame_width,
                height: this.opts.frame_height
            });
            c.gv_frame.css({
                width: b.outerWidth(c.gv_thumbnail),
                height: b.outerHeight(c.gv_thumbnail) + (this.opts.show_captions ? b.outerHeight(c.gv_caption) : 0),
                marginRight: this.opts.frame_gap,
                marginBottom: this.opts.frame_gap
            });
            "horizontal" === this.filmstripOrientation ? (this.filmstripSize = Math.floor((b.outerWidth(c.gv_panelWrap) - b.outerWidth(c.gv_navWrap)) / (b.outerWidth(c.gv_frame) + this.opts.frame_gap)), l = this.filmstripSize * (b.outerWidth(c.gv_frame) + this.opts.frame_gap), n = this.gvImages.length * (b.outerWidth(c.gv_frame) + this.opts.frame_gap), h = Math.min(l, n), "scroll" !== this.opts.filmstrip_style && (s = Math.ceil(this.gvImages.length / this.filmstripSize) * (b.outerHeight(c.gv_frame) + this.opts.frame_gap) - this.opts.frame_gap)) : (this.filmstripSize = Math.floor((b.outerHeight(c.gv_panelWrap) - b.outerHeight(c.gv_navWrap)) / (b.outerHeight(c.gv_frame) + this.opts.frame_gap)), r = this.filmstripSize * (b.outerHeight(c.gv_frame) + this.opts.frame_gap), q = this.gvImages.length * (b.outerHeight(c.gv_frame) + this.opts.frame_gap), s = Math.min(r, q), "scroll" !== this.opts.filmstrip_style && (h = Math.ceil(this.gvImages.length / this.filmstripSize) * (b.outerWidth(c.gv_frame) + this.opts.frame_gap) - this.opts.frame_gap));
            c.gv_filmstripWrap.css({
                width: h,
                height: s
            });
            this.opts.show_filmstrip ? "horizontal" === this.filmstripOrientation ? c.gv_gallery.css({
                width: b.outerWidth(c.gv_panelWrap),
                height: b.outerHeight(c.gv_panelWrap) + this.opts.frame_gap + (this.opts.show_filmstrip ? Math.max(b.outerHeight(c.gv_filmstripWrap), b.outerHeight(c.gv_navWrap)) : b.outerHeight(c.gv_filmstripWrap))
            }) : c.gv_gallery.css({
                width: b.outerWidth(c.gv_panelWrap) + this.opts.frame_gap + (this.opts.show_filmstrip ? Math.max(b.outerWidth(c.gv_filmstripWrap), b.outerWidth(c.gv_navWrap)) : b.outerWidth(c.gv_filmstripWrap)),
                height: b.outerHeight(c.gv_panelWrap)
            }) : c.gv_gallery.css({
                width: b.outerWidth(c.gv_panelWrap),
                height: b.outerHeight(c.gv_panelWrap)
            });
            c.gv_galleryWrap.css({
                width: b.outerWidth(c.gv_gallery),
                height: b.outerHeight(c.gv_gallery),
                padding: this.opts.frame_gap
            })
        },
        setPositions: function() {
            var a = this.dom,
            c = 0,
            d = 0,
            k = 0,
            h = 0,
            l;
            "horizontal" === this.filmstripOrientation ? (l = Math.round((b.outerHeight(a.gv_filmstripWrap) - b.outerHeight(a.gv_navWrap)) / 2), 0 > l ? d = -1 * l: c = l) : (l = Math.round((b.outerWidth(a.gv_filmstripWrap) - b.outerWidth(a.gv_navWrap)) / 2), 0 > l ? h = -1 * l: k = l);
            this.opts.show_filmstrip_nav || "horizontal" !== this.filmstripOrientation || (h = Math.floor((b.outerWidth(a.gv_panelWrap) - b.outerWidth(a.gv_filmstripWrap)) / 2));
            a.gv_panelNavNext.css({
                top: (b.outerHeight(a.gv_panel) - b.outerHeight(a.gv_panelNavNext)) / 2,
                right: 10
            });
            a.gv_panelNavPrev.css({
                top: (b.outerHeight(a.gv_panel) - b.outerHeight(a.gv_panelNavPrev)) / 2,
                left: 10
            });
            switch (this.opts.filmstrip_position) {
            case "top":
                a.gv_navWrap.css({
                    top:
                    c,
                    right: k
                });
                a.gv_panelWrap.css({
                    bottom: 0,
                    left: 0
                });
                a.gv_filmstripWrap.css({
                    top: d,
                    left: h
                });
                break;
            case "right":
                a.gv_navWrap.css({
                    bottom:
                    c,
                    right: k
                });
                a.gv_panelWrap.css({
                    top: 0,
                    left: 0
                });
                a.gv_filmstripWrap.css({
                    top: d,
                    right: h
                });
                break;
            case "left":
                a.gv_navWrap.css({
                    bottom:
                    c,
                    left: k
                });
                a.gv_panelWrap.css({
                    top: 0,
                    right: 0
                });
                a.gv_filmstripWrap.css({
                    top: d,
                    left: h
                });
                break;
            default:
                a.gv_navWrap.css({
                    bottom:
                    c,
                    right: k
                }),
                a.gv_panelWrap.css({
                    top: 0,
                    left: 0
                }),
                a.gv_filmstripWrap.css({
                    bottom: d,
                    left: h
                })
            }
            "top" === this.opts.overlay_position ? (a.gv_overlay.css({
                top: 0,
                left: -99999
            }), a.gv_showOverlay.css({
                top: 0,
                left: 0
            })) : (a.gv_overlay.css({
                bottom: 0,
                left: -99999
            }), a.gv_showOverlay.css({
                bottom: 0,
                left: 0
            }));
            this.opts.show_filmstrip_nav || a.gv_navWrap.remove()
        },
        buildFilmstrip: function() {
            var c = this,
            d = this.dom,
            f = this.gvImages.length * (("horizontal" === this.filmstripOrientation ? this.opts.frame_width: this.opts.frame_height) + this.opts.frame_gap);
            d.gv_frame.append(d.gv_thumbnail);
            this.opts.show_captions && d.gv_frame.append(d.gv_caption);
            d.gv_thumbnail.css("opacity", this.opts.frame_opacity);
            d.gv_thumbnail.bind({
                mouseover: function() {
                    a(this).hasClass("current") || a(this).stop().animate({
                        opacity: 1
                    },
                    250)
                },
                mouseout: function() {
                    a(this).hasClass("current") || a(this).stop().animate({
                        opacity: c.opts.frame_opacity
                    },
                    250)
                }
            });
            a.each(this.gvImages,
            function(a, b) {
                d.gv_frame.clone(!0).prependTo(d.gv_filmstrip)
            });
            d.gv_filmstrip.css({
                width: b.outerWidth(d.gv_frame),
                height: b.outerHeight(d.gv_frame)
            });
            "scroll" === this.opts.filmstrip_style ? "horizontal" === this.filmstripOrientation ? f > b.innerWidth(d.gv_filmstripWrap) ? (d.gv_filmstrip.find(".gv_frame").clone(!0).appendTo(d.gv_filmstrip).clone(!0).appendTo(d.gv_filmstrip), d.gv_filmstrip.css("width", 3 * f), this.scrolling = !0) : d.gv_filmstrip.css("width", f) : f > b.innerHeight(d.gv_filmstripWrap) ? (d.gv_filmstrip.find(".gv_frame").clone(!0).appendTo(d.gv_filmstrip).clone(!0).appendTo(d.gv_filmstrip), d.gv_filmstrip.css("height", 3 * f), this.scrolling = !0) : d.gv_filmstrip.css("height", f) : d.gv_filmstrip.css({
                width: parseInt(d.gv_filmstripWrap.css("width"), 10) + this.opts.frame_gap,
                height: parseInt(d.gv_filmstripWrap.css("height"), 10) + this.opts.frame_gap
            });
            d.gv_frames = d.gv_filmstrip.find(".gv_frame");
            a.each(d.gv_frames,
            function(b, c) {
                a(c).data("frameIndex", b)
            });
            d.gv_thumbnails = d.gv_filmstrip.find("div.gv_thumbnail")
        },
        buildGallery: function() {
            this.setDimensions();
            this.setPositions();
            this.opts.show_filmstrip && this.buildFilmstrip()
        },
        showInfoBar: function() {
            if (this.opts.show_infobar) {
                var a = this.dom;
                a.gv_infobar.stop().stopTime("hideInfoBar_" + this.id).html(this.iterator + 1 + " of " + this.numImages).show().css("opacity", this.opts.infobar_opacity);
                a.gv_infobar.oneTime(2E3 + this.opts.transition_speed, "hideInfoBar_" + this.id,
                function() {
                    a.gv_infobar.fadeOut(1E3)
                })
            }
        },
        initImages: function() {
            var c = this,
            d = this.dom;
            a.each(this.gvImages,
            function(f, k) {
                var h = a("<img/>");
                h.css("visibility", "hidden").data("index", f);
                h.css("zoom", "100%");
                h.bind("load.galleryview",
                function() {
                    var f = a(this),
                    h = f.data("index"),
                    p = this.width,
                    s = this.height,
                    r = d[f.data("parent").type].eq(f.data("parent").index),
                    q = b.innerWidth(r) / p,
                    t = b.innerHeight(r) / s,
                    u = r.hasClass("gv_panel") ? "panel": "frame",
                    w = 0,
                    v = 0;
                    k.scale[u] = "fit" === c.opts[u + "_scale"] ? Math.min(q, t) : Math.max(q, t);
                    v = Math.round((b.innerWidth(r) - p * k.scale[u]) / 2);
                    w = Math.round((b.innerHeight(r) - s * k.scale[u]) / 2);
                    f.css({
                        width: p * k.scale[u],
                        height: s * k.scale[u],
                        top: w,
                        left: v
                    });
                    f.hide().css("visibility", "visible");
                    f.remove().appendTo(r);
                    "frame" === u ? (f.fadeIn(), r.parent().removeClass("gv_frame-loading"), r.parent().find(".gv_caption").html(k.attrs.title)) : h === c.opts.start_frame - 1 ? (r.prependTo(d.gv_panelWrap), r.removeClass("gv_panel-loading"), f.fadeIn(), c.showInfoBar()) : (r.removeClass("gv_panel-loading"), f.show())
                });
                c.opts.show_panels && h.clone(!0).data("parent", {
                    type: "gv_panels",
                    index: f
                }).appendTo(d.gv_imageStore).attr("src", k.src.panel);
                c.opts.show_filmstrip && (h.clone(!0).data("parent", {
                    type: "gv_thumbnails",
                    index: f
                }).appendTo(d.gv_imageStore).attr("src", k.src.frame), d.gv_frames.length > d.gv_panels.length && (h.clone(!0).data("parent", {
                    type: "gv_thumbnails",
                    index: f + c.numImages
                }).appendTo(d.gv_imageStore).attr("src", k.src.frame), h.clone(!0).data("parent", {
                    type: "gv_thumbnails",
                    index: f + c.numImages + c.numImages
                }).appendTo(d.gv_imageStore).attr("src", k.src.frame)))
            })
        },
        showNext: function() {
            this.navAction = "next";
            this.showItem(this.frameIterator + 1)
        },
        showPrev: function() {
            this.navAction = "prev";
            this.showItem(this.frameIterator - 1)
        },
        showItem: function(c) {
            if (!isNaN(c)) {
                this.opts.show_filmstrip || (c %= this.numImages);
                var d = this,
                f = this.dom,
                k = c,
                h, l, n, p = !1;
                c >= this.numImages ? c %= this.numImages: 0 > c && (c = this.numImages - 1, k = void 0 != f.gv_frames ? f.gv_frames.length - 1 : f.gv_panels.length - 1);
                n = f.gv_panels.eq(c); (p = this.playing) && this.stopSlideshow(!1);
                this.unbindActions();
                f.gv_gallery.oneTime(this.opts.transition_speed, "bindActions_" + d.id,
                function() {
                    p && d.startSlideshow(!1);
                    d.bindActions()
                });
                switch (this.opts.panel_animation) {
                case "crossfade":
                    f.gv_panels.eq(this.iterator).fadeOut(this.opts.transition_speed,
                    function() {
                        a(this).remove()
                    });
                    n.hide().prependTo(f.gv_panelWrap).fadeIn(this.opts.transition_speed);
                    break;
                case "fade":
                    f.gv_panels.eq(this.iterator).remove();
                    n.hide().prependTo(f.gv_panelWrap).fadeIn(this.opts.transition_speed);
                    break;
                case "slide":
                    "next" === this.navAction || "frame" === this.navAction && k > this.iterator ? (h = b.outerWidth(f.gv_panel), l = -1 * b.outerWidth(f.gv_panel)) : (h = -1 * b.outerWidth(f.gv_panel), l = b.outerWidth(f.gv_panel));
                    n.css({
                        left: h
                    }).appendTo(f.gv_panelWrap).animate({
                        left: 0
                    },
                    {
                        duration: this.opts.transition_speed,
                        easing: this.opts.easing
                    });
                    f.gv_panels.eq(this.iterator).animate({
                        left: l
                    },
                    {
                        duration: this.opts.transition_speed,
                        easing: this.opts.easing,
                        complete: function() {
                            a(this).remove()
                        }
                    });
                    break;
                default:
                    f.gv_panels.eq(this.iterator).remove(),
                    n.prependTo(f.gv_panelWrap)
                }
                this.updateOverlay(c);
                this.iterator = c;
                this.updateFilmstrip(k);
                this.showInfoBar()
            }
        },
        updateOverlay: function(a) {
            var b = this,
            c = this.dom;
            this.overlayVisible ? this.hideOverlay(null,
            function() {
                c.gv_overlay.html("<h4>" + b.gvImages[a].attrs.title + "</h4><p>" + b.gvImages[a].attrs.description + "</p>");
                b.showOverlay()
            }) : (c.gv_overlay.html("<h4>" + b.gvImages[a].attrs.title + "</h4><p>" + b.gvImages[a].attrs.description + "</p>"), c.gv_overlay.css(this.opts.overlay_position, -1 * c.gv_overlay.outerHeight()))
        },
        hideOverlay: function(a, b) {
            var c = this.dom,
            d = {},
            h = {},
            l = a || this.opts.transition_speed / 2;
            b = b ||
            function() {};
            d[this.opts.overlay_position] = -1 * c.gv_overlay.outerHeight();
            h[this.opts.overlay_position] = 0;
            c.gv_overlay.animate(d, {
                duration: l,
                easing: "swing",
                complete: b
            });
            c.gv_showOverlay.animate(h, {
                duration: l,
                easing: "swing"
            });
            this.overlayVisible = !1
        },
        showOverlay: function(a) {
            var b = this.dom,
            c = {},
            d = {},
            h = {};
            a = a || this.opts.transition_speed / 2;
            c[this.opts.overlay_position] = -1 * b.gv_overlay.outerHeight();
            c.left = 0;
            d[this.opts.overlay_position] = 0;
            h[this.opts.overlay_position] = b.gv_overlay.outerHeight();
            b.gv_overlay.css(c);
            b.gv_overlay.animate(d, {
                duration: a,
                easing: "swing"
            });
            b.gv_showOverlay.animate(h, {
                duration: a,
                easing: "swing"
            });
            this.overlayVisible = !0
        },
        updateFilmstrip: function(a) {
            if (this.opts.show_filmstrip) {
                var c = this,
                d = this.dom,
                k = d.gv_thumbnails.eq(this.iterator);
                this.scrolling && (k = k.add(d.gv_thumbnails.eq(this.iterator + this.numImages)).add(d.gv_thumbnails.eq(this.iterator + 2 * this.numImages)));
                d.gv_thumbnails.removeClass("current").animate({
                    opacity: this.opts.frame_opacity
                });
                k.stop().addClass("current").animate({
                    opacity: 1
                },
                500);
                this.scrolling ? "horizontal" === this.filmstripOrientation ? (k = (b.outerWidth(d.gv_frame) + this.opts.frame_gap) * (this.frameIterator - a), k = 0 < k ? "+=" + Math.abs(k) : "-=" + Math.abs(k), d.gv_filmstrip.animate({
                    left: k
                },
                {
                    duration: this.opts.transition_speed,
                    easing: this.opts.easing,
                    complete: function() {
                        a < c.numImages ? d.gv_filmstrip.css("left", b.getInt(d.gv_filmstrip.css("left")) - c.numImages * (b.outerWidth(d.gv_frame) + c.opts.frame_gap)) : a >= 2 * c.numImages && d.gv_filmstrip.css("left", b.getInt(d.gv_filmstrip.css("left")) + c.numImages * (b.outerWidth(d.gv_frame) + c.opts.frame_gap));
                        c.frameIterator = a % c.numImages + c.numImages
                    }
                })) : (k = (b.outerHeight(d.gv_frame) + this.opts.frame_gap) * (this.frameIterator - a), k = 0 < k ? "+=" + Math.abs(k) : "-=" + Math.abs(k), d.gv_filmstrip.animate({
                    top: k
                },
                {
                    duration: this.opts.transition_speed,
                    easing: this.opts.easing,
                    complete: function() {
                        0 === a ? (d.gv_filmstrip.css("top", b.getInt(d.gv_filmstrip.css("top")) - c.numImages * (b.outerHeight(d.gv_frame) + c.opts.frame_gap)), c.frameIterator = c.numImages) : a > 3 * c.numImages - 2 * c.filmstripSize ? (d.gv_filmstrip.css("top", b.getInt(d.gv_filmstrip.css("top")) + c.numImages * (b.outerHeight(d.gv_frame) + c.opts.frame_gap)), c.frameIterator = a - c.numImages) : c.frameIterator = a
                    }
                })) : this.frameIterator = a
            } else this.frameIterator = a
        },
        startSlideshow: function(a) {
            var b = this,
            c = this.dom;
            b.opts.enable_slideshow && (a && c.gv_navPlay.removeClass("gv_navPlay").addClass("gv_navPause"), this.playing = !0, c.gv_galleryWrap.everyTime(this.opts.transition_interval, "slideshow_" + this.id,
            function() {
                b.showNext()
            }))
        },
        stopSlideshow: function(a) {
            var b = this.dom;
            a && b.gv_navPlay.removeClass("gv_navPause").addClass("gv_navPlay");
            this.playing = !1;
            b.gv_galleryWrap.stopTime("slideshow_" + this.id)
        },
        enablePanning: function() {
            var c = this,
            d = this.dom;
            c.opts.enable_slideshow && (d.gv_panel.css("cursor", "url(http://www.google.com/intl/en_ALL/mapfiles/openhand.cur), n-resize"), "drag" === this.opts.pan_style && d.gv_panelWrap.delegate(".gv_panel img", "mousedown.galleryview",
            function(b) {
                c.isMouseDown = !0;
                a(this).css("cursor", "url(http://www.google.com/intl/en_ALL/mapfiles/closedhand.cur), n-resize")
            }).delegate(".gv_panel img", "mouseup.galleryview",
            function(b) {
                c.isMouseDown = !1;
                a(this).css("cursor", "url(http://www.google.com/intl/en_ALL/mapfiles/openhand.cur), n-resize")
            }).delegate(".gv_panel img", "mousemove.galleryview",
            function(f) {
                var k, h = a(this);
                c.isMouseDown ? (k = f.pageY - c.mouse.y, f = f.pageX - c.mouse.x, k = b.getInt(h.css("top")) + k, f = b.getInt(h.css("left")) + f, h.css("cursor", "url(http://www.google.com/intl/en_ALL/mapfiles/closedhand.cur), n-resize"), 0 < k && (k = 0), 0 < f && (f = 0), k < -1 * (b.outerHeight(h) - b.innerHeight(d.gv_panel)) && (k = -1 * (b.outerHeight(h) - b.innerHeight(d.gv_panel))), f < -1 * (b.outerWidth(h) - b.innerWidth(d.gv_panel)) && (f = -1 * (b.outerWidth(h) - b.innerWidth(d.gv_panel))), h.css("top", k), h.css("left", f)) : h.css("cursor", "url(http://www.google.com/intl/en_ALL/mapfiles/openhand.cur), n-resize")
            }))
        },
        bindActions: function() {
            var b = this,
            c = this.dom;
            c.gv_showOverlay.bind("click.galleryview",
            function() {
                b.overlayVisible ? b.hideOverlay(250) : b.showOverlay(250)
            });
            c.gv_navWrap.delegate("div", "click.galleryview",
            function() {
                var c = a(this);
                c.hasClass("gv_navNext") ? b.showNext() : c.hasClass("gv_navPrev") ? b.showPrev() : c.hasClass("gv_navPlay") ? b.startSlideshow(!0) : c.hasClass("gv_navPause") && b.stopSlideshow(!0);
                return ! 1
            });
            c.gv_panelNavNext.bind("click.galleryview",
            function() {
                b.showNext();
                return ! 1
            });
            c.gv_panelNavPrev.bind("click.galleryview",
            function() {
                b.showPrev();
                return ! 1
            });
            c.gv_filmstripWrap.delegate(".gv_frame", "click.galleryview",
            function() {
                var c = a(this).data("frameIndex");
                this.navAction = "frame";
                b.showItem(c);
                return ! 1
            });
            c.gv_panelWrap.bind("mouseover.galleryview",
            function() {
                b.showPanelNav();
                if (null != b.opts.lookBigImageUrl) {
                    var c = document.location.pathname.substring(0, document.location.pathname.lastIndexOf("/")),
                    c = c.substring(0, c.lastIndexOf("/") + 1),
                    c = document.location.protocol + "//" + document.location.host + (c + "Images/Magnifier.ico");
                    a(this).css("cursor", "url(" + c + "), n-resize")
                }
            }).bind("mouseout.galleryview",
            function() {
                b.hidePanelNav()
            }).bind("mousemove.galleryview",
            function() {}).bind("mousedown.galleryview",
            function() {}).bind("mouseup.galleryview",
            function() {}); ! 1 == gallaryClickBinded && (c.gv_panelWrap.bind("click.galleryview",
            function() {
                if (null != b.opts.lookBigImageUrl) {
                    for (var c = a(".gv_panel>img:first")[0], c = a(c).attr("src"), d = c.split("?"), g = b.opts.lookBigImageParams, d = d[1].split("&"), c = "", l = 0; l < d.length; l++) l != d.length - 1 ? (c += d[l], c += ",") : c += d[l];
                    null != g && 0 < g.length && (c = c + "&" + g);
                    window.open(b.opts.lookBigImageUrl + "?imageParams=" + c)
                }
            }), gallaryClickBinded = !0)
        },
        unbindActions: function() {
            var a = this.dom;
            a.gv_showOverlay.unbind("click.galleryview");
            a.gv_panelNavNext.unbind("click.galleryview");
            a.gv_panelNavPrev.unbind("click.galleryview");
            a.gv_navWrap.undelegate("div", "click.galleryview");
            a.gv_filmstripWrap.undelegate(".gv_frame", "click.galleryview")
        },
        showPanelNav: function() {
            var a = this.dom;
            a.gv_panelNavNext.show();
            a.gv_panelNavPrev.show()
        },
        hidePanelNav: function() {
            var a = this.dom;
            a.gv_panelNavNext.hide();
            a.gv_panelNavPrev.hide()
        },
        init: function(b, c) {
            var d = this,
            k = this.dom = {};
            gallaryClickBinded = !1;
            this.opts = a.extend({},
            a.fn.galleryView.defaults, b);
            this.el = c;
            this.$el = a(c);
            this.id = c.id;
            this.iterator = this.frameIterator = this.opts.start_frame - 1;
            this.isMouseDown = this.scrolling = this.playing = this.overlayVisible = !1;
            this.mouse = {
                x: 0,
                y: 0
            };
            this.filmstripOrientation = "top" === this.opts.filmstrip_position || "bottom" === this.opts.filmstrip_position ? "horizontal": "vertical";
            a(document).bind("mousemove.galleryview",
            function(a) {
                d.mouse = {
                    x: a.pageX,
                    y: a.pageY
                }
            });
            a.each(this.elems,
            function(a, b) {
                b = b.split(".");
                "" === b[0] && (b[0] = "div");
                k[b[1]] = d.createElem({
                    "class": b[1]
                },
                b[0])
            });
            k.gv_imageStore.appendTo(a("body"));
            k.gv_galleryWrap.delegate("img", "mousedown.galleryview",
            function(a) {
                a.preventDefault && a.preventDefault()
            });
            k.gv_panel.addClass("gv_panel-loading");
            k.gv_frame.addClass("gv_frame-loading");
            k.gv_galleryWrap.hide().append(k.gv_gallery);
            this.opts.show_panels && (k.gv_gallery.append(k.gv_panelWrap), this.opts.show_panel_nav && k.gv_panelWrap.append(k.gv_panelNavNext, k.gv_panelNavPrev), this.opts.show_infobar && k.gv_panelWrap.append(k.gv_infobar));
            this.opts.show_filmstrip && (k.gv_gallery.append(k.gv_filmstripWrap.append(k.gv_filmstrip)), this.opts.show_filmstrip_nav && k.gv_gallery.append(k.gv_navWrap.append(k.gv_navPrev, this.opts.enable_slideshow ? k.gv_navPlay: a("<span></span>"), k.gv_navNext)));
            this.opts.enable_overlays && k.gv_panelWrap.append(k.gv_overlay, k.gv_showOverlay);
            this.opts.show_captions && k.gv_frame.append(k.gv_caption).appendTo(k.gv_gallery);
            this.$el.replaceWith(k.gv_galleryWrap);
            this.opts.pan_images && this.enablePanning();
            this.storeImages();
            this.buildGallery();
            this.initImages();
            this.bindActions();
            k.gv_frame.remove();
            k.gv_galleryWrap.show();
            this.opts.autoplay && this.startSlideshow(!0);
            this.updateOverlay(this.iterator);
            this.updateFilmstrip(this.frameIterator)
        }
    };
    a.fn.galleryView = function(a) {
        if (this.length) return this.each(function() {
            Object.create(c).init(a, this)
        })
    };
    a.fn.galleryView.defaults = {
        transition_speed: 1E3,
        transition_interval: 5E3,
        easing: "swing",
        show_panels: !0,
        show_panel_nav: !0,
        enable_overlays: !1,
        panel_width: 800,
        panel_height: 400,
        panel_animation: "fade",
        panel_scale: "crop",
        overlay_position: "bottom",
        pan_images: !1,
        pan_style: "drag",
        pan_smoothness: 15,
        start_frame: 1,
        show_filmstrip: !0,
        show_filmstrip_nav: !0,
        enable_slideshow: !0,
        autoplay: !1,
        show_captions: !1,
        filmstrip_size: 3,
        filmstrip_style: "scroll",
        filmstrip_position: "bottom",
        frame_width: 80,
        frame_height: 40,
        frame_opacity: 0.4,
        frame_scale: "crop",
        frame_gap: 5,
        lookBigImageUrl: null,
        lookBigImageParams: null,
        show_infobar: !0,
        infobar_opacity: 1
    }
})(jQuery);
var DWZ = {
    keyCode: {
        ENTER: 13,
        ESC: 27,
        END: 35,
        HOME: 36,
        SHIFT: 16,
        TAB: 9,
        LEFT: 37,
        RIGHT: 39,
        UP: 38,
        DOWN: 40,
        DELETE: 46,
        BACKSPACE: 8
    },
    eventType: {
        pageClear: "pageClear",
        resizeGrid: "resizeGrid"
    },
    isOverAxis: function(a, d, b) {
        return a > d && a < d + b
    },
    isOver: function(a, d, b, c, e, g) {
        return this.isOverAxis(a, b, e) && this.isOverAxis(d, c, g)
    },
    pageInfo: {
        pageNum: "pageNum",
        numPerPage: "numPerPage",
        orderField: "orderField",
        orderDirection: "orderDirection"
    },
    statusCode: {
        ok: 200,
        error: 300,
        timeout: 301
    },
    ui: {
        sbar: !0
    },
    frag: {},
    _msg: {},
    _set: {
        loginUrl: "",
        loginTitle: "",
        debug: !1
    },
    msg: function(a, d) {
        var b;
        b = d || [];
        for (var c = this._msg[a] || "", e = 0; e < b.length; e++) c = c.replace(RegExp("\\{" + e + "\\}", "g"), b[e]);
        return c
    },
    debug: function(a) {
        this._set.debug && ("undefined" != typeof console ? console.log(a) : alert(a))
    },
    loadLogin: function() {
        $.pdialog && DWZ._set.loginTitle ? $.pdialog.open(DWZ._set.loginUrl, "login", DWZ._set.loginTitle, {
            mask: !0,
            width: 520,
            height: 260
        }) : window.location = DWZ._set.loginUrl
    },
    obj2str: function(a) {
        var d = [];
        if ("string" == typeof a) return '"' + a.replace(/([\'\"\\])/g, "\\$1").replace(/(\n)/g, "\\n").replace(/(\r)/g, "\\r").replace(/(\t)/g, "\\t") + '"';
        if ("object" == typeof a) {
            if (a.sort) {
                for (b = 0; b < a.length; b++) d.push(DWZ.obj2str(a[b]));
                d = "[" + d.join() + "]"
            } else {
                for (var b in a) d.push(b + ":" + DWZ.obj2str(a[b]));
                document.all && !/^\n?function\s*toString\(\)\s*\{\n?\s*\[native code\]\n?\s*\}\n?\s*$/.test(a.toString) && d.push("toString:" + a.toString.toString());
                d = "{" + d.join() + "}"
            }
            return d
        }
        return a.toString()
    },
    jsonEval: function(a) {
        try {
            return "string" == $.type(a) ? eval("(" + a + ")") : a
        } catch(d) {
            return {}
        }
    },
    ajaxError: function(a, d, b) {
        alertMsg ? alertMsg.error("<div>Http status: " + a.status + " " + a.statusText + "</div><div>ajaxOptions: " + d + "</div><div>thrownError: " + b + "</div><div>" + a.responseText + "</div>") : alert("Http status: " + a.status + " " + a.statusText + "\najaxOptions: " + d + "\nthrownError:" + b + "\n" + a.responseText)
    },
    ajaxDone: function(a) {
        a.statusCode == DWZ.statusCode.error ? a.message && alertMsg && alertMsg.error(a.message) : a.statusCode == DWZ.statusCode.timeout ? alertMsg ? alertMsg.error(a.message || DWZ.msg("sessionTimout"), {
            okCall: DWZ.loadLogin
        }) : DWZ.loadLogin() : a.warnMessage && alertMsg ? alertMsg.error(a.warnMessage) : a.infoMessage && alertMsg ? alertMsg.info(a.infoMessage) : a.message && alertMsg && alertMsg.correct(a.message)
    },
    init: function(a, d) {
        var b = $.extend({
            loginUrl: "login.html",
            loginTitle: null,
            callback: null,
            debug: !1,
            statusCode: {}
        },
        d);
        this._set.loginUrl = b.loginUrl;
        this._set.loginTitle = b.loginTitle;
        this._set.debug = b.debug;
        $.extend(DWZ.statusCode, b.statusCode);
        $.extend(DWZ.pageInfo, b.pageInfo);
        jQuery.ajax({
            type: "GET",
            url: a,
            dataType: "xml",
            timeout: 5E4,
            cache: !1,
            error: function(b) {
                alert("Error loading XML document: " + a + "\nHttp status: " + b.status + " " + b.statusText)
            },
            success: function(a) {
                $(a).find("_PAGE_").each(function() {
                    var a = $(this).attr("id");
                    a && (DWZ.frag[a] = $(this).text())
                });
                $(a).find("_MSG_").each(function() {
                    var a = $(this).attr("id");
                    a && (DWZ._msg[a] = $(this).text())
                });
                jQuery.isFunction(b.callback) && b.callback()
            }
        });
        var c = $(document);
        c.isBind(DWZ.eventType.pageClear) || c.bind(DWZ.eventType.pageClear,
        function(a) {
            a = a.target;
            $.fn.xheditor && $("textarea.editor", a).xheditor(!1)
        })
    }
}; (function(a) {
    a.setRegional = function(d, b) {
        a.regional || (a.regional = {});
        a.regional[d] = b
    };
    a.fn.extend({
        ajaxUrl: function(d) {
            var b = a(this);
            b.trigger(DWZ.eventType.pageClear);
            a.ajax({
                type: d.type || "GET",
                url: d.url,
                data: d.data,
                cache: !1,
                success: function(c) {
                    var e = DWZ.jsonEval(c);
                    e.statusCode == DWZ.statusCode.error ? e.message && alertMsg.error(e.message) : (b.html(c).initUI(), a.isFunction(d.callback) && d.callback(c));
                    e.statusCode == DWZ.statusCode.timeout && (a.pdialog && a.pdialog.checkTimeout(), navTab && navTab.checkTimeout(), alertMsg.error(e.message || DWZ.msg("sessionTimout"), {
                        okCall: function() {
                            DWZ.loadLogin()
                        }
                    }))
                },
                error: DWZ.ajaxError,
                statusCode: {
                    503 : function(a, b, d) {
                        alert(DWZ.msg("statusCode_503") || d)
                    }
                }
            })
        },
        loadUrl: function(d, b, c) {
            a(this).ajaxUrl({
                url: d,
                data: b,
                callback: c
            })
        },
        initUI: function() {
            return this.each(function() {
                a.isFunction(initUI) && initUI(this)
            })
        },
        layoutH: function(d) {
            return this.each(function() {
                var b = a(this);
                d || (d = b.parents("div.layoutBox:first"));
                var c = d.height(),
                e = parseInt(b.attr("layoutH")),
                c = 50 < c - e ? c - e: 50;
                b.isTag("table") ? b.removeAttr("layoutH").wrap('<div layoutH="' + e + '" style="overflow:auto;height:' + c + 'px"></div>') : b.height(c).css("overflow", "auto")
            })
        },
        hoverClass: function(d, b) {
            var c = d || "hover";
            return this.each(function() {
                var d = a(this),
                g;
                d.hover(function() {
                    g && clearTimeout(g);
                    d.addClass(c)
                },
                function() {
                    g = setTimeout(function() {
                        d.removeClass(c)
                    },
                    b || 10)
                })
            })
        },
        focusClass: function(d) {
            var b = d || "textInputFocus";
            return this.each(function() {
                a(this).focus(function() {
                    a(this).addClass(b)
                }).blur(function() {
                    a(this).removeClass(b)
                })
            })
        },
        inputAlert: function() {
            return this.each(function() {
                function d() {
                    return c.parent().find("label.alt")
                }
                function b(a) {
                    var b = c.position();
                    return {
                        width: c.width(),
                        top: b.top + "px",
                        left: b.left + "px",
                        opacity: a || 1
                    }
                }
                var c = a(this);
                if (1 > d().size()) {
                    c.attr("id") || c.attr("id", c.attr("name") + "_" + Math.round(1E4 * Math.random()));
                    var e = a('<label class="alt" for="' + c.attr("id") + '">' + c.attr("alt") + "</label>").appendTo(c.parent());
                    e.css(b(1));
                    c.val() && e.hide()
                }
                c.focus(function() {
                    d().css(b(0.3))
                }).blur(function() {
                    a(this).val() || d().show().css("opacity", 1)
                }).keydown(function() {
                    d().hide()
                })
            })
        },
        isTag: function(d) {
            return d ? a(this)[0].tagName.toLowerCase() == d ? !0 : !1 : !1
        },
        isBind: function(d) {
            var b = a(this).data("events");
            return b && d && b[d]
        },
        log: function(a) {
            return this.each(function() {
                console && console.log("%s: %o", a, this)
            })
        }
    });
    a.extend(String.prototype, {
        isPositiveInteger: function() {
            return RegExp(/^[1-9]\d*$/).test(this)
        },
        isInteger: function() {
            return RegExp(/^\d+$/).test(this)
        },
        isNumber: function(a, b) {
            return RegExp(/^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/).test(this)
        },
        trim: function() {
            return this.replace(/(^\s*)|(\s*$)|\r|\n/g, "")
        },
        startsWith: function(a) {
            return 0 === this.indexOf(a)
        },
        endsWith: function(a) {
            var b = this.length - a.length;
            return 0 <= b && this.lastIndexOf(a) === b
        },
        replaceSuffix: function(a) {
            return this.replace(/\[[0-9]+\]/, "[" + a + "]").replace("#index#", a)
        },
        trans: function() {
            return this.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"')
        },
        encodeTXT: function() {
            return this.replaceAll("&", "&amp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll(" ", "&nbsp;")
        },
        replaceAll: function(a, b) {
            return this.replace(RegExp(a, "gm"), b)
        },
        replaceTm: function(a) {
            return a ? this.replace(RegExp("({[A-Za-z_]+[A-Za-z0-9_]*})", "g"),
            function(b) {
                return a[b.replace(/[{}]+/g, "")]
            }) : this
        },
        replaceTmById: function(d) {
            var b = d || a(document);
            return this.replace(RegExp("({[A-Za-z_]+[A-Za-z0-9_]*})", "g"),
            function(a) {
                var d = b.find("#" + a.replace(/[{}]+/g, ""));
                return d.val() ? d.val() : a
            })
        },
        isFinishedTm: function() {
            return ! /{[A-Za-z_]+[A-Za-z0-9_]*}/.test(this)
        },
        skipChar: function(a) {
            return this && 0 !== this.length ? this.charAt(0) === a ? this.substring(1).skipChar(a) : this: ""
        },
        isValidPwd: function() {
            return RegExp(/^([_]|[a-zA-Z0-9]){6,32}$/).test(this)
        },
        isValidMail: function() {
            return RegExp(/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/).test(this.trim())
        },
        isSpaces: function() {
            for (var a = 0; a < this.length; a += 1) {
                var b = this.charAt(a);
                if (" " != b && "\n" != b && "\t" != b && "\r" != b) return ! 1
            }
            return ! 0
        },
        isPhone: function() {
            return RegExp(/(^([0-9]{3,4}[-])?\d{3,8}(-\d{1,6})?$)|(^\([0-9]{3,4}\)\d{3,8}(\(\d{1,6}\))?$)|(^\d{3,8}$)/).test(this)
        },
        isUrl: function() {
            return RegExp(/^[a-zA-z]+:\/\/([a-zA-Z0-9\-\.]+)([-\w .\/?%&=:]*)$/).test(this)
        },
        isExternalUrl: function() {
            return this.isUrl() && -1 == this.indexOf("://" + document.domain)
        }
    })
})(jQuery);
function Map() {
    this.elements = [];
    this.size = function() {
        return this.elements.length
    };
    this.isEmpty = function() {
        return 1 > this.elements.length
    };
    this.clear = function() {
        this.elements = []
    };
    this.put = function(a, d) {
        this.remove(a);
        this.elements.push({
            key: a,
            value: d
        })
    };
    this.remove = function(a) {
        try {
            for (i = 0; i < this.elements.length; i++) if (this.elements[i].key == a) return this.elements.splice(i, 1),
            !0
        } catch(d) {}
        return ! 1
    };
    this.get = function(a) {
        try {
            for (i = 0; i < this.elements.length; i++) if (this.elements[i].key == a) return this.elements[i].value
        } catch(d) {
            return null
        }
    };
    this.element = function(a) {
        return 0 > a || a >= this.elements.length ? null: this.elements[a]
    };
    this.containsKey = function(a) {
        try {
            for (i = 0; i < this.elements.length; i++) if (this.elements[i].key == a) return ! 0
        } catch(d) {}
        return ! 1
    };
    this.values = function() {
        var a = [];
        for (i = 0; i < this.elements.length; i++) a.push(this.elements[i].value);
        return a
    };
    this.keys = function() {
        var a = [];
        for (i = 0; i < this.elements.length; i++) a.push(this.elements[i].key);
        return a
    }
} (function() {
    function a(a) {
        return (0 > a || 9 < a ? "": "0") + a
    }
    function d(a, b, c, d) {
        for (; d >= c; d--) {
            var e = a.substring(b, b + d);
            if (e.length < c) break;
            if (RegExp(/^\d+$/).test(e)) return e
        }
        return null
    }
    function b(a, b) {
        a += "";
        b += "";
        for (var c = 0,
        l = 0,
        n = "",
        p = "",
        s, r, q = new Date(1900, 0, 1), t = q.getYear(), u = q.getMonth() + 1, w = 1, v = q.getHours(), A = q.getMinutes(), q = q.getSeconds(), E = ""; l < b.length;) {
            n = b.charAt(l);
            for (p = ""; b.charAt(l) == n && l < b.length;) p += b.charAt(l++);
            if ("yyyy" == p || "yy" == p || "y" == p) {
                "yyyy" == p && (r = s = 4);
                "yy" == p && (r = s = 2);
                "y" == p && (s = 2, r = 4);
                t = d(a, c, s, r);
                if (null == t) return 0;
                c += t.length;
                2 == t.length && (t = 70 < t ? 1900 + (t - 0) : 2E3 + (t - 0))
            } else if ("MMM" == p || "NNN" == p) {
                for (n = u = 0; n < e.length; n++) {
                    var z = e[n];
                    if (a.substring(c, c + z.length).toLowerCase() == z.toLowerCase() && ("MMM" == p || "NNN" == p && 11 < n)) {
                        u = n + 1;
                        12 < u && (u -= 12);
                        c += z.length;
                        break
                    }
                }
                if (1 > u || 12 < u) return 0
            } else if ("EE" == p || "E" == p) for (n = 0; n < g.length; n++) {
                if (p = g[n], a.substring(c, c + p.length).toLowerCase() == p.toLowerCase()) {
                    c += p.length;
                    break
                }
            } else if ("MM" == p || "M" == p) {
                u = d(a, c, p.length, 2);
                if (null == u || 1 > u || 12 < u) return 0;
                c += u.length
            } else if ("dd" == p || "d" == p) {
                w = d(a, c, p.length, 2);
                if (null == w || 1 > w || 31 < w) return 0;
                c += w.length
            } else if ("hh" == p || "h" == p) {
                v = d(a, c, p.length, 2);
                if (null == v || 1 > v || 12 < v) return 0;
                c += v.length
            } else if ("HH" == p || "H" == p) {
                v = d(a, c, p.length, 2);
                if (null == v || 0 > v || 23 < v) return 0;
                c += v.length
            } else if ("KK" == p || "K" == p) {
                v = d(a, c, p.length, 2);
                if (null == v || 0 > v || 11 < v) return 0;
                c += v.length
            } else if ("kk" == p || "k" == p) {
                v = d(a, c, p.length, 2);
                if (null == v || 1 > v || 24 < v) return 0;
                c += v.length;
                v--
            } else if ("mm" == p || "m" == p) {
                A = d(a, c, p.length, 2);
                if (null == A || 0 > A || 59 < A) return 0;
                c += A.length
            } else if ("ss" == p || "s" == p) {
                q = d(a, c, p.length, 2);
                if (null == q || 0 > q || 59 < q) return 0;
                c += q.length
            } else if ("a" == p) {
                if ("am" == a.substring(c, c + 2).toLowerCase()) E = "AM";
                else if ("pm" == a.substring(c, c + 2).toLowerCase()) E = "PM";
                else return 0;
                c += 2
            } else {
                if (a.substring(c, c + p.length) != p) return 0;
                c += p.length
            }
        }
        if (c != a.length) return 0;
        if (2 == u) if (0 == t % 4 && 0 != t % 100 || 0 == t % 400) {
            if (29 < w) return 0
        } else if (28 < w) return 0;
        if ((4 == u || 6 == u || 9 == u || 11 == u) && 30 < w) return 0;
        12 > v && "PM" == E ? v = v - 0 + 12 : 11 < v && "AM" == E && (v -= 12);
        return new Date(t, u - 1, w, v, A, q)
    }
    function c(a) {
        return a.replace(RegExp("({[A-Za-z0-9_+-]*})", "g"),
        function(a) {
            return eval("(" + a.replace(/[{}]+/g, "") + ")")
        })
    }
    var e = "January February March April May June July August September October November December Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),
    g = "Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sun Mon Tue Wed Thu Fri Sat".split(" ");
    Date.prototype.formatDate = function(b) {
        b += "";
        var c = "",
        d = 0,
        l = "",
        n = "",
        l = this.getYear() + "",
        n = this.getMonth() + 1,
        p = this.getDate(),
        s = this.getDay(),
        r = this.getHours(),
        q = this.getMinutes(),
        t = this.getSeconds(),
        u = {};
        4 > l.length && (l = "" + (l - 0 + 1900));
        u.y = "" + l;
        u.yyyy = l;
        u.yy = l.substring(2, 4);
        u.M = n;
        u.MM = a(n);
        u.MMM = e[n - 1];
        u.NNN = e[n + 11];
        u.d = p;
        u.dd = a(p);
        u.E = g[s + 7];
        u.EE = g[s];
        u.H = r;
        u.HH = a(r);
        u.h = 0 == r ? 12 : 12 < r ? r - 12 : r;
        u.hh = a(u.h);
        u.K = 11 < r ? r - 12 : r;
        u.k = r + 1;
        u.KK = a(u.K);
        u.kk = a(u.k);
        u.a = 11 < r ? "PM": "AM";
        u.m = q;
        u.mm = a(q);
        u.s = t;
        for (u.ss = a(t); d < b.length;) {
            l = b.charAt(d);
            for (n = ""; b.charAt(d) == l && d < b.length;) n += b.charAt(d++);
            c = null != u[n] ? c + u[n] : c + n
        }
        return c
    };
    String.prototype.parseDate = function(a) {
        this.length < a.length && (a = a.slice(0, this.length));
        return b(this, a)
    };
    Date.prototype.formatDateTm = function(a) {
        var b = this.getFullYear(),
        d = this.getMonth() + 1,
        e = this.getDate(),
        e = a.replaceAll("%y", b).replaceAll("%M", d).replaceAll("%d", e),
        e = c(e);
        a = 1900;
        b = 0;
        d = 1;
        e = e.split("-");
        0 < e.length && (a = e[0]);
        1 < e.length && (b = e[1] - 1);
        2 < e.length && (d = e[2]);
        return (new Date(a, b, d)).formatDate("yyyy-MM-dd")
    }
})(); (function(a) {
    a.validator && (a.validator.addMethod("alphanumeric",
    function(a, b) {
        return this.optional(b) || /^\w+$/i.test(a)
    },
    "Letters, numbers or underscores only please"), a.validator.addMethod("lettersonly",
    function(a, b) {
        return this.optional(b) || /^[a-z]+$/i.test(a)
    },
    "Letters only please"), a.validator.addMethod("phone",
    function(a, b) {
        return this.optional(b) || /^[0-9 \(\)]{7,30}$/.test(a)
    },
    "Please specify a valid phone number"), a.validator.addMethod("mobilePhone",
    function(a, b) {
        return this.optional(b) || /^(13[0-9]{9})|(15[012356789][0-9]{8})|(14[57][0-9]{8})|(18[0256789][0-9]{8})$/.test(a)
    },
    "Please specify a valid mobilePhone number"), a.validator.addMethod("telePhone",
    function(a, b) {
        return this.optional(b) || /(^[0-9]{3,4}-[0-9]{3,8}$)|(^[0-9]{3,8}$)|(^([0-9]{3,4})[0-9]{3,8}$)|(^0{0,1}13[0-9]{9}$)/.test(a)
    },
    "Please specify a valid telePhone number"), a.validator.addMethod("postcode",
    function(a, b) {
        return this.optional(b) || /^[0-9 A-Za-z]{5,20}$/.test(a)
    },
    "Please specify a valid postcode"), a.validator.addMethod("date",
    function(d, b) {
        d = d.replace(/\s+/g, "");
        if (String.prototype.parseDate) {
            var c = a(b),
            e = c.attr("dateFmt") || "yyyy-MM-dd";
            return ! c.val() || c.val().parseDate(e)
        }
        return this.optional(b) || d.match(/^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/)
    },
    "Please enter a valid date."), a.validator.addMethod("dateAfter",
    function(d, b, c) {
        if (c && a(c)) {
            if (String.prototype.parseDate) {
                d = a(b);
                c = a(c);
                b = d.attr("dateFmt") || "yyyy-MM-dd";
                var e = c.attr("dateFmt") || "yyyy-MM-dd";
                return "" == c.val().replace(/\s+/g, "") ? !1 : d.val().replace(/\s+/g, "").parseDate(b).getTime() >= c.val().replace(/\s+/g, "").parseDate(e).getTime()
            }
            return ! 0
        }
        return ! 1
    },
    "Please enter a bigger date."), a.validator.addMethod("dateBefore",
    function(d, b, c) {
        if (c && a(c)) {
            if (String.prototype.parseDate) {
                d = a(b);
                c = a(c);
                b = d.attr("dateFmt") || "yyyy-MM-dd";
                var e = c.attr("dateFmt") || "yyyy-MM-dd";
                return "" == c.val().replace(/\s+/g, "") ? !1 : d.val().replace(/\s+/g, "").parseDate(b).getTime() <= c.val().replace(/\s+/g, "").parseDate(e).getTime()
            }
            return ! 0
        }
        return ! 1
    },
    "Please enter a smaller date."), a.validator.addMethod("customvalid",
    function(a, b, c) {
        try {
            return eval("(" + c + ")")
        } catch(e) {
            return ! 1
        }
    },
    "Please fix this field."), a.validator.addClassRules({
        date: {
            date: !0
        },
        alphanumeric: {
            alphanumeric: !0
        },
        lettersonly: {
            lettersonly: !0
        },
        phone: {
            phone: !0
        },
        postcode: {
            postcode: !0
        }
    }), a.validator.setDefaults({
        errorElement: "span"
    }), a.validator.autoCreateRanges = !0)
})(jQuery); (function(a) {
    a.fn.cssv = function(d) {
        d = a(this).css(d);
        return 1 * d.substring(0, d.indexOf("px"))
    };
    a.fn.jBar = function(d) {
        var b = a.extend({
            container: "#container",
            collapse: ".collapse",
            toggleBut: ".toggleCollapse div",
            sideBar: "#sidebar",
            sideBar2: "#sidebar_s",
            splitBar: "#splitBar",
            splitBar2: "#splitBarProxy"
        },
        d);
        return this.each(function() {
            var c = a(b.sideBar2, this),
            e = a(b.sideBar, this);
            a(b.toggleBut, e).click(function() {
                DWZ.ui.sbar = !1;
                a(b.splitBar).hide();
                var d = c.cssv("left") + c.outerWidth() - e.outerWidth(),
                f = a(b.container).cssv("left") - (e.outerWidth() - c.outerWidth()),
                k = e.outerWidth() - c.outerWidth() + a(b.container).outerWidth();
                a(b.container).animate({
                    left: f,
                    width: k
                },
                50,
                function() {
                    e.animate({
                        left: d
                    },
                    500,
                    function() {
                        e.hide();
                        c.show().css("left", -50).animate({
                            left: 5
                        },
                        200);
                        a(window).trigger(DWZ.eventType.resizeGrid)
                    })
                });
                a(b.collapse, c).click(function() {
                    function f() {
                        a(b.container).unbind("click", f);
                        DWZ.ui.sbar || e.animate({
                            left: d
                        },
                        500,
                        function() {
                            e.hide()
                        })
                    }
                    var k = c.cssv("left") + c.outerWidth();
                    e.is(":hidden") ? (a(b.toggleBut, e).hide(), e.show().animate({
                        left: k
                    },
                    500), a(b.container).click(f)) : e.animate({
                        left: d
                    },
                    500,
                    function() {
                        e.hide()
                    });
                    return ! 1
                });
                return ! 1
            });
            a(b.toggleBut, c).click(function() {
                DWZ.ui.sbar = !0;
                c.animate({
                    left: -25
                },
                200,
                function() {
                    e.show()
                });
                e.animate({
                    left: 5
                },
                800,
                function() {
                    a(b.splitBar).show();
                    a(b.toggleBut, e).show();
                    var d = 5 + e.outerWidth() + a(b.splitBar).outerWidth(),
                    f = a(b.container).outerWidth() - (d - a(b.container).cssv("left"));
                    a(b.container).css({
                        left: d,
                        width: f
                    });
                    a(b.collapse, c).unbind("click");
                    a(window).trigger(DWZ.eventType.resizeGrid)
                });
                return ! 1
            });
            a(b.splitBar).mousedown(function(c) {
                a(b.splitBar2).each(function() {
                    var f = a(this);
                    setTimeout(function() {
                        f.show()
                    },
                    100);
                    f.css({
                        visibility: "visible",
                        left: a(b.splitBar).css("left")
                    });
                    f.jDrag(a.extend(d, {
                        obj: a("#sidebar"),
                        move: "horizontal",
                        event: c,
                        stop: function() {
                            a(this).css("visibility", "hidden");
                            var c = a(this).cssv("left") - a(b.splitBar).cssv("left"),
                            d = e.outerWidth() + c,
                            f = a(b.container).cssv("left") + c,
                            c = a(b.container).outerWidth() - c;
                            e.css("width", d);
                            a(b.splitBar).css("left", a(this).css("left"));
                            a(b.container).css({
                                left: f,
                                width: c
                            })
                        }
                    }));
                    return ! 1
                })
            })
        })
    }
})(jQuery); (function(a) {
    a.fn.jDrag = function(d) {
        return "string" == typeof d && "destroy" == d ? this.each(function() {
            a(this).unbind("mousedown", a.rwdrag.start);
            a.data(this, "pp-rwdrag", null)
        }) : this.each(function() {
            var b = a(this);
            a.data(a.rwdrag, "pp-rwdrag", {
                options: a.extend({
                    el: b,
                    obj: b
                },
                d)
            });
            d.event ? a.rwdrag.start(d.event) : a(d.selector, obj).bind("mousedown", a.rwdrag.start)
        })
    };
    a.rwdrag = {
        start: function(d) {
            document.onselectstart = function(a) {
                return ! 1
            };
            var b = a.data(this, "pp-rwdrag"),
            c = b.options.el[0];
            a.data(c, "pp-rwdrag", {
                options: b.options
            });
            a.rwdrag.current || (a.rwdrag.current = {
                el: c,
                oleft: parseInt(c.style.left) || 0,
                otop: parseInt(c.style.top) || 0,
                ox: d.pageX || d.screenX,
                oy: d.pageY || d.screenY
            },
            a(document).bind("mouseup", a.rwdrag.stop).bind("mousemove", a.rwdrag.drag))
        },
        drag: function(d) {
            d || (d = window.event);
            var b = a.rwdrag.current,
            c = a.data(b.el, "pp-rwdrag"),
            e = b.oleft + (d.pageX || d.clientX) - b.ox,
            g = b.otop + (d.pageY || d.clientY) - b.oy;
            1 > g && (g = 0);
            if ("horizontal" == c.options.move) c.options.minW && e >= a(c.options.obj).cssv("left") + c.options.minW && c.options.maxW && e <= a(c.options.obj).cssv("left") + c.options.maxW ? b.el.style.left = e + "px": c.options.scop && (c.options.relObj ? e - parseInt(c.options.relObj.style.left) > c.options.cellMinW && (b.el.style.left = e + "px") : b.el.style.left = e + "px");
            else if ("vertical" == c.options.move) b.el.style.top = g + "px";
            else {
                var f = c.options.selector ? a(c.options.selector, c.options.obj) : a(c.options.obj);
                e >= 2 * -f.outerWidth() / 3 && 0 <= g && e + f.outerWidth() / 3 < a(window).width() && g + f.outerHeight() < a(window).height() && (b.el.style.left = e + "px", b.el.style.top = g + "px")
            }
            c.options.drag && c.options.drag.apply(b.el, [b.el]);
            return a.rwdrag.preventEvent(d)
        },
        stop: function(d) {
            var b = a.rwdrag.current,
            c = a.data(b.el, "pp-rwdrag");
            a(document).unbind("mousemove", a.rwdrag.drag).unbind("mouseup", a.rwdrag.stop);
            c.options.stop && c.options.stop.apply(b.el, [b.el]);
            a.rwdrag.current = null;
            document.onselectstart = function(a) {
                return ! 0
            };
            return a.rwdrag.preventEvent(d)
        },
        preventEvent: function(a) {
            a.stopPropagation && a.stopPropagation();
            a.preventDefault && a.preventDefault();
            return ! 1
        }
    }
})(jQuery); (function(a) {
    a.extend(a.fn, {
        jTree: function(d) {
            var b = a.extend({
                checkFn: null,
                selected: "selected",
                exp: "expandable",
                coll: "collapsable",
                firstExp: "first_expandable",
                firstColl: "first_collapsable",
                lastExp: "last_expandable",
                lastColl: "last_collapsable",
                folderExp: "folder_expandable",
                folderColl: "folder_collapsable",
                endExp: "end_expandable",
                endColl: "end_collapsable",
                file: "file",
                ck: "checked",
                unck: "unchecked"
            },
            d);
            return this.each(function() {
                var c = a(this),
                d = c.children().length;
                a(">li", c).each(function() {
                    var g = a(this),
                    f = g.prev()[0] ? !1 : !0,
                    k = g.next()[0] ? !1 : !0;
                    g.genTree({
                        icon: c.hasClass("treeFolder"),
                        ckbox: c.hasClass("treeCheck"),
                        options: b,
                        level: 0,
                        exp: 1 < d ? f ? b.firstExp: k ? b.lastExp: b.exp: b.endExp,
                        coll: 1 < d ? f ? b.firstColl: k ? b.lastColl: b.coll: b.endColl,
                        showSub: g.hasClass("expand") ? !0 : g.hasClass("collapse") ? !1 : !c.hasClass("collapse") && (c.hasClass("expand") || (1 < d ? f ? !0 : !1 : !0)),
                        fillSub: g.hasClass("fillsub") ? !0 : c.hasClass("fillsub") ? !0 : !1,
                        toggle: c.hasClass("toggle"),
                        isLast: 1 < d ? k ? !0 : !1 : !0
                    })
                });
                setTimeout(function() {
                    if (c.hasClass("treeCheck")) {
                        var d = eval(c.attr("oncheck"));
                        d && a.isFunction(d) && a("div.ckbox", c).each(function() {
                            var b = a(this);
                            b.click(function() {
                                var c = a(b).hasClass("checked"),
                                e = [];
                                if (c) {
                                    var l = a(b).parent().parent(),
                                    l = a("input", l);
                                    1 < l.size() ? a(l).each(function() {
                                        e[e.length] = {
                                            name: a(this).attr("name"),
                                            value: a(this).val(),
                                            text: a(this).attr("text")
                                        }
                                    }) : e = {
                                        name: l.attr("name"),
                                        value: l.val(),
                                        text: l.attr("text")
                                    }
                                }
                                d({
                                    checked: c,
                                    items: e
                                })
                            })
                        })
                    }
                    a("a", c).click(function(d) {
                        a("div." + b.selected, c).removeClass(b.selected);
                        var e = a(this).parent().addClass(b.selected),
                        g = a(this).parents("li:first"),
                        l = g.attr("target");
                        l && (0 == a("#" + l, c).size() && c.prepend('<input id="' + l + '" type="hidden" />'), a("#" + l, c).val(g.attr("rel")));
                        a(".ckbox", e).trigger("click");
                        d.stopPropagation();
                        a(document).trigger("click");
                        if (!a(this).attr("target")) return ! 1
                    })
                },
                1)
            })
        },
        subTree: function(d, b) {
            return this.each(function() {
                a(">li", this).each(function() {
                    var c = a(this),
                    e = c.next()[0] ? !1 : !0;
                    c.genTree({
                        icon: d.icon,
                        ckbox: d.ckbox,
                        exp: e ? d.options.lastExp: d.options.exp,
                        coll: e ? d.options.lastColl: d.options.coll,
                        options: d.options,
                        level: b,
                        space: e ? null: d.space,
                        showSub: d.showSub,
                        isLast: e
                    })
                })
            })
        },
        genTree: function(d) {
            function b(b, c) {
                if (0 < b) {
                    var d = c.parent().parent(),
                    k = "<div class='" + (d.next()[0] ? "line": "indent") + "'></div>";
                    if (1 < b) {
                        for (var d = a(">div>div", d).filter(":first"), h = ""; 1 < b;) h = h + "<div class='" + d.attr("class") + "'></div>",
                        d = d.next(),
                        b--;
                        k = h + k
                    }
                    a(">div", c).prepend(k)
                }
            }
            var c = a.extend({
                icon: d.icon,
                ckbox: d.ckbox,
                exp: "",
                coll: "",
                showSub: !1,
                level: 0,
                options: null,
                isLast: !1
            },
            d);
            return this.each(function() {
                var d = a(this),
                g = a(">ul", d),
                f = d.parent().prev(),
                k = "unchecked";
                c.ckbox && (d.hasClass("checked") ? k = "checked": d.hasClass("indeterminate") ? k = "indeterminate": 0 < a(">.checked", f).size() && (k = "checked"));
                0 < g.size() ? (d.children(":first").wrap("<div></div>"), a(">div", d).prepend("<div class='" + (c.showSub ? c.coll: c.exp) + "'></div>" + (c.ckbox ? "<div class='ckbox " + k + "'></div>": "") + (c.icon ? "<div class='" + (c.showSub ? c.options.folderColl: c.options.folderExp) + "'></div>": "")), c.showSub ? g.show() : g.hide(), a(">div>div:first,>div>a", d).click(function() {
                    a(">li:first", g).children(":first").isTag("a") && g.subTree(c, c.level + 1);
                    var b = a(this),
                    f = b.isTag("a"),
                    b = f ? a(">div>div", d).eq(c.level) : b;
                    if (!f || g.is(":hidden")) b.toggleClass(c.exp).toggleClass(c.coll),
                    c.toggle && (a.each(d.parent().find(">li>div>div:first-child[class$='collapsable']").not(b),
                    function(b, c) {
                        var d = a(c).attr("class");
                        a(c).attr("class", d.replace("collapsable", "expandable"))
                    }), a.each(d.parent().find(">li>ul:visible").not(g),
                    function(b, c) {
                        a(c).slideUp("fast")
                    })),
                    c.icon && a(">div>div:last", d).toggleClass(c.options.folderExp).toggleClass(c.options.folderColl);
                    g.is(":hidden") ? g.slideDown("fast") : f ? "": g.slideUp("fast");
                    return ! 1
                }), b(c.level, d), (c.showSub || c.fillSub) && g.subTree(c, c.level + 1)) : (d.children().wrap("<div></div>"), a(">div", d).prepend("<div class='node'></div>" + (c.ckbox ? "<div class='ckbox " + k + "'></div>": "") + (c.icon ? "<div class='file'></div>": "")), b(c.level, d), c.isLast && a(d).addClass("last"));
                c.ckbox && d._check(c);
                d.removeClass("checked");
                d.removeClass("indeterminate");
                a(">div", d).mouseover(function() {
                    a(this).addClass("hover")
                }).mouseout(function() {
                    a(this).removeClass("hover")
                });
                a.browser.msie && a(">div", d).click(function() {
                    a("a", this).trigger("click");
                    return ! 1
                })
            })
        },
        _check: function(d) {
            var b = a(this),
            c = a(">div>.ckbox", b);
            d = b.find("a:first");
            var e = d.attr("tname"),
            g = d.attr("tvalue"),
            f = "text='" + d.text() + "' ";
            e && (f += "name='" + e + "' ");
            g && (f += "value='" + g + "' ");
            if (b.hasClass("checked") || a(">div>a", b).hasClass("indeterminately") && 0 < a("input:checked", b).length) f += "checked='checked' ";
            c.append("<input type='checkbox' style='display:none;' " + f + "/>").click(function() {
                var d = c.hasClass("checked"),
                e = d ? "unchecked": "checked",
                f = d ? "checked": "unchecked";
                c.removeClass(f).removeClass(d ? "": "indeterminate").addClass(e);
                a("input", c).attr("checked", !d);
                a(">ul", b).find("li").each(function() {
                    a("div.ckbox", this).removeClass(f).removeClass(d ? "": "indeterminate").addClass(e).find("input").attr("checked", !d)
                });
                a(b)._checkParent();
                return ! 1
            });
            d.attr("checked") && (c.find("input").attr("checked", !0), c.removeClass("unchecked").addClass("checked"), a(b)._checkParent())
        },
        _checkParent: function() {
            if (!a(this).parent().hasClass("tree")) {
                var d = a(this).parent().parent(),
                b = a(">ul", d),
                c = b.find(">li>a").size() + b.find("div.ckbox").size(),
                e = b.find("div.checked").size(),
                b = e == c ? "checked": 0 != e ? "indeterminate": "unchecked",
                c = e == c ? "indeterminate": 0 != e ? "checked": "indeterminate";
                a(">div>.ckbox", d).removeClass("unchecked").removeClass("checked").removeClass(c).addClass(b);
                c = a(":checkbox:first", d);
                "checked" == b ? c.attr("checked", "checked") : a(">div>a", d).hasClass("indeterminately") && "indeterminate" == b ? c.attr("checked", "checked") : c.removeAttr("checked");
                d._checkParent()
            }
        }
    })
})(jQuery); (function(a) {
    function d(a, b) {
        return function() {
            return a.apply(b, arguments)
        }
    }
    function b(b) {
        if (a.data(this, "dwz-accordion")) {
            var c = a.data(this, "dwz-accordion").options;
            c.running = b ? 0 : --c.running;
            c.running || (c.clearStyle && c.toShow.add(c.toHide).css({
                height: "",
                overflow: ""
            }), a(this).triggerHandler("change.dwz-accordion", [c.data], c.change))
        }
    }
    function c(b) {
        if (b = k.get(b)) {
            var c = a(b).parent(),
            d = c.height() - (a(".accordionHeader", b).size() * a(".accordionHeader", b).first().outerHeight() + a(".accordionHeaderpiano", b).size() * a(".accordionHeaderpiano", b).first().outerHeight()) - 2,
            e = c.children().not(b);
            a.each(e,
            function(b) {
                d -= a(e[b]).outerHeight()
            });
            a(".accordionContent", b).height(d)
        }
    }
    function e(c, e, f, g, k) {
        var r = a.data(this, "dwz-accordion").options;
        r.toShow = c;
        r.toHide = e;
        r.data = f;
        f = d(b, this);
        r.running = 0 == e.size() ? c.size() : e.size();
        if (r.animated) if (!r.alwaysOpen && g) a.dwz.accordion.animations[r.animated]({
            toShow: jQuery([]),
            toHide: e,
            complete: f,
            down: k,
            autoheight: r.autoheight
        });
        else a.dwz.accordion.animations[r.animated]({
            toShow: c,
            toHide: e,
            complete: f,
            down: k,
            autoheight: r.autoheight
        });
        else ! r.alwaysOpen && g ? c.toggle() : (e.hide(), c.show()),
        f(!0)
    }
    function g(b) {
        var c = a.data(this, "dwz-accordion").options;
        if (c.disabled) return ! 1;
        if (!b.target && !c.alwaysOpen) {
            c.active.find("h2").toggleClass(c.selectedClass);
            b = c.active.next();
            var d = {
                instance: this,
                options: c,
                newHeader: jQuery([]),
                oldHeader: c.active,
                newContent: jQuery([]),
                oldContent: b
            },
            f = c.active = a([]);
            e.call(this, f, b, d);
            return ! 1
        }
        var g = a(b.target);
        if (g.parents(c.header).length) for (; ! g.is(c.header);) g = g.parent();
        var k = g[0] == c.active[0];
        if (c.running || c.alwaysOpen && k) return ! 1;
        if (g.is(c.header)) {
            c.active.find("h2").toggleClass(c.selectedClass);
            k || g.find("h2").addClass(c.selectedClass);
            f = g.next();
            b = c.active.next();
            var d = {
                instance: this,
                options: c,
                newHeader: g,
                oldHeader: c.active,
                newContent: f,
                oldContent: b
            },
            q = c.headers.index(c.active[0]) > c.headers.index(g[0]);
            c.active = k ? a([]) : g;
            e.call(this, f, b, d, k, q);
            return ! 1
        }
    }
    function f(b, c) {
        return void 0 != c ? "number" == typeof c ? b.filter(":eq(" + c + ")") : b.not(b.not(c)) : !1 === c ? a([]) : b.filter(":eq(0)")
    }
    var k = new Map;
    a.dwz = a.dwz || {};
    a(window).resize(function() {
        setTimeout(function() {
            for (var a = 0; a < k.size(); a++) c(k.element(a).key)
        },
        100)
    });
    a.fn.extend({
        accordion: function(b, c) {
            var d = Array.prototype.slice.call(arguments, 1);
            return this.each(function() {
                b.fillSpace && k.put(b.fillSpace, this);
                if ("string" == typeof b) {
                    var c = a.data(this, "dwz-accordion");
                    c[b].apply(c, d)
                } else a(this).is(".dwz-accordion") || a.data(this, "dwz-accordion", new a.dwz.accordion(this, b))
            })
        },
        activate: function(a) {
            return this.accordion("activate", a)
        }
    });
    a.dwz.accordion = function(b, d) {
        this.options = d = a.extend({},
        a.dwz.accordion.defaults, d);
        this.element = b;
        a(b).addClass("dwz-accordion");
        if (d.navigation) {
            var e = a(b).find("a").filter(d.navigationFilter);
            e.length && (e.filter(d.header).length ? d.active = e: (d.active = e.parent().parent().prev(), e.addClass("current")))
        }
        d.headers = a(b).find(d.header);
        d.active = f(d.headers, d.active);
        if (d.fillSpace) c(d.fillSpace);
        else if (d.autoheight) {
            var k = 0;
            d.headers.next().each(function() {
                k = Math.max(k, a(this).outerHeight())
            }).height(k)
        }
        d.headers.not(d.active || "").next().hide();
        d.active.find("h2").addClass(d.selectedClass);
        d.event && a(b).bind(d.event + ".dwz-accordion", g)
    };
    a.dwz.accordion.prototype = {
        activate: function(a) {
            g.call(this.element, {
                target: f(this.options.headers, a)[0]
            })
        },
        enable: function() {
            this.options.disabled = !1
        },
        disable: function() {
            this.options.disabled = !0
        },
        destroy: function() {
            this.options.headers.next().css("display", ""); (this.options.fillSpace || this.options.autoheight) && this.options.headers.next().css("height", "");
            a.removeData(this.element, "dwz-accordion");
            a(this.element).removeClass("dwz-accordion").unbind(".dwz-accordion")
        }
    };
    a.extend(a.dwz.accordion, {
        defaults: {
            selectedClass: "collapsable",
            alwaysOpen: !0,
            animated: "slide",
            event: "click",
            header: ".accordionHeader",
            autoheight: !0,
            running: 0,
            navigationFilter: function() {
                return this.href.toLowerCase() == location.href.toLowerCase()
            }
        },
        animations: {
            slide: function(b, c) {
                b = a.extend({
                    easing: "swing",
                    duration: 300
                },
                b, c);
                if (b.toHide.size()) {
                    var d = b.toHide.height(),
                    e = b.toShow.height() / d;
                    b.toShow.css({
                        height: 0
                    }).show();
                    b.toHide.filter(":hidden").each(b.complete).end().filter(":visible").animate({
                        height: "hide"
                    },
                    {
                        step: function(c) {
                            c = (d - c) * e;
                            if (a.browser.msie || a.browser.opera) c = Math.ceil(c);
                            b.toShow.height(c)
                        },
                        duration: b.duration,
                        easing: b.easing,
                        complete: function() {
                            b.autoheight || b.toShow.css({
                                height: "auto"
                            });
                            b.toShow.css({
                                overflow: "auto"
                            });
                            b.complete()
                        }
                    })
                } else b.toShow.animate({
                    height: "show"
                },
                b)
            },
            bounceslide: function(a) {
                this.slide(a, {
                    easing: a.down ? "bounceout": "swing",
                    duration: a.down ? 1E3: 200
                })
            },
            easeslide: function(a) {
                this.slide(a, {
                    easing: "easeinout",
                    duration: 700
                })
            }
        }
    })
})(jQuery); (function(a) {
    a.fn.uploadanatomy = function() {
        var d = a(this);
        if (0 < d.length) {
            var b = a(".anatomy.action", d);
            b && (b.mouseover(function() {
                var b = a(this),
                d = a.parseJSON(a("var", b).text());
                fileuploadtool.setparam(d);
                a("#anatomyuploadtool").offset(b.offset())
            }), (d = a("div.fsUploadDisplay>div", d)) && 0 < d.children().length && (b.trigger("mouseover"), b = fileuploadtool.o.getStats(), b.successful_uploads = d.children().length, fileuploadtool.o.setStats(b), a("#anatomyuploadtool").offset({
                top: -100,
                left: -200
            })))
        }
    }
})(jQuery);
function initEnv() {
    $("body").append(DWZ.frag.dwzFrag);
    if ($.browser.msie && /6.0/.test(navigator.userAgent)) try {
        document.execCommand("BackgroundImageCache", !1, !0)
    } catch(a) {}
    $.browser.msie && window.setInterval("CollectGarbage();", 1E4);
    $(window).resize(function() {
        initLayout();
        $(this).trigger(DWZ.eventType.resizeGrid)
    });
    var d = $("#background,#progressBar");
    d.hide();
    $(document).ajaxStart(function() {
        d.show()
    }).ajaxStop(function() {
        d.hide()
    });
    $("#leftside").jBar({
        minW: 150,
        maxW: 700
    });
    $.taskBar && $.taskBar.init();
    navTab.init();
    $.fn.switchEnv && $("#switchEnvBox").switchEnv();
    $.fn.navMenu && $("#navMenu").navMenu();
    setTimeout(function() {
        initLayout();
        initUI();
        var a = $("div.tabsPageHeader");
        a.find(".tabsLeft").hoverClass("tabsLeftHover");
        a.find(".tabsRight").hoverClass("tabsRightHover");
        a.find(".tabsMore").hoverClass("tabsMoreHover")
    },
    10)
}
function initLayout() {
    var a = $(window).width() - (DWZ.ui.sbar ? $("#sidebar").width() + 10 : 34) - 5,
    d = $(window).height() - $("#header").height() - 34;
    $("#container").width(a);
    $("#container .tabsPageContent").height(d - 34).find("[layoutH]").layoutH();
    $("#sidebar, #sidebar_s .collapse, #splitBar, #splitBarProxy").height(d - 5);
    $("#taskbar").css({
        top: d + $("#header").height() + 5,
        width: $(window).width()
    })
}
function initUI(a) {
    a = $(a || document);
    $("div.panel", a).jPanel();
    $("table.table", a).jTable();
    $("table.list", a).cssTable();
    $("div.tabs", a).each(function() {
        var a = $(this),
        b = {};
        b.currentIndex = a.attr("currentIndex") || 0;
        b.eventType = a.attr("eventType") || "click";
        a.tabs(b)
    });
    $("ul.tree", a).jTree();
    $("div.accordion", a).each(function() {
        var a = $(this);
        a.accordion({
            fillSpace: a.attr("fillSpace"),
            alwaysOpen: !1,
            active: 2
        })
    });
    $(":button.checkboxCtrl, :checkbox.checkboxCtrl", a).checkboxCtrl(a);
    $.fn.combox && $("select.combox", a).combox();
    $.fn.xheditor && $("textarea.editor", a).each(function() {
        var a = $(this),
        b = {
            html5Upload: !1,
            skin: "vista",
            tools: a.attr("tools") || "full"
        },
        c = [["upLinkUrl", "upLinkExt", "zip,rar,txt"], ["upImgUrl", "upImgExt", "jpg,jpeg,gif,png"], ["upFlashUrl", "upFlashExt", "swf"], ["upMediaUrl", "upMediaExt", "avi"]];
        $(c).each(function(e) {
            var g = c[e][0],
            f = c[e][1];
            a.attr(g) && (b[g] = a.attr(g), b[f] = a.attr(f) || c[e][2])
        });
        a.xheditor(b)
    });
    $.fn.uploadify && $(":file[uploaderOption]", a).each(function() {
        var a = $(this),
        b = {
            fileObjName: a.attr("name") || "file",
            auto: !0,
            multi: !0,
            onUploadError: uploadifyError
        },
        c = DWZ.jsonEval(a.attr("uploaderOption"));
        $.extend(b, c);
        DWZ.debug("uploaderOption: " + DWZ.obj2str(c));
        a.uploadify(b)
    });
    $("input[type=text], input[type=password], textarea", a).addClass("textInput").focusClass("focus");
    $("input[readonly], textarea[readonly]", a).addClass("readonly");
    $("input[disabled=true], textarea[disabled=true]", a).addClass("disabled");
    $("input[type=text]", a).not("div.tabs input[type=text]", a).filter("[alt]").inputAlert();
    $("div.panelBar li, div.panelBar", a).hoverClass("hover");
    $("div.button", a).hoverClass("buttonHover");
    $("div.buttonActive", a).hoverClass("buttonActiveHover");
    $("div.tabsHeader li, div.tabsPageHeader li, div.accordionHeader, div.accordion", a).hoverClass("hover");
    $("form.required-validate", a).each(function() {
        var a = $(this);
        a.validate({
            onsubmit: !1,
            focusInvalid: !1,
            focusCleanup: !0,
            errorElement: "span",
            ignore: ".ignore",
            invalidHandler: function(a, c) {
                var d = c.numberOfInvalids();
                d && (d = DWZ.msg("validateFormError", [d]), alertMsg.error(d))
            }
        });
        a.find("input[customvalid]").each(function() {
            var a = $(this);
            a.rules("add", {
                customvalid: a.attr("customvalid")
            })
        })
    });
    $.fn.datepicker && $("input.date", a).each(function() {
        var a = $(this),
        b = {};
        a.attr("dateFmt") && (b.pattern = a.attr("dateFmt"));
        a.attr("minDate") && (b.minDate = a.attr("minDate"));
        a.attr("maxDate") && (b.maxDate = a.attr("maxDate"));
        a.attr("mmStep") && (b.mmStep = a.attr("mmStep"));
        a.attr("ssStep") && (b.ssStep = a.attr("ssStep"));
        a.datepicker(b)
    });
    $("a[target=navTab]", a).each(function() {
        $(this).click(function(a) {
            var b = $(this),
            c = b.attr("title") || b.text(),
            e = b.attr("rel") || "_blank",
            g = eval(b.attr("fresh") || "true"),
            f = eval(b.attr("external") || "false"),
            k = unescape(decodeURIComponent(b.attr("href"))).replaceTmById($(a.target).parents(".unitBox:first"));
            DWZ.debug(k);
            if (!k.isFinishedTm()) return alertMsg.error(b.attr("warn") || DWZ.msg("alertSelectMsg")),
            !1;
            navTab.openTab(e, k, {
                title: c,
                fresh: g,
                external: f
            });
            a.preventDefault()
        })
    });
    $("a[target=dialog]", a).each(function() {
        $(this).click(function(a) {
            var b = $(this),
            c = b.attr("title") || b.text(),
            e = b.attr("rel") || "_blank",
            g = {},
            f = b.attr("width"),
            k = b.attr("height");
            f && (g.width = f);
            k && (g.height = k);
            g.max = eval(b.attr("max") || "false");
            g.mask = eval(b.attr("mask") || "false");
            g.maxable = eval(b.attr("maxable") || "true");
            g.minable = eval(b.attr("minable") || "true");
            g.fresh = eval(b.attr("fresh") || "true");
            g.resizable = eval(b.attr("resizable") || "true");
            g.drawable = eval(b.attr("drawable") || "true");
            g.close = eval(b.attr("close") || "");
            g.param = b.attr("param") || "";
            a = unescape(decodeURIComponent(b.attr("href"))).replaceTmById($(a.target).parents(".unitBox:first"));
            DWZ.debug(a);
            if (!a.isFinishedTm()) return alertMsg.error(b.attr("warn") || DWZ.msg("alertSelectMsg")),
            !1;
            $.pdialog.open(a, e, c, g);
            return ! 1
        })
    });
    $("a[target=ajax]", a).each(function() {
        $(this).click(function(a) {
            var b = $(this),
            c = b.attr("rel");
            if (c) {
                var e = $("#" + c),
                c = unescape(decodeURIComponent(b.attr("href"))).replaceTmById($(a.target).parents(".unitBox:first"));
                DWZ.debug(c);
                if (!c.isFinishedTm()) return alertMsg.error(b.attr("warn") || DWZ.msg("alertSelectMsg")),
                !1;
                e.loadUrl(c, {},
                function() {
                    e.find("[layoutH]").layoutH()
                })
            }
            a.preventDefault()
        })
    });
    $("div.pagination", a).each(function() {
        var a = $(this);
        a.pagination({
            targetType: a.attr("targetType"),
            rel: a.attr("rel"),
            totalCount: a.attr("totalCount"),
            numPerPage: a.attr("numPerPage"),
            pageNumShown: a.attr("pageNumShown"),
            currentPage: a.attr("currentPage")
        })
    });
    $.fn.sortDrag && $("div.sortDrag", a).sortDrag();
    $.fn.ajaxTodo && $("a[target=ajaxTodo]", a).ajaxTodo();
    $.fn.dwzExport && $("a[target=dwzExport]", a).dwzExport();
    $.fn.lookup && $("a[lookupGroup]", a).lookup();
    $.fn.multLookup && $("[multLookup]:button", a).multLookup();
    $.fn.suggest && $("input[suggestFields]", a).suggest();
    $.fn.itemDetail && $("table.itemDetail", a).itemDetail();
    $.fn.selectedTodo && $("a[target=selectedTodo]", a).selectedTodo();
    $.fn.pagerForm && $("form[rel=pagerForm]", a).pagerForm({
        parentBox: a
    });
    $.fn.uploadanatomy && $(".anatomy.container", a).uploadanatomy();
    $.fn.chgNumPerPage && $("select.pageSize", a).chgNumPerPage()
}
function backreal(a, d) {
    a = "string" == typeof a ? $("#" + a) : $(a);
    a.loadUrl(d, {},
    function() {
        a.find("[layoutH]").layoutH()
    })
} (function(a) {
    a.fn.extend({
        theme: function(d) {
            var b = a.extend({
                themeBase: "themes"
            },
            d).themeBase + "/#theme#/style.css";
            return this.each(function() {
                var c = a(this).find(">li[theme]"),
                d = function(d) {
                    a("head").find("link[href$='style.css']").attr("href", b.replace("#theme#", d));
                    c.find(">div").removeClass("selected");
                    c.filter("[theme=" + d + "]").find(">div").addClass("selected");
                    a.isFunction(a.cookie) && a.cookie("dwz_theme", d)
                };
                c.each(function(b) {
                    b = a(this);
                    var c = b.attr("theme");
                    b.addClass(c).click(function() {
                        d(c)
                    })
                });
                if (a.isFunction(a.cookie)) {
                    var g = a.cookie("dwz_theme");
                    g && d(g)
                }
            })
        }
    })
})(jQuery); (function(a) {
    function d(c) {
        c.removeClass("selected");
        a(document).unbind("click", b)
    }
    function b(a) {
        d(a.data.box)
    }
    a.fn.navMenu = function() {
        return this.each(function() {
            var b = a(this);
            b.find("li>a").click(function() {
                var d = a(this);
                a.post(d.attr("href"), {},
                function(g) {
                    a("#sidebar").find(".accordion").remove().end().append(g).initUI();
                    b.find("li").removeClass("selected");
                    d.parent().addClass("selected");
                    navTab.closeAllTab()
                });
                return ! 1
            })
        })
    };
    a.fn.switchEnv = function() {
        return this.each(function() {
            var c = a(this);
            c.click(function() {
                c.hasClass("selected") ? d(c) : (c.addClass("selected"), a(document).bind("click", {
                    box: c
                },
                b));
                return ! 1
            });
            c.find(">ul>li").click(function() {
                var b = a(this);
                a.post(b.find(">a").attr("href"), {},
                function(g) {
                    d(c);
                    c.find(">a>span").html(b.find(">a").html());
                    navTab.closeAllTab();
                    a("#sidebar").find(".accordion").remove().end().append(g).initUI()
                });
                return ! 1
            })
        })
    }
})(jQuery);
$.setRegional("alertMsg", {
    title: {
        error: "Error",
        info: "Information",
        warn: "Warning",
        correct: "Successful",
        confirm: "Confirmation"
    },
    butMsg: {
        ok: "OK",
        yes: "Yes",
        no: "No",
        cancel: "Cancel"
    }
});
var alertMsg = {
    _boxId: "#alertMsgBox",
    _bgId: "#alertBackground",
    _closeTimer: null,
    _types: {
        error: "error",
        info: "info",
        warn: "warn",
        correct: "correct",
        confirm: "confirm"
    },
    _getTitle: function(a) {
        return $.regional.alertMsg.title[a]
    },
    _keydownOk: function(a) {
        a.keyCode == DWZ.keyCode.ENTER && a.data.target.trigger("click");
        return ! 1
    },
    _keydownEsc: function(a) {
        a.keyCode == DWZ.keyCode.ESC && a.data.target.trigger("click")
    },
    _open: function(a, d, b, c) {
        $(this._boxId).remove();
        var e = "";
        if (b) for (var g = 0; g < b.length; g++) var f = b[g].call ? "callback": "",
        e = e + DWZ.frag.alertButFrag.replace("#butMsg#", b[g].name).replace("#callback#", f);
        g = DWZ.frag.alertBoxFrag.replace("#type#", a).replace("#title#", c && c.title || this._getTitle(a)).replace("#message#", d).replace("#butFragment#", e);
        $(g).appendTo("body").css({
            top: -$(this._boxId).height() + "px"
        }).animate({
            top: "0px"
        },
        500);
        this._closeTimer && (clearTimeout(this._closeTimer), this._closeTimer = null);
        this._types.info == a || this._types.correct == a ? this._closeTimer = setTimeout(function() {
            alertMsg.close()
        },
        3500) : $(this._bgId).show();
        a = $(this._boxId).find("a.button");
        d = a.filter("[rel=callback]");
        c = $(document);
        for (g = 0; g < b.length; g++) b[g].call && d.eq(g).click(b[g].call),
        b[g].keyCode == DWZ.keyCode.ENTER && c.bind("keydown", {
            target: a.eq(g)
        },
        this._keydownOk),
        b[g].keyCode == DWZ.keyCode.ESC && c.bind("keydown", {
            target: a.eq(g)
        },
        this._keydownEsc)
    },
    close: function() {
        $(document).unbind("keydown", this._keydownOk).unbind("keydown", this._keydownEsc);
        $(this._boxId).animate({
            top: -$(this._boxId).height()
        },
        500,
        function() {
            $(this).remove()
        });
        $(this._bgId).hide()
    },
    error: function(a, d) {
        this._alert(this._types.error, a, d)
    },
    info: function(a, d) {
        this._alert(this._types.info, a, d)
    },
    warn: function(a, d) {
        this._alert(this._types.warn, a, d)
    },
    correct: function(a, d) {
        this._alert(this._types.correct, a, d)
    },
    _alert: function(a, d, b) {
        var c = {
            okName: $.regional.alertMsg.butMsg.ok,
            okCall: null
        };
        $.extend(c, b);
        this._open(a, d, [{
            name: c.okName,
            call: c.okCall,
            keyCode: DWZ.keyCode.ENTER
        }], c)
    },
    confirm: function(a, d) {
        var b = {
            okName: $.regional.alertMsg.butMsg.ok,
            okCall: null,
            cancelName: $.regional.alertMsg.butMsg.cancel,
            cancelCall: null
        };
        $.extend(b, d);
        this._open(this._types.confirm, a, [{
            name: b.okName,
            call: b.okCall,
            keyCode: DWZ.keyCode.ENTER
        },
        {
            name: b.cancelName,
            call: b.cancelCall,
            keyCode: DWZ.keyCode.ESC
        }], b)
    }
}; (function(a) {
    function d(d, k, h, l) {
        var n = g[d];
        d = a(DWZ.frag[n.id]);
        d.find("li").hoverClass();
        c.html(d);
        a.each(n.bindings,
        function(d, e) {
            a("[rel='" + d + "']", c).bind("click",
            function(c) {
                b();
                e(a(k), a("#" + n.id))
            })
        });
        d = h.pageX;
        h = h.pageY;
        a(window).width() < d + c.width() && (d -= c.width());
        a(window).height() < h + c.height() && (h -= c.height());
        c.css({
            left: d,
            top: h
        }).show();
        n.shadow && e.css({
            width: c.width(),
            height: c.height(),
            left: d + 3,
            top: h + 3
        }).show();
        a(document).one("click", b);
        a.isFunction(n.ctrSub) && n.ctrSub(a(k), a("#" + n.id))
    }
    function b() {
        c.hide();
        e.hide()
    }
    var c, e, g;
    a.fn.extend({
        contextMenu: function(b, k) {
            var h = a.extend({
                shadow: !0,
                bindings: {},
                ctrSub: null
            },
            k);
            c || (c = a('<div id="contextmenu"></div>').appendTo("body").hide());
            e || (e = a('<div id="contextmenuShadow"></div>').appendTo("body").hide());
            g = g || [];
            g.push({
                id: b,
                shadow: h.shadow,
                bindings: h.bindings || {},
                ctrSub: h.ctrSub
            });
            var l = g.length - 1;
            a(this).bind("contextmenu",
            function(a) {
                d(l, this, a, h);
                return ! 1
            });
            return this
        }
    })
})(jQuery);
var navTab = {
    componentBox: null,
    _tabBox: null,
    _prevBut: null,
    _nextBut: null,
    _panelBox: null,
    _moreBut: null,
    _moreBox: null,
    _currentIndex: 0,
    _op: {
        id: "navTab",
        stTabBox: ".navTab-tab",
        stPanelBox: ".navTab-panel",
        mainTabId: "main",
        close$: "a.close",
        prevClass: "tabsLeft",
        nextClass: "tabsRight",
        stMore: ".tabsMore",
        stMoreLi: "ul.tabsMoreList"
    },
    init: function(a) {
        $.History && $.History.init("#container");
        var d = this;
        $.extend(this._op, a);
        this.componentBox = $("#" + this._op.id);
        this._tabBox = this.componentBox.find(this._op.stTabBox);
        this._panelBox = this.componentBox.find(this._op.stPanelBox);
        this._prevBut = this.componentBox.find("." + this._op.prevClass);
        this._nextBut = this.componentBox.find("." + this._op.nextClass);
        this._moreBut = this.componentBox.find(this._op.stMore);
        this._moreBox = this.componentBox.find(this._op.stMoreLi);
        this._prevBut.click(function(a) {
            d._scrollPrev()
        });
        this._nextBut.click(function(a) {
            d._scrollNext()
        });
        this._moreBut.click(function() {
            d._moreBox.show();
            return ! 1
        });
        $(document).click(function() {
            d._moreBox.hide()
        });
        this._contextmenu(this._tabBox);
        this._contextmenu(this._getTabs());
        this._init();
        this._ctrlScrollBut()
    },
    _init: function() {
        var a = this;
        this._getTabs().each(function(d) {
            $(this).unbind("click").click(function(b) {
                a._switchTab(d)
            });
            $(this).find(navTab._op.close$).unbind("click").click(function() {
                a._closeTab(d)
            })
        });
        this._getMoreLi().each(function(d) {
            $(this).find(">a").unbind("click").click(function(b) {
                a._switchTab(d)
            })
        });
        this._switchTab(this._currentIndex)
    },
    _contextmenu: function(a) {
        var d = this;
        a.contextMenu("navTabCM", {
            bindings: {
                reload: function(a, c) {
                    d._reload(a, !0)
                },
                closeCurrent: function(a, c) {
                    var e = a.attr("tabid");
                    e ? d.closeTab(e) : d.closeCurrentTab()
                },
                closeOther: function(a, c) {
                    var e = d._indexTabId(a.attr("tabid"));
                    d._closeOtherTab(0 < e ? e: d._currentIndex)
                },
                closeAll: function(a, c) {
                    d.closeAllTab()
                }
            },
            ctrSub: function(a, c) {
                var e = c.find("[rel='reload']"),
                g = c.find("[rel='closeCurrent']"),
                f = c.find("[rel='closeOther']"),
                k = c.find("[rel='closeAll']"),
                h = d._getTabs();
                2 > h.size() && (g.addClass("disabled"), f.addClass("disabled"), k.addClass("disabled"));
                0 == d._currentIndex || a.attr("tabid") == d._op.mainTabId ? (g.addClass("disabled"), e.addClass("disabled")) : 2 == h.size() && f.addClass("disabled")
            }
        })
    },
    _getTabs: function() {
        return this._tabBox.find("> li")
    },
    _getPanels: function() {
        return this._panelBox.find("> div")
    },
    _getMoreLi: function() {
        return this._moreBox.find("> li")
    },
    _getTab: function(a) {
        a = this._indexTabId(a);
        if (0 <= a) return this._getTabs().eq(a)
    },
    getPanel: function(a) {
        a = this._indexTabId(a);
        if (0 <= a) return this._getPanels().eq(a)
    },
    _getTabsW: function(a, d) {
        return this._tabsW(this._getTabs().slice(a, d))
    },
    _tabsW: function(a) {
        var d = 0;
        a.each(function() {
            d += $(this).outerWidth(!0)
        });
        return d
    },
    _indexTabId: function(a) {
        if (!a) return - 1;
        var d = -1;
        this._getTabs().each(function(b) {
            $(this).attr("tabid") == a && (d = b)
        });
        return d
    },
    _getLeft: function() {
        return this._tabBox.position().left
    },
    _getScrollBarW: function() {
        return this.componentBox.width() - 55
    },
    _visibleStart: function() {
        for (var a = this._getLeft(), d = 0, b = this._getTabs(), c = 0; c < b.size(); c++) {
            if (0 <= d + a) return c;
            d += b.eq(c).outerWidth(!0)
        }
        return 0
    },
    _visibleEnd: function() {
        for (var a = this._getLeft(), d = 0, b = this._getTabs(), c = 0; c < b.size(); c++) if (d += b.eq(c).outerWidth(!0), d + a > this._getScrollBarW()) return c;
        return b.size()
    },
    _scrollPrev: function() {
        var a = this._visibleStart();
        0 < a && this._scrollTab( - this._getTabsW(0, a - 1))
    },
    _scrollNext: function() {
        var a = this._visibleEnd();
        a < this._getTabs().size() && this._scrollTab( - this._getTabsW(0, a + 1) + this._getScrollBarW())
    },
    _scrollTab: function(a, d) {
        var b = this;
        this._tabBox.animate({
            left: a + "px"
        },
        200,
        function() {
            b._ctrlScrollBut()
        })
    },
    _scrollCurrent: function() {
        var a = this._tabsW(this._getTabs());
        a <= this._getScrollBarW() ? this._scrollTab(0) : this._getLeft() < this._getScrollBarW() - a ? this._scrollTab(this._getScrollBarW() - a) : this._currentIndex < this._visibleStart() ? this._scrollTab( - this._getTabsW(0, this._currentIndex)) : this._currentIndex >= this._visibleEnd() && this._scrollTab(this._getScrollBarW() - this._getTabs().eq(this._currentIndex).outerWidth(!0) - this._getTabsW(0, this._currentIndex))
    },
    _ctrlScrollBut: function() {
        var a = this._tabsW(this._getTabs());
        this._getScrollBarW() > a ? (this._prevBut.hide(), this._nextBut.hide(), this._tabBox.parent().removeClass("tabsPageHeaderMargin")) : (this._prevBut.show().removeClass("tabsLeftDisabled"), this._nextBut.show().removeClass("tabsRightDisabled"), this._tabBox.parent().addClass("tabsPageHeaderMargin"), 0 <= this._getLeft() ? this._prevBut.addClass("tabsLeftDisabled") : this._getLeft() <= this._getScrollBarW() - a && this._nextBut.addClass("tabsRightDisabled"))
    },
    _switchTab: function(a) {
        var d = this._getTabs().removeClass("selected").eq(a).addClass("selected");
        this._getPanels().hide().eq(a).show();
        this._getMoreLi().removeClass("selected").eq(a).addClass("selected");
        this._currentIndex = a;
        this._scrollCurrent();
        this._reload(d)
    },
    _closeTab: function(a, d) {
        this._getTabs().eq(a).remove();
        this._getPanels().eq(a).trigger(DWZ.eventType.pageClear).remove();
        this._getMoreLi().eq(a).remove();
        this._currentIndex >= a && this._currentIndex--;
        if (d) {
            var b = this._indexTabId(d);
            0 < b && (this._currentIndex = b)
        }
        this._init();
        this._scrollCurrent();
        this._reload(this._getTabs().eq(this._currentIndex))
    },
    closeTab: function(a) {
        a = this._indexTabId(a);
        0 < a && this._closeTab(a)
    },
    closeCurrentTab: function(a) {
        0 < this._currentIndex && this._closeTab(this._currentIndex, a)
    },
    closeAllTab: function() {
        this._getTabs().filter(":gt(0)").remove();
        this._getPanels().filter(":gt(0)").trigger(DWZ.eventType.pageClear).remove();
        this._getMoreLi().filter(":gt(0)").remove();
        this._currentIndex = 0;
        this._init();
        this._scrollCurrent()
    },
    _closeOtherTab: function(a) {
        a = a || this._currentIndex;
        0 < a ? (a = ":eq(" + a + ")", this._getTabs().not(a).filter(":gt(0)").remove(), this._getPanels().not(a).filter(":gt(0)").trigger(DWZ.eventType.pageClear).remove(), this._getMoreLi().not(a).filter(":gt(0)").remove(), this._currentIndex = 1, this._init(), this._scrollCurrent()) : this.closeAllTab()
    },
    _loadUrlCallback: function(a) {
        a.find("[layoutH]").layoutH();
        a.find(":button.close").click(function() {
            navTab.closeCurrentTab()
        })
    },
    _reload: function(a, d) {
        d = d || a.data("reloadFlag");
        var b = a.attr("url");
        if (d && b) {
            a.data("reloadFlag", null);
            var c = this.getPanel(a.attr("tabid"));
            if (a.hasClass("external")) navTab.openExternal(b, c);
            else {
                var e = $("#pagerForm", c),
                e = 0 < e.size() ? e.serializeArray() : {};
                c.loadUrl(b, e,
                function() {
                    navTab._loadUrlCallback(c)
                })
            }
        }
    },
    reloadFlag: function(a) {
        var d = this._getTab(a);
        d && (this._indexTabId(a) == this._currentIndex ? this._reload(d, !0) : d.data("reloadFlag", 1))
    },
    reload: function(a, d) {
        var b = $.extend({
            data: {},
            navTabId: "",
            callback: null
        },
        d),
        c = b.navTabId ? this._getTab(b.navTabId) : this._getTabs().eq(this._currentIndex),
        e = b.navTabId ? this.getPanel(b.navTabId) : this._getPanels().eq(this._currentIndex);
        e && (a || (a = c.attr("url")), a && (c.hasClass("external") ? navTab.openExternal(a, e) : ($.isEmptyObject(b.data) && (c = $("#pagerForm", e), b.data = 0 < c.size() ? c.serializeArray() : {}), e.ajaxUrl({
            type: "POST",
            url: a,
            data: b.data,
            callback: function(a) {
                navTab._loadUrlCallback(e);
                $.isFunction(b.callback) && b.callback(a)
            }
        }))))
    },
    getCurrentPanel: function() {
        return this._getPanels().eq(this._currentIndex)
    },
    checkTimeout: function() {
        var a = DWZ.jsonEval(this.getCurrentPanel().html());
        a && a.statusCode == DWZ.statusCode.timeout && this.closeCurrentTab()
    },
    openExternal: function(a, d) {
        var b = navTab._panelBox.height();
        d.html(DWZ.frag.externalFrag.replaceAll("{url}", a).replaceAll("{height}", b + "px"))
    },
    openTab: function(a, d, b) {
        b = $.extend({
            title: "New Tab",
            data: {},
            fresh: !0,
            external: !1
        },
        b);
        var c = this._indexTabId(a);
        if (0 <= c) {
            var e = this._getTabs().eq(c),
            g = e.attr("tabid") == this._op.mainTabId ? "> span > span": "> span";
            e.find(">a").attr("title", b.title).find(g).text(b.title);
            var f = this._getPanels().eq(c);
            if (b.fresh || e.attr("url") != d) e.attr("url", d),
            b.external || d.isExternalUrl() ? (e.addClass("external"), navTab.openExternal(d, f)) : (e.removeClass("external"), f.ajaxUrl({
                type: "GET",
                url: d,
                data: b.data,
                callback: function() {
                    navTab._loadUrlCallback(f)
                }
            }));
            this._currentIndex = c
        } else this._tabBox.append('<li tabid="#tabid#"><a href="javascript:" title="#title#" class="#tabid#"><span>#title#</span></a><a href="javascript:;" class="close">close</a></li>'.replaceAll("#tabid#", a).replaceAll("#title#", b.title)),
        this._panelBox.append('<div class="page unitBox"></div>'),
        this._moreBox.append('<li><a href="javascript:" title="#title#">#title#</a></li>'.replaceAll("#title#", b.title)),
        c = this._getTabs(),
        e = c.filter(":last"),
        f = this._getPanels().filter(":last"),
        b.external || d.isExternalUrl() ? (e.addClass("external"), navTab.openExternal(d, f)) : (e.removeClass("external"), f.ajaxUrl({
            type: "GET",
            url: d,
            data: b.data,
            callback: function() {
                navTab._loadUrlCallback(f)
            }
        })),
        $.History && setTimeout(function() {
            $.History.addHistory(a,
            function(a) {
                a = navTab._indexTabId(a);
                0 <= a && navTab._switchTab(a)
            },
            a)
        },
        10),
        this._currentIndex = c.size() - 1,
        this._contextmenu(c.filter(":last").hoverClass("hover"));
        this._init();
        this._scrollCurrent();
        this._getTabs().eq(this._currentIndex).attr("url", d)
    }
}; (function(a) {
    a.fn.extend({
        tabs: function(d) {
            function b(d) {
                var f = d.add(a("> *", d)),
                k = a(e.stTabHeader, f),
                h = a(e.stTab + " li", k),
                l = a(e.stTabPanel + " > *", f);
                h.unbind().find("a").unbind();
                k.find("." + e.prevClass).unbind();
                k.find("." + e.nextClass).unbind();
                h.each(function(f) {
                    e.currentIndex == f ? a(this).addClass("selected") : a(this).removeClass("selected");
                    "hover" == e.eventType ? a(this).hover(function(a) {
                        c(d, f)
                    }) : a(this).click(function(a) {
                        c(d, f)
                    });
                    a("a", this).each(function() {
                        a(this).hasClass(e.ajaxClass) ? a(this).click(function(a) {
                            var b = l.eq(f);
                            this.href && !b.attr("loaded") && b.loadUrl(this.href, {},
                            function() {
                                b.find("[layoutH]").layoutH();
                                b.attr("loaded", !0)
                            });
                            a.preventDefault()
                        }) : a(this).hasClass(e.closeClass) && a(this).click(function(a) {
                            h.eq(f).remove();
                            l.eq(f).remove();
                            f == e.currentIndex ? e.currentIndex = f + 1 < h.size() ? f: f - 1 : f < e.currentIndex && (e.currentIndex = f);
                            b(d);
                            return ! 1
                        })
                    })
                });
                c(d, e.currentIndex)
            }
            function c(b, c) {
                var d = b.add(a("> *", b)),
                h = a(e.stTabHeader, d),
                h = a(e.stTab + " li", h),
                d = a(e.stTabPanel + " > *", d),
                l = h.eq(c),
                n = d.eq(c);
                e.reverse && l.hasClass("selected") ? (h.removeClass("selected"), d.hide()) : (e.currentIndex = c, h.removeClass("selected"), l.addClass("selected"), d.hide().eq(e.currentIndex).show());
                n.attr("inited") || n.attr("inited", 1E3).find("input[type=text]").filter("[alt]").inputAlert()
            }
            var e = a.extend({
                reverse: !1,
                eventType: "click",
                currentIndex: 0,
                stTabHeader: "> .tabsHeader",
                stTab: ">.tabsHeaderContent>ul",
                stTabPanel: "> .tabsContent",
                ajaxClass: "j-ajax",
                closeClass: "close",
                prevClass: "tabsLeft",
                nextClass: "tabsRight"
            },
            d);
            return this.each(function() {
                b(a(this))
            })
        }
    })
})(jQuery); (function(a) {
    a.fn.extend({
        jresize: function(d) {
            return "string" == typeof d && "destroy" == d ? this.each(function() {
                a("div[class^='resizable']", this).each(function() {
                    a(this).hide()
                })
            }) : this.each(function() {
                var b = a(this),
                c = a(".resizable");
                a("div[class^='resizable']", b).each(function() {
                    var d = this;
                    a(d).mousedown(function(g) {
                        a.pdialog.switchDialog(b);
                        a.resizeTool.start(c, b, g, a(d).attr("tar"));
                        return ! 1
                    }).show()
                })
            })
        }
    });
    a.resizeTool = {
        start: function(d, b, c, e) {
            a.pdialog.initResize(d, b, e);
            a.data(d[0], "layer-drag", {
                options: a.extend(a.pdialog._op, {
                    target: e,
                    dialog: b,
                    stop: a.resizeTool.stop
                })
            });
            a.layerdrag.start(d[0], c, a.pdialog._op)
        },
        stop: function(d) {
            var b = a.data(d, "layer-drag");
            a.pdialog.resizeDialog(d, b.options.dialog, b.options.target);
            a("body").css("cursor", "");
            a(d).hide()
        }
    };
    a.layerdrag = {
        start: function(d, b, c) {
            a.layerdrag.current || (a.layerdrag.current = {
                el: d,
                oleft: parseInt(d.style.left) || 0,
                owidth: parseInt(d.style.width) || 0,
                otop: parseInt(d.style.top) || 0,
                oheight: parseInt(d.style.height) || 0,
                ox: b.pageX || b.screenX,
                oy: b.pageY || b.clientY
            },
            a(document).bind("mouseup", a.layerdrag.stop), a(document).bind("mousemove", a.layerdrag.drag));
            return a.layerdrag.preventEvent(b)
        },
        drag: function(d) {
            d || (d = window.event);
            var b = a.layerdrag.current,
            c = a.data(b.el, "layer-drag"),
            e = (d.pageX || d.screenX) - b.ox,
            g = (d.pageY || d.clientY) - b.oy;
            if (0 >= (d.pageY || d.clientY) || (d.pageY || d.clientY) >= a(window).height() - a(".dialogHeader", a(c.options.dialog)).outerHeight()) return ! 1;
            var c = c.options.target,
            f = b.owidth,
            k = b.oheight;
            "n" != c && "s" != c && (f += 0 <= c.indexOf("w") ? -e: e);
            f >= a.pdialog._op.minW && (0 <= c.indexOf("w") && (b.el.style.left = b.oleft + e + "px"), "n" != c && "s" != c && (b.el.style.width = f + "px"));
            "w" != c && "e" != c && (k += 0 <= c.indexOf("n") ? -g: g);
            k >= a.pdialog._op.minH && (0 <= c.indexOf("n") && (b.el.style.top = b.otop + g + "px"), "w" != c && "e" != c && (b.el.style.height = k + "px"));
            return a.layerdrag.preventEvent(d)
        },
        stop: function(d) {
            var b = a.layerdrag.current,
            c = a.data(b.el, "layer-drag");
            a(document).unbind("mousemove", a.layerdrag.drag);
            a(document).unbind("mouseup", a.layerdrag.stop);
            c.options.stop && c.options.stop.apply(b.el, [b.el]);
            a.layerdrag.current = null;
            return a.layerdrag.preventEvent(d)
        },
        preventEvent: function(a) {
            a.stopPropagation && a.stopPropagation();
            a.preventDefault && a.preventDefault();
            return ! 1
        }
    }
})(jQuery); (function(a) {
    a.pdialog = {
        _op: {
            height: 300,
            width: 580,
            minH: 40,
            minW: 50,
            total: 20,
            max: !1,
            mask: !1,
            resizable: !0,
            drawable: !0,
            maxable: !0,
            minable: !0,
            fresh: !0
        },
        _current: null,
        _zIndex: 42,
        zIndex_: 990,
        getCurrent: function() {
            return this._current
        },
        reload: function(d, b) {
            var c = a.extend({
                data: {},
                dialogId: "",
                callback: null
            },
            b),
            e = c.dialogId && a("body").data(c.dialogId) || this._current;
            if (e) {
                var g = e.find(".dialogContent");
                g.ajaxUrl({
                    type: "POST",
                    url: d,
                    data: c.data,
                    callback: function(b) {
                        g.find("[layoutH]").layoutH(g);
                        a(".pageContent", e).width(a(e).width() - 14);
                        a(":button.close", e).click(function() {
                            a.pdialog.close(e);
                            return ! 1
                        });
                        a.isFunction(c.callback) && c.callback(b)
                    }
                })
            }
        },
        open: function(d, b, c, e) {
            var g = a.extend({},
            a.pdialog._op, e),
            f = a("body").data(b);
            if (f) {
                if (f.is(":hidden") && f.show(), g.fresh || d != a(f).data("url")) {
                    f.data("url", d);
                    f.find(".dialogHeader").find("h1").html(c);
                    this.switchDialog(f);
                    var k = f.find(".dialogContent");
                    k.loadUrl(d, {},
                    function() {
                        k.find("[layoutH]").layoutH(k);
                        a(".pageContent", f).width(a(f).width() - 14);
                        a("button.close").click(function() {
                            a.pdialog.close(f);
                            return ! 1
                        })
                    })
                }
            } else a("body").append(DWZ.frag.dialogFrag),
            f = a(">.dialog:last-child", "body"),
            f.data("id", b),
            f.data("url", d),
            e.close && f.data("close", e.close),
            e.param && f.data("param", e.param),
            a.fn.bgiframe && f.bgiframe(),
            f.find(".dialogHeader").find("h1").html(c),
            a(f).css("zIndex", a.pdialog._zIndex += 2),
            a("div.shadow").css("zIndex", a.pdialog._zIndex - 3).show(),
            a.pdialog._init(f, e),
            a(f).click(function() {
                a.pdialog.switchDialog(f)
            }),
            g.resizable && f.jresize(),
            g.drawable && f.dialogDrag(),
            a("a.close", f).click(function(b) {
                a.pdialog.close(f);
                return ! 1
            }),
            g.maxable ? a("a.maximize", f).show().click(function(b) {
                a.pdialog.switchDialog(f);
                a.pdialog.maxsize(f);
                f.jresize("destroy").dialogDrag("destroy");
                return ! 1
            }) : a("a.maximize", f).hide(),
            a("a.restore", f).click(function(b) {
                a.pdialog.restore(f);
                f.jresize().dialogDrag();
                return ! 1
            }),
            g.minable ? a("a.minimize", f).show().click(function(b) {
                a.pdialog.minimize(f);
                return ! 1
            }) : a("a.minimize", f).hide(),
            a("div.dialogHeader a", f).mousedown(function() {
                return ! 1
            }),
            a("div.dialogHeader", f).dblclick(function() {
                a("a.restore", f).is(":hidden") ? a("a.maximize", f).trigger("click") : a("a.restore", f).trigger("click")
            }),
            g.max && (a.pdialog.maxsize(f), f.jresize("destroy").dialogDrag("destroy")),
            a("body").data(b, f),
            a.pdialog._current = f,
            a.pdialog.attachShadow(f),
            k = a(".dialogContent", f),
            k.loadUrl(d, {},
            function() {
                k.find("[layoutH]").layoutH(k);
                a(".pageContent", f).width(a(f).width() - 14);
                a("button.close").click(function() {
                    a.pdialog.close(f);
                    return ! 1
                })
            });
            g.mask ? (a.pdialog.zIndex_ += 10, a(f).css("zIndex", a.pdialog.zIndex_), a("a.minimize", f).hide(), a(f).data("mask", !0), 1E3 < a.pdialog.zIndex_ && a("#dialogBackground").css("zIndex", a.pdialog.zIndex_ - 8), a("#dialogBackground").show(), a.pdialog.attachShadow(f)) : g.minable && a.taskBar.addDialog(b, c)
        },
        switchDialog: function(d) {
            var b = a(d).css("zIndex");
            a.pdialog.attachShadow(d);
            if (a.pdialog._current) {
                var c = a(a.pdialog._current).css("zIndex");
                a(a.pdialog._current).css("zIndex", b);
                a(d).css("zIndex", c);
                a("div.shadow").css("zIndex", c - 1);
                a.pdialog._current = d
            }
            a.taskBar.switchTask(d.data("id"))
        },
        attachShadow: function(d) {
            var b = a("div.shadow");
            b.is(":hidden") && b.show();
            b.css({
                top: parseInt(a(d)[0].style.top) - 2,
                left: parseInt(a(d)[0].style.left) - 4,
                height: parseInt(a(d).height()) + 8,
                width: parseInt(a(d).width()) + 8,
                zIndex: parseInt(a(d).css("zIndex")) - 1
            });
            a(".shadow_c", b).children().andSelf().each(function() {
                a(this).css("height", a(d).outerHeight() - 4)
            })
        },
        _init: function(d, b) {
            var c = a.extend({},
            this._op, b),
            e = c.height > c.minH ? c.height: c.minH,
            c = c.width > c.minW ? c.width: c.minW;
            if (isNaN(d.height()) || d.height() < e) a(d).height(e + "px"),
            a(".dialogContent", d).height(e - a(".dialogHeader", d).outerHeight() - a(".dialogFooter", d).outerHeight() - 6); (isNaN(d.css("width")) || d.width() < c) && a(d).width(c + "px");
            e = (a(window).height() - d.height()) / 2;
            d.css({
                left: (a(window).width() - d.width()) / 2,
                top: 0 < e ? e: 0
            })
        },
        initResize: function(d, b, c) {
            a("body").css("cursor", c + "-resize");
            d.css({
                top: a(b).css("top"),
                left: a(b).css("left"),
                height: a(b).css("height"),
                width: a(b).css("width")
            });
            d.show()
        },
        repaint: function(d, b) {
            var c = a("div.shadow");
            "w" != d && "e" != d && (c.css("height", c.outerHeight() + b.tmove), a(".shadow_c", c).children().andSelf().each(function() {
                a(this).css("height", a(this).outerHeight() + b.tmove)
            }));
            "n" != d && "nw" != d && "ne" != d || c.css("top", b.otop - 2); ! b.owidth || "n" == d && "s" == d || c.css("width", b.owidth + 8);
            0 <= d.indexOf("w") && c.css("left", b.oleft - 4)
        },
        resizeTool: function(d, b, c) {
            a("div[class^='resizable']", c).filter(function() {
                return "w" == a(this).attr("tar") || "e" == a(this).attr("tar")
            }).each(function() {
                a(this).css("height", a(this).outerHeight() + b)
            })
        },
        resizeDialog: function(d, b, c) {
            var e = parseInt(d.style.left),
            g = parseInt(d.style.top),
            f = parseInt(d.style.height);
            d = parseInt(d.style.width);
            tmove = "n" == c || "nw" == c ? parseInt(a(b).css("top")) - g: f - parseInt(a(b).css("height"));
            a(b).css({
                left: e,
                width: d,
                top: g,
                height: f
            });
            a(".dialogContent", b).css("width", d - 12 + "px");
            a(".pageContent", b).css("width", d - 14 + "px");
            if ("w" != c && "e" != c) {
                var k = a(".dialogContent", b);
                k.css({
                    height: f - a(".dialogHeader", b).outerHeight() - a(".dialogFooter", b).outerHeight() - 6
                });
                k.find("[layoutH]").layoutH(k);
                a.pdialog.resizeTool(c, tmove, b)
            }
            a.pdialog.repaint(c, {
                oleft: e,
                otop: g,
                tmove: tmove,
                owidth: d
            });
            a(window).trigger(DWZ.eventType.resizeGrid)
        },
        close: function(d) {
            "string" == typeof d && (d = a("body").data(d));
            var b = d.data("close"),
            c = !0;
            if (b && a.isFunction(b) && ((c = d.data("param")) && "" != c ? (c = DWZ.jsonEval(c), c = b(c)) : c = b(), !c)) return;
            a(d).hide();
            a("div.shadow").hide();
            a(d).data("mask") ? (a.pdialog.zIndex_ -= 10, 1010 <= a.pdialog.zIndex_ ? (a("#dialogBackground").css("zIndex", a.pdialog.zIndex_ - 8), a.pdialog.attachShadow(a(".dialog").filter(function() {
                return a(this).css("zIndex") == a.pdialog.zIndex_
            }))) : 1E3 <= a.pdialog.zIndex_ ? (a("#dialogBackground").css("zIndex", 900), a.pdialog.attachShadow(a(".dialog").filter(function() {
                return a(this).css("zIndex") == a.pdialog.zIndex_
            }))) : a("#dialogBackground").hide()) : a(d).data("id") && a.taskBar.closeDialog(a(d).data("id"));
            a("body").removeData(a(d).data("id"));
            a(d).trigger(DWZ.eventType.pageClear).remove()
        },
        closeCurrent: function() {
            this.close(a.pdialog._current)
        },
        checkTimeout: function() {
            var d = a(".dialogContent", a.pdialog._current); (d = DWZ.jsonEval(d.html())) && d.statusCode == DWZ.statusCode.timeout && this.closeCurrent()
        },
        maxsize: function(d) {
            a(d).data("original", {
                top: a(d).css("top"),
                left: a(d).css("left"),
                width: a(d).css("width"),
                height: a(d).css("height")
            });
            a("a.maximize", d).hide();
            a("a.restore", d).show();
            var b = a(window).width(),
            c = a(window).height() - 34;
            a(d).css({
                top: "0px",
                left: "0px",
                width: b + "px",
                height: c + "px"
            });
            a.pdialog._resizeContent(d, b, c)
        },
        restore: function(d) {
            var b = a(d).data("original"),
            c = parseInt(b.width),
            e = parseInt(b.height);
            a(d).css({
                top: b.top,
                left: b.left,
                width: c,
                height: e
            });
            a.pdialog._resizeContent(d, c, e);
            a("a.maximize", d).show();
            a("a.restore", d).hide();
            a.pdialog.attachShadow(d)
        },
        minimize: function(d) {
            a(d).hide();
            a("div.shadow").hide();
            var b = a.taskBar.getTask(a(d).data("id"));
            a(".resizable").css({
                top: a(d).css("top"),
                left: a(d).css("left"),
                height: a(d).css("height"),
                width: a(d).css("width")
            }).show().animate({
                top: a(window).height() - 60,
                left: b.position().left,
                width: b.outerWidth(),
                height: b.outerHeight()
            },
            250,
            function() {
                a(this).hide();
                a.taskBar.inactive(a(d).data("id"))
            })
        },
        _resizeContent: function(d, b, c) {
            var e = a(".dialogContent", d);
            e.css({
                width: b - 12 + "px",
                height: c - a(".dialogHeader", d).outerHeight() - a(".dialogFooter", d).outerHeight() - 6
            });
            e.find("[layoutH]").layoutH(e);
            a(".pageContent", d).css("width", b - 14 + "px");
            a(window).trigger(DWZ.eventType.resizeGrid)
        }
    }
})(jQuery); (function(a) {
    a.fn.dialogDrag = function(d) {
        return "string" == typeof d && "destroy" == d ? this.each(function() {
            a("div.dialogHeader", this).unbind("mousedown")
        }) : this.each(function() {
            var b = a(this);
            a("div.dialogHeader", b).mousedown(function(c) {
                a.pdialog.switchDialog(b);
                b.data("task", !0);
                setTimeout(function() {
                    b.data("task") && a.dialogDrag.start(b, c)
                },
                100);
                return ! 1
            }).mouseup(function(a) {
                b.data("task", !1);
                return ! 1
            })
        })
    };
    a.dialogDrag = {
        currId: null,
        _init: function(d) {
            this.currId = (new Date).getTime();
            var b = a("#dialogProxy");
            b.size() || (b = a(DWZ.frag.dialogProxy), a("body").append(b));
            a("h1", b).html(a(".dialogHeader h1", d).text())
        },
        start: function(d, b) {
            this._init(d);
            var c = a("#dialogProxy");
            c.css({
                left: d.css("left"),
                top: d.css("top"),
                height: d.css("height"),
                width: d.css("width"),
                zIndex: parseInt(d.css("zIndex")) + 1
            }).show();
            a("div.dialogContent", c).css("height", a("div.dialogContent", d).css("height"));
            c.data("dialog", d);
            d.css({
                left: "-10000px",
                top: "-10000px"
            });
            a(".shadow").hide();
            a(c).jDrag({
                selector: ".dialogHeader",
                stop: this.stop,
                event: b
            });
            return ! 1
        },
        stop: function(d) {
            d = a(d);
            var b = d.data("dialog");
            a(b).css({
                left: a(d).css("left"),
                top: a(d).css("top")
            });
            a.pdialog.attachShadow(b);
            a(d).hide()
        }
    }
})(jQuery); (function(a) {
    var d = {
        cursor: "move",
        sortBoxs: "div.sortDrag",
        replace: !1,
        items: "> *",
        selector: "",
        zIndex: 1E3
    },
    b = {
        start: function(a, b, d, f) {
            var k = this._createPlaceholder(b),
            h = b.clone(),
            l = b.position();
            h.data("$sortBox", a).data("op", f).data("$item", b).data("$placeholder", k);
            h.addClass("sortDragHelper").css({
                position: "absolute",
                top: l.top + a.scrollTop(),
                left: l.left,
                zIndex: f.zIndex,
                width: b.width() + "px",
                height: b.height() + "px"
            }).jDrag({
                selector: f.selector,
                drag: this.drag,
                stop: this.stop,
                event: d
            });
            b.before(k).before(h).hide();
            return ! 1
        },
        drag: function(c) {
            var d = a(c),
            g = d.data("$sortBox");
            c = d.data("$placeholder");
            var f = g.find(d.data("op").items).filter(":visible").filter(":not(.sortDragPlaceholder, .sortDragHelper)"),
            k = d.position();
            f.eq(0).position();
            var h = b._getOverSortBox(d);
            if (0 < h.length && h[0] != g[0]) c.appendTo(h),
            d.data("$sortBox", h);
            else for (d = 0; d < f.length; d++) if (g = f.eq(d), h = g.position(), k.top > h.top + 10) g.after(c);
            else if (k.top <= h.top) {
                g.before(c);
                break
            }
        },
        stop: function(b) {
            var e = a(b);
            b = e.data("$sortBox");
            var g = e.data("$item"),
            f = e.data("$placeholder"),
            k = f.position();
            e.animate({
                top: k.top + b.scrollTop() + "px",
                left: k.left + "px"
            },
            {
                complete: function() {
                    e.data("op").replace && ($srcBox = g.parents(d.sortBoxs + ":first"), $destBox = f.parents(d.sortBoxs + ":first"), $srcBox[0] != $destBox[0] && ($replaceItem = f.next(), 0 < $replaceItem.size() && $replaceItem.insertAfter(g)));
                    g.insertAfter(f).show();
                    f.remove();
                    e.remove()
                },
                duration: 300
            })
        },
        _createPlaceholder: function(b) {
            return a("<" + b[0].nodeName + ' class="sortDragPlaceholder"/>').css({
                width: b.outerWidth() + "px",
                height: b.outerHeight() + "px",
                marginTop: b.css("marginTop"),
                marginRight: b.css("marginRight"),
                marginBottom: b.css("marginBottom"),
                marginLeft: b.css("marginLeft")
            })
        },
        _getOverSortBox: function(b) {
            var e = b.position(),
            g = e.top + b.height() / 2,
            f = e.left + b.width() / 2;
            return a(d.sortBoxs).filter(":visible").filter(function() {
                var b = a(this),
                c = b.position();
                return DWZ.isOver(g, f, c.top, c.left, b.height(), b.width())
            })
        }
    };
    a.fn.sortDrag = function(c) {
        return this.each(function() {
            var e = a.extend({},
            d, c),
            g = a(this);
            g.attr("selector") && (e.selector = g.attr("selector"));
            g.find(e.items).each(function(c) {
                var d = a(this);
                c = d;
                e.selector && (c = d.find(e.selector).css({
                    cursor: e.cursor
                }));
                c.mousedown(function(a) {
                    b.start(g, d, a, e);
                    a.preventDefault()
                })
            })
        })
    }
})(jQuery); (function(a) {
    a.fn.extend({
        cssTable: function(d) {
            return this.each(function() {
                var b = a(this),
                c = b.find("tbody>tr"),
                d = b.parent(),
                g = b.hasClass("nowrap");
                c.hoverClass("hover").each(function(b) {
                    var k = a(this);
                    g || 1 != b % 2 || k.addClass("trbg");
                    k.click(function() {
                        c.filter(".selected").removeClass("selected");
                        k.addClass("selected");
                        var b = k.attr("target");
                        if (b) {
                            var b = b.split(","),
                            f = k.attr("rel").split(",");
                            a.each(b,
                            function(b, c) {
                                0 == a("#" + c, d).size() && d.prepend('<input id="' + c + '" type="hidden" />');
                                a("#" + c, d).val(f[b])
                            })
                        }
                    })
                });
                b.find("thead [orderField]").orderBy({
                    targetType: b.attr("targetType"),
                    rel: b.attr("rel"),
                    asc: b.attr("asc") || "asc",
                    desc: b.attr("desc") || "desc"
                })
            })
        }
    })
})(jQuery); (function(a) {
    a.fn.jTable = function(d) {
        return this.each(function() {
            var b = a(this),
            c = b.attr("nowrapTD"),
            e = b.width(),
            g = 0,
            f = b.parent();
            if (1 == f.length) {
                var k = b.parent().parent();
                1 == k.length && (g = k.height() - 21, k.children().each(function(b, c) {
                    c != f[0] && (g -= a(c).height())
                }))
            }
            b.height();
            b.parent().parent().height();
            for (var h = [], k = b.parent().addClass("j-resizeGrid"), l = a(this).attr("layoutH"), n = b.find("thead>tr:last-child").find("th"), p = 0, s = n.size(); p < s; p++) {
                var r = a(n[p]),
                q = [],
                t = r.innerWidth() - 100 * r.innerWidth() / e - 2;
                q[0] = parseInt(t);
                q[1] = r.attr("align");
                h[h.length] = q
            }
            a(this).wrap("<div class='grid'></div>");
            var u = b.parent().html(b.html()),
            w = u.find("thead");
            w.wrap("<div class='gridHeader'><div class='gridThead'><table style='width:" + (e - 20) + "px;'></table></div></div>");
            n = a(">tr:last-child", w);
            n = a(">th", n);
            a("th", w).each(function() {
                var b = a(this);
                b.html("<div class='gridCol' title='" + b.text() + "'>" + b.html() + "</div>")
            });
            n.each(function(b) {
                var c = a(this);
                b = h[b];
                c.addClass(b[1]).hoverClass("hover").removeAttr("align").removeAttr("width").width(b[0])
            }).filter("[orderField]").orderBy({
                targetType: b.attr("targetType"),
                rel: b.attr("rel"),
                asc: b.attr("asc") || "asc",
                desc: b.attr("desc") || "desc"
            });
            var v = u.find(">tbody");
            v.wrap("<div class='gridScroller'" + (l ? " layoutH='" + l + "'": "") + " style='width:" + k.width() + "px;" + (g ? "height:" + g + "px;": "") + "'><div class='gridTbody'><table style='width:" + (e - 20) + "px;'></table></div></div>");
            var A = a(">tr:first-child", v),
            E = v.find(">tr");
            E.hoverClass().each(function(b) {
                var d = a(this);
                1 == b % 2 && d.addClass("trbg");
                b = a(">td", this);
                for (var e = 0; e < b.size(); e++) {
                    var f = a(b[e]);
                    "false" != c && f.html("<div>" + f.html() + "</div>");
                    e < h.length && f.addClass(h[e][1])
                }
                d.click(function() {
                    E.filter(".selected").removeClass("selected");
                    d.addClass("selected");
                    var b = d.attr("target");
                    if (b) {
                        var b = b.split(","),
                        c = d.attr("rel").split(",");
                        a.each(b,
                        function(b, d) {
                            0 == a("#" + d, u).size() && u.prepend('<input id="' + d + '" type="hidden" />');
                            a("#" + d, u).val(c[b])
                        })
                    }
                })
            });
            a(">td", A).each(function(b) {
                b < h.length && a(this).width(h[b][0])
            });
            u.append("<div class='resizeMarker' style='height:300px; left:57px;display:none;'></div><div class='resizeProxy' style='height:300px; left:377px;display:none;'></div>");
            var z = a(".gridScroller", u);
            z.scroll(function(b) {
                b = a(".gridThead", u);
                if (0 < z.scrollLeft()) {
                    b.css("position", "relative");
                    var c = z.scrollLeft();
                    b.css("left", z.cssv("left") - c)
                }
                0 == z.scrollLeft() && (b.css("position", "relative"), b.css("left", "0px"));
                return ! 1
            });
            a(">tr", w).each(function() {
                a(">th", this).each(function(b) {
                    var c = this,
                    e = a(this);
                    e.mouseover(function(b) {
                        b = a.jTableTool.getOffset(c, b).offsetX;
                        5 > e.outerWidth() - b ? e.css("cursor", "col-resize").mousedown(function(b) {
                            a(".resizeProxy", u).show().css({
                                left: a.jTableTool.getRight(c) - a(".gridScroller", u).scrollLeft(),
                                top: a.jTableTool.getTop(c),
                                height: a.jTableTool.getHeight(c, u),
                                cursor: "col-resize"
                            });
                            a(".resizeMarker", u).show().css({
                                left: a.jTableTool.getLeft(c) + 1 - a(".gridScroller", u).scrollLeft(),
                                top: a.jTableTool.getTop(c),
                                height: a.jTableTool.getHeight(c, u)
                            });
                            a(".resizeProxy", u).jDrag(a.extend(d, {
                                scop: !0,
                                cellMinW: 20,
                                relObj: a(".resizeMarker", u)[0],
                                move: "horizontal",
                                event: b,
                                stop: function() {
                                    var b = a(".resizeProxy", u).position().left,
                                    c = a(".resizeMarker", u).position().left,
                                    c = b - c - e.outerWidth() - 9;
                                    a.jTableTool.getColspan(e);
                                    var d = a.jTableTool.getCellNum(e),
                                    b = e.width(),
                                    c = e.width() + c,
                                    d = a(">td", A).eq(d - 1);
                                    e.width(c + "px");
                                    d.width(c + "px");
                                    d = a(w).parent();
                                    d.width(d.width() - b + c + "px");
                                    d = a(v).parent();
                                    d.width(d.width() - b + c + "px");
                                    a(".resizeMarker,.resizeProxy", u).hide()
                                }
                            }))
                        }) : (e.css("cursor", e.attr("orderField") ? "pointer": "default"), e.unbind("mousedown"));
                        return ! 1
                    })
                })
            });
            a(window).unbind(DWZ.eventType.resizeGrid).bind("resizeGrid",
            function() {
                a("div.j-resizeGrid").each(function() {
                    var b = a(this).innerWidth();
                    b && a("div.gridScroller", this).width(b + "px");
                    var b = a(this).parent(),
                    c = this;
                    if (1 == b.length) {
                        var d = b.height() - 21;
                        b.children().each(function(b, e) {
                            e != c && (d -= a(e).height())
                        });
                        d && a("div.gridScroller", c).height() != d && a("div.gridScroller", c).height(d)
                    }
                })
            })
        })
    };
    a.jTableTool = {
        getLeft: function(d) {
            var b = 0;
            a(d).prevAll().each(function() {
                b += a(this).outerWidth()
            });
            return b - 1
        },
        getRight: function(d) {
            var b = 0;
            a(d).prevAll().andSelf().each(function() {
                b += a(this).outerWidth()
            });
            return b - 1
        },
        getTop: function(d) {
            var b = 0;
            a(d).parent().prevAll().each(function() {
                b += a(this).outerHeight()
            });
            return b
        },
        getHeight: function(d, b) {
            var c = 0;
            a(d).parent().nextAll().andSelf().each(function() {
                c += a(this).outerHeight()
            });
            a(".gridTbody", b).children().each(function() {
                c += a(this).outerHeight()
            });
            return c
        },
        getCellNum: function(d) {
            return a(d).prevAll().andSelf().size()
        },
        getColspan: function(d) {
            return a(d).attr("colspan") || 1
        },
        getStart: function(d) {
            var b = 1;
            a(d).prevAll().each(function() {
                b += parseInt(a(this).attr("colspan") || 1)
            });
            return b
        },
        getPageCoord: function(a) {
            for (var b = {
                x: 0,
                y: 0
            }; a;) b.x += a.offsetLeft,
            b.y += a.offsetTop,
            a = a.offsetParent;
            return b
        },
        getOffset: function(d, b) {
            if (a.browser.msie) {
                var c = a(d).offset();
                return c = {
                    offsetX: (b.pageX || b.screenX) - c.left,
                    offsetY: (b.pageY || b.screenY) - c.top
                }
            }
            c = b.target;
            void 0 == c.offsetLeft && (c = c.parentNode);
            c = a.jTableTool.getPageCoord(c);
            return c = {
                offsetX: window.pageXOffset + b.clientX - c.x,
                offsetY: window.pageYOffset + b.clientY - c.y
            }
        }
    }
})(jQuery); (function(a) {
    a.fn.extend({
        jTask: function(d) {
            return this.each(function() {
                var b = a(this),
                c = b.attr("id");
                b.click(function(d) {
                    d = a("body").data(c);
                    b.hasClass("selected") ? a("a.minimize", d).trigger("click") : d.is(":hidden") ? a.taskBar.restoreDialog(d) : a(d).trigger("click");
                    a.taskBar.scrollCurrent(a(this));
                    return ! 1
                });
                a("div.close", b).click(function(b) {
                    a.pdialog.close(c);
                    return ! 1
                }).hoverClass("closeHover");
                b.hoverClass("hover")
            })
        }
    });
    a.taskBar = {
        _taskBar: null,
        _taskBox: null,
        _prevBut: null,
        _nextBut: null,
        _op: {
            id: "taskbar",
            taskBox: "div.taskbarContent",
            prevBut: ".taskbarLeft",
            prevDis: "taskbarLeftDisabled",
            nextBut: ".taskbarRight",
            nextDis: "taskbarRightDisabled",
            selected: "selected",
            boxMargin: "taskbarMargin"
        },
        init: function(d) {
            var b = this;
            a.extend(this._op, d);
            this._taskBar = a("#" + this._op.id);
            0 == this._taskBar.size() && (this._taskBar = a(DWZ.frag.taskbar).appendTo(a("#layout")), this._taskBar.find(".taskbarLeft").hoverClass("taskbarLeftHover"), this._taskBar.find(".taskbarRight").hoverClass("taskbarRightHover"));
            this._taskBox = this._taskBar.find(this._op.taskBox);
            this._taskList = this._taskBox.find(">ul");
            this._prevBut = this._taskBar.find(this._op.prevBut);
            this._nextBut = this._taskBar.find(this._op.nextBut);
            this._prevBut.click(function(a) {
                b.scrollLeft()
            });
            this._nextBut.click(function(a) {
                b.scrollRight()
            });
            this._contextmenu(this._taskBox)
        },
        _contextmenu: function(d) {
            a(d).contextMenu("dialogCM", {
                bindings: {
                    closeCurrent: function(b, c) {
                        var d = b.isTag("li") ? b: a.taskBar._getCurrent();
                        a("div.close", d).trigger("click")
                    },
                    closeOther: function(b, c) {
                        var d = b.isTag("li") ? "#" + b.attr("id") : ".selected",
                        g = a.taskBar._taskList.find(">li:not(:" + d + ")");
                        g.each(function(b) {
                            a("div.close", g[b]).trigger("click")
                        })
                    },
                    closeAll: function(b, c) {
                        var d = a.taskBar._getTasks();
                        d.each(function(b) {
                            a("div.close", d[b]).trigger("click")
                        })
                    }
                },
                ctrSub: function(b, c) {
                    var d = c.find("[rel='closeCurrent']"),
                    g = c.find("[rel='closeOther']");
                    a.taskBar._getCurrent()[0] ? 1 == a.taskBar._getTasks().size() && g.addClass("disabled") : (d.addClass("disabled"), g.addClass("disabled"))
                }
            })
        },
        _scrollCurrent: function() {
            if (this._tasksW(this._getTasks()) > this._getTaskBarW()) {
                var d = this,
                b = a(">li:last-child", this._taskList),
                b = this._getTaskBarW() - b.position().left - b.outerWidth(!0);
                this._taskList.animate({
                    left: b + "px"
                },
                200,
                function() {
                    d._ctrlScrollBut()
                })
            } else this._ctrlScrollBut()
        },
        _getTaskBarW: function() {
            return this._taskBox.width() - (this._prevBut.is(":hidden") ? this._prevBut.width() + 2 : 0) - (this._nextBut.is(":hidden") ? this._nextBut.width() + 2 : 0)
        },
        _scrollTask: function(a) {
            var b = this;
            a.position().left + this._getLeft() + a.outerWidth() > this._getBarWidth() ? (a = this._getTaskBarW() - a.position().left - a.outerWidth(!0) - 2, this._taskList.animate({
                left: a + "px"
            },
            200,
            function() {
                b._ctrlScrollBut()
            })) : 0 > a.position().left + this._getLeft() && (a = this._getLeft() - (a.position().left + this._getLeft()), this._taskList.animate({
                left: a + "px"
            },
            200,
            function() {
                b._ctrlScrollBut()
            }))
        },
        _ctrlScrollBut: function() {
            var a = this._tasksW(this._getTasks());
            this._getTaskBarW() > a ? (this._taskBox.removeClass(this._op.boxMargin), this._nextBut.hide(), this._prevBut.hide(), this._getTasks().eq(0)[0] && this._scrollTask(this._getTasks().eq(0))) : (this._taskBox.addClass(this._op.boxMargin), this._nextBut.show().removeClass(this._op.nextDis), this._prevBut.show().removeClass(this._op.prevDis), 0 <= this._getLeft() && this._prevBut.addClass(this._op.prevDis), this._getLeft() <= this._getTaskBarW() - a && this._nextBut.addClass(this._op.nextDis))
        },
        _getLeft: function() {
            return this._taskList.position().left
        },
        _visibleStart: function() {
            for (var a = this._getLeft(), b = this._getTasks(), c = 0; c < b.size(); c++) if (0 <= b.eq(c).position().left + b.eq(c).outerWidth(!0) + a) return b.eq(c);
            return b.eq(0)
        },
        _visibleEnd: function() {
            for (var a = this._getLeft(), b = this._getTasks(), c = 0; c < b.size(); c++) if (b.eq(c).position().left + b.eq(c).outerWidth(!0) + a > this._getBarWidth()) return b.eq(c);
            return b.eq(b.size() - 1)
        },
        _getTasks: function() {
            return this._taskList.find(">li")
        },
        _tasksW: function(d) {
            var b = 0;
            d.each(function() {
                b += a(this).outerWidth(!0)
            });
            return b
        },
        _getBarWidth: function() {
            return this._taskBar.innerWidth()
        },
        addDialog: function(d, b) {
            this.show();
            var c = a("#" + d, this._taskList);
            c[0] ? a(">div>span", c).text(b) : (this._taskList.append('<li id="#taskid#"><div class="taskbutton"><span>#title#</span></div><div class="close">Close</div></li>'.replace("#taskid#", d).replace("#title#", b)), c = a("#" + d, this._taskList), c.jTask());
            this._contextmenu(c);
            this.switchTask(d);
            this._scrollTask(c)
        },
        closeDialog: function(d) { ("string" == typeof d ? a("#" + d, this._taskList) : d).remove();
            0 == this._getTasks().size() && this.hide();
            this._scrollCurrent()
        },
        restoreDialog: function(d) {
            var b = "string" == typeof d ? a("body").data(d) : d;
            d = "string" == typeof d ? d: b.data("id");
            var c = a.taskBar.getTask(d);
            a(".resizable").css({
                top: a(window).height() - 60,
                left: a(c).position().left,
                height: a(c).outerHeight(),
                width: a(c).outerWidth()
            }).show().animate({
                top: a(b).css("top"),
                left: a(b).css("left"),
                width: a(b).css("width"),
                height: a(b).css("height")
            },
            250,
            function() {
                a(this).hide();
                a(b).show();
                a.pdialog.attachShadow(b)
            });
            a.taskBar.switchTask(d)
        },
        inactive: function(d) {
            a("#" + d, this._taskList).removeClass("selected")
        },
        scrollLeft: function() {
            var a = this._visibleStart();
            this._scrollTask(a)
        },
        scrollRight: function() {
            var a = this._visibleEnd();
            this._scrollTask(a)
        },
        scrollCurrent: function(a) {
            this._scrollTask(a)
        },
        switchTask: function(a) {
            this._getCurrent().removeClass("selected");
            this.getTask(a).addClass("selected")
        },
        _getCurrent: function() {
            return this._taskList.find(">.selected")
        },
        getTask: function(d) {
            return a("#" + d, this._taskList)
        },
        show: function() {
            this._taskBar.is(":hidden") && (this._taskBar.css("top", a(window).height() - 34 + this._taskBar.outerHeight()).show(), this._taskBar.animate({
                top: a(window).height() - this._taskBar.outerHeight()
            },
            500))
        },
        hide: function() {
            this._taskBar.animate({
                top: a(window).height() - 29 + this._taskBar.outerHeight(!0)
            },
            500,
            function() {
                a.taskBar._taskBar.hide()
            })
        }
    }
})(jQuery); (function(a) {
    a.Thread = {
        flag: !1,
        sleep: function(a) {
            if (a && 0 < a) for (var b = (new Date).getTime(), c = (new Date).getTime(); ! this.flag && c - b < a;) c = (new Date).getTime()
        }
    }
})(jQuery);
function validateCallback(a, d, b) {
    var c = $(a),
    e = function() {
        $.ajax({
            type: a.method || "POST",
            url: c.attr("action"),
            data: c.serializeArray(),
            dataType: "json",
            cache: !1,
            success: d || DWZ.ajaxDone,
            error: DWZ.ajaxError
        })
    };
    if (!$.data(a, "validator")) {
        $.Thread.flag = !1;
        var g = c.validate({
            submitHandler: function(a, c, d) {
                $.Thread.flag = !0;
                b ? alertMsg.confirm(b, {
                    okCall: e
                }) : e()
            }
        }).form();
        $.Thread.sleep(100); ! $.Thread.flag && g && (b ? alertMsg.confirm(b, {
            okCall: e
        }) : e());
        return ! 1
    }
}
function iframeCallback(a, d) {
    var b = $(a),
    c = $("#callbackframe");
    if (!b.valid()) return ! 1;
    0 == c.size() && (c = $("<iframe id='callbackframe' name='callbackframe' src='about:blank' style='display:none'></iframe>").appendTo("body"));
    a.ajax || b.append('<input type="hidden" name="ajax" value="1" />');
    a.target = "callbackframe";
    _iframeResponse(c[0], d || DWZ.ajaxDone)
}
function _iframeResponse(a, d) {
    var b = $(a),
    c = $(document);
    c.trigger("ajaxStart");
    b.bind("load",
    function(e) {
        b.unbind("load");
        c.trigger("ajaxStop");
        if (! ("javascript:'%3Chtml%3E%3C/html%3E';" == a.src || "javascript:'<html></html>';" == a.src || (e = a.contentDocument || a.document, e.readyState && "complete" != e.readyState) || e.body && "false" == e.body.innerHTML)) {
            var g;
            if (e.XMLDocument) g = e.XMLDocument;
            else if (e.body) try {
                g = b.contents().find("body").text(),
                g = jQuery.parseJSON(g)
            } catch(f) {
                g = e.body.innerHTML
            } else g = e;
            d(g)
        }
    })
}
function navTabAjaxDone(a) {
    DWZ.ajaxDone(a);
    if (a.statusCode == DWZ.statusCode.ok) {
        if (a.navTabId) navTab.reloadFlag(a.navTabId);
        else {
            var d = $("#pagerForm", navTab.getCurrentPanel()),
            d = 0 < d.size() ? d.serializeArray() : {};
            navTabPageBreak(d, a.rel)
        }
        "closeCurrent" == a.callbackType ? setTimeout(function() {
            navTab.closeCurrentTab(a.navTabId)
        },
        100) : "forward" == a.callbackType ? navTab.reload(a.forwardUrl) : "forwardConfirm" == a.callbackType ? alertMsg.confirm(a.confirmMsg || DWZ.msg("forwardConfirmMsg"), {
            okCall: function() {
                navTab.reload(a.forwardUrl)
            },
            cancelCall: function() {
                navTab.closeCurrentTab(a.navTabId)
            }
        }) : navTab.getCurrentPanel().find(":input[initValue]").each(function() {
            var a = $(this).attr("initValue");
            $(this).val(a)
        })
    }
}
function dialogAjaxDone(a) {
    DWZ.ajaxDone(a);
    if (a.statusCode == DWZ.statusCode.ok) {
        if (a.navTabId) navTab.reload(a.forwardUrl, {
            navTabId: a.navTabId
        });
        else if (a.rel) {
            var d = $("#pagerForm", navTab.getCurrentPanel()),
            d = 0 < d.size() ? d.serializeArray() : {};
            navTabPageBreak(d, a.rel)
        }
        "closeCurrent" == a.callbackType && $.pdialog.closeCurrent()
    }
}
function navTabSearch(a, d) {
    "string" == typeof a && (a = $("#" + a).get(0));
    try {
        "FROM" != a.tagName && "from" != a.tagName && (a = $("#pagerForm", navTab.getCurrentPanel()).get(0) || $("form", navTab.getCurrentPanel()).get(0))
    } catch(b) {
        a = $("#pagerForm", navTab.getCurrentPanel()).get(0) || $("form", navTab.getCurrentPanel()).get(0)
    }
    if (a) {
        a[DWZ.pageInfo.pageNum] && (a[DWZ.pageInfo.pageNum].value = 1);
        var c = $(a);
        navTab.reload(c.attr("action"), {
            data: c.serializeArray(),
            navTabId: d
        })
    }
    return ! 1
}
function dialogSearch(a) {
    var d = $(a);
    a[DWZ.pageInfo.pageNum] && (a[DWZ.pageInfo.pageNum].value = 1);
    $.pdialog.reload(d.attr("action"), {
        data: d.serializeArray()
    });
    return ! 1
}
function dwzSearch(a, d) {
    "dialog" == d ? dialogSearch(a) : navTabSearch(a);
    return ! 1
}
function divSearch(a, d) {
    "string" == typeof a && (a = $("#" + a).get(0));
    var b = $(a);
    a[DWZ.pageInfo.pageNum] && (a[DWZ.pageInfo.pageNum].value = 1);
    if (d) {
        var c = $("#" + d);
        c.ajaxUrl({
            type: "POST",
            url: b.attr("action"),
            data: b.serializeArray(),
            callback: function() {
                c.find("[layoutH]").layoutH()
            }
        })
    }
    return ! 1
}
function _getPagerForm(a, d, b) {
    if (b = b ? $("#" + b, a).get(0) : $("#pagerForm", a).get(0) || $("form", a).get(0)) d.pageNum && (b[DWZ.pageInfo.pageNum] ? b[DWZ.pageInfo.pageNum].value = d.pageNum: $("#" + DWZ.pageInfo.pageNum, b).val(d.pageNum)),
    d.numPerPage && (b[DWZ.pageInfo.numPerPage] ? b[DWZ.pageInfo.numPerPage].value = d.numPerPage: $("#" + DWZ.pageInfo.numPerPage, b).val(d.numPerPage)),
    d.orderField && (b[DWZ.pageInfo.orderField] ? b[DWZ.pageInfo.orderField].value = d.orderField: $("#" + DWZ.pageInfo.orderField, b).val(d.orderField)),
    d.orderDirection && (b[DWZ.pageInfo.orderDirection] || 1 == $("#" + DWZ.pageInfo.orderDirection, b).length) && (b[DWZ.pageInfo.orderDirection] ? b[DWZ.pageInfo.orderDirection].value = d.orderDirection: $("#" + DWZ.pageInfo.orderDirection, b).val(d.orderDirection));
    return b
}
function dwzPageBreak(a) {
    a = $.extend({
        targetType: "navTab",
        rel: "",
        data: {
            pageNum: "",
            numPerPage: "",
            orderField: "",
            orderDirection: ""
        },
        callback: null
    },
    a);
    var d = "dialog" == a.targetType ? $.pdialog.getCurrent() : navTab.getCurrentPanel();
    if (a.rel) {
        var b = d.find("#" + a.rel); (d = _getPagerForm(b, a.data, a.form)) && b.ajaxUrl({
            type: "POST",
            url: $(d).attr("action"),
            data: $(d).serializeArray(),
            callback: function() {
                b.find("[layoutH]").layoutH()
            }
        })
    } else {
        var d = _getPagerForm(d, a.data, a.form),
        c = $(d).serializeArray();
        "dialog" == a.targetType ? d && $.pdialog.reload($(d).attr("action"), {
            data: c,
            callback: a.callback
        }) : d && navTab.reload($(d).attr("action"), {
            data: c,
            callback: a.callback
        })
    }
}
function navTabPageBreak(a, d, b) {
    dwzPageBreak({
        targetType: "navTab",
        rel: d,
        data: a,
        form: b
    })
}
function dialogPageBreak(a, d, b) {
    dwzPageBreak({
        targetType: "dialog",
        rel: d,
        data: a,
        form: b
    })
}
function ajaxTodo(a, d) {
    var b = d || navTabAjaxDone;
    $.isFunction(b) || (b = eval("(" + d + ")"));
    $.ajax({
        type: "POST",
        url: a,
        dataType: "json",
        cache: !1,
        success: b,
        error: DWZ.ajaxError
    })
}
function uploadifyError(a, d, b, c) {
    alert("event:" + a + "\nqueueId:" + d + "\nfileObj.name:" + b.name + "\nerrorObj.type:" + c.type + "\nerrorObj.info:" + c.info)
}
$.fn.extend({
    ajaxTodo: function() {
        return this.each(function() {
            var a = $(this);
            a.click(function(d) {
                var b = unescape(decodeURIComponent(a.attr("href"))).replaceTmById($(d.target).parents(".unitBox:first"));
                DWZ.debug(b);
                if (!b.isFinishedTm()) return alertMsg.error(a.attr("warn") || DWZ.msg("alertSelectMsg")),
                !1;
                var c = a.attr("title");
                c ? alertMsg.confirm(c, {
                    okCall: function() {
                        ajaxTodo(b, a.attr("callback"))
                    }
                }) : ajaxTodo(b, a.attr("callback"));
                d.preventDefault()
            })
        })
    },
    dwzExport: function() {
        function a(a) {
            var b = "dialog" == a.attr("targetType") ? $.pdialog.getCurrent() : navTab.getCurrentPanel(),
            b = $("#pagerForm", b);
            a = a.attr("href");
            window.location = a + ( - 1 == a.indexOf("?") ? "?": "&") + b.serialize()
        }
        return this.each(function() {
            var d = $(this);
            d.click(function(b) {
                var c = d.attr("title");
                c ? alertMsg.confirm(c, {
                    okCall: function() {
                        a(d)
                    }
                }) : a(d);
                b.preventDefault()
            })
        })
    }
}); (function(a) {
    a.fn.extend({
        pagination: function(b) {
            function c(a, b, c, d) {
                a.bind("click", {
                    pageNum: b
                },
                function(a) {
                    dwzPageBreak({
                        targetType: c,
                        rel: d,
                        data: {
                            pageNum: a.data.pageNum
                        }
                    });
                    a.preventDefault()
                })
            }
            return this.each(function() {
                for (var e = a(this), g = new d(b), f = g.getInterval(), k = "", h = f.start; h < f.end; h++) k += '<li class="#liClass#"><a href="javascript:;">#pageNum#</a></li>'.replaceAll("#pageNum#", h).replaceAll("#liClass#", h == g.getCurrentPage() ? "selected j-num": "j-num");
                e.html(DWZ.frag.pagination.replaceAll("#pageNumFrag#", k).replaceAll("#currentPage#", g.getCurrentPage())).find("li").hoverClass();
                var k = e.find("li.j-first"),
                h = e.find("li.j-prev"),
                l = e.find("li.j-next"),
                n = e.find("li.j-last");
                g.hasPrev() ? (k.add(h).find(">span").hide(), c(h, g.getCurrentPage() - 1, g.targetType(), g.rel()), c(k, 1, g.targetType(), g.rel())) : k.add(h).addClass("disabled").find(">a").hide();
                g.hasNext() ? (l.add(n).find(">span").hide(), c(l, g.getCurrentPage() + 1, g.targetType(), g.rel()), c(n, g.numPages(), g.targetType(), g.rel())) : l.add(n).addClass("disabled").find(">a").hide();
                e.find("li.j-num>a").each(function(b) {
                    c(a(this), b + f.start, g.targetType(), g.rel())
                });
                e.find("li.jumpto").each(function() {
                    var b = a(this),
                    c = b.find(":text"),
                    d = b.find(":button");
                    d.click(function(a) { (a = c.val()) && a.isPositiveInteger() && dwzPageBreak({
                            targetType: g.targetType(),
                            rel: g.rel(),
                            data: {
                                pageNum: a
                            }
                        })
                    });
                    c.keyup(function(a) {
                        a.keyCode == DWZ.keyCode.ENTER && d.click()
                    })
                })
            })
        },
        orderBy: function(b) {
            var c = a.extend({
                targetType: "navTab",
                rel: "",
                asc: "asc",
                desc: "desc"
            },
            b);
            return this.each(function() {
                var b = a(this).css({
                    cursor: "pointer"
                }).click(function() {
                    var a = b.attr("orderField"),
                    d = b.hasClass(c.asc) ? c.desc: c.asc;
                    dwzPageBreak({
                        targetType: c.targetType,
                        rel: c.rel,
                        data: {
                            orderField: a,
                            orderDirection: d
                        }
                    })
                })
            })
        },
        pagerForm: function(b) {
            var c = a.extend({
                pagerForm$: "#pagerForm",
                parentBox: document
            },
            b);
            return this.each(function() {
                var b = a(this),
                d = a(c.pagerForm$, c.parentBox),
                f = d.attr("action").replaceAll("#rel#", b.attr("action"));
                d.attr("action", f);
                b.find(":input").each(function() {
                    var b = a(this),
                    c = b.attr("name"); ! c || b.is(":checkbox,:radio") && !b.is(":checked") || 0 != d.find(":input[name='" + c + "']").length || (b = '<input type="hidden" name="#name#" value="#value#" />'.replaceAll("#name#", c).replaceAll("#value#", b.val()), d.append(b))
                })
            })
        }
    });
    var d = function(b) {
        this.opts = a.extend({
            targetType: "navTab",
            rel: "",
            totalCount: 0,
            numPerPage: 10,
            pageNumShown: 10,
            currentPage: 1,
            callback: function() {
                return ! 1
            }
        },
        b)
    };
    a.extend(d.prototype, {
        targetType: function() {
            return this.opts.targetType
        },
        rel: function() {
            return this.opts.rel
        },
        numPages: function() {
            return Math.ceil(this.opts.totalCount / this.opts.numPerPage)
        },
        getInterval: function() {
            var a = Math.ceil(this.opts.pageNumShown / 2),
            c = this.numPages(),
            d = c - this.opts.pageNumShown,
            d = this.getCurrentPage() > a ? Math.max(Math.min(this.getCurrentPage() - a, d), 0) : 0,
            a = this.getCurrentPage() > a ? Math.min(this.getCurrentPage() + a, c) : Math.min(this.opts.pageNumShown, c);
            return {
                start: d + 1,
                end: a + 1
            }
        },
        getCurrentPage: function() {
            var a = parseInt(this.opts.currentPage);
            return isNaN(a) ? 1 : a
        },
        hasPrev: function() {
            return 1 < this.getCurrentPage()
        },
        hasNext: function() {
            return this.getCurrentPage() < this.numPages()
        }
    });
    a.fn.chgNumPerPage = function() {
        var b = a(this);
        0 < b.length && b.change(function() {
            var b = a(this),
            d = b.attr("targetType");
            "navTab" == d ? navTabPageBreak({},
            b.attr("rel"), b.attr("form")) : "dialog" == d ? dialogPageBreak({},
            b.attr("rel"), b.attr("form")) : navTabPageBreak({},
            b.attr("rel"), b.attr("form"))
        })
    }
})(jQuery); (function(a) {
    var d = {
        currentGroup: "",
        suffix: "",
        $target: null,
        pk: "id"
    },
    b = {
        _lookupPrefix: function(a) {
            return d.currentGroup + (d.currentGroup ? ".": "") + a + d.suffix
        },
        lookupPk: function(a) {
            return this._lookupPrefix(a)
        },
        lookupField: function(a) {
            return this.lookupPk(a)
        }
    };
    a.extend({
        bringBackSuggest: function(c) {
            d.$target.parents(".unitBox:first").find(":input").each(function() {
                var e = a(this),
                g = e.attr("name"),
                f;
                for (f in c) if ((d.pk == f ? b.lookupPk(f) : b.lookupField(f)) == g) {
                    e.val(c[f]);
                    break
                }
            })
        },
        bringBack: function(b) {
            a.bringBackSuggest(b);
            a.pdialog.closeCurrent()
        }
    });
    a.fn.extend({
        lookup: function() {
            return this.each(function() {
                var b = a(this),
                e = {
                    mask: !0,
                    width: b.attr("width") || 820,
                    height: b.attr("height") || 400,
                    maxable: eval(b.attr("maxable") || "true"),
                    resizable: eval(b.attr("resizable") || "true")
                };
                b.click(function(g) {
                    d = a.extend(d, {
                        currentGroup: b.attr("lookupGroup") || "",
                        suffix: b.attr("suffix") || "",
                        $target: b,
                        pk: b.attr("lookupPk") || "id"
                    });
                    g = unescape(decodeURIComponent(b.attr("href"))).replaceTmById(a(g.target).parents(".unitBox:first"));
                    if (!g.isFinishedTm()) return alertMsg.error(b.attr("warn") || DWZ.msg("alertSelectMsg")),
                    !1;
                    a.pdialog.open(g, "_blank", b.attr("title") || b.text(), e);
                    return ! 1
                })
            })
        },
        multLookup: function() {
            return this.each(function() {
                var b = a(this),
                d = {};
                b.click(function(g) {
                    b.parents(".unitBox:first").find("[name='" + b.attr("multLookup") + "']").filter(":checked").each(function() {
                        var b = DWZ.jsonEval(a(this).val()),
                        c;
                        for (c in b) d[c] = (d[c] ? d[c] + ",": "") + b[c]
                    });
                    if (a.isEmptyObject(d)) return alertMsg.error(b.attr("warn") || DWZ.msg("alertSelectMsg")),
                    !1;
                    a.bringBack(d)
                })
            })
        },
        suggest: function() {
            var c;
            c = "#suggest";
            var e = -1;
            return this.each(function() {
                function g(e) {
                    var g = h.offset(),
                    s = g.top + this.offsetHeight,
                    r = a(c);
                    0 == r.size() && (r = a('<div id="suggest"></div>').appendTo(a("body")));
                    r.css({
                        left: g.left + "px",
                        top: s + "px"
                    }).show();
                    d = a.extend(d, {
                        currentGroup: h.attr("lookupGroup") || "",
                        suffix: h.attr("suffix") || "",
                        $target: h,
                        pk: h.attr("lookupPk") || "id"
                    });
                    g = unescape(decodeURIComponent(h.attr("suggestUrl"))).replaceTmById(a(e.target).parents(".unitBox:first"));
                    if (!g.isFinishedTm()) return alertMsg.error(h.attr("warn") || DWZ.msg("alertSelectMsg")),
                    !1;
                    s = {};
                    s[h.attr("postField") || "inputValue"] = h.val();
                    a.ajax({
                        global: !1,
                        type: "POST",
                        dataType: "json",
                        url: g,
                        cache: !1,
                        data: s,
                        success: function(c) {
                            if (c) {
                                var g = "";
                                a.each(c,
                                function(a) {
                                    var b = "",
                                    c = "";
                                    for (a = 0; a < l.length; a++) {
                                        var d = this[l[a]];
                                        d && (c && (c += "-"), c += d)
                                    }
                                    for (var e in this) b && (b += ","),
                                    b += e + ":'" + this[e] + "'";
                                    g += '<li lookupAttrs="' + b + '">' + c + "</li>"
                                });
                                c = r.html("<ul>" + g + "</ul>").find("li");
                                c.hoverClass("selected").click(function() {
                                    f(a(this))
                                });
                                if (1 == c.size() && e.keyCode != DWZ.keyCode.BACKSPACE) f(c.eq(0));
                                else if (0 == c.size()) {
                                    c = "";
                                    for (var h = 0; h < l.length && b.lookupField(l[h]) != e.target.name; h++) c && (c += ","),
                                    c += l[h] + ":''";
                                    c = "{" + d.pk + ":''," + c + "}";
                                    a.bringBackSuggest(DWZ.jsonEval(c))
                                }
                            }
                        },
                        error: function() {
                            r.html("")
                        }
                    });
                    a(document).bind("click", k);
                    return ! 1
                }
                function f(b) {
                    b = "{" + b.attr("lookupAttrs") + "}";
                    a.bringBackSuggest(DWZ.jsonEval(b))
                }
                function k() {
                    a(c).html("").hide();
                    e = -1;
                    a(document).unbind("click", k)
                }
                var h = a(this).attr("autocomplete", "off").keydown(function(b) {
                    if (b.keyCode == DWZ.keyCode.ENTER && a(c).is(":visible")) return ! 1
                }),
                l = h.attr("suggestFields").split(",");
                h.focus(g).click(!1).keyup(function(b) {
                    var d = a(c).find("li");
                    switch (b.keyCode) {
                    case DWZ.keyCode.ESC:
                    case DWZ.keyCode.TAB:
                    case DWZ.keyCode.SHIFT:
                    case DWZ.keyCode.HOME:
                    case DWZ.keyCode.END:
                    case DWZ.keyCode.LEFT:
                    case DWZ.keyCode.RIGHT:
                        break;
                    case DWZ.keyCode.ENTER:
                        k();
                        break;
                    case DWZ.keyCode.DOWN:
                        e >= d.size() - 1 ? e = -1 : e++;
                        break;
                    case DWZ.keyCode.UP:
                        0 > e ? e = d.size() - 1 : e--;
                        break;
                    default:
                        g(b)
                    }
                    d.removeClass("selected");
                    0 <= e && (b = d.eq(e).addClass("selected"), f(b))
                })
            })
        },
        itemDetail: function() {
            function b(c) {
                c.find(">tr").each(function(b) {
                    a(":input, a.btnLook, a.btnAttach", this).each(function() {
                        var c = a(this),
                        d = c.attr("name"),
                        e = c.val();
                        d && c.attr("name", d.replaceSuffix(b)); (d = c.attr("lookupGroup")) && c.attr("lookupGroup", d.replaceSuffix(b)); (d = c.attr("suffix")) && c.attr("suffix", d.replaceSuffix(b));
                        e && 0 <= e.indexOf("#index#") && c.val(e.replace("#index#", b + 1))
                    })
                })
            }
            function d(b) {
                var c = "",
                e = "";
                b.name.endsWith("[#index#]") ? e = "[#index#]": b.name.endsWith("[]") && (e = "[]");
                var g = e ? ' suffix="' + e + '" ': "",
                n = "";
                if (b.fieldAttrs) {
                    var p = DWZ.jsonEval(b.fieldAttrs),
                    s;
                    for (s in p) n += s + '="' + p[s] + '"'
                }
                switch (b.type) {
                case "del":
                    c = '<a href="javascript:void(0)" class="btnDel ' + b.fieldClass + '">\u5220\u9664</a>';
                    break;
                case "lookup":
                    var r = "";
                    b.suggestFields && (r = 'autocomplete="off" lookupGroup="' + b.lookupGroup + '"' + g + ' suggestUrl="' + b.suggestUrl + '" suggestFields="' + b.suggestFields + '" postField="' + b.postField + '"');
                    c = '<input type="hidden" name="' + b.lookupGroup + "." + b.lookupPk + e + '"/><input type="text" name="' + b.name + '"' + r + ' lookupPk="' + b.lookupPk + '" size="' + b.size + '" class="' + b.fieldClass + '"/><a class="btnLook" href="' + b.lookupUrl + '" lookupGroup="' + b.lookupGroup + '" ' + r + ' lookupPk="' + b.lookupPk + '" title="\u67e5\u627e\u5e26\u56de">\u67e5\u627e\u5e26\u56de</a>';
                    break;
                case "attach":
                    c = '<input type="hidden" name="' + b.lookupGroup + "." + b.lookupPk + e + '"/><input type="text" name="' + b.name + '" size="' + b.size + '" readonly="readonly" class="' + b.fieldClass + '"/><a class="btnAttach" href="' + b.lookupUrl + '" lookupGroup="' + b.lookupGroup + '" ' + r + ' lookupPk="' + b.lookupPk + '" width="560" height="300" title="\u67e5\u627e\u5e26\u56de">\u67e5\u627e\u5e26\u56de</a>';
                    break;
                case "enum":
                    a.ajax({
                        type:
                        "POST",
                        dataType: "html",
                        async: !1,
                        url: b.enumUrl,
                        data: {
                            inputName: b.name
                        },
                        success: function(a) {
                            c = a
                        }
                    });
                    break;
                case "date":
                    c = '<input type="text" name="' + b.name + '" value="' + b.defaultVal + '" class="date ' + b.fieldClass + '" dateFmt="' + b.patternDate + '" size="' + b.size + '"/><a class="inputDateButton" href="javascript:void(0)">\u9009\u62e9</a>';
                    break;
                default:
                    c = '<input type="text" name="' + b.name + '" value="' + b.defaultVal + '" size="' + b.size + '" class="' + b.fieldClass + '" ' + n + "/>"
                }
                return "<td>" + c + "</td>"
            }
            function g(b) {
                var c = "";
                a(b).each(function() {
                    c += d(this)
                });
                return '<tr class="unitBox">' + c + "</tr>"
            }
            return this.each(function() {
                var d = a(this).css("clear", "both"),
                e = d.find("tbody"),
                h = [];
                d.find("tr:first th[type]").each(function(b) {
                    b = a(this);
                    b = {
                        type: b.attr("type") || "text",
                        patternDate: b.attr("dateFmt") || "yyyy-MM-dd",
                        name: b.attr("name") || "",
                        defaultVal: b.attr("defaultVal") || "",
                        size: b.attr("size") || "12",
                        enumUrl: b.attr("enumUrl") || "",
                        lookupGroup: b.attr("lookupGroup") || "",
                        lookupUrl: b.attr("lookupUrl") || "",
                        lookupPk: b.attr("lookupPk") || "id",
                        suggestUrl: b.attr("suggestUrl"),
                        suggestFields: b.attr("suggestFields"),
                        postField: b.attr("postField") || "",
                        fieldClass: b.attr("fieldClass") || "",
                        fieldAttrs: b.attr("fieldAttrs") || ""
                    };
                    h.push(b)
                });
                e.find("a.btnDel").click(function() {
                    function d() {
                        a.ajax({
                            type: "POST",
                            dataType: "json",
                            url: f.attr("href"),
                            cache: !1,
                            success: function() {
                                f.parents("tr:first").remove();
                                b(e)
                            },
                            error: DWZ.ajaxError
                        })
                    }
                    var f = a(this);
                    if (f.is("[href^=javascript:]")) return f.parents("tr:first").remove(),
                    b(e),
                    !1;
                    f.attr("title") ? alertMsg.confirm(f.attr("title"), {
                        okCall: d
                    }) : d();
                    return ! 1
                });
                var l = d.attr("addButton") || "Add New",
                n = d.attr("type");
                if (l) {
                    var l = a('<div class="button"><div class="buttonContent"><button type="button">' + l + "</button></div></div>").insertBefore(d).find("button"),
                    p = a('<input type="text" name="dwz_rowNum" class="textInput" style="margin:2px;' + (n ? "display:none;": "") + '" value="1" size="2"/>').insertBefore(d),
                    s = "";
                    l.click(function() {
                        s || (s = g(h));
                        var d = 1;
                        try {
                            d = parseInt(p.val())
                        } catch(f) {}
                        for (var n = 0; n < d; n++) a(s).appendTo(e).initUI().find("a.btnDel").click(function() {
                            a(this).parents("tr:first").remove();
                            b(e);
                            return ! 1
                        });
                        b(e)
                    })
                }
            })
        },
        selectedTodo: function() {
            function b(c, d) {
                var f = ""; ("dialog" == d ? a.pdialog.getCurrent() : navTab.getCurrentPanel()).find("input:checked").filter("[name='" + c + "']").each(function(b) {
                    var c = a(this).val();
                    f += 0 == b ? c: "," + c
                });
                return f
            }
            return this.each(function() {
                var d = a(this),
                g = d.attr("rel") || "ids",
                f = d.attr("postType") || "map";
                d.click(function() {
                    var k = d.attr("targetType"),
                    h = b(g, k);
                    if (!h) return alertMsg.error(d.attr("warn") || DWZ.msg("alertSelectMsg")),
                    !1;
                    var l = d.attr("fill");
                    if (l) {
                        var n = a("#" + l);
                        n.loadUrl(d.attr("href"),
                        function() {
                            if ("map" == f) return a.map(h.split(","),
                            function(a, b) {
                                return {
                                    name: g,
                                    value: a
                                }
                            });
                            var b = {};
                            b[g] = h;
                            return b
                        } (),
                        function() {
                            n.find("[layoutH]").layoutH()
                        })
                    } else {
                        var p = d.attr("callback") || ("dialog" == k ? dialogAjaxDone: navTabAjaxDone);
                        a.isFunction(p) || (p = eval("(" + p + ")"));
                        k = function() {
                            a.ajax({
                                type: "POST",
                                url: d.attr("href"),
                                dataType: "json",
                                cache: !1,
                                data: function() {
                                    if ("map" == f) return a.map(h.split(","),
                                    function(a, b) {
                                        return {
                                            name: g,
                                            value: a
                                        }
                                    });
                                    var b = {};
                                    b[g] = h;
                                    return b
                                } (),
                                success: p,
                                error: DWZ.ajaxError
                            })
                        }; (l = d.attr("title")) ? alertMsg.confirm(l, {
                            okCall: k
                        }) : k()
                    }
                    return ! 1
                })
            })
        }
    })
})(jQuery); (function(a) {
    a.setRegional("datepicker", {
        dayNames: "Sun Mon Tue Wed Thu Fri Sat".split(" "),
        monthNames: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" ")
    });
    a.fn.datepicker = function(b) {
        function c(b) {
            var c = a(k.tmBox$);
            c.removeClass("hh").removeClass("mm").removeClass("ss");
            b && (c.addClass(b), a(k.tmInputs$).removeClass("slt").filter("." + b).addClass("slt"))
        }
        function e(b, c) {
            a(k.tmBox$).find("." + c + " li").each(function() {
                var c = a(this);
                c.click(function() {
                    b.val(c.text())
                })
            })
        }
        function g(a) {
            if (! (48 <= a.keyCode && 57 >= a.keyCode || a.keyCode == DWZ.keyCode.DELETE || a.keyCode == DWZ.keyCode.BACKSPACE)) return ! 1
        }
        function f(a, b) {
            var c = parseInt(a.val()),
            d = parseInt(a.attr("start")) || 0,
            e = parseInt(a.attr("end")),
            f = parseInt(a.attr("step") || 1);
            1 == b ? c <= e - f && a.val(c + f) : -1 == b ? c >= d + f && a.val(c - f) : c > e ? a.val(e) : c < d && a.val(d)
        }
        var k = {
            box$: "#calendar",
            year$: "#calendar [name=year]",
            month$: "#calendar [name=month]",
            tmInputs$: "#calendar .time :text",
            hour$: "#calendar .time .hh",
            minute$: "#calendar .time .mm",
            second$: "#calendar .time .ss",
            tmBox$: "#calendar .tm",
            tmUp$: "#calendar .time .up",
            tmDown$: "#calendar .time .down",
            close$: "#calendar .close",
            calIcon$: "a.inputDateButton",
            main$: "#calendar .main",
            days$: "#calendar .days",
            dayNames$: "#calendar .dayNames",
            clearBut$: "#calendar .clearBut",
            okBut$: "#calendar .okBut"
        };
        return this.each(function() {
            function h(b) {
                var d = b.getDateWrap(),
                h = b.getMinDate(),
                q = b.getMaxDate(),
                t = new Date(d.year, d.month - 1, 1),
                u = t.getDay(),
                w = "";
                if (0 < u) {
                    t.setMonth(t.getMonth() - 1);
                    for (var t = b.getDateWrap(t), v = t.days - u + 1; v <= t.days; v++) var A = new Date(d.year, d.month - 2, v),
                    A = A >= h && A <= q ? "": "disabled",
                    w = w + ('<dd class="other ' + A + '" chMonth="-1" day="' + v + '">' + v + "</dd>")
                }
                for (v = 1; v <= d.days; v++) A = new Date(d.year, d.month - 1, v),
                A = A >= h && A <= q ? "": "disabled",
                w = v == d.day ? w + ('<dd class="slt ' + A + '" day="' + v + '">' + v + "</dd>") : w + ('<dd class="' + A + '" day="' + v + '">' + v + "</dd>");
                for (v = 1; v <= 42 - u - d.days; v++) A = new Date(d.year, d.month, v),
                A = A >= h && A <= q ? "": "disabled",
                w += '<dd class="other ' + A + '" chMonth="1" day="' + v + '">' + v + "</dd>";
                var E = a(k.days$).html(w).find("dd");
                E.not(".disabled").click(function() {
                    var c = a(this);
                    b.hasTime() ? (E.removeClass("slt"), c.addClass("slt")) : (n.val(b.formatDate(b.changeDay(c.attr("day"), c.attr("chMonth")))), l())
                });
                b.hasDate() || a(k.main$).addClass("nodate");
                if (b.hasTime()) {
                    a("#calendar .time").show();
                    h = a(k.hour$).val(d.hour).focus(function() {
                        c("hh")
                    });
                    q = parseInt(d.minute / b.opts.mmStep) * b.opts.mmStep;
                    q = a(k.minute$).val(q).attr("step", b.opts.mmStep).focus(function() {
                        c("mm")
                    });
                    d = a(k.second$).val(b.hasSecond() ? d.second: 0).attr("step", b.opts.ssStep).focus(function() {
                        c("ss")
                    });
                    h.add(q).add(d).click(function() {
                        return ! 1
                    });
                    e(h, "hh");
                    e(q, "mm");
                    e(d, "ss");
                    a(k.box$).click(function() {
                        c()
                    });
                    var z = a(k.tmInputs$);
                    z.keydown(g).each(function() {
                        var b = a(this);
                        b.keyup(function() {
                            f(b, 0)
                        })
                    });
                    a(k.tmUp$).click(function() {
                        z.filter(".slt").each(function() {
                            f(a(this), 1)
                        })
                    });
                    a(k.tmDown$).click(function() {
                        z.filter(".slt").each(function() {
                            f(a(this), -1)
                        })
                    });
                    b.hasHour() || h.attr("disabled", !0);
                    b.hasMinute() || q.attr("disabled", !0);
                    b.hasSecond() || d.attr("disabled", !0)
                }
            }
            function l() {
                a(k.box$).remove();
                a(document).unbind("click", l)
            }
            var n = a(this);
            new d(n.val(), b);
            n.click(function(c) {
                l();
                var e = new d(n.val(), b);
                c = n.offset();
                var f = c.top + this.offsetHeight;
                a(DWZ.frag.calendarFrag).appendTo("body").css({
                    left: c.left + "px",
                    top: f + "px"
                }).show().click(function(a) {
                    a.stopPropagation()
                });
                a.fn.bgiframe && a(k.box$).bgiframe();
                var g = "";
                a.each(a.regional.datepicker.dayNames,
                function(a, b) {
                    g += "<dt>" + b + "</dt>"
                });
                a(k.dayNames$).html(g);
                var t = e.getDateWrap(),
                u = a(k.year$),
                w = e.getMinDate().getFullYear(),
                v = e.getMaxDate().getFullYear();
                for (y = w; y <= v; y++) u.append('<option value="' + y + '"' + (t.year == y ? 'selected="selected"': "") + ">" + y + "</option>");
                var A = a(k.month$);
                a.each(a.regional.datepicker.monthNames,
                function(a, b) {
                    var c = a + 1;
                    A.append('<option value="' + c + '"' + (t.month == c ? 'selected="selected"': "") + ">" + b + "</option>")
                });
                h(e);
                u.add(A).change(function() {
                    e.changeDate(u.val(), A.val());
                    h(e)
                });
                w = a(k.box$).outerHeight(!0);
                f > w && f > a(window).height() - w && a(k.box$).css("top", c.top - w);
                a(k.close$).click(function() {
                    l()
                });
                a(k.clearBut$).click(function() {
                    n.val("");
                    l()
                });
                a(k.okBut$).click(function() {
                    var b = a(k.days$).find("dd.slt");
                    if (b.hasClass("disabled")) return ! 1;
                    b = e.changeDay(b.attr("day"), b.attr("chMonth"));
                    e.hasTime() && (b.setHours(parseInt(a(k.hour$).val())), b.setMinutes(parseInt(a(k.minute$).val())), b.setSeconds(parseInt(a(k.second$).val())));
                    n.val(e.formatDate(b));
                    l()
                });
                a(document).bind("click", l);
                return ! 1
            });
            n.parent().find(k.calIcon$).click(function() {
                n.trigger("click");
                return ! 1
            })
        })
    };
    var d = function(b, c) {
        this.opts = a.extend({
            pattern: "yyyy-MM-dd",
            minDate: "1900-01-01",
            maxDate: "2099-12-31",
            mmStep: 1,
            ssStep: 1
        },
        c);
        var d = new Date;
        this.opts.minDate = d.formatDateTm(this.opts.minDate);
        this.opts.maxDate = d.formatDateTm(this.opts.maxDate);
        this.sDate = b.trim()
    };
    a.extend(d.prototype, {
        get: function(a) {
            return this.opts[a]
        },
        _getDays: function(a, c) {
            return 2 == c ? a % 4 || !(a % 100) && a % 400 ? 28 : 29 : /4|6|9|11/.test(c) ? 30 : 31
        },
        _minMaxDate: function(a) {
            var c = a.split("-").length - 1,
            d = "y-M-d";
            1 == c ? d = "y-M": 0 == c && (d = "y");
            return a.parseDate(d)
        },
        getMinDate: function() {
            return this._minMaxDate(this.opts.minDate)
        },
        getMaxDate: function() {
            var a = this.opts.maxDate,
            c = a.split("-").length - 1,
            a = this._minMaxDate(a);
            if (2 > c) {
                var d = this._getDays(a.getFullYear(), a.getMonth() + 1);
                a.setDate(d);
                0 == c && a.setMonth(11)
            }
            return a
        },
        getDateWrap: function(a) {
            a || (a = this.parseDate(this.sDate) || new Date);
            var c = a.getFullYear(),
            d = a.getMonth() + 1,
            g = this._getDays(c, d);
            return {
                year: c,
                month: d,
                day: a.getDate(),
                hour: a.getHours(),
                minute: a.getMinutes(),
                second: a.getSeconds(),
                days: g,
                date: a
            }
        },
        changeDate: function(a, c, d) {
            a = new Date(a, c - 1, d || 1);
            this.sDate = this.formatDate(a);
            return a
        },
        changeDay: function(a, c) {
            c || (c = 0);
            var d = this.getDateWrap();
            return this.changeDate(d.year, d.month + parseInt(c), a)
        },
        parseDate: function(a) {
            return a ? a.parseDate(this.opts.pattern) : null
        },
        formatDate: function(a) {
            return a.formatDate(this.opts.pattern)
        },
        hasHour: function() {
            return - 1 != this.opts.pattern.indexOf("H")
        },
        hasMinute: function() {
            return - 1 != this.opts.pattern.indexOf("m")
        },
        hasSecond: function() {
            return - 1 != this.opts.pattern.indexOf("s")
        },
        hasTime: function() {
            return this.hasHour() || this.hasMinute() || this.hasSecond()
        },
        hasDate: function() {
            for (var a = ["y", "M", "d", "E"], c = 0; c < a.length; c++) if ( - 1 != this.opts.pattern.indexOf(a[c])) return ! 0;
            return ! 1
        }
    })
})(jQuery); (function(a) {
    a.extend(a.fn, {
        jBlindUp: function(d) {
            var b = a.extend({
                duration: 500,
                easing: "swing",
                call: function() {}
            },
            d);
            return this.each(function() {
                var c = a(this);
                a(this).animate({
                    height: 0
                },
                {
                    step: function() {},
                    duration: b.duration,
                    easing: b.easing,
                    complete: function() {
                        c.css({
                            display: "none"
                        });
                        b.call()
                    }
                })
            })
        },
        jBlindDown: function(d) {
            var b = a.extend({
                to: 0,
                duration: 500,
                easing: "swing",
                call: function() {}
            },
            d);
            return this.each(function() {
                var c = a(this),
                d = 0 < b.to ? b.to: a.effect.getDimensions(c[0]).height;
                c.animate({
                    height: d
                },
                {
                    step: function() {},
                    duration: b.duration,
                    easing: b.easing,
                    complete: function() {
                        c.css({
                            display: ""
                        });
                        b.call()
                    }
                })
            })
        },
        jSlideUp: function(d) {
            var b = a.extend({
                to: 0,
                duration: 500,
                easing: "swing",
                call: function() {}
            },
            d);
            return this.each(function() {
                var c = a(this);
                c.wrapInner("<div></div>");
                var d = 0 < b.to ? b.to: a.effect.getDimensions(a(">div", c)[0]).height;
                c.css({
                    overflow: "visible",
                    position: "relative"
                });
                a(">div", c).css({
                    position: "relative"
                }).animate({
                    top: -d
                },
                {
                    easing: b.easing,
                    duration: b.duration,
                    complete: function() {
                        c.html(a(this).html())
                    }
                })
            })
        },
        jSlideDown: function(d) {
            var b = a.extend({
                to: 0,
                duration: 500,
                easing: "swing",
                call: function() {}
            },
            d);
            return this.each(function() {
                var c = a(this),
                d = 0 < b.to ? b.to: a.effect.getDimensions(c[0]).height;
                c.wrapInner('<div style="top:-' + d + 'px;"></div>');
                c.css({
                    overflow: "visible",
                    position: "relative",
                    height: "0px"
                }).animate({
                    height: d
                },
                {
                    duration: b.duration,
                    easing: b.easing,
                    complete: function() {
                        c.css({
                            display: "",
                            overflow: ""
                        });
                        b.call()
                    }
                });
                a(">div", c).css({
                    position: "relative"
                }).animate({
                    top: 0
                },
                {
                    easing: b.easing,
                    duration: b.duration,
                    complete: function() {
                        c.html(a(this).html())
                    }
                })
            })
        }
    });
    a.effect = {
        getDimensions: function(d, b) {
            var c = new a.effect.Rectangle,
            e = a(d).css("display"),
            g = a(d).css("visibility"),
            f = 0 == a(d).height() ? !0 : !1;
            a(d).is(":hidden") && (a(d).css({
                visibility: "hidden",
                display: "block"
            }), f && a(d).css("height", ""), a.browser.opera && refElement.focus());
            c.height = a(d).outerHeight();
            c.width = a(d).outerWidth();
            "none" == e && (a(d).css({
                visibility: g,
                display: "none"
            }), f && f && a(d).css("height", "0px"));
            return c
        }
    };
    a.effect.Rectangle = function() {
        this.height = this.width = 0;
        this.unit = "px"
    }
})(jQuery); (function(a) {
    a.extend(a.fn, {
        jPanel: function(d) {
            var b = a.extend({
                header: "panelHeader",
                headerC: "panelHeaderContent",
                content: "panelContent",
                coll: "collapsable",
                exp: "expandable",
                footer: "panelFooter",
                footerC: "panelFooterContent"
            },
            d);
            return this.each(function() {
                var c = a(this),
                d = c.hasClass("close"),
                g = c.hasClass("collapse"),
                f = a(">div", c).addClass(b.content),
                k = a(">h1", c).wrap('<div class="' + b.header + '"><div class="' + b.headerC + '"></div></div>');
                g && a('<a href=""></a>').addClass(d ? b.exp: b.coll).insertAfter(k);
                k = a(">div:first", c);
                a('<div class="' + b.footer + '"><div class="' + b.footerC + '"></div></div>').appendTo(c);
                var h = c.attr("defH") ? c.attr("defH") : 0,
                l = c.attr("minH") ? c.attr("minH") : 0;
                d ? f.css({
                    height: "0px",
                    display: "none"
                }) : 0 < h ? f.height(h + "px") : 0 < l && f.css("minHeight", l + "px");
                if (g) {
                    var n = a("a", k),
                    p = f.innerHeight() - 6,
                    h = 0 < l && l >= p ? l: p;
                    n.click(function() {
                        n.hasClass(b.exp) ? f.jBlindDown({
                            to: h,
                            call: function() {
                                n.removeClass(b.exp).addClass(b.coll);
                                0 < l && f.css("minHeight", l + "px")
                            }
                        }) : (0 < l && f.css("minHeight", ""), l >= p && f.css("height", l + "px"), f.jBlindUp({
                            call: function() {
                                n.removeClass(b.coll).addClass(b.exp)
                            }
                        }));
                        return ! 1
                    })
                }
            })
        }
    })
})(jQuery); (function(a) {
    a.fn.extend({
        checkboxCtrl: function(d) {
            return this.each(function() {
                var b = a(this);
                b.click(function() {
                    var c = b.attr("group");
                    if (b.is(":checkbox")) {
                        var e = b.is(":checked") ? "all": "none";
                        c && a.checkbox.select(c, e, d)
                    } else c && a.checkbox.select(c, b.attr("selectType") || "all", d)
                })
            })
        }
    });
    a.checkbox = {
        selectAll: function(a, b) {
            this.select(a, "all", b)
        },
        unSelectAll: function(a, b) {
            this.select(a, "none", b)
        },
        selectInvert: function(a, b) {
            this.select(a, "invert", b)
        },
        select: function(d, b, c) {
            $parent = a(c || document);
            $checkboxLi = $parent.find(":checkbox[name='" + d + "']");
            switch (b) {
            case "invert":
                $checkboxLi.each(function() {
                    $checkbox = a(this);
                    $checkbox.attr("checked", !$checkbox.is(":checked"))
                });
                break;
            case "none":
                $checkboxLi.attr("checked", !1);
                break;
            default:
                $checkboxLi.attr("checked", !0)
            }
        }
    }
})(jQuery); (function(a) {
    var d = [],
    b = function(c) {
        a.each(d,
        function(e) {
            d[e] != c && (a("#" + d[e])[0] ? a("#op_" + d[e]).css({
                height: "",
                width: ""
            }).hide() : a("#op_" + d[e]).remove(), a(document).unbind("click", b))
        })
    };
    a.extend(a.fn, {
        comboxSelect: function(c) {
            var e = a.extend({
                selector: ">a"
            },
            c);
            return this.each(function() {
                var c = a(this),
                f = a(e.selector, c);
                d.push(c.attr("id"));
                a(e.selector, c).click(function() {
                    var d = a("#op_" + c.attr("id"));
                    if (d.is(":hidden")) {
                        300 < d.height() && d.css({
                            height: "300px",
                            overflow: "scroll"
                        });
                        var e = c.offset().top + c[0].offsetHeight - 50;
                        e + d.height() > a(window).height() - 20 && (e = a(window).height() - 20 - d.height());
                        d.css({
                            top: e,
                            left: c.offset().left
                        }).show();
                        b(c.attr("id"));
                        a(document).click(b)
                    } else a(document).unbind("click", b),
                    b();
                    return ! 1
                });
                a("#op_" + c.attr("id")).find(">li").comboxOption(f, c)
            })
        },
        comboxOption: function(b, d) {
            return this.each(function() {
                a(">a", this).click(function() {
                    var g = a(this);
                    g.parent().parent().find(".selected").removeClass("selected");
                    g.addClass("selected");
                    b.text(g.text());
                    a("select", d).val() != g.attr("value") && a("select", d).val(g.attr("value")).trigger("change")
                })
            })
        },
        combox: function() {
            var b = [];
            a.each(d,
            function(e) {
                a("#" + d[e])[0] ? b.push(d[e]) : a("#op_" + d[e]).remove()
            });
            d = b;
            return this.each(function(b) {
                var c = a(this).removeClass("combox"),
                d = c.attr("name"),
                k = c.val(),
                h = a("option[value=" + k + "]", c).text(),
                l = c.attr("ref"),
                n = c.attr("refUrl") || "";
                b = c.attr("id") || Math.round(1E7 * Math.random());
                var d = '<div class="combox"><div id="combox_' + b + '" class="select"' + (l ? ' ref="' + l + '"': "") + ">" + ('<a href="javascript:" class="' + c.attr("class") + '" name="' + d + '" value="' + k + '">' + h + "</a></div></div>"),
                p = '<ul class="comboxop" id="op_combox_' + b + '">';
                a("option", c).each(function() {
                    var b = a(this);
                    p += '<li><a class="' + (k == b[0].value ? "selected": "") + '" href="#" value="' + b[0].value + '">' + b[0].text + "</a></li>"
                });
                p += "</ul>";
                a("body").append(p);
                c.after(d);
                a("div.select", c.next()).comboxSelect().append(c);
                l && n && (b = function(b) {
                    var d = a("#" + l);
                    if (0 == d.size()) return ! 1;
                    a.ajax({
                        type: "POST",
                        dataType: "json",
                        url: n.replace("{value}", encodeURIComponent(c.attr("value"))),
                        cache: !1,
                        data: {},
                        success: function(b) {
                            if (b) {
                                var c = "";
                                a.each(b,
                                function(a) {
                                    b[a] && 1 < b[a].length && (c += '<option value="' + b[a][0] + '">' + b[a][1] + "</option>")
                                });
                                var e = d.parents("div.combox:first");
                                d.html(c).insertAfter(e);
                                e.remove();
                                d.trigger("change").combox()
                            }
                        },
                        error: DWZ.ajaxError
                    })
                },
                c.unbind("change", b).bind("change", b))
            })
        }
    })
})(jQuery); (function(a) {
    a.extend({
        History: {
            _hash: [],
            _cont: void 0,
            _currentHash: "",
            _callback: void 0,
            init: function(d, b) {
                a.History._cont = d;
                a.History._callback = b;
                var c = location.hash.replace(/\?.*$/, "");
                a.History._currentHash = c;
                if (a.browser.msie) {
                    "" == a.History._currentHash && (a.History._currentHash = "#");
                    a("body").append('<iframe id="jQuery_history" style="display: none;" src="about:blank"></iframe>');
                    var e = a("#jQuery_history")[0],
                    e = e.contentDocument || e.contentWindow.document;
                    e.open();
                    e.close();
                    e.location.hash = c
                }
                a.isFunction(this._callback) && a.History._callback(c.skipChar("#"));
                setInterval(a.History._historyCheck, 100)
            },
            _historyCheck: function() {
                var d = "",
                d = a.browser.msie ? a("#jQuery_history")[0].contentWindow.location.hash.skipChar("#").replace(/\?.*$/, "") : location.hash.skipChar("#").replace(/\?.*$/, "");
                d != a.History._currentHash && (a.History._currentHash = d, a.History.loadHistory(d))
            },
            addHistory: function(d, b, c) {
                a.History._currentHash = d;
                a.History._hash.push([d, b, c]);
                a.browser.msie && (b = a("#jQuery_history")[0], b = b.contentDocument || b.contentWindow.document, b.open(), b.close(), b.location.hash = d.replace(/\?.*$/, ""));
                location.hash = d.replace(/\?.*$/, "")
            },
            loadHistory: function(d) {
                a.browser.msie && (location.hash = d);
                for (var b = 0; b < a.History._hash.length; b += 1) if (a.History._hash[b][0] == d) {
                    a.History._hash[b][1](a.History._hash[b][2]);
                    break
                }
            }
        }
    })
})(jQuery); (function(a) {
    a.printBox = function(d) {
        d = d ? a("#" + d) : a("body");
        var b = a("#printBox");
        0 == b.size() && (b = a('<div id="printBox"></div>').appendTo("body"));
        b.html(d.html()).find("[layoutH]").height("auto");
        window.print()
    }
})(jQuery); (function(a) {
    a.extend(a.pdialog, {
        closeCurrentRefresh: function(d) {
            d.statusCode == DWZ.statusCode.error ? d.message && alertMsg && alertMsg.error(d.message) : d.statusCode == DWZ.statusCode.timeout ? alertMsg ? alertMsg.error(d.message || DWZ.msg("sessionTimout"), {
                okCall: DWZ.loadLogin
            }) : DWZ.loadLogin() : d.warnMessage && alertMsg ? alertMsg.error(d.warnMessage) : d.infoMessage && alertMsg ? alertMsg.info(d.infoMessage) : d.message && alertMsg && (alertMsg.correct(d.message), d = a("#pagerForm", navTab.getCurrentPanel()).get(0) || a("form", navTab.getCurrentPanel()).get(0), navTabSearch(d), a.pdialog.closeCurrent())
        }
    })
})(jQuery); (function(a) {
    a.fn.extend({
        getWindowSize: function() {
            return a.browser.opera ? {
                width: window.innerWidth,
                height: window.innerHeight
            }: {
                width: a(window).width(),
                height: a(window).height()
            }
        },
        scrollCenter: function(d) {
            var b = a.extend({
                z: 1E6,
                mode: "WH"
            },
            d),
            c = this.getWindowSize();
            return this.each(function() {
                var d = a(this).css({
                    position: "absolute",
                    "z-index": b.z
                }),
                g = a(document).scrollTop(),
                f = a(document).scrollLeft(),
                k = (c.height - d.height()) / 2 + g,
                h = (c.width - d.width()) / 2 + f;
                "W" == b.mode ? d.appendTo(document.body).css({
                    left: h + "px"
                }) : "H" == b.model ? d.appendTo(document.body).css({
                    top: k + "px"
                }) : d.appendTo(document.body).css({
                    top: (c.height - d.height()) / 2 + a(window).scrollTop() + "px",
                    left: h + "px"
                });
                a(window).scroll(function(c) {
                    d.getWindowSize();
                    c = a(document).scrollTop();
                    var n = a(document).scrollLeft();
                    k += c - g;
                    h += n - f;
                    g = c;
                    f = n;
                    "W" == b.mode ? d.stop().animate({
                        left: h + "px"
                    }) : "H" == b.mode ? d.stop().animate({
                        top: k + "px"
                    }) : d.stop().animate({
                        top: k + "px",
                        left: h + "px"
                    })
                });
                a(window).resize(function() {
                    var c = d.getWindowSize();
                    k = (c.height - d.height()) / 2 + a(document).scrollTop();
                    h = (c.width - d.width()) / 2 + a(document).scrollLeft();
                    "W" == b.mode ? d.stop().animate({
                        left: h + "px"
                    }) : "H" == b.mode ? d.stop().animate({
                        top: k + "px"
                    }) : d.stop().animate({
                        top: k + "px",
                        left: h + "px"
                    })
                })
            })
        }
    })
})(jQuery); (function(a) {
    a.validator && (a.validator.addMethod("alphanumeric",
    function(a, b) {
        return this.optional(b) || /^\w+$/i.test(a)
    },
    "Letters, numbers or underscores only please"), a.validator.addMethod("lettersonly",
    function(a, b) {
        return this.optional(b) || /^[a-z]+$/i.test(a)
    },
    "Letters only please"), a.validator.addMethod("phone",
    function(a, b) {
        return this.optional(b) || /^[0-9 \(\)]{7,30}$/.test(a)
    },
    "Please specify a valid phone number"), a.validator.addMethod("mobilePhone",
    function(a, b) {
        return this.optional(b) || /^(13[0-9]{9})|(15[012356789][0-9]{8})|(14[57][0-9]{8})|(18[0256789][0-9]{8})$/.test(a)
    },
    "Please specify a valid mobilePhone number"), a.validator.addMethod("telePhone",
    function(a, b) {
        return this.optional(b) || /(^[0-9]{3,4}-[0-9]{3,8}$)|(^[0-9]{3,8}$)|(^([0-9]{3,4})[0-9]{3,8}$)|(^0{0,1}13[0-9]{9}$)/.test(a)
    },
    "Please specify a valid telePhone number"), a.validator.addMethod("postcode",
    function(a, b) {
        return this.optional(b) || /^[0-9 A-Za-z]{5,20}$/.test(a)
    },
    "Please specify a valid postcode"), a.validator.addMethod("date",
    function(d, b) {
        d = d.replace(/\s+/g, "");
        if (String.prototype.parseDate) {
            var c = a(b),
            e = c.attr("dateFmt") || "yyyy-MM-dd";
            return ! c.val() || c.val().parseDate(e)
        }
        return this.optional(b) || d.match(/^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/)
    },
    "Please enter a valid date."), a.validator.addMethod("dateAfter",
    function(d, b, c) {
        if (c && a(c)) {
            if (String.prototype.parseDate) {
                d = a(b);
                c = a(c);
                b = d.attr("dateFmt") || "yyyy-MM-dd";
                var e = c.attr("dateFmt") || "yyyy-MM-dd";
                return "" == c.val().replace(/\s+/g, "") ? !1 : d.val().replace(/\s+/g, "").parseDate(b).getTime() >= c.val().replace(/\s+/g, "").parseDate(e).getTime()
            }
            return ! 0
        }
        return ! 1
    },
    "Please enter a bigger date."), a.validator.addMethod("dateBefore",
    function(d, b, c) {
        if (c && a(c)) {
            if (String.prototype.parseDate) {
                d = a(b);
                c = a(c);
                b = d.attr("dateFmt") || "yyyy-MM-dd";
                var e = c.attr("dateFmt") || "yyyy-MM-dd";
                return "" == c.val().replace(/\s+/g, "") ? !1 : d.val().replace(/\s+/g, "").parseDate(b).getTime() <= c.val().replace(/\s+/g, "").parseDate(e).getTime()
            }
            return ! 0
        }
        return ! 1
    },
    "Please enter a smaller date."), a.validator.addMethod("customvalid",
    function(a, b, c) {
        try {
            return eval("(" + c + ")")
        } catch(e) {
            return ! 1
        }
    },
    "Please fix this field."), a.validator.addClassRules({
        date: {
            date: !0
        },
        alphanumeric: {
            alphanumeric: !0
        },
        lettersonly: {
            lettersonly: !0
        },
        phone: {
            phone: !0
        },
        postcode: {
            postcode: !0
        }
    }), a.validator.setDefaults({
        errorElement: "span"
    }), a.validator.autoCreateRanges = !0)
})(jQuery); (function() {
    window.CKEDITOR && window.CKEDITOR.dom || (window.CKEDITOR || (window.CKEDITOR = function() {
        var a = {
            timestamp: "D8LD",
            version: "4.2.1 DEV (Full)",
            revision: "884a6b9",
            rnd: Math.floor(900 * Math.random()) + 100,
            _: {
                pending: []
            },
            status: "unloaded",
            basePath: function() {
                var a = window.CKEDITOR_BASEPATH || "";
                if (!a) for (var b = document.getElementsByTagName("script"), d = 0; d < b.length; d++) {
                    var f = b[d].src.match(/(^|.*[\\\/])ckeditor(?:_basic)?(?:_source)?.js(?:\?.*)?$/i);
                    if (f) {
                        a = f[1];
                        break
                    }
                } - 1 == a.indexOf(":/") && (a = 0 === a.indexOf("/") ? location.href.match(/^.*?:\/\/[^\/]*/)[0] + a: location.href.match(/^[^\?]*\/(?:)/)[0] + a);
                if (!a) throw 'The CKEditor installation path could not be automatically detected. Please set the global variable "CKEDITOR_BASEPATH" before creating editor instances.';
                return a
            } (),
            getUrl: function(a) { - 1 == a.indexOf(":/") && 0 !== a.indexOf("/") && (a = this.basePath + a);
                this.timestamp && "/" != a.charAt(a.length - 1) && !/[&?]t=/.test(a) && (a += (0 <= a.indexOf("?") ? "&": "?") + "t=" + this.timestamp);
                return a
            },
            domReady: function() {
                function a() {
                    try {
                        document.addEventListener ? (document.removeEventListener("DOMContentLoaded", a, !1), b()) : document.attachEvent && "complete" === document.readyState && (document.detachEvent("onreadystatechange", a), b())
                    } catch(d) {}
                }
                function b() {
                    for (var a; a = d.shift();) a()
                }
                var d = [];
                return function(b) {
                    d.push(b);
                    "complete" === document.readyState && setTimeout(a, 1);
                    if (1 == d.length) if (document.addEventListener) document.addEventListener("DOMContentLoaded", a, !1),
                    window.addEventListener("load", a, !1);
                    else if (document.attachEvent) {
                        document.attachEvent("onreadystatechange", a);
                        window.attachEvent("onload", a);
                        b = !1;
                        try {
                            b = !window.frameElement
                        } catch(e) {}
                        if (document.documentElement.doScroll && b) {
                            var h = function() {
                                try {
                                    document.documentElement.doScroll("left")
                                } catch(b) {
                                    setTimeout(h, 1);
                                    return
                                }
                                a()
                            };
                            h()
                        }
                    }
                }
            } ()
        },
        d = window.CKEDITOR_GETURL;
        if (d) {
            var b = a.getUrl;
            a.getUrl = function(c) {
                return d.call(a, c) || b.call(a, c)
            }
        }
        return a
    } ()), CKEDITOR.event || (CKEDITOR.event = function() {},
    CKEDITOR.event.implementOn = function(a) {
        var d = CKEDITOR.event.prototype,
        b;
        for (b in d) void 0 == a[b] && (a[b] = d[b])
    },
    CKEDITOR.event.prototype = function() {
        function a(a) {
            var e = d(this);
            return e[a] || (e[a] = new b(a))
        }
        var d = function(a) {
            a = a.getPrivate && a.getPrivate() || a._ || (a._ = {});
            return a.events || (a.events = {})
        },
        b = function(a) {
            this.name = a;
            this.listeners = []
        };
        b.prototype = {
            getListenerIndex: function(a) {
                for (var b = 0,
                d = this.listeners; b < d.length; b++) if (d[b].fn == a) return b;
                return - 1
            }
        };
        return {
            define: function(b, d) {
                var g = a.call(this, b);
                CKEDITOR.tools.extend(g, d, !0)
            },
            on: function(b, d, g, f, k) {
                function h(a, h, k, n) {
                    a = {
                        name: b,
                        sender: this,
                        editor: a,
                        data: h,
                        listenerData: f,
                        stop: k,
                        cancel: n,
                        removeListener: l
                    };
                    return ! 1 === d.call(g, a) ? !1 : a.data
                }
                function l() {
                    p.removeListener(b, d)
                }
                var n = a.call(this, b);
                if (0 > n.getListenerIndex(d)) {
                    n = n.listeners;
                    g || (g = this);
                    isNaN(k) && (k = 10);
                    var p = this;
                    h.fn = d;
                    h.priority = k;
                    for (var s = n.length - 1; 0 <= s; s--) if (n[s].priority <= k) return n.splice(s + 1, 0, h),
                    {
                        removeListener: l
                    };
                    n.unshift(h)
                }
                return {
                    removeListener: l
                }
            },
            once: function() {
                var a = arguments[1];
                arguments[1] = function(b) {
                    b.removeListener();
                    return a.apply(this, arguments)
                };
                return this.on.apply(this, arguments)
            },
            capture: function() {
                CKEDITOR.event.useCapture = 1;
                var a = this.on.apply(this, arguments);
                CKEDITOR.event.useCapture = 0;
                return a
            },
            fire: function() {
                var a = 0,
                b = function() {
                    a = 1
                },
                g = 0,
                f = function() {
                    g = 1
                };
                return function(k, h, l) {
                    var n = d(this)[k];
                    k = a;
                    var p = g;
                    a = g = 0;
                    if (n) {
                        var s = n.listeners;
                        if (s.length) for (var s = s.slice(0), r, q = 0; q < s.length; q++) {
                            if (n.errorProof) try {
                                r = s[q].call(this, l, h, b, f)
                            } catch(t) {} else r = s[q].call(this, l, h, b, f); ! 1 === r ? g = 1 : "undefined" != typeof r && (h = r);
                            if (a || g) break
                        }
                    }
                    h = g ? !1 : "undefined" == typeof h ? !0 : h;
                    a = k;
                    g = p;
                    return h
                }
            } (),
            fireOnce: function(a, b, g) {
                b = this.fire(a, b, g);
                delete d(this)[a];
                return b
            },
            removeListener: function(a, b) {
                var g = d(this)[a];
                if (g) {
                    var f = g.getListenerIndex(b);
                    0 <= f && g.listeners.splice(f, 1)
                }
            },
            removeAllListeners: function() {
                var a = d(this),
                b;
                for (b in a) delete a[b]
            },
            hasListeners: function(a) {
                return (a = d(this)[a]) && 0 < a.listeners.length
            }
        }
    } ()), CKEDITOR.editor || (CKEDITOR.editor = function() {
        CKEDITOR._.pending.push([this, arguments]);
        CKEDITOR.event.call(this)
    },
    CKEDITOR.editor.prototype.fire = function(a, d) {
        a in {
            instanceReady: 1,
            loaded: 1
        } && (this[a] = !0);
        return CKEDITOR.event.prototype.fire.call(this, a, d, this)
    },
    CKEDITOR.editor.prototype.fireOnce = function(a, d) {
        a in {
            instanceReady: 1,
            loaded: 1
        } && (this[a] = !0);
        return CKEDITOR.event.prototype.fireOnce.call(this, a, d, this)
    },
    CKEDITOR.event.implementOn(CKEDITOR.editor.prototype)), CKEDITOR.env || (CKEDITOR.env = function() {
        var a = navigator.userAgent.toLowerCase(),
        d = window.opera,
        b = {
            ie: eval("/*@cc_on!@*/false"),
            opera: !!d && d.version,
            webkit: -1 < a.indexOf(" applewebkit/"),
            air: -1 < a.indexOf(" adobeair/"),
            mac: -1 < a.indexOf("macintosh"),
            quirks: "BackCompat" == document.compatMode,
            mobile: -1 < a.indexOf("mobile"),
            iOS: /(ipad|iphone|ipod)/.test(a),
            isCustomDomain: function() {
                if (!this.ie) return ! 1;
                var a = document.domain,
                b = window.location.hostname;
                return a != b && a != "[" + b + "]"
            },
            secure: "https:" == location.protocol
        };
        b.gecko = "Gecko" == navigator.product && !b.webkit && !b.opera;
        b.webkit && ( - 1 < a.indexOf("chrome") ? b.chrome = !0 : b.safari = !0);
        var c = 0;
        b.ie && (c = b.quirks || !document.documentMode ? parseFloat(a.match(/msie (\d+)/)[1]) : document.documentMode, b.ie9Compat = 9 == c, b.ie8Compat = 8 == c, b.ie7Compat = 7 == c, b.ie6Compat = 7 > c || b.quirks && 10 > c);
        if (b.gecko) {
            var e = a.match(/rv:([\d\.]+)/);
            e && (e = e[1].split("."), c = 1E4 * e[0] + 100 * (e[1] || 0) + 1 * (e[2] || 0))
        }
        b.opera && (c = parseFloat(d.version()));
        b.air && (c = parseFloat(a.match(/ adobeair\/(\d+)/)[1]));
        b.webkit && (c = parseFloat(a.match(/ applewebkit\/(\d+)/)[1]));
        b.version = c;
        b.isCompatible = b.iOS && 534 <= c || !b.mobile && (b.ie && 6 < c || b.gecko && 10801 <= c || b.opera && 9.5 <= c || b.air && 1 <= c || b.webkit && 522 <= c || !1);
        b.hidpi = 2 <= window.devicePixelRatio;
        b.cssClass = "cke_browser_" + (b.ie ? "ie": b.gecko ? "gecko": b.opera ? "opera": b.webkit ? "webkit": "unknown");
        b.quirks && (b.cssClass += " cke_browser_quirks");
        b.ie && (b.cssClass += " cke_browser_ie" + (b.quirks || 7 > b.version ? "6": b.version), b.quirks && (b.cssClass += " cke_browser_iequirks"));
        b.gecko && (10900 > c ? b.cssClass += " cke_browser_gecko18": 11E3 >= c && (b.cssClass += " cke_browser_gecko19"));
        b.air && (b.cssClass += " cke_browser_air");
        b.iOS && (b.cssClass += " cke_browser_ios");
        b.hidpi && (b.cssClass += " cke_hidpi");
        return b
    } ()), "unloaded" == CKEDITOR.status &&
    function() {
        CKEDITOR.event.implementOn(CKEDITOR);
        CKEDITOR.loadFullCore = function() {
            if ("basic_ready" != CKEDITOR.status) CKEDITOR.loadFullCore._load = 1;
            else {
                delete CKEDITOR.loadFullCore;
                var a = document.createElement("script");
                a.type = "text/javascript";
                a.src = CKEDITOR.basePath + "ckeditor.js";
                document.getElementsByTagName("head")[0].appendChild(a)
            }
        };
        CKEDITOR.loadFullCoreTimeout = 0;
        CKEDITOR.add = function(a) { (this._.pending || (this._.pending = [])).push(a)
        }; (function() {
            CKEDITOR.domReady(function() {
                var a = CKEDITOR.loadFullCore,
                d = CKEDITOR.loadFullCoreTimeout;
                a && (CKEDITOR.status = "basic_ready", a && a._load ? a() : d && setTimeout(function() {
                    CKEDITOR.loadFullCore && CKEDITOR.loadFullCore()
                },
                1E3 * d))
            })
        })();
        CKEDITOR.status = "basic_loaded"
    } (), CKEDITOR.dom = {},
    function() {
        var a = [],
        d = CKEDITOR.env.gecko ? "-moz-": CKEDITOR.env.webkit ? "-webkit-": CKEDITOR.env.opera ? "-o-": CKEDITOR.env.ie ? "-ms-": "";
        CKEDITOR.on("reset",
        function() {
            a = []
        });
        CKEDITOR.tools = {
            arrayCompare: function(a, c) {
                if (!a && !c) return ! 0;
                if (!a || !c || a.length != c.length) return ! 1;
                for (var d = 0; d < a.length; d++) if (a[d] != c[d]) return ! 1;
                return ! 0
            },
            clone: function(a) {
                var c;
                if (a && a instanceof Array) {
                    c = [];
                    for (var d = 0; d < a.length; d++) c[d] = CKEDITOR.tools.clone(a[d]);
                    return c
                }
                if (null === a || "object" != typeof a || a instanceof String || a instanceof Number || a instanceof Boolean || a instanceof Date || a instanceof RegExp) return a;
                c = new a.constructor;
                for (d in a) c[d] = CKEDITOR.tools.clone(a[d]);
                return c
            },
            capitalize: function(a) {
                return a.charAt(0).toUpperCase() + a.substring(1).toLowerCase()
            },
            extend: function(a) {
                var c = arguments.length,
                d, g;
                "boolean" == typeof(d = arguments[c - 1]) ? c--:"boolean" == typeof(d = arguments[c - 2]) && (g = arguments[c - 1], c -= 2);
                for (var f = 1; f < c; f++) {
                    var k = arguments[f],
                    h;
                    for (h in k) if (!0 === d || void 0 == a[h]) if (!g || h in g) a[h] = k[h]
                }
                return a
            },
            prototypedCopy: function(a) {
                var c = function() {};
                c.prototype = a;
                return new c
            },
            copy: function(a) {
                var c = {},
                d;
                for (d in a) c[d] = a[d];
                return c
            },
            isArray: function(a) {
                return !! a && a instanceof Array
            },
            isEmpty: function(a) {
                for (var c in a) if (a.hasOwnProperty(c)) return ! 1;
                return ! 0
            },
            cssVendorPrefix: function(a, c, e) {
                if (e) return d + a + ":" + c + ";" + a + ":" + c;
                e = {};
                e[a] = c;
                e[d + a] = c;
                return e
            },
            cssStyleToDomStyle: function() {
                var a = document.createElement("div").style,
                c = "undefined" != typeof a.cssFloat ? "cssFloat": "undefined" != typeof a.styleFloat ? "styleFloat": "float";
                return function(a) {
                    return "float" == a ? c: a.replace(/-./g,
                    function(a) {
                        return a.substr(1).toUpperCase()
                    })
                }
            } (),
            buildStyleHtml: function(a) {
                a = [].concat(a);
                for (var c, d = [], g = 0; g < a.length; g++) if (c = a[g]) / @import | [{}] / .test(c) ? d.push("<style>" + c + "</style>") : d.push('<link type="text/css" rel=stylesheet href="' + c + '">');
                return d.join("")
            },
            htmlEncode: function(a) {
                return ("" + a).replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;")
            },
            htmlEncodeAttr: function(a) {
                return a.replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
            },
            getNextNumber: function() {
                var a = 0;
                return function() {
                    return++a
                }
            } (),
            getNextId: function() {
                return "cke_" + this.getNextNumber()
            },
            override: function(a, c) {
                var d = c(a);
                d.prototype = a.prototype;
                return d
            },
            setTimeout: function(a, c, d, g, f) {
                f || (f = window);
                d || (d = f);
                return f.setTimeout(function() {
                    g ? a.apply(d, [].concat(g)) : a.apply(d)
                },
                c || 0)
            },
            trim: function() {
                var a = /(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g;
                return function(c) {
                    return c.replace(a, "")
                }
            } (),
            ltrim: function() {
                var a = /^[ \t\n\r]+/g;
                return function(c) {
                    return c.replace(a, "")
                }
            } (),
            rtrim: function() {
                var a = /[ \t\n\r]+$/g;
                return function(c) {
                    return c.replace(a, "")
                }
            } (),
            indexOf: function(a, c) {
                if ("function" == typeof c) for (var d = 0,
                g = a.length; d < g; d++) {
                    if (c(a[d])) return d
                } else {
                    if (a.indexOf) return a.indexOf(c);
                    d = 0;
                    for (g = a.length; d < g; d++) if (a[d] === c) return d
                }
                return - 1
            },
            search: function(a, c) {
                var d = CKEDITOR.tools.indexOf(a, c);
                return 0 <= d ? a[d] : null
            },
            bind: function(a, c) {
                return function() {
                    return a.apply(c, arguments)
                }
            },
            createClass: function(a) {
                var c = a.$,
                d = a.base,
                g = a.privates || a._,
                f = a.proto;
                a = a.statics; ! c && (c = function() {
                    d && this.base.apply(this, arguments)
                });
                if (g) var k = c,
                c = function() {
                    var a = this._ || (this._ = {}),
                    b;
                    for (b in g) {
                        var c = g[b];
                        a[b] = "function" == typeof c ? CKEDITOR.tools.bind(c, this) : c
                    }
                    k.apply(this, arguments)
                };
                d && (c.prototype = this.prototypedCopy(d.prototype), c.prototype.constructor = c, c.base = d, c.baseProto = d.prototype, c.prototype.base = function() {
                    this.base = d.prototype.base;
                    d.apply(this, arguments);
                    this.base = arguments.callee
                });
                f && this.extend(c.prototype, f, !0);
                a && this.extend(c, a, !0);
                return c
            },
            addFunction: function(b, c) {
                return a.push(function() {
                    return b.apply(c || this, arguments)
                }) - 1
            },
            removeFunction: function(b) {
                a[b] = null
            },
            callFunction: function(b) {
                var c = a[b];
                return c && c.apply(window, Array.prototype.slice.call(arguments, 1))
            },
            cssLength: function() {
                var a = /^-?\d+\.?\d*px$/,
                c;
                return function(d) {
                    c = CKEDITOR.tools.trim(d + "") + "px";
                    return a.test(c) ? c: d || ""
                }
            } (),
            convertToPx: function() {
                var a;
                return function(c) {
                    a || (a = CKEDITOR.dom.element.createFromHtml('<div style="position:absolute;left:-9999px;top:-9999px;margin:0px;padding:0px;border:0px;"></div>', CKEDITOR.document), CKEDITOR.document.getBody().append(a));
                    return /%$/.test(c) ? c: (a.setStyle("width", c), a.$.clientWidth)
                }
            } (),
            repeat: function(a, c) {
                return Array(c + 1).join(a)
            },
            tryThese: function() {
                for (var a, c = 0,
                d = arguments.length; c < d; c++) {
                    var g = arguments[c];
                    try {
                        a = g();
                        break
                    } catch(f) {}
                }
                return a
            },
            genKey: function() {
                return Array.prototype.slice.call(arguments).join("-")
            },
            defer: function(a) {
                return function() {
                    var c = arguments,
                    d = this;
                    window.setTimeout(function() {
                        a.apply(d, c)
                    },
                    0)
                }
            },
            normalizeCssText: function(a, c) {
                var d = [],
                g,
                f = CKEDITOR.tools.parseCssText(a, !0, c);
                for (g in f) d.push(g + ":" + f[g]);
                d.sort();
                return d.length ? d.join(";") + ";": ""
            },
            convertRgbToHex: function(a) {
                return a.replace(/(?:rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\))/gi,
                function(a, b, d, f) {
                    a = [b, d, f];
                    for (b = 0; 3 > b; b++) a[b] = ("0" + parseInt(a[b], 10).toString(16)).slice( - 2);
                    return "#" + a.join("")
                })
            },
            parseCssText: function(a, c, d) {
                var g = {};
                d && (d = new CKEDITOR.dom.element("span"), d.setAttribute("style", a), a = CKEDITOR.tools.convertRgbToHex(d.getAttribute("style") || ""));
                if (!a || ";" == a) return g;
                a.replace(/&quot;/g, '"').replace(/\s*([^:;\s]+)\s*:\s*([^;]+)\s*(?=;|$)/g,
                function(a, b, d) {
                    c && (b = b.toLowerCase(), "font-family" == b && (d = d.toLowerCase().replace(/["']/g, "").replace(/\s*,\s*/g, ",")), d = CKEDITOR.tools.trim(d));
                    g[b] = d
                });
                return g
            },
            writeCssText: function(a, c) {
                var d, g = [];
                for (d in a) g.push(d + ":" + a[d]);
                c && g.sort();
                return g.join("; ")
            },
            objectCompare: function(a, c, d) {
                var g;
                if (!a && !c) return ! 0;
                if (!a || !c) return ! 1;
                for (g in a) if (a[g] != c[g]) return ! 1;
                if (!d) for (g in c) if (a[g] != c[g]) return ! 1;
                return ! 0
            },
            objectKeys: function(a) {
                var c = [],
                d;
                for (d in a) c.push(d);
                return c
            },
            convertArrayToObject: function(a, c) {
                var d = {};
                1 == arguments.length && (c = !0);
                for (var g = 0,
                f = a.length; g < f; ++g) d[a[g]] = c;
                return d
            },
            fixDomain: function() {
                for (var a;;) try {
                    a = window.parent.document.domain;
                    break
                } catch(c) {
                    a = a ? a.replace(/.+?(?:\.|$)/, "") : document.domain;
                    if (!a) break;
                    document.domain = a
                }
                return !! a
            },
            eventsBuffer: function(a, c) {
                function d() {
                    f = (new Date).getTime();
                    g = !1;
                    c()
                }
                var g, f = 0;
                return {
                    input: function() {
                        if (!g) {
                            var c = (new Date).getTime() - f;
                            c < a ? g = setTimeout(d, a - c) : d()
                        }
                    },
                    reset: function() {
                        g && clearTimeout(g);
                        g = f = 0
                    }
                }
            }
        }
    } (), CKEDITOR.dtd = function() {
        var a = CKEDITOR.tools.extend,
        d = function(a, b) {
            for (var c = CKEDITOR.tools.clone(a), d = 1; d < arguments.length; d++) {
                b = arguments[d];
                for (var e in b) delete c[e]
            }
            return c
        },
        b = {},
        c = {},
        e = {
            address: 1,
            article: 1,
            aside: 1,
            blockquote: 1,
            details: 1,
            div: 1,
            dl: 1,
            fieldset: 1,
            figure: 1,
            footer: 1,
            form: 1,
            h1: 1,
            h2: 1,
            h3: 1,
            h4: 1,
            h5: 1,
            h6: 1,
            header: 1,
            hgroup: 1,
            hr: 1,
            menu: 1,
            nav: 1,
            ol: 1,
            p: 1,
            pre: 1,
            section: 1,
            table: 1,
            ul: 1
        },
        g = {
            command: 1,
            link: 1,
            meta: 1,
            noscript: 1,
            script: 1,
            style: 1
        },
        f = {},
        k = {
            "#": 1
        },
        h = {
            center: 1,
            dir: 1,
            noframes: 1
        };
        a(b, {
            a: 1,
            abbr: 1,
            area: 1,
            audio: 1,
            b: 1,
            bdi: 1,
            bdo: 1,
            br: 1,
            button: 1,
            canvas: 1,
            cite: 1,
            code: 1,
            command: 1,
            datalist: 1,
            del: 1,
            dfn: 1,
            em: 1,
            embed: 1,
            i: 1,
            iframe: 1,
            img: 1,
            input: 1,
            ins: 1,
            kbd: 1,
            keygen: 1,
            label: 1,
            map: 1,
            mark: 1,
            meter: 1,
            noscript: 1,
            object: 1,
            output: 1,
            progress: 1,
            q: 1,
            ruby: 1,
            s: 1,
            samp: 1,
            script: 1,
            select: 1,
            small: 1,
            span: 1,
            strong: 1,
            sub: 1,
            sup: 1,
            textarea: 1,
            time: 1,
            u: 1,
            "var": 1,
            video: 1,
            wbr: 1
        },
        k, {
            acronym: 1,
            applet: 1,
            basefont: 1,
            big: 1,
            font: 1,
            isindex: 1,
            strike: 1,
            style: 1,
            tt: 1
        });
        a(c, e, b, h);
        d = {
            a: d(b, {
                a: 1,
                button: 1
            }),
            abbr: b,
            address: c,
            area: f,
            article: a({
                style: 1
            },
            c),
            aside: a({
                style: 1
            },
            c),
            audio: a({
                source: 1,
                track: 1
            },
            c),
            b: b,
            base: f,
            bdi: b,
            bdo: b,
            blockquote: c,
            body: c,
            br: f,
            button: d(b, {
                a: 1,
                button: 1
            }),
            canvas: b,
            caption: c,
            cite: b,
            code: b,
            col: f,
            colgroup: {
                col: 1
            },
            command: f,
            datalist: a({
                option: 1
            },
            b),
            dd: c,
            del: b,
            details: a({
                summary: 1
            },
            c),
            dfn: b,
            div: a({
                style: 1
            },
            c),
            dl: {
                dt: 1,
                dd: 1
            },
            dt: c,
            em: b,
            embed: f,
            fieldset: a({
                legend: 1
            },
            c),
            figcaption: c,
            figure: a({
                figcaption: 1
            },
            c),
            footer: c,
            form: c,
            h1: b,
            h2: b,
            h3: b,
            h4: b,
            h5: b,
            h6: b,
            head: a({
                title: 1,
                base: 1
            },
            g),
            header: c,
            hgroup: {
                h1: 1,
                h2: 1,
                h3: 1,
                h4: 1,
                h5: 1,
                h6: 1
            },
            hr: f,
            html: a({
                head: 1,
                body: 1
            },
            c, g),
            i: b,
            iframe: k,
            img: f,
            input: f,
            ins: b,
            kbd: b,
            keygen: f,
            label: b,
            legend: b,
            li: c,
            link: f,
            map: c,
            mark: b,
            menu: a({
                li: 1
            },
            c),
            meta: f,
            meter: d(b, {
                meter: 1
            }),
            nav: c,
            noscript: a({
                link: 1,
                meta: 1,
                style: 1
            },
            b),
            object: a({
                param: 1
            },
            b),
            ol: {
                li: 1
            },
            optgroup: {
                option: 1
            },
            option: k,
            output: b,
            p: b,
            param: f,
            pre: b,
            progress: d(b, {
                progress: 1
            }),
            q: b,
            rp: b,
            rt: b,
            ruby: a({
                rp: 1,
                rt: 1
            },
            b),
            s: b,
            samp: b,
            script: k,
            section: a({
                style: 1
            },
            c),
            select: {
                optgroup: 1,
                option: 1
            },
            small: b,
            source: f,
            span: b,
            strong: b,
            style: k,
            sub: b,
            summary: b,
            sup: b,
            table: {
                caption: 1,
                colgroup: 1,
                thead: 1,
                tfoot: 1,
                tbody: 1,
                tr: 1
            },
            tbody: {
                tr: 1
            },
            td: c,
            textarea: k,
            tfoot: {
                tr: 1
            },
            th: c,
            thead: {
                tr: 1
            },
            time: d(b, {
                time: 1
            }),
            title: k,
            tr: {
                th: 1,
                td: 1
            },
            track: f,
            u: b,
            ul: {
                li: 1
            },
            "var": b,
            video: a({
                source: 1,
                track: 1
            },
            c),
            wbr: f,
            acronym: b,
            applet: a({
                param: 1
            },
            c),
            basefont: f,
            big: b,
            center: c,
            dialog: f,
            dir: {
                li: 1
            },
            font: b,
            isindex: f,
            noframes: c,
            strike: b,
            tt: b
        };
        a(d, {
            $block: a({
                audio: 1,
                dd: 1,
                dt: 1,
                li: 1,
                video: 1
            },
            e, h),
            $blockLimit: {
                article: 1,
                aside: 1,
                audio: 1,
                body: 1,
                caption: 1,
                details: 1,
                dir: 1,
                div: 1,
                dl: 1,
                fieldset: 1,
                figure: 1,
                footer: 1,
                form: 1,
                header: 1,
                hgroup: 1,
                menu: 1,
                nav: 1,
                ol: 1,
                section: 1,
                table: 1,
                td: 1,
                th: 1,
                tr: 1,
                ul: 1,
                video: 1
            },
            $cdata: {
                script: 1,
                style: 1
            },
            $editable: {
                address: 1,
                article: 1,
                aside: 1,
                blockquote: 1,
                body: 1,
                details: 1,
                div: 1,
                fieldset: 1,
                footer: 1,
                form: 1,
                h1: 1,
                h2: 1,
                h3: 1,
                h4: 1,
                h5: 1,
                h6: 1,
                header: 1,
                hgroup: 1,
                nav: 1,
                p: 1,
                pre: 1,
                section: 1
            },
            $empty: {
                area: 1,
                base: 1,
                basefont: 1,
                br: 1,
                col: 1,
                command: 1,
                dialog: 1,
                embed: 1,
                hr: 1,
                img: 1,
                input: 1,
                isindex: 1,
                keygen: 1,
                link: 1,
                meta: 1,
                param: 1,
                source: 1,
                track: 1,
                wbr: 1
            },
            $inline: b,
            $list: {
                dl: 1,
                ol: 1,
                ul: 1
            },
            $listItem: {
                dd: 1,
                dt: 1,
                li: 1
            },
            $nonBodyContent: a({
                body: 1,
                head: 1,
                html: 1
            },
            d.head),
            $nonEditable: {
                applet: 1,
                audio: 1,
                button: 1,
                embed: 1,
                iframe: 1,
                map: 1,
                object: 1,
                option: 1,
                param: 1,
                script: 1,
                textarea: 1,
                video: 1
            },
            $object: {
                applet: 1,
                audio: 1,
                button: 1,
                hr: 1,
                iframe: 1,
                img: 1,
                input: 1,
                object: 1,
                select: 1,
                table: 1,
                textarea: 1,
                video: 1
            },
            $removeEmpty: {
                abbr: 1,
                acronym: 1,
                b: 1,
                bdi: 1,
                bdo: 1,
                big: 1,
                cite: 1,
                code: 1,
                del: 1,
                dfn: 1,
                em: 1,
                font: 1,
                i: 1,
                ins: 1,
                label: 1,
                kbd: 1,
                mark: 1,
                meter: 1,
                output: 1,
                q: 1,
                ruby: 1,
                s: 1,
                samp: 1,
                small: 1,
                span: 1,
                strike: 1,
                strong: 1,
                sub: 1,
                sup: 1,
                time: 1,
                tt: 1,
                u: 1,
                "var": 1
            },
            $tabIndex: {
                a: 1,
                area: 1,
                button: 1,
                input: 1,
                object: 1,
                select: 1,
                textarea: 1
            },
            $tableContent: {
                caption: 1,
                col: 1,
                colgroup: 1,
                tbody: 1,
                td: 1,
                tfoot: 1,
                th: 1,
                thead: 1,
                tr: 1
            },
            $transparent: {
                a: 1,
                audio: 1,
                canvas: 1,
                del: 1,
                ins: 1,
                map: 1,
                noscript: 1,
                object: 1,
                video: 1
            },
            $intermediate: {
                caption: 1,
                colgroup: 1,
                dd: 1,
                dt: 1,
                figcaption: 1,
                legend: 1,
                li: 1,
                optgroup: 1,
                option: 1,
                rp: 1,
                rt: 1,
                summary: 1,
                tbody: 1,
                td: 1,
                tfoot: 1,
                th: 1,
                thead: 1,
                tr: 1
            }
        });
        return d
    } (), CKEDITOR.dom.event = function(a) {
        this.$ = a
    },
    CKEDITOR.dom.event.prototype = {
        getKey: function() {
            return this.$.keyCode || this.$.which
        },
        getKeystroke: function() {
            var a = this.getKey();
            if (this.$.ctrlKey || this.$.metaKey) a += CKEDITOR.CTRL;
            this.$.shiftKey && (a += CKEDITOR.SHIFT);
            this.$.altKey && (a += CKEDITOR.ALT);
            return a
        },
        preventDefault: function(a) {
            var d = this.$;
            d.preventDefault ? d.preventDefault() : d.returnValue = !1;
            a && this.stopPropagation()
        },
        stopPropagation: function() {
            var a = this.$;
            a.stopPropagation ? a.stopPropagation() : a.cancelBubble = !0
        },
        getTarget: function() {
            var a = this.$.target || this.$.srcElement;
            return a ? new CKEDITOR.dom.node(a) : null
        },
        getPhase: function() {
            return this.$.eventPhase || 2
        },
        getPageOffset: function() {
            var a = this.getTarget().getDocument().$;
            return {
                x: this.$.pageX || this.$.clientX + (a.documentElement.scrollLeft || a.body.scrollLeft),
                y: this.$.pageY || this.$.clientY + (a.documentElement.scrollTop || a.body.scrollTop)
            }
        }
    },
    CKEDITOR.CTRL = 1114112, CKEDITOR.SHIFT = 2228224, CKEDITOR.ALT = 4456448, CKEDITOR.EVENT_PHASE_CAPTURING = 1, CKEDITOR.EVENT_PHASE_AT_TARGET = 2, CKEDITOR.EVENT_PHASE_BUBBLING = 3, CKEDITOR.dom.domObject = function(a) {
        a && (this.$ = a)
    },
    CKEDITOR.dom.domObject.prototype = function() {
        var a = function(a, b) {
            return function(c) {
                "undefined" != typeof CKEDITOR && a.fire(b, new CKEDITOR.dom.event(c))
            }
        };
        return {
            getPrivate: function() {
                var a; (a = this.getCustomData("_")) || this.setCustomData("_", a = {});
                return a
            },
            on: function(d) {
                var b = this.getCustomData("_cke_nativeListeners");
                b || (b = {},
                this.setCustomData("_cke_nativeListeners", b));
                b[d] || (b = b[d] = a(this, d), this.$.addEventListener ? this.$.addEventListener(d, b, !!CKEDITOR.event.useCapture) : this.$.attachEvent && this.$.attachEvent("on" + d, b));
                return CKEDITOR.event.prototype.on.apply(this, arguments)
            },
            removeListener: function(a) {
                CKEDITOR.event.prototype.removeListener.apply(this, arguments);
                if (!this.hasListeners(a)) {
                    var b = this.getCustomData("_cke_nativeListeners"),
                    c = b && b[a];
                    c && (this.$.removeEventListener ? this.$.removeEventListener(a, c, !1) : this.$.detachEvent && this.$.detachEvent("on" + a, c), delete b[a])
                }
            },
            removeAllListeners: function() {
                var a = this.getCustomData("_cke_nativeListeners"),
                b;
                for (b in a) {
                    var c = a[b];
                    this.$.detachEvent ? this.$.detachEvent("on" + b, c) : this.$.removeEventListener && this.$.removeEventListener(b, c, !1);
                    delete a[b]
                }
            }
        }
    } (),
    function(a) {
        var d = {};
        CKEDITOR.on("reset",
        function() {
            d = {}
        });
        a.equals = function(a) {
            try {
                return a && a.$ === this.$
            } catch(c) {
                return ! 1
            }
        };
        a.setCustomData = function(a, c) {
            var e = this.getUniqueId(); (d[e] || (d[e] = {}))[a] = c;
            return this
        };
        a.getCustomData = function(a) {
            var c = this.$["data-cke-expando"];
            return (c = c && d[c]) && a in c ? c[a] : null
        };
        a.removeCustomData = function(a) {
            var c = this.$["data-cke-expando"],
            c = c && d[c],
            e,
            g;
            c && (e = c[a], g = a in c, delete c[a]);
            return g ? e: null
        };
        a.clearCustomData = function() {
            this.removeAllListeners();
            var a = this.$["data-cke-expando"];
            a && delete d[a]
        };
        a.getUniqueId = function() {
            return this.$["data-cke-expando"] || (this.$["data-cke-expando"] = CKEDITOR.tools.getNextNumber())
        };
        CKEDITOR.event.implementOn(a)
    } (CKEDITOR.dom.domObject.prototype), CKEDITOR.dom.node = function(a) {
        return a ? new CKEDITOR.dom[a.nodeType == CKEDITOR.NODE_DOCUMENT ? "document": a.nodeType == CKEDITOR.NODE_ELEMENT ? "element": a.nodeType == CKEDITOR.NODE_TEXT ? "text": a.nodeType == CKEDITOR.NODE_COMMENT ? "comment": a.nodeType == CKEDITOR.NODE_DOCUMENT_FRAGMENT ? "documentFragment": "domObject"](a) : this
    },
    CKEDITOR.dom.node.prototype = new CKEDITOR.dom.domObject, CKEDITOR.NODE_ELEMENT = 1, CKEDITOR.NODE_DOCUMENT = 9, CKEDITOR.NODE_TEXT = 3, CKEDITOR.NODE_COMMENT = 8, CKEDITOR.NODE_DOCUMENT_FRAGMENT = 11, CKEDITOR.POSITION_IDENTICAL = 0, CKEDITOR.POSITION_DISCONNECTED = 1, CKEDITOR.POSITION_FOLLOWING = 2, CKEDITOR.POSITION_PRECEDING = 4, CKEDITOR.POSITION_IS_CONTAINED = 8, CKEDITOR.POSITION_CONTAINS = 16, CKEDITOR.tools.extend(CKEDITOR.dom.node.prototype, {
        appendTo: function(a, d) {
            a.append(this, d);
            return a
        },
        clone: function(a, d) {
            var b = this.$.cloneNode(a),
            c = function(b) {
                b["data-cke-expando"] && (b["data-cke-expando"] = !1);
                if (b.nodeType == CKEDITOR.NODE_ELEMENT && (d || b.removeAttribute("id", !1), a)) {
                    b = b.childNodes;
                    for (var g = 0; g < b.length; g++) c(b[g])
                }
            };
            c(b);
            return new CKEDITOR.dom.node(b)
        },
        hasPrevious: function() {
            return !! this.$.previousSibling
        },
        hasNext: function() {
            return !! this.$.nextSibling
        },
        insertAfter: function(a) {
            a.$.parentNode.insertBefore(this.$, a.$.nextSibling);
            return a
        },
        insertBefore: function(a) {
            a.$.parentNode.insertBefore(this.$, a.$);
            return a
        },
        insertBeforeMe: function(a) {
            this.$.parentNode.insertBefore(a.$, this.$);
            return a
        },
        getAddress: function(a) {
            for (var d = [], b = this.getDocument().$.documentElement, c = this.$; c && c != b;) {
                var e = c.parentNode;
                e && d.unshift(this.getIndex.call({
                    $: c
                },
                a));
                c = e
            }
            return d
        },
        getDocument: function() {
            return new CKEDITOR.dom.document(this.$.ownerDocument || this.$.parentNode.ownerDocument)
        },
        getIndex: function(a) {
            var d = this.$,
            b = -1,
            c;
            if (!this.$.parentNode) return b;
            do
            if (!a || d == this.$ || d.nodeType != CKEDITOR.NODE_TEXT || !c && d.nodeValue) b++,
            c = d.nodeType == CKEDITOR.NODE_TEXT;
            while (d = d.previousSibling);
            return b
        },
        getNextSourceNode: function(a, d, b) {
            if (b && !b.call) {
                var c = b;
                b = function(a) {
                    return ! a.equals(c)
                }
            }
            a = !a && this.getFirst && this.getFirst();
            var e;
            if (!a) {
                if (this.type == CKEDITOR.NODE_ELEMENT && b && !1 === b(this, !0)) return null;
                a = this.getNext()
            }
            for (; ! a && (e = (e || this).getParent());) {
                if (b && !1 === b(e, !0)) return null;
                a = e.getNext()
            }
            return ! a || b && !1 === b(a) ? null: d && d != a.type ? a.getNextSourceNode(!1, d, b) : a
        },
        getPreviousSourceNode: function(a, d, b) {
            if (b && !b.call) {
                var c = b;
                b = function(a) {
                    return ! a.equals(c)
                }
            }
            a = !a && this.getLast && this.getLast();
            var e;
            if (!a) {
                if (this.type == CKEDITOR.NODE_ELEMENT && b && !1 === b(this, !0)) return null;
                a = this.getPrevious()
            }
            for (; ! a && (e = (e || this).getParent());) {
                if (b && !1 === b(e, !0)) return null;
                a = e.getPrevious()
            }
            return ! a || b && !1 === b(a) ? null: d && a.type != d ? a.getPreviousSourceNode(!1, d, b) : a
        },
        getPrevious: function(a) {
            var d = this.$,
            b;
            do b = (d = d.previousSibling) && 10 != d.nodeType && new CKEDITOR.dom.node(d);
            while (b && a && !a(b));
            return b
        },
        getNext: function(a) {
            var d = this.$,
            b;
            do b = (d = d.nextSibling) && new CKEDITOR.dom.node(d);
            while (b && a && !a(b));
            return b
        },
        getParent: function(a) {
            var d = this.$.parentNode;
            return d && (d.nodeType == CKEDITOR.NODE_ELEMENT || a && d.nodeType == CKEDITOR.NODE_DOCUMENT_FRAGMENT) ? new CKEDITOR.dom.node(d) : null
        },
        getParents: function(a) {
            var d = this,
            b = [];
            do b[a ? "push": "unshift"](d);
            while (d = d.getParent());
            return b
        },
        getCommonAncestor: function(a) {
            if (a.equals(this)) return this;
            if (a.contains && a.contains(this)) return a;
            var d = this.contains ? this: this.getParent();
            do
            if (d.contains(a)) return d;
            while (d = d.getParent());
            return null
        },
        getPosition: function(a) {
            var d = this.$,
            b = a.$;
            if (d.compareDocumentPosition) return d.compareDocumentPosition(b);
            if (d == b) return CKEDITOR.POSITION_IDENTICAL;
            if (this.type == CKEDITOR.NODE_ELEMENT && a.type == CKEDITOR.NODE_ELEMENT) {
                if (d.contains) {
                    if (d.contains(b)) return CKEDITOR.POSITION_CONTAINS + CKEDITOR.POSITION_PRECEDING;
                    if (b.contains(d)) return CKEDITOR.POSITION_IS_CONTAINED + CKEDITOR.POSITION_FOLLOWING
                }
                if ("sourceIndex" in d) return 0 > d.sourceIndex || 0 > b.sourceIndex ? CKEDITOR.POSITION_DISCONNECTED: d.sourceIndex < b.sourceIndex ? CKEDITOR.POSITION_PRECEDING: CKEDITOR.POSITION_FOLLOWING
            }
            d = this.getAddress();
            a = a.getAddress();
            for (var b = Math.min(d.length, a.length), c = 0; c <= b - 1; c++) if (d[c] != a[c]) {
                if (c < b) return d[c] < a[c] ? CKEDITOR.POSITION_PRECEDING: CKEDITOR.POSITION_FOLLOWING;
                break
            }
            return d.length < a.length ? CKEDITOR.POSITION_CONTAINS + CKEDITOR.POSITION_PRECEDING: CKEDITOR.POSITION_IS_CONTAINED + CKEDITOR.POSITION_FOLLOWING
        },
        getAscendant: function(a, d) {
            var b = this.$,
            c;
            d || (b = b.parentNode);
            for (; b;) {
                if (b.nodeName && (c = b.nodeName.toLowerCase(), "string" == typeof a ? c == a: c in a)) return new CKEDITOR.dom.node(b);
                try {
                    b = b.parentNode
                } catch(e) {
                    b = null
                }
            }
            return null
        },
        hasAscendant: function(a, d) {
            var b = this.$;
            d || (b = b.parentNode);
            for (; b;) {
                if (b.nodeName && b.nodeName.toLowerCase() == a) return ! 0;
                b = b.parentNode
            }
            return ! 1
        },
        move: function(a, d) {
            a.append(this.remove(), d)
        },
        remove: function(a) {
            var d = this.$,
            b = d.parentNode;
            if (b) {
                if (a) for (; a = d.firstChild;) b.insertBefore(d.removeChild(a), d);
                b.removeChild(d)
            }
            return this
        },
        replace: function(a) {
            this.insertBefore(a);
            a.remove()
        },
        trim: function() {
            this.ltrim();
            this.rtrim()
        },
        ltrim: function() {
            for (var a; this.getFirst && (a = this.getFirst());) {
                if (a.type == CKEDITOR.NODE_TEXT) {
                    var d = CKEDITOR.tools.ltrim(a.getText()),
                    b = a.getLength();
                    if (d) d.length < b && (a.split(b - d.length), this.$.removeChild(this.$.firstChild));
                    else {
                        a.remove();
                        continue
                    }
                }
                break
            }
        },
        rtrim: function() {
            for (var a; this.getLast && (a = this.getLast());) {
                if (a.type == CKEDITOR.NODE_TEXT) {
                    var d = CKEDITOR.tools.rtrim(a.getText()),
                    b = a.getLength();
                    if (d) d.length < b && (a.split(d.length), this.$.lastChild.parentNode.removeChild(this.$.lastChild));
                    else {
                        a.remove();
                        continue
                    }
                }
                break
            }
            CKEDITOR.env.ie || CKEDITOR.env.opera || (a = this.$.lastChild) && 1 == a.type && "br" == a.nodeName.toLowerCase() && a.parentNode.removeChild(a)
        },
        isReadOnly: function() {
            var a = this;
            this.type != CKEDITOR.NODE_ELEMENT && (a = this.getParent());
            if (a && "undefined" != typeof a.$.isContentEditable) return ! (a.$.isContentEditable || a.data("cke-editable"));
            for (; a && !a.data("cke-editable");) {
                if ("false" == a.getAttribute("contentEditable")) return ! 0;
                if ("true" == a.getAttribute("contentEditable")) break;
                a = a.getParent()
            }
            return ! a
        }
    }), CKEDITOR.dom.window = function(a) {
        CKEDITOR.dom.domObject.call(this, a)
    },
    CKEDITOR.dom.window.prototype = new CKEDITOR.dom.domObject, CKEDITOR.tools.extend(CKEDITOR.dom.window.prototype, {
        focus: function() {
            this.$.focus()
        },
        getViewPaneSize: function() {
            var a = this.$.document,
            d = "CSS1Compat" == a.compatMode;
            return {
                width: (d ? a.documentElement.clientWidth: a.body.clientWidth) || 0,
                height: (d ? a.documentElement.clientHeight: a.body.clientHeight) || 0
            }
        },
        getScrollPosition: function() {
            var a = this.$;
            if ("pageXOffset" in a) return {
                x: a.pageXOffset || 0,
                y: a.pageYOffset || 0
            };
            a = a.document;
            return {
                x: a.documentElement.scrollLeft || a.body.scrollLeft || 0,
                y: a.documentElement.scrollTop || a.body.scrollTop || 0
            }
        },
        getFrame: function() {
            var a = this.$.frameElement;
            return a ? new CKEDITOR.dom.element.get(a) : null
        }
    }), CKEDITOR.dom.document = function(a) {
        CKEDITOR.dom.domObject.call(this, a)
    },
    CKEDITOR.dom.document.prototype = new CKEDITOR.dom.domObject, CKEDITOR.tools.extend(CKEDITOR.dom.document.prototype, {
        type: CKEDITOR.NODE_DOCUMENT,
        appendStyleSheet: function(a) {
            if (this.$.createStyleSheet) this.$.createStyleSheet(a);
            else {
                var d = new CKEDITOR.dom.element("link");
                d.setAttributes({
                    rel: "stylesheet",
                    type: "text/css",
                    href: a
                });
                this.getHead().append(d)
            }
        },
        appendStyleText: function(a) {
            if (this.$.createStyleSheet) {
                var d = this.$.createStyleSheet("");
                d.cssText = a
            } else {
                var b = new CKEDITOR.dom.element("style", this);
                b.append(new CKEDITOR.dom.text(a, this));
                this.getHead().append(b)
            }
            return d || b.$.sheet
        },
        createElement: function(a, d) {
            var b = new CKEDITOR.dom.element(a, this);
            d && (d.attributes && b.setAttributes(d.attributes), d.styles && b.setStyles(d.styles));
            return b
        },
        createText: function(a) {
            return new CKEDITOR.dom.text(a, this)
        },
        focus: function() {
            this.getWindow().focus()
        },
        getActive: function() {
            return new CKEDITOR.dom.element(this.$.activeElement)
        },
        getById: function(a) {
            return (a = this.$.getElementById(a)) ? new CKEDITOR.dom.element(a) : null
        },
        getByAddress: function(a, d) {
            for (var b = this.$.documentElement,
            c = 0; b && c < a.length; c++) {
                var e = a[c];
                if (d) for (var g = -1,
                f = 0; f < b.childNodes.length; f++) {
                    var k = b.childNodes[f];
                    if (!0 !== d || 3 != k.nodeType || !k.previousSibling || 3 != k.previousSibling.nodeType) if (g++, g == e) {
                        b = k;
                        break
                    }
                } else b = b.childNodes[e]
            }
            return b ? new CKEDITOR.dom.node(b) : null
        },
        getElementsByTag: function(a, d) { (!CKEDITOR.env.ie || 8 < document.documentMode) && d && (a = d + ":" + a);
            return new CKEDITOR.dom.nodeList(this.$.getElementsByTagName(a))
        },
        getHead: function() {
            var a = this.$.getElementsByTagName("head")[0];
            return a ? new CKEDITOR.dom.element(a) : this.getDocumentElement().append(new CKEDITOR.dom.element("head"), !0)
        },
        getBody: function() {
            return new CKEDITOR.dom.element(this.$.body)
        },
        getDocumentElement: function() {
            return new CKEDITOR.dom.element(this.$.documentElement)
        },
        getWindow: function() {
            return new CKEDITOR.dom.window(this.$.parentWindow || this.$.defaultView)
        },
        write: function(a) {
            this.$.open("text/html", "replace");
            CKEDITOR.env.ie && (a = a.replace(/(?:^\s*<!DOCTYPE[^>]*?>)|^/i, '$&\n<script data-cke-temp="1">(' + CKEDITOR.tools.fixDomain + ")();\x3c/script>"));
            this.$.write(a);
            this.$.close()
        }
    }), CKEDITOR.dom.nodeList = function(a) {
        this.$ = a
    },
    CKEDITOR.dom.nodeList.prototype = {
        count: function() {
            return this.$.length
        },
        getItem: function(a) {
            return 0 > a || a >= this.$.length ? null: (a = this.$[a]) ? new CKEDITOR.dom.node(a) : null
        }
    },
    CKEDITOR.dom.element = function(a, d) {
        "string" == typeof a && (a = (d ? d.$: document).createElement(a));
        CKEDITOR.dom.domObject.call(this, a)
    },
    CKEDITOR.dom.element.get = function(a) {
        return (a = "string" == typeof a ? document.getElementById(a) || document.getElementsByName(a)[0] : a) && (a.$ ? a: new CKEDITOR.dom.element(a))
    },
    CKEDITOR.dom.element.prototype = new CKEDITOR.dom.node, CKEDITOR.dom.element.createFromHtml = function(a, d) {
        var b = new CKEDITOR.dom.element("div", d);
        b.setHtml(a);
        return b.getFirst().remove()
    },
    CKEDITOR.dom.element.setMarker = function(a, d, b, c) {
        var e = d.getCustomData("list_marker_id") || d.setCustomData("list_marker_id", CKEDITOR.tools.getNextNumber()).getCustomData("list_marker_id"),
        g = d.getCustomData("list_marker_names") || d.setCustomData("list_marker_names", {}).getCustomData("list_marker_names");
        a[e] = d;
        g[b] = 1;
        return d.setCustomData(b, c)
    },
    CKEDITOR.dom.element.clearAllMarkers = function(a) {
        for (var d in a) CKEDITOR.dom.element.clearMarkers(a, a[d], 1)
    },
    CKEDITOR.dom.element.clearMarkers = function(a, d, b) {
        var c = d.getCustomData("list_marker_names"),
        e = d.getCustomData("list_marker_id"),
        g;
        for (g in c) d.removeCustomData(g);
        d.removeCustomData("list_marker_names");
        b && (d.removeCustomData("list_marker_id"), delete a[e])
    },
    function() {
        function a(a) {
            for (var c = 0,
            e = 0,
            g = d[a].length; e < g; e++) c += parseInt(this.getComputedStyle(d[a][e]) || 0, 10) || 0;
            return c
        }
        CKEDITOR.tools.extend(CKEDITOR.dom.element.prototype, {
            type: CKEDITOR.NODE_ELEMENT,
            addClass: function(a) {
                var c = this.$.className;
                c && (RegExp("(?:^|\\s)" + a + "(?:\\s|$)", "").test(c) || (c += " " + a));
                this.$.className = c || a
            },
            removeClass: function(a) {
                var c = this.getAttribute("class");
                c && (a = RegExp("(?:^|\\s+)" + a + "(?=\\s|$)", "i"), a.test(c) && ((c = c.replace(a, "").replace(/^\s+/, "")) ? this.setAttribute("class", c) : this.removeAttribute("class")));
                return this
            },
            hasClass: function(a) {
                return RegExp("(?:^|\\s+)" + a + "(?=\\s|$)", "").test(this.getAttribute("class"))
            },
            append: function(a, c) {
                "string" == typeof a && (a = this.getDocument().createElement(a));
                c ? this.$.insertBefore(a.$, this.$.firstChild) : this.$.appendChild(a.$);
                return a
            },
            appendHtml: function(a) {
                if (this.$.childNodes.length) {
                    var c = new CKEDITOR.dom.element("div", this.getDocument());
                    c.setHtml(a);
                    c.moveChildren(this)
                } else this.setHtml(a)
            },
            appendText: function(a) {
                void 0 != this.$.text ? this.$.text += a: this.append(new CKEDITOR.dom.text(a))
            },
            appendBogus: function() {
                for (var a = this.getLast(); a && a.type == CKEDITOR.NODE_TEXT && !CKEDITOR.tools.rtrim(a.getText());) a = a.getPrevious();
                a && a.is && a.is("br") || (a = CKEDITOR.env.opera ? this.getDocument().createText("") : this.getDocument().createElement("br"), CKEDITOR.env.gecko && a.setAttribute("type", "_moz"), this.append(a))
            },
            breakParent: function(a) {
                var c = new CKEDITOR.dom.range(this.getDocument());
                c.setStartAfter(this);
                c.setEndAfter(a);
                a = c.extractContents();
                c.insertNode(this.remove());
                a.insertAfterNode(this)
            },
            contains: CKEDITOR.env.ie || CKEDITOR.env.webkit ?
            function(a) {
                var c = this.$;
                return a.type != CKEDITOR.NODE_ELEMENT ? c.contains(a.getParent().$) : c != a.$ && c.contains(a.$)
            }: function(a) {
                return !! (this.$.compareDocumentPosition(a.$) & 16)
            },
            focus: function() {
                function a() {
                    try {
                        this.$.focus()
                    } catch(b) {}
                }
                return function(c) {
                    c ? CKEDITOR.tools.setTimeout(a, 100, this) : a.call(this)
                }
            } (),
            getHtml: function() {
                var a = this.$.innerHTML;
                return CKEDITOR.env.ie ? a.replace(/<\?[^>]*>/g, "") : a
            },
            getOuterHtml: function() {
                if (this.$.outerHTML) return this.$.outerHTML.replace(/<\?[^>]*>/, "");
                var a = this.$.ownerDocument.createElement("div");
                a.appendChild(this.$.cloneNode(!0));
                return a.innerHTML
            },
            getClientRect: function() {
                var a = CKEDITOR.tools.extend({},
                this.$.getBoundingClientRect()); ! a.width && (a.width = a.right - a.left); ! a.height && (a.height = a.bottom - a.top);
                return a
            },
            setHtml: function() {
                var a = function(a) {
                    return this.$.innerHTML = a
                };
                return CKEDITOR.env.ie && 9 > CKEDITOR.env.version ?
                function(a) {
                    try {
                        return this.$.innerHTML = a
                    } catch(b) {
                        this.$.innerHTML = "";
                        var d = new CKEDITOR.dom.element("body", this.getDocument());
                        d.$.innerHTML = a;
                        for (d = d.getChildren(); d.count();) this.append(d.getItem(0));
                        return a
                    }
                }: a
            } (),
            setText: function(a) {
                CKEDITOR.dom.element.prototype.setText = void 0 != this.$.innerText ?
                function(a) {
                    return this.$.innerText = a
                }: function(a) {
                    return this.$.textContent = a
                };
                return this.setText(a)
            },
            getAttribute: function() {
                var a = function(a) {
                    return this.$.getAttribute(a, 2)
                };
                return CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) ?
                function(a) {
                    switch (a) {
                    case "class":
                        a = "className";
                        break;
                    case "http-equiv":
                        a = "httpEquiv";
                        break;
                    case "name":
                        return this.$.name;
                    case "tabindex":
                        return a = this.$.getAttribute(a, 2),
                        0 !== a && 0 === this.$.tabIndex && (a = null),
                        a;
                    case "checked":
                        return a = this.$.attributes.getNamedItem(a),
                        (a.specified ? a.nodeValue: this.$.checked) ? "checked": null;
                    case "hspace":
                    case "value":
                        return this.$[a];
                    case "style":
                        return this.$.style.cssText;
                    case "contenteditable":
                    case "contentEditable":
                        return this.$.attributes.getNamedItem("contentEditable").specified ? this.$.getAttribute("contentEditable") : null
                    }
                    return this.$.getAttribute(a, 2)
                }: a
            } (),
            getChildren: function() {
                return new CKEDITOR.dom.nodeList(this.$.childNodes)
            },
            getComputedStyle: CKEDITOR.env.ie ?
            function(a) {
                return this.$.currentStyle[CKEDITOR.tools.cssStyleToDomStyle(a)]
            }: function(a) {
                var c = this.getWindow().$.getComputedStyle(this.$, null);
                return c ? c.getPropertyValue(a) : ""
            },
            getDtd: function() {
                var a = CKEDITOR.dtd[this.getName()];
                this.getDtd = function() {
                    return a
                };
                return a
            },
            getElementsByTag: CKEDITOR.dom.document.prototype.getElementsByTag,
            getTabIndex: CKEDITOR.env.ie ?
            function() {
                var a = this.$.tabIndex;
                0 === a && !CKEDITOR.dtd.$tabIndex[this.getName()] && 0 !== parseInt(this.getAttribute("tabindex"), 10) && (a = -1);
                return a
            }: CKEDITOR.env.webkit ?
            function() {
                var a = this.$.tabIndex;
                void 0 == a && (a = parseInt(this.getAttribute("tabindex"), 10), isNaN(a) && (a = -1));
                return a
            }: function() {
                return this.$.tabIndex
            },
            getText: function() {
                return this.$.textContent || this.$.innerText || ""
            },
            getWindow: function() {
                return this.getDocument().getWindow()
            },
            getId: function() {
                return this.$.id || null
            },
            getNameAtt: function() {
                return this.$.name || null
            },
            getName: function() {
                var a = this.$.nodeName.toLowerCase();
                if (CKEDITOR.env.ie && !(8 < document.documentMode)) {
                    var c = this.$.scopeName;
                    "HTML" != c && (a = c.toLowerCase() + ":" + a)
                }
                return (this.getName = function() {
                    return a
                })()
            },
            getValue: function() {
                return this.$.value
            },
            getFirst: function(a) {
                var c = this.$.firstChild; (c = c && new CKEDITOR.dom.node(c)) && a && !a(c) && (c = c.getNext(a));
                return c
            },
            getLast: function(a) {
                var c = this.$.lastChild; (c = c && new CKEDITOR.dom.node(c)) && a && !a(c) && (c = c.getPrevious(a));
                return c
            },
            getStyle: function(a) {
                return this.$.style[CKEDITOR.tools.cssStyleToDomStyle(a)]
            },
            is: function() {
                var a = this.getName();
                if ("object" == typeof arguments[0]) return !! arguments[0][a];
                for (var c = 0; c < arguments.length; c++) if (arguments[c] == a) return ! 0;
                return ! 1
            },
            isEditable: function(a) {
                var c = this.getName();
                return this.isReadOnly() || "none" == this.getComputedStyle("display") || "hidden" == this.getComputedStyle("visibility") || CKEDITOR.dtd.$nonEditable[c] || CKEDITOR.dtd.$empty[c] || this.is("a") && (this.data("cke-saved-name") || this.hasAttribute("name")) && !this.getChildCount() ? !1 : !1 !== a ? (a = CKEDITOR.dtd[c] || CKEDITOR.dtd.span, !(!a || !a["#"])) : !0
            },
            isIdentical: function(a) {
                var c = this.clone(0, 1);
                a = a.clone(0, 1);
                c.removeAttributes(["_moz_dirty", "data-cke-expando", "data-cke-saved-href", "data-cke-saved-name"]);
                a.removeAttributes(["_moz_dirty", "data-cke-expando", "data-cke-saved-href", "data-cke-saved-name"]);
                if (c.$.isEqualNode) return c.$.style.cssText = CKEDITOR.tools.normalizeCssText(c.$.style.cssText),
                a.$.style.cssText = CKEDITOR.tools.normalizeCssText(a.$.style.cssText),
                c.$.isEqualNode(a.$);
                c = c.getOuterHtml();
                a = a.getOuterHtml();
                if (CKEDITOR.env.ie && 9 > CKEDITOR.env.version && this.is("a")) {
                    var d = this.getParent();
                    d.type == CKEDITOR.NODE_ELEMENT && (d = d.clone(), d.setHtml(c), c = d.getHtml(), d.setHtml(a), a = d.getHtml())
                }
                return c == a
            },
            isVisible: function() {
                var a = (this.$.offsetHeight || this.$.offsetWidth) && "hidden" != this.getComputedStyle("visibility"),
                c,
                d;
                a && (CKEDITOR.env.webkit || CKEDITOR.env.opera) && (c = this.getWindow(), !c.equals(CKEDITOR.document.getWindow()) && (d = c.$.frameElement) && (a = (new CKEDITOR.dom.element(d)).isVisible()));
                return !! a
            },
            isEmptyInlineRemoveable: function() {
                if (!CKEDITOR.dtd.$removeEmpty[this.getName()]) return ! 1;
                for (var a = this.getChildren(), c = 0, d = a.count(); c < d; c++) {
                    var g = a.getItem(c);
                    if ((g.type != CKEDITOR.NODE_ELEMENT || !g.data("cke-bookmark")) && (g.type == CKEDITOR.NODE_ELEMENT && !g.isEmptyInlineRemoveable() || g.type == CKEDITOR.NODE_TEXT && CKEDITOR.tools.trim(g.getText()))) return ! 1
                }
                return ! 0
            },
            hasAttributes: CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) ?
            function() {
                for (var a = this.$.attributes,
                c = 0; c < a.length; c++) {
                    var d = a[c];
                    switch (d.nodeName) {
                    case "class":
                        if (this.getAttribute("class")) return ! 0;
                    case "data-cke-expando":
                        continue;
                    default:
                        if (d.specified) return ! 0
                    }
                }
                return ! 1
            }: function() {
                var a = this.$.attributes,
                c = a.length,
                d = {
                    "data-cke-expando": 1,
                    _moz_dirty: 1
                };
                return 0 < c && (2 < c || !d[a[0].nodeName] || 2 == c && !d[a[1].nodeName])
            },
            hasAttribute: function() {
                function a(b) {
                    b = this.$.attributes.getNamedItem(b);
                    return ! (!b || !b.specified)
                }
                return CKEDITOR.env.ie && 8 > CKEDITOR.env.version ?
                function(c) {
                    return "name" == c ? !!this.$.name: a.call(this, c)
                }: a
            } (),
            hide: function() {
                this.setStyle("display", "none")
            },
            moveChildren: function(a, c) {
                var d = this.$;
                a = a.$;
                if (d != a) {
                    var g;
                    if (c) for (; g = d.lastChild;) a.insertBefore(d.removeChild(g), a.firstChild);
                    else for (; g = d.firstChild;) a.appendChild(d.removeChild(g))
                }
            },
            mergeSiblings: function() {
                function a(b, d, g) {
                    if (d && d.type == CKEDITOR.NODE_ELEMENT) {
                        for (var f = []; d.data("cke-bookmark") || d.isEmptyInlineRemoveable();) if (f.push(d), d = g ? d.getNext() : d.getPrevious(), !d || d.type != CKEDITOR.NODE_ELEMENT) return;
                        if (b.isIdentical(d)) {
                            for (var k = g ? b.getLast() : b.getFirst(); f.length;) f.shift().move(b, !g);
                            d.moveChildren(b, !g);
                            d.remove();
                            k && k.type == CKEDITOR.NODE_ELEMENT && k.mergeSiblings()
                        }
                    }
                }
                return function(c) {
                    if (!1 === c || CKEDITOR.dtd.$removeEmpty[this.getName()] || this.is("a")) a(this, this.getNext(), !0),
                    a(this, this.getPrevious())
                }
            } (),
            show: function() {
                this.setStyles({
                    display: "",
                    visibility: ""
                })
            },
            setAttribute: function() {
                var a = function(a, b) {
                    this.$.setAttribute(a, b);
                    return this
                };
                return CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) ?
                function(c, d) {
                    "class" == c ? this.$.className = d: "style" == c ? this.$.style.cssText = d: "tabindex" == c ? this.$.tabIndex = d: "checked" == c ? this.$.checked = d: "contenteditable" == c ? a.call(this, "contentEditable", d) : a.apply(this, arguments);
                    return this
                }: CKEDITOR.env.ie8Compat && CKEDITOR.env.secure ?
                function(c, d) {
                    if ("src" == c && d.match(/^http:\/\//)) try {
                        a.apply(this, arguments)
                    } catch(g) {} else a.apply(this, arguments);
                    return this
                }: a
            } (),
            setAttributes: function(a) {
                for (var c in a) this.setAttribute(c, a[c]);
                return this
            },
            setValue: function(a) {
                this.$.value = a;
                return this
            },
            removeAttribute: function() {
                var a = function(a) {
                    this.$.removeAttribute(a)
                };
                return CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) ?
                function(a) {
                    "class" == a ? a = "className": "tabindex" == a ? a = "tabIndex": "contenteditable" == a && (a = "contentEditable");
                    this.$.removeAttribute(a)
                }: a
            } (),
            removeAttributes: function(a) {
                if (CKEDITOR.tools.isArray(a)) for (var c = 0; c < a.length; c++) this.removeAttribute(a[c]);
                else for (c in a) a.hasOwnProperty(c) && this.removeAttribute(c)
            },
            removeStyle: function(a) {
                var c = this.$.style;
                if (c.removeProperty || "border" != a && "margin" != a && "padding" != a) c.removeProperty ? c.removeProperty(a) : c.removeAttribute(CKEDITOR.tools.cssStyleToDomStyle(a)),
                this.$.style.cssText || this.removeAttribute("style");
                else {
                    var d = ["top", "left", "right", "bottom"],
                    g;
                    "border" == a && (g = ["color", "style", "width"]);
                    for (var c = [], f = 0; f < d.length; f++) if (g) for (var k = 0; k < g.length; k++) c.push([a, d[f], g[k]].join("-"));
                    else c.push([a, d[f]].join("-"));
                    for (a = 0; a < c.length; a++) this.removeStyle(c[a])
                }
            },
            setStyle: function(a, c) {
                this.$.style[CKEDITOR.tools.cssStyleToDomStyle(a)] = c;
                return this
            },
            setStyles: function(a) {
                for (var c in a) this.setStyle(c, a[c]);
                return this
            },
            setOpacity: function(a) {
                CKEDITOR.env.ie && 9 > CKEDITOR.env.version ? (a = Math.round(100 * a), this.setStyle("filter", 100 <= a ? "": "progid:DXImageTransform.Microsoft.Alpha(opacity=" + a + ")")) : this.setStyle("opacity", a)
            },
            unselectable: function() {
                this.setStyles(CKEDITOR.tools.cssVendorPrefix("user-select", "none"));
                if (CKEDITOR.env.ie || CKEDITOR.env.opera) {
                    this.setAttribute("unselectable", "on");
                    for (var a, c = this.getElementsByTag("*"), d = 0, g = c.count(); d < g; d++) a = c.getItem(d),
                    a.setAttribute("unselectable", "on")
                }
            },
            getPositionedAncestor: function() {
                for (var a = this;
                "html" != a.getName();) {
                    if ("static" != a.getComputedStyle("position")) return a;
                    a = a.getParent()
                }
                return null
            },
            getDocumentPosition: function(a) {
                var c = 0,
                d = 0,
                g = this.getDocument(),
                f = g.getBody(),
                k = "BackCompat" == g.$.compatMode;
                if (document.documentElement.getBoundingClientRect) {
                    var h = this.$.getBoundingClientRect(),
                    l = g.$.documentElement,
                    n = l.clientTop || f.$.clientTop || 0,
                    p = l.clientLeft || f.$.clientLeft || 0,
                    s = !0;
                    CKEDITOR.env.ie && (s = g.getDocumentElement().contains(this), g = g.getBody().contains(this), s = k && g || !k && s);
                    s && (c = h.left + (!k && l.scrollLeft || f.$.scrollLeft), c -= p, d = h.top + (!k && l.scrollTop || f.$.scrollTop), d -= n)
                } else for (f = this, g = null; f && "body" != f.getName() && "html" != f.getName();) {
                    c += f.$.offsetLeft - f.$.scrollLeft;
                    d += f.$.offsetTop - f.$.scrollTop;
                    f.equals(this) || (c += f.$.clientLeft || 0, d += f.$.clientTop || 0);
                    for (; g && !g.equals(f);) c -= g.$.scrollLeft,
                    d -= g.$.scrollTop,
                    g = g.getParent();
                    g = f;
                    f = (h = f.$.offsetParent) ? new CKEDITOR.dom.element(h) : null
                }
                a && (f = this.getWindow(), g = a.getWindow(), !f.equals(g) && f.$.frameElement && (a = (new CKEDITOR.dom.element(f.$.frameElement)).getDocumentPosition(a), c += a.x, d += a.y));
                document.documentElement.getBoundingClientRect || !CKEDITOR.env.gecko || k || (c += this.$.clientLeft ? 1 : 0, d += this.$.clientTop ? 1 : 0);
                return {
                    x: c,
                    y: d
                }
            },
            scrollIntoView: function(a) {
                var c = this.getParent();
                if (c) {
                    do
                    if ((c.$.clientWidth && c.$.clientWidth < c.$.scrollWidth || c.$.clientHeight && c.$.clientHeight < c.$.scrollHeight) && !c.is("body") && this.scrollIntoParent(c, a, 1), c.is("html")) {
                        var d = c.getWindow();
                        try {
                            var g = d.$.frameElement;
                            g && (c = new CKEDITOR.dom.element(g))
                        } catch(f) {}
                    }
                    while (c = c.getParent())
                }
            },
            scrollIntoParent: function(a, c, d) {
                function g(c, d) { / body | html / .test(a.getName()) ? a.getWindow().$.scrollBy(c, d) : (a.$.scrollLeft += c, a.$.scrollTop += d)
                }
                function f(a, b) {
                    var c = {
                        x: 0,
                        y: 0
                    };
                    if (!a.is(s ? "body": "html")) {
                        var d = a.$.getBoundingClientRect();
                        c.x = d.left;
                        c.y = d.top
                    }
                    d = a.getWindow();
                    d.equals(b) || (d = f(CKEDITOR.dom.element.get(d.$.frameElement), b), c.x += d.x, c.y += d.y);
                    return c
                }
                function k(a, b) {
                    return parseInt(a.getComputedStyle("margin-" + b) || 0, 10) || 0
                }
                var h, l, n, p; ! a && (a = this.getWindow());
                n = a.getDocument();
                var s = "BackCompat" == n.$.compatMode;
                a instanceof CKEDITOR.dom.window && (a = s ? n.getBody() : n.getDocumentElement());
                n = a.getWindow();
                l = f(this, n);
                var r = f(a, n),
                q = this.$.offsetHeight;
                h = this.$.offsetWidth;
                var t = a.$.clientHeight,
                u = a.$.clientWidth;
                n = l.x - k(this, "left") - r.x || 0;
                p = l.y - k(this, "top") - r.y || 0;
                h = l.x + h + k(this, "right") - (r.x + u) || 0;
                l = l.y + q + k(this, "bottom") - (r.y + t) || 0; (0 > p || 0 < l) && g(0, !0 === c ? p: !1 === c ? l: 0 > p ? p: l);
                d && (0 > n || 0 < h) && g(0 > n ? n: h, 0)
            },
            setState: function(a, c, d) {
                c = c || "cke";
                switch (a) {
                case CKEDITOR.TRISTATE_ON:
                    this.addClass(c + "_on");
                    this.removeClass(c + "_off");
                    this.removeClass(c + "_disabled");
                    d && this.setAttribute("aria-pressed", !0);
                    d && this.removeAttribute("aria-disabled");
                    break;
                case CKEDITOR.TRISTATE_DISABLED:
                    this.addClass(c + "_disabled");
                    this.removeClass(c + "_off");
                    this.removeClass(c + "_on");
                    d && this.setAttribute("aria-disabled", !0);
                    d && this.removeAttribute("aria-pressed");
                    break;
                default:
                    this.addClass(c + "_off"),
                    this.removeClass(c + "_on"),
                    this.removeClass(c + "_disabled"),
                    d && this.removeAttribute("aria-pressed"),
                    d && this.removeAttribute("aria-disabled")
                }
            },
            getFrameDocument: function() {
                var a = this.$;
                try {
                    a.contentWindow.document
                } catch(c) {
                    a.src = a.src
                }
                return a && new CKEDITOR.dom.document(a.contentWindow.document)
            },
            copyAttributes: function(a, c) {
                var d = this.$.attributes;
                c = c || {};
                for (var g = 0; g < d.length; g++) {
                    var f = d[g],
                    k = f.nodeName.toLowerCase(),
                    h;
                    if (! (k in c)) if ("checked" == k && (h = this.getAttribute(k))) a.setAttribute(k, h);
                    else if (f.specified || CKEDITOR.env.ie && f.nodeValue && "value" == k) h = this.getAttribute(k),
                    null === h && (h = f.nodeValue),
                    a.setAttribute(k, h)
                }
                "" !== this.$.style.cssText && (a.$.style.cssText = this.$.style.cssText)
            },
            renameNode: function(a) {
                if (this.getName() != a) {
                    var c = this.getDocument();
                    a = new CKEDITOR.dom.element(a, c);
                    this.copyAttributes(a);
                    this.moveChildren(a);
                    this.getParent() && this.$.parentNode.replaceChild(a.$, this.$);
                    a.$["data-cke-expando"] = this.$["data-cke-expando"];
                    this.$ = a.$
                }
            },
            getChild: function() {
                function a(b, d) {
                    var g = b.childNodes;
                    if (0 <= d && d < g.length) return g[d]
                }
                return function(c) {
                    var d = this.$;
                    if (c.slice) for (; 0 < c.length && d;) d = a(d, c.shift());
                    else d = a(d, c);
                    return d ? new CKEDITOR.dom.node(d) : null
                }
            } (),
            getChildCount: function() {
                return this.$.childNodes.length
            },
            disableContextMenu: function() {
                this.on("contextmenu",
                function(a) {
                    a.data.getTarget().hasClass("cke_enable_context_menu") || a.data.preventDefault()
                })
            },
            getDirection: function(a) {
                return a ? this.getComputedStyle("direction") || this.getDirection() || this.getParent() && this.getParent().getDirection(1) || this.getDocument().$.dir || "ltr": this.getStyle("direction") || this.getAttribute("dir")
            },
            data: function(a, c) {
                a = "data-" + a;
                if (void 0 === c) return this.getAttribute(a); ! 1 === c ? this.removeAttribute(a) : this.setAttribute(a, c);
                return null
            },
            getEditor: function() {
                var a = CKEDITOR.instances,
                c, d;
                for (c in a) if (d = a[c], d.element.equals(this) && d.elementMode != CKEDITOR.ELEMENT_MODE_APPENDTO) return d;
                return null
            }
        });
        var d = {
            width: ["border-left-width", "border-right-width", "padding-left", "padding-right"],
            height: ["border-top-width", "border-bottom-width", "padding-top", "padding-bottom"]
        };
        CKEDITOR.dom.element.prototype.setSize = function(b, c, d) {
            "number" == typeof c && (!d || CKEDITOR.env.ie && CKEDITOR.env.quirks || (c -= a.call(this, b)), this.setStyle(b, c + "px"))
        };
        CKEDITOR.dom.element.prototype.getSize = function(b, c) {
            var d = Math.max(this.$["offset" + CKEDITOR.tools.capitalize(b)], this.$["client" + CKEDITOR.tools.capitalize(b)]) || 0;
            c && (d -= a.call(this, b));
            return d
        }
    } (), CKEDITOR.dom.documentFragment = function(a) {
        a = a || CKEDITOR.document;
        this.$ = a.type == CKEDITOR.NODE_DOCUMENT ? a.$.createDocumentFragment() : a
    },
    CKEDITOR.tools.extend(CKEDITOR.dom.documentFragment.prototype, CKEDITOR.dom.element.prototype, {
        type: CKEDITOR.NODE_DOCUMENT_FRAGMENT,
        insertAfterNode: function(a) {
            a = a.$;
            a.parentNode.insertBefore(this.$, a.nextSibling)
        }
    },
    !0, {
        append: 1,
        appendBogus: 1,
        getFirst: 1,
        getLast: 1,
        getParent: 1,
        getNext: 1,
        getPrevious: 1,
        appendTo: 1,
        moveChildren: 1,
        insertBefore: 1,
        insertAfterNode: 1,
        replace: 1,
        trim: 1,
        type: 1,
        ltrim: 1,
        rtrim: 1,
        getDocument: 1,
        getChildCount: 1,
        getChild: 1,
        getChildren: 1
    }),
    function() {
        function a(a, b) {
            var c = this.range;
            if (this._.end) return null;
            if (!this._.start) {
                this._.start = 1;
                if (c.collapsed) return this.end(),
                null;
                c.optimize()
            }
            var d, e = c.startContainer;
            d = c.endContainer;
            var g = c.startOffset,
            s = c.endOffset,
            r, q = this.guard,
            t = this.type,
            u = a ? "getPreviousSourceNode": "getNextSourceNode";
            if (!a && !this._.guardLTR) {
                var w = d.type == CKEDITOR.NODE_ELEMENT ? d: d.getParent(),
                v = d.type == CKEDITOR.NODE_ELEMENT ? d.getChild(s) : d.getNext();
                this._.guardLTR = function(a, b) {
                    return (!b || !w.equals(a)) && (!v || !a.equals(v)) && (a.type != CKEDITOR.NODE_ELEMENT || !b || !a.equals(c.root))
                }
            }
            if (a && !this._.guardRTL) {
                var A = e.type == CKEDITOR.NODE_ELEMENT ? e: e.getParent(),
                E = e.type == CKEDITOR.NODE_ELEMENT ? g ? e.getChild(g - 1) : null: e.getPrevious();
                this._.guardRTL = function(a, b) {
                    return (!b || !A.equals(a)) && (!E || !a.equals(E)) && (a.type != CKEDITOR.NODE_ELEMENT || !b || !a.equals(c.root))
                }
            }
            var z = a ? this._.guardRTL: this._.guardLTR;
            r = q ?
            function(a, b) {
                return ! 1 === z(a, b) ? !1 : q(a, b)
            }: z;
            this.current ? d = this.current[u](!1, t, r) : (a ? d.type == CKEDITOR.NODE_ELEMENT && (d = 0 < s ? d.getChild(s - 1) : !1 === r(d, !0) ? null: d.getPreviousSourceNode(!0, t, r)) : (d = e, d.type != CKEDITOR.NODE_ELEMENT || (d = d.getChild(g)) || (d = !1 === r(e, !0) ? null: e.getNextSourceNode(!0, t, r))), d && !1 === r(d) && (d = null));
            for (; d && !this._.end;) {
                this.current = d;
                if (!this.evaluator || !1 !== this.evaluator(d)) {
                    if (!b) return d
                } else if (b && this.evaluator) return ! 1;
                d = d[u](!1, t, r)
            }
            this.end();
            return this.current = null
        }
        function d(b) {
            for (var c, d = null; c = a.call(this, b);) d = c;
            return d
        }
        CKEDITOR.dom.walker = CKEDITOR.tools.createClass({
            $: function(a) {
                this.range = a;
                this._ = {}
            },
            proto: {
                end: function() {
                    this._.end = 1
                },
                next: function() {
                    return a.call(this)
                },
                previous: function() {
                    return a.call(this, 1)
                },
                checkForward: function() {
                    return ! 1 !== a.call(this, 0, 1)
                },
                checkBackward: function() {
                    return ! 1 !== a.call(this, 1, 1)
                },
                lastForward: function() {
                    return d.call(this)
                },
                lastBackward: function() {
                    return d.call(this, 1)
                },
                reset: function() {
                    delete this.current;
                    this._ = {}
                }
            }
        });
        var b = {
            block: 1,
            "list-item": 1,
            table: 1,
            "table-row-group": 1,
            "table-header-group": 1,
            "table-footer-group": 1,
            "table-row": 1,
            "table-column-group": 1,
            "table-column": 1,
            "table-cell": 1,
            "table-caption": 1
        };
        CKEDITOR.dom.element.prototype.isBlockBoundary = function(a) {
            a = a ? CKEDITOR.tools.extend({},
            CKEDITOR.dtd.$block, a || {}) : CKEDITOR.dtd.$block;
            return "none" == this.getComputedStyle("float") && b[this.getComputedStyle("display")] || a[this.getName()]
        };
        CKEDITOR.dom.walker.blockBoundary = function(a) {
            return function(b) {
                return ! (b.type == CKEDITOR.NODE_ELEMENT && b.isBlockBoundary(a))
            }
        };
        CKEDITOR.dom.walker.listItemBoundary = function() {
            return this.blockBoundary({
                br: 1
            })
        };
        CKEDITOR.dom.walker.bookmark = function(a, b) {
            function c(a) {
                return a && a.getName && "span" == a.getName() && a.data("cke-bookmark")
            }
            return function(d) {
                var e, g;
                e = d && d.type != CKEDITOR.NODE_ELEMENT && (g = d.getParent()) && c(g);
                e = a ? e: e || c(d);
                return !! (b ^ e)
            }
        };
        CKEDITOR.dom.walker.whitespaces = function(a) {
            return function(b) {
                var c;
                b && b.type == CKEDITOR.NODE_TEXT && (c = !CKEDITOR.tools.trim(b.getText()) || CKEDITOR.env.webkit && "\u200b" == b.getText());
                return !! (a ^ c)
            }
        };
        CKEDITOR.dom.walker.invisible = function(a) {
            var b = CKEDITOR.dom.walker.whitespaces();
            return function(c) {
                b(c) ? c = 1 : (c.type == CKEDITOR.NODE_TEXT && (c = c.getParent()), c = !c.$.offsetHeight);
                return !! (a ^ c)
            }
        };
        CKEDITOR.dom.walker.nodeType = function(a, b) {
            return function(c) {
                return !! (b ^ c.type == a)
            }
        };
        CKEDITOR.dom.walker.bogus = function(a) {
            function b(a) {
                return ! e(a) && !g(a)
            }
            return function(d) {
                var e = CKEDITOR.env.ie ? d.getText && c.test(d.getText()) : d.is && d.is("br");
                e && (e = d.getParent(), d = d.getNext(b), e = e.isBlockBoundary() && (!d || d.type == CKEDITOR.NODE_ELEMENT && d.isBlockBoundary()));
                return !! (a ^ e)
            }
        };
        var c = /^[\t\r\n ]*(?:&nbsp;|\xa0)$/,
        e = CKEDITOR.dom.walker.whitespaces(),
        g = CKEDITOR.dom.walker.bookmark();
        CKEDITOR.dom.element.prototype.getBogus = function() {
            var a = this;
            do a = a.getPreviousSourceNode();
            while (g(a) || e(a) || a.type == CKEDITOR.NODE_ELEMENT && a.getName() in CKEDITOR.dtd.$inline && !(a.getName() in CKEDITOR.dtd.$empty));
            return a && (CKEDITOR.env.ie ? a.getText && c.test(a.getText()) : a.is && a.is("br")) ? a: !1
        }
    } (), CKEDITOR.dom.range = function(a) {
        this.endOffset = this.endContainer = this.startOffset = this.startContainer = null;
        this.collapsed = !0;
        var d = a instanceof CKEDITOR.dom.document;
        this.document = d ? a: a.getDocument();
        this.root = d ? a.getBody() : a
    },
    function() {
        function a() {
            var a = !1,
            b = CKEDITOR.dom.walker.whitespaces(),
            c = CKEDITOR.dom.walker.bookmark(!0),
            d = CKEDITOR.dom.walker.bogus();
            return function(e) {
                return c(e) || b(e) ? !0 : d(e) && !a ? a = !0 : e.type == CKEDITOR.NODE_TEXT && (e.hasAscendant("pre") || CKEDITOR.tools.trim(e.getText()).length) || e.type == CKEDITOR.NODE_ELEMENT && !e.is(g) ? !1 : !0
            }
        }
        function d(a) {
            var b = CKEDITOR.dom.walker.whitespaces(),
            c = CKEDITOR.dom.walker.bookmark(1);
            return function(d) {
                return c(d) || b(d) ? !0 : !a && f(d) || d.type == CKEDITOR.NODE_ELEMENT && d.is(CKEDITOR.dtd.$removeEmpty)
            }
        }
        function b(a) {
            return ! k(a) && !h(a)
        }
        var c = function(a) {
            a.collapsed = a.startContainer && a.endContainer && a.startContainer.equals(a.endContainer) && a.startOffset == a.endOffset
        },
        e = function(a, b, c, d) {
            a.optimizeBookmark();
            var e = a.startContainer,
            f = a.endContainer,
            g = a.startOffset,
            h = a.endOffset,
            k, l;
            f.type == CKEDITOR.NODE_TEXT ? f = f.split(h) : 0 < f.getChildCount() && (h >= f.getChildCount() ? (f = f.append(a.document.createText("")), l = !0) : f = f.getChild(h));
            e.type == CKEDITOR.NODE_TEXT ? (e.split(g), e.equals(f) && (f = e.getNext())) : g ? g >= e.getChildCount() ? (e = e.append(a.document.createText("")), k = !0) : e = e.getChild(g).getPrevious() : (e = e.append(a.document.createText(""), 1), k = !0);
            var g = e.getParents(),
            h = f.getParents(),
            E,
            z,
            B;
            for (E = 0; E < g.length && (z = g[E], B = h[E], z.equals(B)); E++);
            for (var x = c,
            D, I, C, F = E; F < g.length; F++) {
                D = g[F];
                x && !D.equals(e) && (I = x.append(D.clone()));
                for (D = D.getNext(); D && !D.equals(h[F]) && !D.equals(f);) C = D.getNext(),
                2 == b ? x.append(D.clone(!0)) : (D.remove(), 1 == b && x.append(D)),
                D = C;
                x && (x = I)
            }
            x = c;
            for (c = E; c < h.length; c++) {
                D = h[c];
                0 < b && !D.equals(f) && (I = x.append(D.clone()));
                if (!g[c] || D.$.parentNode != g[c].$.parentNode) for (D = D.getPrevious(); D && !D.equals(g[c]) && !D.equals(e);) C = D.getPrevious(),
                2 == b ? x.$.insertBefore(D.$.cloneNode(!0), x.$.firstChild) : (D.remove(), 1 == b && x.$.insertBefore(D.$, x.$.firstChild)),
                D = C;
                x && (x = I)
            }
            2 == b ? (z = a.startContainer, z.type == CKEDITOR.NODE_TEXT && (z.$.data += z.$.nextSibling.data, z.$.parentNode.removeChild(z.$.nextSibling)), a = a.endContainer, a.type == CKEDITOR.NODE_TEXT && a.$.nextSibling && (a.$.data += a.$.nextSibling.data, a.$.parentNode.removeChild(a.$.nextSibling))) : (z && B && (e.$.parentNode != z.$.parentNode || f.$.parentNode != B.$.parentNode) && (b = B.getIndex(), k && B.$.parentNode == e.$.parentNode && b--, d && z.type == CKEDITOR.NODE_ELEMENT ? (d = CKEDITOR.dom.element.createFromHtml('<span data-cke-bookmark="1" style="display:none">&nbsp;</span>', a.document), d.insertAfter(z), z.mergeSiblings(!1), a.moveToBookmark({
                startNode: d
            })) : a.setStart(B.getParent(), b)), a.collapse(!0));
            k && e.remove();
            l && f.$.parentNode && f.remove()
        },
        g = {
            abbr: 1,
            acronym: 1,
            b: 1,
            bdo: 1,
            big: 1,
            cite: 1,
            code: 1,
            del: 1,
            dfn: 1,
            em: 1,
            font: 1,
            i: 1,
            ins: 1,
            label: 1,
            kbd: 1,
            q: 1,
            samp: 1,
            small: 1,
            span: 1,
            strike: 1,
            strong: 1,
            sub: 1,
            sup: 1,
            tt: 1,
            u: 1,
            "var": 1
        },
        f = CKEDITOR.dom.walker.bogus(),
        k = new CKEDITOR.dom.walker.whitespaces,
        h = new CKEDITOR.dom.walker.bookmark,
        l = /^[\t\r\n ]*(?:&nbsp;|\xa0)$/;
        CKEDITOR.dom.range.prototype = {
            clone: function() {
                var a = new CKEDITOR.dom.range(this.root);
                a.startContainer = this.startContainer;
                a.startOffset = this.startOffset;
                a.endContainer = this.endContainer;
                a.endOffset = this.endOffset;
                a.collapsed = this.collapsed;
                return a
            },
            collapse: function(a) {
                a ? (this.endContainer = this.startContainer, this.endOffset = this.startOffset) : (this.startContainer = this.endContainer, this.startOffset = this.endOffset);
                this.collapsed = !0
            },
            cloneContents: function() {
                var a = new CKEDITOR.dom.documentFragment(this.document);
                this.collapsed || e(this, 2, a);
                return a
            },
            deleteContents: function(a) {
                this.collapsed || e(this, 0, null, a)
            },
            extractContents: function(a) {
                var b = new CKEDITOR.dom.documentFragment(this.document);
                this.collapsed || e(this, 1, b, a);
                return b
            },
            createBookmark: function(a) {
                var b, c, d, e, f = this.collapsed;
                b = this.document.createElement("span");
                b.data("cke-bookmark", 1);
                b.setStyle("display", "none");
                b.setHtml("&nbsp;");
                a && (d = "cke_bm_" + CKEDITOR.tools.getNextNumber(), b.setAttribute("id", d + (f ? "C": "S")));
                f || (c = b.clone(), c.setHtml("&nbsp;"), a && c.setAttribute("id", d + "E"), e = this.clone(), e.collapse(), e.insertNode(c));
                e = this.clone();
                e.collapse(!0);
                e.insertNode(b);
                c ? (this.setStartAfter(b), this.setEndBefore(c)) : this.moveToPosition(b, CKEDITOR.POSITION_AFTER_END);
                return {
                    startNode: a ? d + (f ? "C": "S") : b,
                    endNode: a ? d + "E": c,
                    serializable: a,
                    collapsed: f
                }
            },
            createBookmark2: function() {
                function a(b) {
                    var c = b.container,
                    d = b.offset,
                    e;
                    e = c;
                    var f = d;
                    if (e = e.type != CKEDITOR.NODE_ELEMENT || 0 == f || f == e.getChildCount() ? 0 : e.getChild(f - 1).type == CKEDITOR.NODE_TEXT && e.getChild(f).type == CKEDITOR.NODE_TEXT) c = c.getChild(d - 1),
                    d = c.getLength();
                    c.type == CKEDITOR.NODE_ELEMENT && 1 < d && (d = c.getChild(d - 1).getIndex(!0) + 1);
                    if (c.type == CKEDITOR.NODE_TEXT) {
                        e = c;
                        for (f = 0; (e = e.getPrevious()) && e.type == CKEDITOR.NODE_TEXT;) f += e.getLength();
                        d += f
                    }
                    b.container = c;
                    b.offset = d
                }
                return function(b) {
                    var c = this.collapsed,
                    d = {
                        container: this.startContainer,
                        offset: this.startOffset
                    },
                    e = {
                        container: this.endContainer,
                        offset: this.endOffset
                    };
                    b && (a(d), c || a(e));
                    return {
                        start: d.container.getAddress(b),
                        end: c ? null: e.container.getAddress(b),
                        startOffset: d.offset,
                        endOffset: e.offset,
                        normalized: b,
                        collapsed: c,
                        is2: !0
                    }
                }
            } (),
            moveToBookmark: function(a) {
                if (a.is2) {
                    var b = this.document.getByAddress(a.start, a.normalized),
                    c = a.startOffset,
                    d = a.end && this.document.getByAddress(a.end, a.normalized);
                    a = a.endOffset;
                    this.setStart(b, c);
                    d ? this.setEnd(d, a) : this.collapse(!0)
                } else b = (c = a.serializable) ? this.document.getById(a.startNode) : a.startNode,
                a = c ? this.document.getById(a.endNode) : a.endNode,
                this.setStartBefore(b),
                b.remove(),
                a ? (this.setEndBefore(a), a.remove()) : this.collapse(!0)
            },
            getBoundaryNodes: function() {
                var a = this.startContainer,
                b = this.endContainer,
                c = this.startOffset,
                d = this.endOffset,
                e;
                if (a.type == CKEDITOR.NODE_ELEMENT) if (e = a.getChildCount(), e > c) a = a.getChild(c);
                else if (1 > e) a = a.getPreviousSourceNode();
                else {
                    for (a = a.$; a.lastChild;) a = a.lastChild;
                    a = new CKEDITOR.dom.node(a);
                    a = a.getNextSourceNode() || a
                }
                if (b.type == CKEDITOR.NODE_ELEMENT) if (e = b.getChildCount(), e > d) b = b.getChild(d).getPreviousSourceNode(!0);
                else if (1 > e) b = b.getPreviousSourceNode();
                else {
                    for (b = b.$; b.lastChild;) b = b.lastChild;
                    b = new CKEDITOR.dom.node(b)
                }
                a.getPosition(b) & CKEDITOR.POSITION_FOLLOWING && (a = b);
                return {
                    startNode: a,
                    endNode: b
                }
            },
            getCommonAncestor: function(a, b) {
                var c = this.startContainer,
                d = this.endContainer,
                c = c.equals(d) ? a && c.type == CKEDITOR.NODE_ELEMENT && this.startOffset == this.endOffset - 1 ? c.getChild(this.startOffset) : c: c.getCommonAncestor(d);
                return b && !c.is ? c.getParent() : c
            },
            optimize: function() {
                var a = this.startContainer,
                b = this.startOffset;
                a.type != CKEDITOR.NODE_ELEMENT && (b ? b >= a.getLength() && this.setStartAfter(a) : this.setStartBefore(a));
                a = this.endContainer;
                b = this.endOffset;
                a.type != CKEDITOR.NODE_ELEMENT && (b ? b >= a.getLength() && this.setEndAfter(a) : this.setEndBefore(a))
            },
            optimizeBookmark: function() {
                var a = this.startContainer,
                b = this.endContainer;
                a.is && a.is("span") && a.data("cke-bookmark") && this.setStartAt(a, CKEDITOR.POSITION_BEFORE_START);
                b && b.is && b.is("span") && b.data("cke-bookmark") && this.setEndAt(b, CKEDITOR.POSITION_AFTER_END)
            },
            trim: function(a, b) {
                var c = this.startContainer,
                d = this.startOffset,
                e = this.collapsed;
                if ((!a || e) && c && c.type == CKEDITOR.NODE_TEXT) {
                    if (d) if (d >= c.getLength()) d = c.getIndex() + 1,
                    c = c.getParent();
                    else {
                        var f = c.split(d),
                        d = c.getIndex() + 1,
                        c = c.getParent();
                        this.startContainer.equals(this.endContainer) ? this.setEnd(f, this.endOffset - this.startOffset) : c.equals(this.endContainer) && (this.endOffset += 1)
                    } else d = c.getIndex(),
                    c = c.getParent();
                    this.setStart(c, d);
                    if (e) {
                        this.collapse(!0);
                        return
                    }
                }
                c = this.endContainer;
                d = this.endOffset;
                b || e || !c || c.type != CKEDITOR.NODE_TEXT || (d ? (d >= c.getLength() || c.split(d), d = c.getIndex() + 1) : d = c.getIndex(), c = c.getParent(), this.setEnd(c, d))
            },
            enlarge: function(a, b) {
                switch (a) {
                case CKEDITOR.ENLARGE_INLINE:
                    var c = 1;
                case CKEDITOR.ENLARGE_ELEMENT:
                    if (this.collapsed) break;
                    var d = this.getCommonAncestor(),
                    e = this.root,
                    f,
                    g,
                    h,
                    k,
                    l,
                    E = !1,
                    z,
                    B;
                    z = this.startContainer;
                    B = this.startOffset;
                    z.type == CKEDITOR.NODE_TEXT ? (B && (z = !CKEDITOR.tools.trim(z.substring(0, B)).length && z, E = !!z), z && !(k = z.getPrevious()) && (h = z.getParent())) : (B && (k = z.getChild(B - 1) || z.getLast()), k || (h = z));
                    for (; h || k;) {
                        if (h && !k) { ! l && h.equals(d) && (l = !0);
                            if (c ? h.isBlockBoundary() : !e.contains(h)) break;
                            E && "inline" == h.getComputedStyle("display") || (E = !1, l ? f = h: this.setStartBefore(h));
                            k = h.getPrevious()
                        }
                        for (; k;) if (z = !1, k.type == CKEDITOR.NODE_COMMENT) k = k.getPrevious();
                        else {
                            if (k.type == CKEDITOR.NODE_TEXT) B = k.getText(),
                            /[^\s\ufeff]/.test(B) && (k = null),
                            z = /[\s\ufeff]$/.test(B);
                            else if ((0 < k.$.offsetWidth || b && k.is("br")) && !k.data("cke-bookmark")) if (E && CKEDITOR.dtd.$removeEmpty[k.getName()]) {
                                B = k.getText();
                                if (/[^\s\ufeff]/.test(B)) k = null;
                                else for (var x = k.$.getElementsByTagName("*"), D = 0, I; I = x[D++];) if (!CKEDITOR.dtd.$removeEmpty[I.nodeName.toLowerCase()]) {
                                    k = null;
                                    break
                                }
                                k && (z = !!B.length)
                            } else k = null;
                            z && (E ? l ? f = h: h && this.setStartBefore(h) : E = !0);
                            if (k) {
                                z = k.getPrevious();
                                if (!h && !z) {
                                    h = k;
                                    k = null;
                                    break
                                }
                                k = z
                            } else h = null
                        }
                        h && (h = h.getParent())
                    }
                    z = this.endContainer;
                    B = this.endOffset;
                    h = k = null;
                    l = E = !1;
                    z.type == CKEDITOR.NODE_TEXT ? (z = !CKEDITOR.tools.trim(z.substring(B)).length && z, E = !(z && z.getLength()), z && !(k = z.getNext()) && (h = z.getParent())) : (k = z.getChild(B)) || (h = z);
                    for (; h || k;) {
                        if (h && !k) { ! l && h.equals(d) && (l = !0);
                            if (c ? h.isBlockBoundary() : !e.contains(h)) break;
                            E && "inline" == h.getComputedStyle("display") || (E = !1, l ? g = h: h && this.setEndAfter(h));
                            k = h.getNext()
                        }
                        for (; k;) {
                            z = !1;
                            if (k.type == CKEDITOR.NODE_TEXT) B = k.getText(),
                            /[^\s\ufeff]/.test(B) && (k = null),
                            z = /^[\s\ufeff]/.test(B);
                            else if (k.type == CKEDITOR.NODE_ELEMENT) {
                                if ((0 < k.$.offsetWidth || b && k.is("br")) && !k.data("cke-bookmark")) if (E && CKEDITOR.dtd.$removeEmpty[k.getName()]) {
                                    B = k.getText();
                                    if (/[^\s\ufeff]/.test(B)) k = null;
                                    else for (x = k.$.getElementsByTagName("*"), D = 0; I = x[D++];) if (!CKEDITOR.dtd.$removeEmpty[I.nodeName.toLowerCase()]) {
                                        k = null;
                                        break
                                    }
                                    k && (z = !!B.length)
                                } else k = null
                            } else z = 1;
                            z && E && (l ? g = h: this.setEndAfter(h));
                            if (k) {
                                z = k.getNext();
                                if (!h && !z) {
                                    h = k;
                                    k = null;
                                    break
                                }
                                k = z
                            } else h = null
                        }
                        h && (h = h.getParent())
                    }
                    f && g && (d = f.contains(g) ? g: f, this.setStartBefore(d), this.setEndAfter(d));
                    break;
                case CKEDITOR.ENLARGE_BLOCK_CONTENTS:
                case CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS:
                    h = new CKEDITOR.dom.range(this.root);
                    e = this.root;
                    h.setStartAt(e, CKEDITOR.POSITION_AFTER_START);
                    h.setEnd(this.startContainer, this.startOffset);
                    h = new CKEDITOR.dom.walker(h);
                    var C, F, J = CKEDITOR.dom.walker.blockBoundary(a == CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS ? {
                        br: 1
                    }: null),
                    m = function(a) {
                        var b = J(a);
                        b || (C = a);
                        return b
                    },
                    c = function(a) {
                        var b = m(a); ! b && a.is && a.is("br") && (F = a);
                        return b
                    };
                    h.guard = m;
                    h = h.lastBackward();
                    C = C || e;
                    this.setStartAt(C, !C.is("br") && (!h && this.checkStartOfBlock() || h && C.contains(h)) ? CKEDITOR.POSITION_AFTER_START: CKEDITOR.POSITION_AFTER_END);
                    if (a == CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS) {
                        h = this.clone();
                        h = new CKEDITOR.dom.walker(h);
                        var L = CKEDITOR.dom.walker.whitespaces(),
                        K = CKEDITOR.dom.walker.bookmark();
                        h.evaluator = function(a) {
                            return ! L(a) && !K(a)
                        };
                        if ((h = h.previous()) && h.type == CKEDITOR.NODE_ELEMENT && h.is("br")) break
                    }
                    h = this.clone();
                    h.collapse();
                    h.setEndAt(e, CKEDITOR.POSITION_BEFORE_END);
                    h = new CKEDITOR.dom.walker(h);
                    h.guard = a == CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS ? c: m;
                    C = null;
                    h = h.lastForward();
                    C = C || e;
                    this.setEndAt(C, !h && this.checkEndOfBlock() || h && C.contains(h) ? CKEDITOR.POSITION_BEFORE_END: CKEDITOR.POSITION_BEFORE_START);
                    F && this.setEndAfter(F)
                }
            },
            shrink: function(a, b, c) {
                if (!this.collapsed) {
                    a = a || CKEDITOR.SHRINK_TEXT;
                    var d = this.clone(),
                    e = this.startContainer,
                    f = this.endContainer,
                    g = this.startOffset,
                    h = this.endOffset,
                    k = 1,
                    l = 1;
                    e && e.type == CKEDITOR.NODE_TEXT && (g ? g >= e.getLength() ? d.setStartAfter(e) : (d.setStartBefore(e), k = 0) : d.setStartBefore(e));
                    f && f.type == CKEDITOR.NODE_TEXT && (h ? h >= f.getLength() ? d.setEndAfter(f) : (d.setEndAfter(f), l = 0) : d.setEndBefore(f));
                    var d = new CKEDITOR.dom.walker(d),
                    E = CKEDITOR.dom.walker.bookmark();
                    d.evaluator = function(b) {
                        return b.type == (a == CKEDITOR.SHRINK_ELEMENT ? CKEDITOR.NODE_ELEMENT: CKEDITOR.NODE_TEXT)
                    };
                    var z;
                    d.guard = function(b, d) {
                        if (E(b)) return ! 0;
                        if (a == CKEDITOR.SHRINK_ELEMENT && b.type == CKEDITOR.NODE_TEXT || d && b.equals(z) || !1 === c && b.type == CKEDITOR.NODE_ELEMENT && b.isBlockBoundary()) return ! 1; ! d && b.type == CKEDITOR.NODE_ELEMENT && (z = b);
                        return ! 0
                    };
                    k && (e = d[a == CKEDITOR.SHRINK_ELEMENT ? "lastForward": "next"]()) && this.setStartAt(e, b ? CKEDITOR.POSITION_AFTER_START: CKEDITOR.POSITION_BEFORE_START);
                    l && (d.reset(), (d = d[a == CKEDITOR.SHRINK_ELEMENT ? "lastBackward": "previous"]()) && this.setEndAt(d, b ? CKEDITOR.POSITION_BEFORE_END: CKEDITOR.POSITION_AFTER_END));
                    return ! (!k && !l)
                }
            },
            insertNode: function(a) {
                this.optimizeBookmark();
                this.trim(!1, !0);
                var b = this.startContainer,
                c = b.getChild(this.startOffset);
                c ? a.insertBefore(c) : b.append(a);
                a.getParent() && a.getParent().equals(this.endContainer) && this.endOffset++;
                this.setStartBefore(a)
            },
            moveToPosition: function(a, b) {
                this.setStartAt(a, b);
                this.collapse(!0)
            },
            moveToRange: function(a) {
                this.setStart(a.startContainer, a.startOffset);
                this.setEnd(a.endContainer, a.endOffset)
            },
            selectNodeContents: function(a) {
                this.setStart(a, 0);
                this.setEnd(a, a.type == CKEDITOR.NODE_TEXT ? a.getLength() : a.getChildCount())
            },
            setStart: function(a, b) {
                a.type == CKEDITOR.NODE_ELEMENT && CKEDITOR.dtd.$empty[a.getName()] && (b = a.getIndex(), a = a.getParent());
                this.startContainer = a;
                this.startOffset = b;
                this.endContainer || (this.endContainer = a, this.endOffset = b);
                c(this)
            },
            setEnd: function(a, b) {
                a.type == CKEDITOR.NODE_ELEMENT && CKEDITOR.dtd.$empty[a.getName()] && (b = a.getIndex() + 1, a = a.getParent());
                this.endContainer = a;
                this.endOffset = b;
                this.startContainer || (this.startContainer = a, this.startOffset = b);
                c(this)
            },
            setStartAfter: function(a) {
                this.setStart(a.getParent(), a.getIndex() + 1)
            },
            setStartBefore: function(a) {
                this.setStart(a.getParent(), a.getIndex())
            },
            setEndAfter: function(a) {
                this.setEnd(a.getParent(), a.getIndex() + 1)
            },
            setEndBefore: function(a) {
                this.setEnd(a.getParent(), a.getIndex())
            },
            setStartAt: function(a, b) {
                switch (b) {
                case CKEDITOR.POSITION_AFTER_START:
                    this.setStart(a, 0);
                    break;
                case CKEDITOR.POSITION_BEFORE_END:
                    a.type == CKEDITOR.NODE_TEXT ? this.setStart(a, a.getLength()) : this.setStart(a, a.getChildCount());
                    break;
                case CKEDITOR.POSITION_BEFORE_START:
                    this.setStartBefore(a);
                    break;
                case CKEDITOR.POSITION_AFTER_END:
                    this.setStartAfter(a)
                }
                c(this)
            },
            setEndAt: function(a, b) {
                switch (b) {
                case CKEDITOR.POSITION_AFTER_START:
                    this.setEnd(a, 0);
                    break;
                case CKEDITOR.POSITION_BEFORE_END:
                    a.type == CKEDITOR.NODE_TEXT ? this.setEnd(a, a.getLength()) : this.setEnd(a, a.getChildCount());
                    break;
                case CKEDITOR.POSITION_BEFORE_START:
                    this.setEndBefore(a);
                    break;
                case CKEDITOR.POSITION_AFTER_END:
                    this.setEndAfter(a)
                }
                c(this)
            },
            fixBlock: function(a, b) {
                var c = this.createBookmark(),
                d = this.document.createElement(b);
                this.collapse(a);
                this.enlarge(CKEDITOR.ENLARGE_BLOCK_CONTENTS);
                this.extractContents().appendTo(d);
                d.trim();
                CKEDITOR.env.ie || d.appendBogus();
                this.insertNode(d);
                this.moveToBookmark(c);
                return d
            },
            splitBlock: function(a) {
                var b = new CKEDITOR.dom.elementPath(this.startContainer, this.root),
                c = new CKEDITOR.dom.elementPath(this.endContainer, this.root),
                d = b.block,
                e = c.block,
                f = null;
                if (!b.blockLimit.equals(c.blockLimit)) return null;
                "br" != a && (d || (d = this.fixBlock(!0, a), e = (new CKEDITOR.dom.elementPath(this.endContainer, this.root)).block), e || (e = this.fixBlock(!1, a)));
                a = d && this.checkStartOfBlock();
                b = e && this.checkEndOfBlock();
                this.deleteContents();
                d && d.equals(e) && (b ? (f = new CKEDITOR.dom.elementPath(this.startContainer, this.root), this.moveToPosition(e, CKEDITOR.POSITION_AFTER_END), e = null) : a ? (f = new CKEDITOR.dom.elementPath(this.startContainer, this.root), this.moveToPosition(d, CKEDITOR.POSITION_BEFORE_START), d = null) : (e = this.splitElement(d), CKEDITOR.env.ie || d.is("ul", "ol") || d.appendBogus()));
                return {
                    previousBlock: d,
                    nextBlock: e,
                    wasStartOfBlock: a,
                    wasEndOfBlock: b,
                    elementPath: f
                }
            },
            splitElement: function(a) {
                if (!this.collapsed) return null;
                this.setEndAt(a, CKEDITOR.POSITION_BEFORE_END);
                var b = this.extractContents(),
                c = a.clone(!1);
                b.appendTo(c);
                c.insertAfter(a);
                this.moveToPosition(a, CKEDITOR.POSITION_AFTER_END);
                return c
            },
            removeEmptyBlocksAtEnd: function() {
                function a(d) {
                    return function(a) {
                        return b(a) || c(a) || a.type == CKEDITOR.NODE_ELEMENT && a.isEmptyInlineRemoveable() || d.is("table") && a.is("caption") ? !1 : !0
                    }
                }
                var b = CKEDITOR.dom.walker.whitespaces(),
                c = CKEDITOR.dom.walker.bookmark(!1);
                return function(b) {
                    for (var c = this.createBookmark(), d = this[b ? "endPath": "startPath"](), e = d.block || d.blockLimit, f; e && !e.equals(d.root) && !e.getFirst(a(e));) f = e.getParent(),
                    this[b ? "setEndAt": "setStartAt"](e, CKEDITOR.POSITION_AFTER_END),
                    e.remove(1),
                    e = f;
                    this.moveToBookmark(c)
                }
            } (),
            startPath: function() {
                return new CKEDITOR.dom.elementPath(this.startContainer, this.root)
            },
            endPath: function() {
                return new CKEDITOR.dom.elementPath(this.endContainer, this.root)
            },
            checkBoundaryOfElement: function(a, b) {
                var c = b == CKEDITOR.START,
                e = this.clone();
                e.collapse(c);
                e[c ? "setStartAt": "setEndAt"](a, c ? CKEDITOR.POSITION_AFTER_START: CKEDITOR.POSITION_BEFORE_END);
                e = new CKEDITOR.dom.walker(e);
                e.evaluator = d(c);
                return e[c ? "checkBackward": "checkForward"]()
            },
            checkStartOfBlock: function() {
                var b = this.startContainer,
                c = this.startOffset;
                CKEDITOR.env.ie && c && b.type == CKEDITOR.NODE_TEXT && (b = CKEDITOR.tools.ltrim(b.substring(0, c)), l.test(b) && this.trim(0, 1));
                this.trim();
                b = new CKEDITOR.dom.elementPath(this.startContainer, this.root);
                c = this.clone();
                c.collapse(!0);
                c.setStartAt(b.block || b.blockLimit, CKEDITOR.POSITION_AFTER_START);
                b = new CKEDITOR.dom.walker(c);
                b.evaluator = a();
                return b.checkBackward()
            },
            checkEndOfBlock: function() {
                var b = this.endContainer,
                c = this.endOffset;
                CKEDITOR.env.ie && b.type == CKEDITOR.NODE_TEXT && (b = CKEDITOR.tools.rtrim(b.substring(c)), l.test(b) && this.trim(1, 0));
                this.trim();
                b = new CKEDITOR.dom.elementPath(this.endContainer, this.root);
                c = this.clone();
                c.collapse(!1);
                c.setEndAt(b.block || b.blockLimit, CKEDITOR.POSITION_BEFORE_END);
                b = new CKEDITOR.dom.walker(c);
                b.evaluator = a();
                return b.checkForward()
            },
            getPreviousNode: function(a, b, c) {
                var d = this.clone();
                d.collapse(1);
                d.setStartAt(c || this.root, CKEDITOR.POSITION_AFTER_START);
                c = new CKEDITOR.dom.walker(d);
                c.evaluator = a;
                c.guard = b;
                return c.previous()
            },
            getNextNode: function(a, b, c) {
                var d = this.clone();
                d.collapse();
                d.setEndAt(c || this.root, CKEDITOR.POSITION_BEFORE_END);
                c = new CKEDITOR.dom.walker(d);
                c.evaluator = a;
                c.guard = b;
                return c.next()
            },
            checkReadOnly: function() {
                function a(b, c) {
                    for (; b;) {
                        if (b.type == CKEDITOR.NODE_ELEMENT) {
                            if ("false" == b.getAttribute("contentEditable") && !b.data("cke-editable")) return 0;
                            if (b.is("html") || "true" == b.getAttribute("contentEditable") && (b.contains(c) || b.equals(c))) break
                        }
                        b = b.getParent()
                    }
                    return 1
                }
                return function() {
                    var b = this.startContainer,
                    c = this.endContainer;
                    return ! (a(b, c) && a(c, b))
                }
            } (),
            moveToElementEditablePosition: function(a, c) {
                if (a.type == CKEDITOR.NODE_ELEMENT && !a.isEditable(!1)) return this.moveToPosition(a, c ? CKEDITOR.POSITION_AFTER_END: CKEDITOR.POSITION_BEFORE_START),
                !0;
                for (var d = 0; a;) {
                    if (a.type == CKEDITOR.NODE_TEXT) {
                        c && this.checkEndOfBlock() && l.test(a.getText()) ? this.moveToPosition(a, CKEDITOR.POSITION_BEFORE_START) : this.moveToPosition(a, c ? CKEDITOR.POSITION_AFTER_END: CKEDITOR.POSITION_BEFORE_START);
                        d = 1;
                        break
                    }
                    a.type == CKEDITOR.NODE_ELEMENT && (a.isEditable() ? (this.moveToPosition(a, c ? CKEDITOR.POSITION_BEFORE_END: CKEDITOR.POSITION_AFTER_START), d = 1) : c && a.is("br") && this.checkEndOfBlock() && this.moveToPosition(a, CKEDITOR.POSITION_BEFORE_START));
                    var e = a,
                    f = d,
                    g = void 0;
                    e.type == CKEDITOR.NODE_ELEMENT && e.isEditable(!1) && (g = e[c ? "getLast": "getFirst"](b));
                    f || g || (g = e[c ? "getPrevious": "getNext"](b));
                    a = g
                }
                return !! d
            },
            moveToElementEditStart: function(a) {
                return this.moveToElementEditablePosition(a)
            },
            moveToElementEditEnd: function(a) {
                return this.moveToElementEditablePosition(a, !0)
            },
            getEnclosedNode: function() {
                var a = this.clone();
                a.optimize();
                if (a.startContainer.type != CKEDITOR.NODE_ELEMENT || a.endContainer.type != CKEDITOR.NODE_ELEMENT) return null;
                var a = new CKEDITOR.dom.walker(a),
                b = CKEDITOR.dom.walker.bookmark(!1, !0),
                c = CKEDITOR.dom.walker.whitespaces(!0);
                a.evaluator = function(a) {
                    return c(a) && b(a)
                };
                var d = a.next();
                a.reset();
                return d && d.equals(a.previous()) ? d: null
            },
            getTouchedStartNode: function() {
                var a = this.startContainer;
                return this.collapsed || a.type != CKEDITOR.NODE_ELEMENT ? a: a.getChild(this.startOffset) || a
            },
            getTouchedEndNode: function() {
                var a = this.endContainer;
                return this.collapsed || a.type != CKEDITOR.NODE_ELEMENT ? a: a.getChild(this.endOffset - 1) || a
            },
            scrollIntoView: function() {
                var a = new CKEDITOR.dom.element.createFromHtml("<span>&nbsp;</span>", this.document),
                b,
                c,
                d,
                e = this.clone();
                e.optimize(); (d = e.startContainer.type == CKEDITOR.NODE_TEXT) ? (c = e.startContainer.getText(), b = e.startContainer.split(e.startOffset), a.insertAfter(e.startContainer)) : e.insertNode(a);
                a.scrollIntoView();
                d && (e.startContainer.setText(c), b.remove());
                a.remove()
            }
        }
    } (), CKEDITOR.POSITION_AFTER_START = 1, CKEDITOR.POSITION_BEFORE_END = 2, CKEDITOR.POSITION_BEFORE_START = 3, CKEDITOR.POSITION_AFTER_END = 4, CKEDITOR.ENLARGE_ELEMENT = 1, CKEDITOR.ENLARGE_BLOCK_CONTENTS = 2, CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS = 3, CKEDITOR.ENLARGE_INLINE = 4, CKEDITOR.START = 1, CKEDITOR.END = 2, CKEDITOR.SHRINK_ELEMENT = 1, CKEDITOR.SHRINK_TEXT = 2,
    function() {
        function a(a) {
            1 > arguments.length || (this.range = a, this.forceBrBreak = 0, this.enlargeBr = 1, this.enforceRealBlocks = 0, this._ || (this._ = {}))
        }
        function d(a, b, d) {
            for (a = a.getNextSourceNode(b, null, d); ! c(a);) a = a.getNextSourceNode(b, null, d);
            return a
        }
        var b = /^[\r\n\t ]+$/,
        c = CKEDITOR.dom.walker.bookmark(!1, !0),
        e = CKEDITOR.dom.walker.whitespaces(!0),
        g = function(a) {
            return c(a) && e(a)
        };
        a.prototype = {
            getNextParagraph: function(a) {
                a = a || "p";
                if (!CKEDITOR.dtd[this.range.root.getName()][a]) return null;
                var e, h, l, n, p, s;
                if (!this._.started) {
                    h = this.range.clone();
                    h.shrink(CKEDITOR.NODE_ELEMENT, !0);
                    n = h.endContainer.hasAscendant("pre", !0) || h.startContainer.hasAscendant("pre", !0);
                    h.enlarge(this.forceBrBreak && !n || !this.enlargeBr ? CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS: CKEDITOR.ENLARGE_BLOCK_CONTENTS);
                    if (!h.collapsed) {
                        n = new CKEDITOR.dom.walker(h.clone());
                        var r = CKEDITOR.dom.walker.bookmark(!0, !0);
                        n.evaluator = r;
                        this._.nextNode = n.next();
                        n = new CKEDITOR.dom.walker(h.clone());
                        n.evaluator = r;
                        n = n.previous();
                        this._.lastNode = n.getNextSourceNode(!0);
                        this._.lastNode && this._.lastNode.type == CKEDITOR.NODE_TEXT && !CKEDITOR.tools.trim(this._.lastNode.getText()) && this._.lastNode.getParent().isBlockBoundary() && (r = this.range.clone(), r.moveToPosition(this._.lastNode, CKEDITOR.POSITION_AFTER_END), r.checkEndOfBlock() && (r = new CKEDITOR.dom.elementPath(r.endContainer, r.root), this._.lastNode = (r.block || r.blockLimit).getNextSourceNode(!0)));
                        this._.lastNode || (this._.lastNode = this._.docEndMarker = h.document.createText(""), this._.lastNode.insertAfter(n));
                        h = null
                    }
                    this._.started = 1
                }
                r = this._.nextNode;
                n = this._.lastNode;
                for (this._.nextNode = null; r;) {
                    var q = 0,
                    t = r.hasAscendant("pre"),
                    u = r.type != CKEDITOR.NODE_ELEMENT,
                    w = 0;
                    if (u) r.type == CKEDITOR.NODE_TEXT && b.test(r.getText()) && (u = 0);
                    else {
                        var v = r.getName();
                        if (r.isBlockBoundary(this.forceBrBreak && !t && {
                            br: 1
                        })) {
                            if ("br" == v) u = 1;
                            else if (!h && !r.getChildCount() && "hr" != v) {
                                e = r;
                                l = r.equals(n);
                                break
                            }
                            h && (h.setEndAt(r, CKEDITOR.POSITION_BEFORE_START), "br" != v && (this._.nextNode = r));
                            q = 1
                        } else {
                            if (r.getFirst()) {
                                h || (h = this.range.clone(), h.setStartAt(r, CKEDITOR.POSITION_BEFORE_START));
                                r = r.getFirst();
                                continue
                            }
                            u = 1
                        }
                    }
                    u && !h && (h = this.range.clone(), h.setStartAt(r, CKEDITOR.POSITION_BEFORE_START));
                    l = (!q || u) && r.equals(n);
                    if (h && !q) for (; ! r.getNext(g) && !l;) {
                        v = r.getParent();
                        if (v.isBlockBoundary(this.forceBrBreak && !t && {
                            br: 1
                        })) {
                            q = 1;
                            u = 0;
                            l || v.equals(n);
                            h.setEndAt(v, CKEDITOR.POSITION_BEFORE_END);
                            break
                        }
                        r = v;
                        u = 1;
                        l = r.equals(n);
                        w = 1
                    }
                    u && h.setEndAt(r, CKEDITOR.POSITION_AFTER_END);
                    r = d(r, w, n);
                    if ((l = !r) || q && h) break
                }
                if (!e) {
                    if (!h) return this._.docEndMarker && this._.docEndMarker.remove(),
                    this._.nextNode = null;
                    e = new CKEDITOR.dom.elementPath(h.startContainer, h.root);
                    r = e.blockLimit;
                    q = {
                        div: 1,
                        th: 1,
                        td: 1
                    };
                    e = e.block; ! e && r && !this.enforceRealBlocks && q[r.getName()] && h.checkStartOfBlock() && h.checkEndOfBlock() && !r.equals(h.root) ? e = r: !e || this.enforceRealBlocks && "li" == e.getName() ? (e = this.range.document.createElement(a), h.extractContents().appendTo(e), e.trim(), h.insertNode(e), p = s = !0) : "li" != e.getName() ? h.checkStartOfBlock() && h.checkEndOfBlock() || (e = e.clone(!1), h.extractContents().appendTo(e), e.trim(), s = h.splitBlock(), p = !s.wasStartOfBlock, s = !s.wasEndOfBlock, h.insertNode(e)) : l || (this._.nextNode = e.equals(n) ? null: d(h.getBoundaryNodes().endNode, 1, n))
                }
                p && (h = e.getPrevious()) && h.type == CKEDITOR.NODE_ELEMENT && ("br" == h.getName() ? h.remove() : h.getLast() && "br" == h.getLast().$.nodeName.toLowerCase() && h.getLast().remove());
                s && (h = e.getLast()) && h.type == CKEDITOR.NODE_ELEMENT && "br" == h.getName() && (CKEDITOR.env.ie || h.getPrevious(c) || h.getNext(c)) && h.remove();
                this._.nextNode || (this._.nextNode = l || e.equals(n) || !n ? null: d(e, 1, n));
                return e
            }
        };
        CKEDITOR.dom.range.prototype.createIterator = function() {
            return new a(this)
        }
    } (), CKEDITOR.command = function(a, d) {
        this.uiItems = [];
        this.exec = function(b) {
            if (this.state == CKEDITOR.TRISTATE_DISABLED || !this.checkAllowed()) return ! 1;
            this.editorFocus && a.focus();
            return ! 1 === this.fire("exec") ? !0 : !1 !== d.exec.call(this, a, b)
        };
        this.refresh = function(a, b) {
            if (!this.readOnly && a.readOnly) return ! 0;
            if (this.context && !b.isContextFor(this.context)) return this.disable(),
            !0;
            this.enable();
            return ! 1 === this.fire("refresh", {
                editor: a,
                path: b
            }) ? !0 : d.refresh && !1 !== d.refresh.apply(this, arguments)
        };
        var b;
        this.checkAllowed = function() {
            return "boolean" == typeof b ? b: b = a.filter.checkFeature(this)
        };
        CKEDITOR.tools.extend(this, d, {
            modes: {
                wysiwyg: 1
            },
            editorFocus: 1,
            contextSensitive: !!d.context,
            state: CKEDITOR.TRISTATE_DISABLED
        });
        CKEDITOR.event.call(this)
    },
    CKEDITOR.command.prototype = {
        enable: function() {
            this.state == CKEDITOR.TRISTATE_DISABLED && this.checkAllowed() && this.setState(this.preserveState && "undefined" != typeof this.previousState ? this.previousState: CKEDITOR.TRISTATE_OFF)
        },
        disable: function() {
            this.setState(CKEDITOR.TRISTATE_DISABLED)
        },
        setState: function(a) {
            if (this.state == a || !this.checkAllowed()) return ! 1;
            this.previousState = this.state;
            this.state = a;
            this.fire("state");
            return ! 0
        },
        toggleState: function() {
            this.state == CKEDITOR.TRISTATE_OFF ? this.setState(CKEDITOR.TRISTATE_ON) : this.state == CKEDITOR.TRISTATE_ON && this.setState(CKEDITOR.TRISTATE_OFF)
        }
    },
    CKEDITOR.event.implementOn(CKEDITOR.command.prototype), CKEDITOR.ENTER_P = 1, CKEDITOR.ENTER_BR = 2, CKEDITOR.ENTER_DIV = 3, CKEDITOR.config = {
        customConfig: "config.js",
        autoUpdateElement: !0,
        language: "",
        defaultLanguage: "en",
        contentsLangDirection: "",
        enterMode: CKEDITOR.ENTER_P,
        forceEnterMode: !1,
        shiftEnterMode: CKEDITOR.ENTER_BR,
        docType: "<!DOCTYPE html>",
        bodyId: "",
        bodyClass: "",
        fullPage: !1,
        height: 200,
        extraPlugins: "",
        removePlugins: "",
        protectedSource: [],
        tabIndex: 0,
        width: "",
        baseFloatZIndex: 1E4,
        blockedKeystrokes: [CKEDITOR.CTRL + 66, CKEDITOR.CTRL + 73, CKEDITOR.CTRL + 85]
    },
    function() {
        function a(a, b, c, f, g) {
            var h = b.name;
            if ((f || "function" != typeof a.elements || a.elements(h)) && (!a.match || a.match(b))) {
                if (f = !g) {
                    a: if (a.nothingRequired) f = !0;
                    else {
                        if (g = a.requiredClasses) for (h = b.classes, f = 0; f < g.length; ++f) if ( - 1 == CKEDITOR.tools.indexOf(h, g[f])) {
                            f = !1;
                            break a
                        }
                        f = e(b.styles, a.requiredStyles) && e(b.attributes, a.requiredAttributes)
                    }
                    f = !f
                }
                if (!f && (a.propertiesOnly || (c.valid = !0), c.allAttributes || (c.allAttributes = d(a.attributes, b.attributes, c.validAttributes)), c.allStyles || (c.allStyles = d(a.styles, b.styles, c.validStyles)), !c.allClasses)) {
                    a = a.classes;
                    b = b.classes;
                    f = c.validClasses;
                    if (a) if (!0 === a) b = !0;
                    else {
                        g = 0;
                        for (var h = b.length,
                        k; g < h; ++g) k = b[g],
                        f[k] || (f[k] = a(k));
                        b = !1
                    } else b = !1;
                    c.allClasses = b
                }
            }
        }
        function d(a, b, c) {
            if (!a) return ! 1;
            if (!0 === a) return ! 0;
            for (var d in b) c[d] || (c[d] = a(d, b[d]));
            return ! 1
        }
        function b(a, b) {
            if (!a) return ! 1;
            if (!0 === a) return a;
            if ("string" == typeof a) return a = B(a),
            "*" == a ? !0 : CKEDITOR.tools.convertArrayToObject(a.split(b));
            if (CKEDITOR.tools.isArray(a)) return a.length ? CKEDITOR.tools.convertArrayToObject(a) : !1;
            var c = {},
            d = 0,
            e;
            for (e in a) c[e] = a[e],
            d++;
            return d ? c: !1
        }
        function c(b) {
            if (b._.filterFunction) return b._.filterFunction;
            var c = /^cke:(object|embed|param)$/,
            d = /^(object|embed|param)$/;
            return b._.filterFunction = function(e, f, g, k, q, p, r) {
                var u = e.name,
                w, v = !1;
                q && (e.name = u = u.replace(c, "$1"));
                if (g = g && g[u]) {
                    h(e);
                    for (u = 0; u < g.length; ++u) t(b, e, g[u]);
                    l(e)
                }
                if (f) {
                    u = e.name;
                    g = f.elements[u];
                    var s = f.generic;
                    f = {
                        valid: !1,
                        validAttributes: {},
                        validClasses: {},
                        validStyles: {},
                        allAttributes: !1,
                        allClasses: !1,
                        allStyles: !1
                    };
                    if (!g && !s) return k.push(e),
                    !0;
                    h(e);
                    if (g) for (u = 0, w = g.length; u < w; ++u) a(g[u], e, f, !0, p);
                    if (s) for (u = 0, w = s.length; u < w; ++u) a(s[u], e, f, !1, p);
                    if (!f.valid) return k.push(e),
                    !0;
                    p = f.validAttributes;
                    u = f.validStyles;
                    g = f.validClasses;
                    w = e.attributes;
                    var s = e.styles,
                    A = w["class"],
                    E = w.style,
                    F,
                    B,
                    z = [],
                    x = [],
                    C = /^data-cke-/,
                    J = !1;
                    delete w.style;
                    delete w["class"];
                    if (!f.allAttributes) for (F in w) p[F] || (C.test(F) ? F == (B = F.replace(/^data-cke-saved-/, "")) || p[B] || (delete w[F], J = !0) : (delete w[F], J = !0));
                    if (f.allStyles) E && (w.style = E);
                    else {
                        for (F in s) u[F] ? z.push(F + ":" + s[F]) : J = !0;
                        z.length && (w.style = z.sort().join("; "))
                    }
                    if (f.allClasses) A && (w["class"] = A);
                    else {
                        for (F in g) g[F] && x.push(F);
                        x.length && (w["class"] = x.sort().join(" "));
                        A && x.length < A.split(/\s+/).length && (J = !0)
                    }
                    J && (v = !0);
                    if (!r && !n(e)) return k.push(e),
                    !0
                }
                q && (e.name = e.name.replace(d, "cke:$1"));
                return v
            }
        }
        function e(a, b) {
            if (!b) return ! 0;
            for (var c = 0; c < b.length; ++c) if (! (b[c] in a)) return ! 1;
            return ! 0
        }
        function g(a) {
            if (!a) return {};
            a = a.split(/\s*,\s*/).sort();
            for (var b = {}; a.length;) b[a.shift()] = x;
            return b
        }
        function f(a) {
            var b, c, d, e, f = {},
            g = 1;
            for (a = B(a); b = a.match(C);)(c = b[2]) ? (d = k(c, "styles"), e = k(c, "attrs"), c = k(c, "classes")) : d = e = c = null,
            f["$" + g++] = {
                elements: b[1],
                classes: c,
                styles: d,
                attributes: e
            },
            a = a.slice(b[0].length);
            return f
        }
        function k(a, b) {
            var c = a.match(F[b]);
            return c ? B(c[1]) : null
        }
        function h(a) {
            a.styles || (a.styles = CKEDITOR.tools.parseCssText(a.attributes.style || "", 1));
            a.classes || (a.classes = a.attributes["class"] ? a.attributes["class"].split(/\s+/) : [])
        }
        function l(a) {
            var b = a.attributes,
            c;
            delete b.style;
            delete b["class"];
            if (c = CKEDITOR.tools.writeCssText(a.styles, !0)) b.style = c;
            a.classes.length && (b["class"] = a.classes.sort().join(" "))
        }
        function n(a) {
            switch (a.name) {
            case "a":
                if (!a.children.length && !a.attributes.name) return ! 1;
                break;
            case "img":
                if (!a.attributes.src) return ! 1
            }
            return ! 0
        }
        function p(a) {
            return a ? !0 === a ? !0 : function(b) {
                return b in a
            }: !1
        }
        function s() {
            return new CKEDITOR.htmlParser.element("br")
        }
        function r(a) {
            return a.type == CKEDITOR.NODE_ELEMENT && ("br" == a.name || E.$block[a.name])
        }
        function q(a, b, c) {
            var d = a.name;
            if (E.$empty[d] || !a.children.length)"hr" == d && "br" == b ? a.replaceWith(s()) : (a.parent && c.push({
                check: "it",
                el: a.parent
            }), a.remove());
            else if (E.$block[d] || "tr" == d) if ("br" == b) a.previous && !r(a.previous) && (b = s(), b.insertBefore(a)),
            a.next && !r(a.next) && (b = s(), b.insertAfter(a)),
            a.replaceWithChildren();
            else {
                var d = a.children,
                e;
                a: {
                    e = E[b];
                    for (var f = 0,
                    g = d.length,
                    h; f < g; ++f) if (h = d[f], h.type == CKEDITOR.NODE_ELEMENT && !e[h.name]) {
                        e = !1;
                        break a
                    }
                    e = !0
                }
                if (e) a.name = b,
                a.attributes = {},
                c.push({
                    check: "parent-down",
                    el: a
                });
                else {
                    e = a.parent;
                    for (var f = e.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT || "body" == e.name,
                    k, g = d.length; 0 < g;) h = d[--g],
                    f && (h.type == CKEDITOR.NODE_TEXT || h.type == CKEDITOR.NODE_ELEMENT && E.$inline[h.name]) ? (k || (k = new CKEDITOR.htmlParser.element(b), k.insertAfter(a), c.push({
                        check: "parent-down",
                        el: k
                    })), k.add(h, 0)) : (k = null, h.insertAfter(a), e.type != CKEDITOR.NODE_DOCUMENT_FRAGMENT && h.type == CKEDITOR.NODE_ELEMENT && !E[e.name][h.name] && c.push({
                        check: "el-up",
                        el: h
                    }));
                    a.remove()
                }
            } else "style" == d ? a.remove() : (a.parent && c.push({
                check: "it",
                el: a.parent
            }), a.replaceWithChildren())
        }
        function t(a, b, c) {
            var d, e;
            for (d = 0; d < c.length; ++d) if (e = c[d], !(e.check && !a.check(e.check, !1) || e.left && !e.left(b))) {
                e.right(b, J);
                break
            }
        }
        function u(a, b) {
            var c = b.getDefinition(),
            d = c.attributes,
            e = c.styles,
            f,
            g,
            h,
            k;
            if (a.name != c.element) return ! 1;
            for (f in d) if ("class" == f) for (c = d[f].split(/\s+/), h = a.classes.join("|"); k = c.pop();) {
                if ( - 1 == h.indexOf(k)) return ! 1
            } else if (a.attributes[f] != d[f]) return ! 1;
            for (g in e) if (a.styles[g] != e[g]) return ! 1;
            return ! 0
        }
        function w(a, b) {
            var c, d;
            "string" == typeof a ? c = a: a instanceof CKEDITOR.style ? d = a: (c = a[0], d = a[1]);
            return [{
                element: c,
                left: d,
                right: function(a, c) {
                    c.transform(a, b)
                }
            }]
        }
        function v(a) {
            return function(b) {
                return u(b, a)
            }
        }
        function A(a) {
            return function(b, c) {
                c[a](b)
            }
        }
        var E = CKEDITOR.dtd,
        z = CKEDITOR.tools.copy,
        B = CKEDITOR.tools.trim,
        x = "cke-test";
        CKEDITOR.filter = function(a) {
            this.allowedContent = [];
            this.disabled = !1;
            this.editor = null;
            this.enterMode = CKEDITOR.ENTER_P;
            this._ = {
                rules: {},
                transformations: {},
                cachedTests: {}
            };
            if (a instanceof CKEDITOR.editor) {
                var b = this.editor = a;
                this.customConfig = !0;
                a = b.config.allowedContent;
                var c;
                if (!0 === a) this.disabled = !0;
                else {
                    a || (this.customConfig = !1);
                    this.enterMode = c = b.blockless ? CKEDITOR.ENTER_BR: b.config.enterMode;
                    var d = ["br"],
                    e = b.blockless ? CKEDITOR.ENTER_BR: b.config.shiftEnterMode;
                    c != CKEDITOR.ENTER_P && e != CKEDITOR.ENTER_P || d.push("p");
                    c != CKEDITOR.ENTER_DIV && e != CKEDITOR.ENTER_DIV || d.push("div");
                    this.allow(d.join(" "), "default", 1);
                    this.allow(a, "config", 1);
                    this.allow(b.config.extraAllowedContent, "extra", 1);
                    this._.toHtmlListener = b.on("toHtml",
                    function(a) {
                        this.applyTo(a.data.dataValue, !0, a.data.dontFilter) && b.fire("dataFiltered")
                    },
                    this, null, 6);
                    this._.toDataFormatListener = b.on("toDataFormat",
                    function(a) {
                        this.applyTo(a.data.dataValue, !1, !0)
                    },
                    this, null, 11)
                }
            } else this.customConfig = !1,
            this.allow(a, "default", 1)
        };
        CKEDITOR.filter.prototype = {
            allow: function(a, c, d) {
                if (this.disabled || this.customConfig && !d || !a) return ! 1;
                this._.cachedChecks = {};
                var e, g;
                if ("string" == typeof a) a = f(a);
                else if (a instanceof CKEDITOR.style) g = a.getDefinition(),
                d = {},
                a = g.attributes,
                d[g.element] = g = {
                    styles: g.styles,
                    requiredStyles: g.styles && CKEDITOR.tools.objectKeys(g.styles)
                },
                a && (a = z(a), g.classes = a["class"] ? a["class"].split(/\s+/) : null, g.requiredClasses = g.classes, delete a["class"], g.attributes = a, g.requiredAttributes = a && CKEDITOR.tools.objectKeys(a)),
                a = d;
                else if (CKEDITOR.tools.isArray(a)) {
                    for (e = 0; e < a.length; ++e) g = this.allow(a[e], c, d);
                    return g
                }
                var h;
                d = [];
                for (h in a) {
                    g = a[h];
                    g = "boolean" == typeof g ? {}: "function" == typeof g ? {
                        match: g
                    }: z(g);
                    "$" != h.charAt(0) && (g.elements = h);
                    c && (g.featureName = c.toLowerCase());
                    var k = g;
                    k.elements = b(k.elements, /\s+/) || null;
                    k.propertiesOnly = k.propertiesOnly || !0 === k.elements;
                    var q = /\s*,\s*/,
                    l = void 0;
                    for (l in D) {
                        k[l] = b(k[l], q) || null;
                        var n = k,
                        t = I[l],
                        r = b(k[I[l]], q),
                        u = k[l],
                        w = [],
                        s = !0,
                        v = void 0;
                        r ? s = !1 : r = {};
                        for (v in u)"!" == v.charAt(0) && (v = v.slice(1), w.push(v), r[v] = !0, s = !1);
                        for (; v = w.pop();) u[v] = u["!" + v],
                        delete u["!" + v];
                        n[t] = (s ? !1 : r) || null
                    }
                    k.match = k.match || null;
                    this.allowedContent.push(g);
                    d.push(g)
                }
                c = this._.rules;
                h = c.elements || {};
                a = c.generic || [];
                g = 0;
                for (k = d.length; g < k; ++g) {
                    q = z(d[g]);
                    l = !0 === q.classes || !0 === q.styles || !0 === q.attributes;
                    n = q;
                    t = void 0;
                    for (t in D) n[t] = p(n[t]);
                    r = !0;
                    for (t in I) t = I[t],
                    n[t] = CKEDITOR.tools.objectKeys(n[t]),
                    n[t] && (r = !1);
                    n.nothingRequired = r;
                    if (!0 === q.elements || null === q.elements) q.elements = p(q.elements),
                    a[l ? "unshift": "push"](q);
                    else for (e in n = q.elements, delete q.elements, n) if (h[e]) h[e][l ? "unshift": "push"](q);
                    else h[e] = [q]
                }
                c.elements = h;
                c.generic = a.length ? a: null;
                return ! 0
            },
            applyTo: function(a, b, d) {
                var e = [],
                f = !d && this._.rules,
                g = this._.transformations,
                h = c(this),
                k = this.editor && this.editor.config.protectedSource,
                l = !1;
                a.forEach(function(a) {
                    if (a.type == CKEDITOR.NODE_ELEMENT) b && "span" == a.name && ~CKEDITOR.tools.objectKeys(a.attributes).join("|").indexOf("data-cke-") || h(a, f, g, e, b) && (l = !0);
                    else if (a.type == CKEDITOR.NODE_COMMENT && a.value.match(/^\{cke_protected\}(?!\{C\})/)) {
                        var c;
                        a: {
                            var d = decodeURIComponent(a.value.replace(/^\{cke_protected\}/, ""));
                            c = [];
                            var q, m, n;
                            if (k) for (m = 0; m < k.length; ++m) if ((n = d.match(k[m])) && n[0].length == d.length) {
                                c = !0;
                                break a
                            }
                            d = CKEDITOR.htmlParser.fragment.fromHtml(d);
                            1 == d.children.length && (q = d.children[0]).type == CKEDITOR.NODE_ELEMENT && h(q, f, g, c, b);
                            c = !c.length
                        }
                        c || e.push(a)
                    }
                },
                null, !0);
                e.length && (l = !0);
                var p, t;
                a = [];
                for (d = ["p", "br", "div"][this.enterMode - 1]; p = e.pop();) p.type == CKEDITOR.NODE_ELEMENT ? q(p, d, a) : p.remove();
                for (; t = a.pop();) if (p = t.el, p.parent) switch (t.check) {
                case "it":
                    E.$removeEmpty[p.name] && !p.children.length ? q(p, d, a) : n(p) || q(p, d, a);
                    break;
                case "el-up":
                    p.parent.type != CKEDITOR.NODE_DOCUMENT_FRAGMENT && !E[p.parent.name][p.name] && q(p, d, a);
                    break;
                case "parent-down":
                    p.parent.type != CKEDITOR.NODE_DOCUMENT_FRAGMENT && !E[p.parent.name][p.name] && q(p.parent, d, a)
                }
                return l
            },
            checkFeature: function(a) {
                if (this.disabled || !a) return ! 0;
                a.toFeature && (a = a.toFeature(this.editor));
                return ! a.requiredContent || this.check(a.requiredContent)
            },
            disable: function() {
                this.disabled = !0;
                this._.toHtmlListener && this._.toHtmlListener.removeListener();
                this._.toDataFormatListener && this._.toDataFormatListener.removeListener()
            },
            addContentForms: function(a) {
                if (!this.disabled && a) {
                    var b, c, d = [],
                    e;
                    for (b = 0; b < a.length && !e; ++b) c = a[b],
                    ("string" == typeof c || c instanceof CKEDITOR.style) && this.check(c) && (e = c);
                    if (e) {
                        for (b = 0; b < a.length; ++b) d.push(w(a[b], e));
                        this.addTransformations(d)
                    }
                }
            },
            addFeature: function(a) {
                if (this.disabled || !a) return ! 0;
                a.toFeature && (a = a.toFeature(this.editor));
                this.allow(a.allowedContent, a.name);
                this.addTransformations(a.contentTransformations);
                this.addContentForms(a.contentForms);
                return this.customConfig && a.requiredContent ? this.check(a.requiredContent) : !0
            },
            addTransformations: function(a) {
                var b, c;
                if (!this.disabled && a) {
                    var d = this._.transformations,
                    e;
                    for (e = 0; e < a.length; ++e) {
                        b = a[e];
                        var f = void 0,
                        g = void 0,
                        h = void 0,
                        k = void 0,
                        q = void 0,
                        l = void 0;
                        c = [];
                        for (g = 0; g < b.length; ++g) h = b[g],
                        "string" == typeof h ? (h = h.split(/\s*:\s*/), k = h[0], q = null, l = h[1]) : (k = h.check, q = h.left, l = h.right),
                        f || (f = h, f = f.element ? f.element: k ? k.match(/^([a-z0-9]+)/i)[0] : f.left.getDefinition().element),
                        q instanceof CKEDITOR.style && (q = v(q)),
                        c.push({
                            check: k == f ? null: k,
                            left: q,
                            right: "string" == typeof l ? A(l) : l
                        });
                        b = f;
                        d[b] || (d[b] = []);
                        d[b].push(c)
                    }
                }
            },
            check: function(a, b, d) {
                if (this.disabled) return ! 0;
                if (CKEDITOR.tools.isArray(a)) {
                    for (var e = a.length; e--;) if (this.check(a[e], b, d)) return ! 0;
                    return ! 1
                }
                var h, k;
                if ("string" == typeof a) {
                    k = a + "<" + (!1 === b ? "0": "1") + (d ? "1": "0") + ">";
                    if (k in this._.cachedChecks) return this._.cachedChecks[k];
                    e = f(a).$1;
                    h = e.styles;
                    var q = e.classes;
                    e.name = e.elements;
                    e.classes = q = q ? q.split(/\s*,\s*/) : [];
                    e.styles = g(h);
                    e.attributes = g(e.attributes);
                    e.children = [];
                    q.length && (e.attributes["class"] = q.join(" "));
                    h && (e.attributes.style = CKEDITOR.tools.writeCssText(e.styles));
                    h = e
                } else e = a.getDefinition(),
                h = e.styles,
                q = e.attributes || {},
                h ? (h = z(h), q.style = CKEDITOR.tools.writeCssText(h, !0)) : h = {},
                h = {
                    name: e.element,
                    attributes: q,
                    classes: q["class"] ? q["class"].split(/\s+/) : [],
                    styles: h,
                    children: []
                };
                var q = CKEDITOR.tools.clone(h),
                n = [],
                p;
                if (!1 !== b && (p = this._.transformations[h.name])) {
                    for (e = 0; e < p.length; ++e) t(this, h, p[e]);
                    l(h)
                }
                c(this)(q, this._.rules, !1 === b ? !1 : this._.transformations, n, !1, !d, !d);
                b = 0 < n.length ? !1 : CKEDITOR.tools.objectCompare(h.attributes, q.attributes, !0) ? !0 : !1;
                "string" == typeof a && (this._.cachedChecks[k] = b);
                return b
            }
        };
        var D = {
            styles: 1,
            attributes: 1,
            classes: 1
        },
        I = {
            styles: "requiredStyles",
            attributes: "requiredAttributes",
            classes: "requiredClasses"
        },
        C = /^([a-z0-9*\s]+)((?:\s*\{[!\w\-,\s\*]+\}\s*|\s*\[[!\w\-,\s\*]+\]\s*|\s*\([!\w\-,\s\*]+\)\s*){0,3})(?:;\s*|$)/i,
        F = {
            styles: /{([^}]+)}/,
            attrs: /\[([^\]]+)\]/,
            classes: /\(([^\)]+)\)/
        },
        J = CKEDITOR.filter.transformationsTools = {
            sizeToStyle: function(a) {
                this.lengthToStyle(a, "width");
                this.lengthToStyle(a, "height")
            },
            sizeToAttribute: function(a) {
                this.lengthToAttribute(a, "width");
                this.lengthToAttribute(a, "height")
            },
            lengthToStyle: function(a, b, c) {
                c = c || b;
                if (! (c in a.styles)) {
                    var d = a.attributes[b];
                    d && (/^\d+$/.test(d) && (d += "px"), a.styles[c] = d)
                }
                delete a.attributes[b]
            },
            lengthToAttribute: function(a, b, c) {
                c = c || b;
                if (! (c in a.attributes)) {
                    var d = a.styles[b],
                    e = d && d.match(/^(\d+)(?:\.\d*)?px$/);
                    e ? a.attributes[c] = e[1] : d == x && (a.attributes[c] = x)
                }
                delete a.styles[b]
            },
            alignmentToStyle: function(a) {
                if (! ("float" in a.styles)) {
                    var b = a.attributes.align;
                    if ("left" == b || "right" == b) a.styles["float"] = b
                }
                delete a.attributes.align
            },
            alignmentToAttribute: function(a) {
                if (! ("align" in a.attributes)) {
                    var b = a.styles["float"];
                    if ("left" == b || "right" == b) a.attributes.align = b
                }
                delete a.styles["float"]
            },
            matchesStyle: u,
            transform: function(a, b) {
                if ("string" == typeof b) a.name = b;
                else {
                    var c = b.getDefinition(),
                    d = c.styles,
                    e = c.attributes,
                    f,
                    g,
                    h,
                    k;
                    a.name = c.element;
                    for (f in e) if ("class" == f) for (c = a.classes.join("|"), h = e[f].split(/\s+/); k = h.pop();) - 1 == c.indexOf(k) && a.classes.push(k);
                    else a.attributes[f] = e[f];
                    for (g in d) a.styles[g] = d[g]
                }
            }
        }
    } (),
    function() {
        CKEDITOR.focusManager = function(a) {
            if (a.focusManager) return a.focusManager;
            this.hasFocus = !1;
            this.currentActive = null;
            this._ = {
                editor: a
            };
            return this
        };
        CKEDITOR.focusManager._ = {
            blurDelay: 200
        };
        CKEDITOR.focusManager.prototype = {
            focus: function() {
                this._.timer && clearTimeout(this._.timer);
                if (!this.hasFocus && !this._.locked) {
                    var a = CKEDITOR.currentInstance;
                    a && a.focusManager.blur(1);
                    this.hasFocus = !0; (a = this._.editor.container) && a.addClass("cke_focus");
                    this._.editor.fire("focus")
                }
            },
            lock: function() {
                this._.locked = 1
            },
            unlock: function() {
                delete this._.locked
            },
            blur: function(a) {
                function d() {
                    if (this.hasFocus) {
                        this.hasFocus = !1;
                        var a = this._.editor.container;
                        a && a.removeClass("cke_focus");
                        this._.editor.fire("blur")
                    }
                }
                if (!this._.locked) {
                    this._.timer && clearTimeout(this._.timer);
                    var b = CKEDITOR.focusManager._.blurDelay;
                    a || !b ? d.call(this) : this._.timer = CKEDITOR.tools.setTimeout(function() {
                        delete this._.timer;
                        d.call(this)
                    },
                    b, this)
                }
            },
            add: function(a, d) {
                var b = a.getCustomData("focusmanager");
                if (!b || b != this) {
                    b && b.remove(a);
                    var b = "focus",
                    c = "blur";
                    d && (CKEDITOR.env.ie ? (b = "focusin", c = "focusout") : CKEDITOR.event.useCapture = 1);
                    var e = {
                        blur: function() {
                            a.equals(this.currentActive) && this.blur()
                        },
                        focus: function() {
                            this.currentActive = a;
                            this.focus()
                        }
                    };
                    a.on(b, e.focus, this);
                    a.on(c, e.blur, this);
                    d && (CKEDITOR.event.useCapture = 0);
                    a.setCustomData("focusmanager", this);
                    a.setCustomData("focusmanager_handlers", e)
                }
            },
            remove: function(a) {
                a.removeCustomData("focusmanager");
                var d = a.removeCustomData("focusmanager_handlers");
                a.removeListener("blur", d.blur);
                a.removeListener("focus", d.focus)
            }
        }
    } (), CKEDITOR.keystrokeHandler = function(a) {
        if (a.keystrokeHandler) return a.keystrokeHandler;
        this.keystrokes = {};
        this.blockedKeystrokes = {};
        this._ = {
            editor: a
        };
        return this
    },
    function() {
        var a, d = function(b) {
            b = b.data;
            var d = b.getKeystroke(),
            g = this.keystrokes[d],
            f = this._.editor;
            a = !1 === f.fire("key", {
                keyCode: d
            });
            a || (g && (a = !1 !== f.execCommand(g, {
                from: "keystrokeHandler"
            })), a || (a = !!this.blockedKeystrokes[d]));
            a && b.preventDefault(!0);
            return ! a
        },
        b = function(b) {
            a && (a = !1, b.data.preventDefault(!0))
        };
        CKEDITOR.keystrokeHandler.prototype = {
            attach: function(a) {
                a.on("keydown", d, this);
                if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac) a.on("keypress", b, this)
            }
        }
    } (),
    function() {
        CKEDITOR.lang = {
            languages: {
                af: 1,
                ar: 1,
                bg: 1,
                bn: 1,
                bs: 1,
                ca: 1,
                cs: 1,
                cy: 1,
                da: 1,
                de: 1,
                el: 1,
                "en-au": 1,
                "en-ca": 1,
                "en-gb": 1,
                en: 1,
                eo: 1,
                es: 1,
                et: 1,
                eu: 1,
                fa: 1,
                fi: 1,
                fo: 1,
                "fr-ca": 1,
                fr: 1,
                gl: 1,
                gu: 1,
                he: 1,
                hi: 1,
                hr: 1,
                hu: 1,
                id: 1,
                is: 1,
                it: 1,
                ja: 1,
                ka: 1,
                km: 1,
                ko: 1,
                ku: 1,
                lt: 1,
                lv: 1,
                mk: 1,
                mn: 1,
                ms: 1,
                nb: 1,
                nl: 1,
                no: 1,
                pl: 1,
                "pt-br": 1,
                pt: 1,
                ro: 1,
                ru: 1,
                si: 1,
                sk: 1,
                sl: 1,
                sq: 1,
                "sr-latn": 1,
                sr: 1,
                sv: 1,
                th: 1,
                tr: 1,
                ug: 1,
                uk: 1,
                vi: 1,
                "zh-cn": 1,
                zh: 1
            },
            rtl: {
                ar: 1,
                fa: 1,
                he: 1,
                ku: 1,
                ug: 1
            },
            load: function(a, d, b) {
                a && CKEDITOR.lang.languages[a] || (a = this.detect(d, a));
                this[a] ? b(a, this[a]) : CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("lang/" + a + ".js"),
                function() {
                    this[a].dir = this.rtl[a] ? "rtl": "ltr";
                    b(a, this[a])
                },
                this)
            },
            detect: function(a, d) {
                var b = this.languages;
                d = d || navigator.userLanguage || navigator.language || a;
                var c = d.toLowerCase().match(/([a-z]+)(?:-([a-z]+))?/),
                e = c[1],
                c = c[2];
                b[e + "-" + c] ? e = e + "-" + c: b[e] || (e = null);
                CKEDITOR.lang.detect = e ?
                function() {
                    return e
                }: function(a) {
                    return a
                };
                return e || a
            }
        }
    } (), CKEDITOR.scriptLoader = function() {
        var a = {},
        d = {};
        return {
            load: function(b, c, e, g) {
                var f = "string" == typeof b;
                f && (b = [b]);
                e || (e = CKEDITOR);
                var k = b.length,
                h = [],
                l = [],
                n = function(a) {
                    c && (f ? c.call(e, a) : c.call(e, h, l))
                };
                if (0 === k) n(!0);
                else {
                    var p = function(a, b) { (b ? h: l).push(a);
                        0 >= --k && (g && CKEDITOR.document.getDocumentElement().removeStyle("cursor"), n(b))
                    },
                    s = function(b, c) {
                        a[b] = 1;
                        var e = d[b];
                        delete d[b];
                        for (var f = 0; f < e.length; f++) e[f](b, c)
                    },
                    r = function(b) {
                        if (a[b]) p(b, !0);
                        else {
                            var e = d[b] || (d[b] = []);
                            e.push(p);
                            if (! (1 < e.length)) {
                                var f = new CKEDITOR.dom.element("script");
                                f.setAttributes({
                                    type: "text/javascript",
                                    src: b
                                });
                                c && (CKEDITOR.env.ie ? f.$.onreadystatechange = function() {
                                    if ("loaded" == f.$.readyState || "complete" == f.$.readyState) f.$.onreadystatechange = null,
                                    s(b, !0)
                                }: (f.$.onload = function() {
                                    setTimeout(function() {
                                        s(b, !0)
                                    },
                                    0)
                                },
                                f.$.onerror = function() {
                                    s(b, !1)
                                }));
                                f.appendTo(CKEDITOR.document.getHead())
                            }
                        }
                    };
                    g && CKEDITOR.document.getDocumentElement().setStyle("cursor", "wait");
                    for (var q = 0; q < k; q++) r(b[q])
                }
            },
            queue: function() {
                function a() {
                    var b; (b = c[0]) && this.load(b.scriptUrl, b.callback, CKEDITOR, 0)
                }
                var c = [];
                return function(d, g) {
                    var f = this;
                    c.push({
                        scriptUrl: d,
                        callback: function() {
                            g && g.apply(this, arguments);
                            c.shift();
                            a.call(f)
                        }
                    });
                    1 == c.length && a.call(this)
                }
            } ()
        }
    } (), CKEDITOR.resourceManager = function(a, d) {
        this.basePath = a;
        this.fileName = d;
        this.registered = {};
        this.loaded = {};
        this.externals = {};
        this._ = {
            waitingList: {}
        }
    },
    CKEDITOR.resourceManager.prototype = {
        add: function(a, d) {
            if (this.registered[a]) throw '[CKEDITOR.resourceManager.add] The resource name "' + a + '" is already registered.';
            var b = this.registered[a] = d || {};
            b.name = a;
            b.path = this.getPath(a);
            CKEDITOR.fire(a + CKEDITOR.tools.capitalize(this.fileName) + "Ready", b);
            return this.get(a)
        },
        get: function(a) {
            return this.registered[a] || null
        },
        getPath: function(a) {
            var d = this.externals[a];
            return CKEDITOR.getUrl(d && d.dir || this.basePath + a + "/")
        },
        getFilePath: function(a) {
            var d = this.externals[a];
            return CKEDITOR.getUrl(this.getPath(a) + (d && "string" == typeof d.file ? d.file: this.fileName + ".js"))
        },
        addExternal: function(a, d, b) {
            a = a.split(",");
            for (var c = 0; c < a.length; c++) this.externals[a[c]] = {
                dir: d,
                file: b
            }
        },
        load: function(a, d, b) {
            CKEDITOR.tools.isArray(a) || (a = a ? [a] : []);
            for (var c = this.loaded,
            e = this.registered,
            g = [], f = {},
            k = {},
            h = 0; h < a.length; h++) {
                var l = a[h];
                if (l) if (c[l] || e[l]) k[l] = this.get(l);
                else {
                    var n = this.getFilePath(l);
                    g.push(n);
                    n in f || (f[n] = []);
                    f[n].push(l)
                }
            }
            CKEDITOR.scriptLoader.load(g,
            function(a, e) {
                if (e.length) throw '[CKEDITOR.resourceManager.load] Resource name "' + f[e[0]].join(",") + '" was not found at "' + e[0] + '".';
                for (var g = 0; g < a.length; g++) for (var h = f[a[g]], l = 0; l < h.length; l++) {
                    var n = h[l];
                    k[n] = this.get(n);
                    c[n] = 1
                }
                d.call(b, k)
            },
            this)
        }
    },
    CKEDITOR.plugins = new CKEDITOR.resourceManager("plugins/", "plugin"), CKEDITOR.plugins.load = CKEDITOR.tools.override(CKEDITOR.plugins.load,
    function(a) {
        var d = {};
        return function(b, c, e) {
            var g = {},
            f = function(b) {
                a.call(this, b,
                function(a) {
                    CKEDITOR.tools.extend(g, a);
                    var b = [],
                    k;
                    for (k in a) {
                        var p = a[k],
                        s = p && p.requires;
                        if (!d[k]) {
                            if (p.icons) for (var r = p.icons.split(","), q = r.length; q--;) CKEDITOR.skin.addIcon(r[q], p.path + "icons/" + (CKEDITOR.env.hidpi && p.hidpi ? "hidpi/": "") + r[q] + ".png");
                            d[k] = 1
                        }
                        if (s) for (s.split && (s = s.split(",")), p = 0; p < s.length; p++) g[s[p]] || b.push(s[p])
                    }
                    if (b.length) f.call(this, b);
                    else {
                        for (k in g) p = g[k],
                        p.onLoad && !p.onLoad._called && (!1 === p.onLoad() && delete g[k], p.onLoad._called = 1);
                        c && c.call(e || window, g)
                    }
                },
                this)
            };
            f.call(this, b)
        }
    }), CKEDITOR.plugins.setLang = function(a, d, b) {
        var c = this.get(a);
        a = c.langEntries || (c.langEntries = {});
        c = c.lang || (c.lang = []);
        c.split && (c = c.split(",")); - 1 == CKEDITOR.tools.indexOf(c, d) && c.push(d);
        a[d] = b
    },
    CKEDITOR.ui = function(a) {
        if (a.ui) return a.ui;
        this.items = {};
        this.instances = {};
        this.editor = a;
        this._ = {
            handlers: {}
        };
        return this
    },
    CKEDITOR.ui.prototype = {
        add: function(a, d, b) {
            b.name = a.toLowerCase();
            var c = this.items[a] = {
                type: d,
                command: b.command || null,
                args: Array.prototype.slice.call(arguments, 2)
            };
            CKEDITOR.tools.extend(c, b)
        },
        get: function(a) {
            return this.instances[a]
        },
        create: function(a) {
            var d = this.items[a],
            b = d && this._.handlers[d.type],
            c = d && d.command && this.editor.getCommand(d.command),
            b = b && b.create.apply(this, d.args);
            this.instances[a] = b;
            c && c.uiItems.push(b);
            b && !b.type && (b.type = d.type);
            return b
        },
        addHandler: function(a, d) {
            this._.handlers[a] = d
        },
        space: function(a) {
            return CKEDITOR.document.getById(this.spaceId(a))
        },
        spaceId: function(a) {
            return this.editor.id + "_" + a
        }
    },
    CKEDITOR.event.implementOn(CKEDITOR.ui),
    function() {
        function a(a, c, g) {
            CKEDITOR.event.call(this);
            a = a && CKEDITOR.tools.clone(a);
            if (void 0 !== c) {
                if (c instanceof CKEDITOR.dom.element) {
                    if (!g) throw Error("One of the element modes must be specified.");
                } else throw Error("Expect element of type CKEDITOR.dom.element.");
                if (CKEDITOR.env.ie && CKEDITOR.env.quirks && g == CKEDITOR.ELEMENT_MODE_INLINE) throw Error("Inline element mode is not supported on IE quirks.");
                if (g == CKEDITOR.ELEMENT_MODE_INLINE ? !c.is(CKEDITOR.dtd.$editable) && !c.is("textarea") : g == CKEDITOR.ELEMENT_MODE_REPLACE && c.is(CKEDITOR.dtd.$nonBodyContent)) throw Error('The specified element mode is not supported on element: "' + c.getName() + '".');
                this.element = c;
                this.elementMode = g;
                this.name = this.elementMode != CKEDITOR.ELEMENT_MODE_APPENDTO && (c.getId() || c.getNameAtt())
            } else this.elementMode = CKEDITOR.ELEMENT_MODE_NONE;
            this._ = {};
            this.commands = {};
            this.templates = {};
            this.name = this.name || d();
            this.id = CKEDITOR.tools.getNextId();
            this.status = "unloaded";
            this.config = CKEDITOR.tools.prototypedCopy(CKEDITOR.config);
            this.ui = new CKEDITOR.ui(this);
            this.focusManager = new CKEDITOR.focusManager(this);
            this.keystrokeHandler = new CKEDITOR.keystrokeHandler(this);
            this.on("readOnly", b);
            this.on("selectionChange", e);
            this.on("mode", b);
            this.on("instanceReady",
            function() {
                this.config.startupFocus && this.focus()
            });
            CKEDITOR.fire("instanceCreated", null, this);
            CKEDITOR.add(this);
            CKEDITOR.tools.setTimeout(function() {
                f(this, a)
            },
            0, this)
        }
        function d() {
            do
            var a = "editor" + ++s;
            while (CKEDITOR.instances[a]);
            return a
        }
        function b() {
            var a = this.commands,
            b;
            for (b in a) c(this, a[b])
        }
        function c(a, b) {
            b[b.startDisabled ? "disable": a.readOnly && !b.readOnly ? "disable": b.modes[a.mode] ? "enable": "disable"]()
        }
        function e(a) {
            var b = this.commands,
            c = a.editor,
            d = a.data.path,
            e;
            for (e in b) a = b[e],
            a.contextSensitive && a.refresh(c, d)
        }
        function g(a) {
            var b = a.config.customConfig;
            if (!b) return ! 1;
            var b = CKEDITOR.getUrl(b),
            c = r[b] || (r[b] = {});
            c.fn ? (c.fn.call(a, a.config), CKEDITOR.getUrl(a.config.customConfig) != b && g(a) || a.fireOnce("customConfigLoaded")) : CKEDITOR.scriptLoader.queue(b,
            function() {
                c.fn = CKEDITOR.editorConfig ? CKEDITOR.editorConfig: function() {};
                g(a)
            });
            return ! 0
        }
        function f(a, b) {
            a.on("customConfigLoaded",
            function() {
                if (b) {
                    if (b.on) for (var c in b.on) a.on(c, b.on[c]);
                    CKEDITOR.tools.extend(a.config, b, !0);
                    delete a.config.on
                }
                a.readOnly = !(!a.config.readOnly && !(a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? a.element.is("textarea") ? a.element.hasAttribute("disabled") : a.element.isReadOnly() : a.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE && a.element.hasAttribute("disabled")));
                a.blockless = a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? !(a.element.is("textarea") || CKEDITOR.dtd[a.element.getName()].p) : !1;
                a.tabIndex = a.config.tabIndex || a.element && a.element.getAttribute("tabindex") || 0;
                a.config.skin && (CKEDITOR.skinName = a.config.skin);
                a.fireOnce("configLoaded");
                a.dataProcessor = new CKEDITOR.htmlDataProcessor(a);
                a.filter = new CKEDITOR.filter(a);
                k(a)
            });
            b && void 0 != b.customConfig && (a.config.customConfig = b.customConfig);
            g(a) || a.fireOnce("customConfigLoaded")
        }
        function k(a) {
            CKEDITOR.skin.loadPart("editor",
            function() {
                h(a)
            })
        }
        function h(a) {
            CKEDITOR.lang.load(a.config.language, a.config.defaultLanguage,
            function(b, c) {
                var d = a.config.title;
                a.langCode = b;
                a.lang = CKEDITOR.tools.prototypedCopy(c);
                a.title = "string" == typeof d || !1 === d ? d: [a.lang.editor, a.name].join(", ");
                CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version && "rtl" == a.lang.dir && (a.lang.dir = "ltr");
                a.config.contentsLangDirection || (a.config.contentsLangDirection = a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? a.element.getDirection(1) : a.lang.dir);
                a.fire("langLoaded");
                l(a)
            })
        }
        function l(a) {
            a.getStylesSet(function(b) {
                a.once("loaded",
                function() {
                    a.fire("stylesSet", {
                        styles: b
                    })
                },
                null, null, 1);
                n(a)
            })
        }
        function n(a) {
            var b = a.config,
            c = b.plugins,
            d = b.extraPlugins,
            e = b.removePlugins;
            if (d) var f = RegExp("(?:^|,)(?:" + d.replace(/\s*,\s*/g, "|") + ")(?=,|$)", "g"),
            c = c.replace(f, ""),
            c = c + ("," + d);
            if (e) var g = RegExp("(?:^|,)(?:" + e.replace(/\s*,\s*/g, "|") + ")(?=,|$)", "g"),
            c = c.replace(g, "");
            CKEDITOR.env.air && (c += ",adobeair");
            CKEDITOR.plugins.load(c.split(","),
            function(c) {
                var d = [],
                e = [],
                f = [];
                a.plugins = c;
                for (var h in c) {
                    var k = c[h],
                    l = k.lang,
                    n = null,
                    m = k.requires,
                    p;
                    CKEDITOR.tools.isArray(m) && (m = m.join(","));
                    if (m && (p = m.match(g))) for (; m = p.pop();) CKEDITOR.tools.setTimeout(function(a, b) {
                        throw Error('Plugin "' + a.replace(",", "") + '" cannot be removed from the plugins list, because it\'s required by "' + b + '" plugin.');
                    },
                    0, null, [m, h]);
                    l && !a.lang[h] && (l.split && (l = l.split(",")), 0 <= CKEDITOR.tools.indexOf(l, a.langCode) ? n = a.langCode: (n = a.langCode.replace(/-.*/, ""), n = n != a.langCode && 0 <= CKEDITOR.tools.indexOf(l, n) ? n: 0 <= CKEDITOR.tools.indexOf(l, "en") ? "en": l[0]), k.langEntries && k.langEntries[n] ? (a.lang[h] = k.langEntries[n], n = null) : f.push(CKEDITOR.getUrl(k.path + "lang/" + n + ".js")));
                    e.push(n);
                    d.push(k)
                }
                CKEDITOR.scriptLoader.load(f,
                function() {
                    for (var c = ["beforeInit", "init", "afterInit"], f = 0; f < c.length; f++) for (var g = 0; g < d.length; g++) {
                        var h = d[g];
                        0 === f && e[g] && h.lang && h.langEntries && (a.lang[h.name] = h.langEntries[e[g]]);
                        if (h[c[f]]) h[c[f]](a)
                    }
                    a.fireOnce("pluginsLoaded");
                    b.keystrokes && a.setKeystroke(a.config.keystrokes);
                    for (g = 0; g < a.config.blockedKeystrokes.length; g++) a.keystrokeHandler.blockedKeystrokes[a.config.blockedKeystrokes[g]] = 1;
                    a.status = "loaded";
                    a.fireOnce("loaded");
                    CKEDITOR.fire("instanceLoaded", null, a)
                })
            })
        }
        function p() {
            var a = this.element;
            if (a && this.elementMode != CKEDITOR.ELEMENT_MODE_APPENDTO) {
                var b = this.getData();
                this.config.htmlEncodeOutput && (b = CKEDITOR.tools.htmlEncode(b));
                a.is("textarea") ? a.setValue(b) : a.setHtml(b);
                return ! 0
            }
            return ! 1
        }
        a.prototype = CKEDITOR.editor.prototype;
        CKEDITOR.editor = a;
        var s = 0,
        r = {};
        CKEDITOR.tools.extend(CKEDITOR.editor.prototype, {
            addCommand: function(a, b) {
                b.name = a.toLowerCase();
                var d = new CKEDITOR.command(this, b);
                this.mode && c(this, d);
                return this.commands[a] = d
            },
            _attachToForm: function() {
                var a = this,
                b = a.element,
                c = new CKEDITOR.dom.element(b.$.form);
                if (b.is("textarea") && c) {
                    var d = function(c) {
                        a.updateElement();
                        a._.required && !b.getValue() && !1 === a.fire("required") && c.data.preventDefault()
                    };
                    c.on("submit", d);
                    c.$.submit && c.$.submit.call && c.$.submit.apply && (c.$.submit = CKEDITOR.tools.override(c.$.submit,
                    function(a) {
                        return function() {
                            d();
                            a.apply ? a.apply(this) : a()
                        }
                    }));
                    a.on("destroy",
                    function() {
                        c.removeListener("submit", d)
                    })
                }
            },
            destroy: function(a) {
                this.fire("beforeDestroy"); ! a && p.call(this);
                this.editable(null);
                this.status = "destroyed";
                this.fire("destroy");
                this.removeAllListeners();
                CKEDITOR.remove(this);
                CKEDITOR.fire("instanceDestroyed", null, this)
            },
            elementPath: function(a) {
                return (a = a || this.getSelection().getStartElement()) ? new CKEDITOR.dom.elementPath(a, this.editable()) : null
            },
            createRange: function() {
                var a = this.editable();
                return a ? new CKEDITOR.dom.range(a) : null
            },
            execCommand: function(a, b) {
                var c = this.getCommand(a),
                d = {
                    name: a,
                    commandData: b,
                    command: c
                };
                return c && c.state != CKEDITOR.TRISTATE_DISABLED && !0 !== this.fire("beforeCommandExec", d) && (d.returnValue = c.exec(d.commandData), !c.async && !0 !== this.fire("afterCommandExec", d)) ? d.returnValue: !1
            },
            getCommand: function(a) {
                return this.commands[a]
            },
            getData: function(a) { ! a && this.fire("beforeGetData");
                var b = this._.data;
                "string" != typeof b && (b = (b = this.element) && this.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE ? b.is("textarea") ? b.getValue() : b.getHtml() : "");
                b = {
                    dataValue: b
                }; ! a && this.fire("getData", b);
                return b.dataValue
            },
            getSnapshot: function() {
                var a = this.fire("getSnapshot");
                if ("string" != typeof a) {
                    var b = this.element;
                    b && this.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE && (a = b.is("textarea") ? b.getValue() : b.getHtml())
                }
                return a
            },
            loadSnapshot: function(a) {
                this.fire("loadSnapshot", a)
            },
            setData: function(a, b, c) {
                if (b) this.on("dataReady",
                function(a) {
                    a.removeListener();
                    b.call(a.editor)
                });
                a = {
                    dataValue: a
                }; ! c && this.fire("setData", a);
                this._.data = a.dataValue; ! c && this.fire("afterSetData", a)
            },
            setReadOnly: function(a) {
                a = void 0 == a || a;
                this.readOnly != a && (this.readOnly = a, this.keystrokeHandler.blockedKeystrokes[8] = +a, this.editable().setReadOnly(a), this.fire("readOnly"))
            },
            insertHtml: function(a, b) {
                this.fire("insertHtml", {
                    dataValue: a,
                    mode: b
                })
            },
            insertText: function(a) {
                this.fire("insertText", a)
            },
            insertElement: function(a) {
                this.fire("insertElement", a)
            },
            focus: function() {
                this.fire("beforeFocus")
            },
            checkDirty: function() {
                return "ready" == this.status && this._.previousValue !== this.getSnapshot()
            },
            resetDirty: function() {
                this._.previousValue = this.getSnapshot()
            },
            updateElement: function() {
                return p.call(this)
            },
            setKeystroke: function() {
                for (var a = this.keystrokeHandler.keystrokes,
                b = CKEDITOR.tools.isArray(arguments[0]) ? arguments[0] : [[].slice.call(arguments, 0)], c, d, e = b.length; e--;) c = b[e],
                d = 0,
                CKEDITOR.tools.isArray(c) && (d = c[1], c = c[0]),
                d ? a[c] = d: delete a[c]
            },
            addFeature: function(a) {
                return this.filter.addFeature(a)
            }
        })
    } (), CKEDITOR.ELEMENT_MODE_NONE = 0, CKEDITOR.ELEMENT_MODE_REPLACE = 1, CKEDITOR.ELEMENT_MODE_APPENDTO = 2, CKEDITOR.ELEMENT_MODE_INLINE = 3, CKEDITOR.htmlParser = function() {
        this._ = {
            htmlPartsRegex: RegExp("<(?:(?:\\/([^>]+)>)|(?:!--([\\S|\\s]*?)--\x3e)|(?:([^\\s>]+)\\s*((?:(?:\"[^\"]*\")|(?:'[^']*')|[^\"'>])*)\\/?>))", "g")
        }
    },
    function() {
        var a = /([\w\-:.]+)(?:(?:\s*=\s*(?:(?:"([^"]*)")|(?:'([^']*)')|([^\s>]+)))|(?=\s|$))/g,
        d = {
            checked: 1,
            compact: 1,
            declare: 1,
            defer: 1,
            disabled: 1,
            ismap: 1,
            multiple: 1,
            nohref: 1,
            noresize: 1,
            noshade: 1,
            nowrap: 1,
            readonly: 1,
            selected: 1
        };
        CKEDITOR.htmlParser.prototype = {
            onTagOpen: function() {},
            onTagClose: function() {},
            onText: function() {},
            onCDATA: function() {},
            onComment: function() {},
            parse: function(b) {
                for (var c, e, g = 0,
                f; c = this._.htmlPartsRegex.exec(b);) {
                    e = c.index;
                    if (e > g) if (g = b.substring(g, e), f) f.push(g);
                    else this.onText(g);
                    g = this._.htmlPartsRegex.lastIndex;
                    if (e = c[1]) if (e = e.toLowerCase(), f && CKEDITOR.dtd.$cdata[e] && (this.onCDATA(f.join("")), f = null), !f) {
                        this.onTagClose(e);
                        continue
                    }
                    if (f) f.push(c[0]);
                    else if (e = c[3]) {
                        if (e = e.toLowerCase(), !/="/.test(e)) {
                            var k = {},
                            h;
                            c = c[4];
                            var l = !(!c || "/" != c.charAt(c.length - 1));
                            if (c) for (; h = a.exec(c);) {
                                var n = h[1].toLowerCase();
                                h = h[2] || h[3] || h[4] || "";
                                k[n] = !h && d[n] ? n: h
                            }
                            this.onTagOpen(e, k, l); ! f && CKEDITOR.dtd.$cdata[e] && (f = [])
                        }
                    } else if (e = c[2]) this.onComment(e)
                }
                if (b.length > g) this.onText(b.substring(g, b.length))
            }
        }
    } (), CKEDITOR.htmlParser.basicWriter = CKEDITOR.tools.createClass({
        $: function() {
            this._ = {
                output: []
            }
        },
        proto: {
            openTag: function(a) {
                this._.output.push("<", a)
            },
            openTagClose: function(a, d) {
                d ? this._.output.push(" />") : this._.output.push(">")
            },
            attribute: function(a, d) {
                "string" == typeof d && (d = CKEDITOR.tools.htmlEncodeAttr(d));
                this._.output.push(" ", a, '="', d, '"')
            },
            closeTag: function(a) {
                this._.output.push("</", a, ">")
            },
            text: function(a) {
                this._.output.push(a)
            },
            comment: function(a) {
                this._.output.push("\x3c!--", a, "--\x3e")
            },
            write: function(a) {
                this._.output.push(a)
            },
            reset: function() {
                this._.output = [];
                this._.indent = !1
            },
            getHtml: function(a) {
                var d = this._.output.join("");
                a && this.reset();
                return d
            }
        }
    }), "use strict",
    function() {
        CKEDITOR.htmlParser.node = function() {};
        CKEDITOR.htmlParser.node.prototype = {
            remove: function() {
                var a = this.parent.children,
                d = CKEDITOR.tools.indexOf(a, this),
                b = this.previous,
                c = this.next;
                b && (b.next = c);
                c && (c.previous = b);
                a.splice(d, 1);
                this.parent = null
            },
            replaceWith: function(a) {
                var d = this.parent.children,
                b = CKEDITOR.tools.indexOf(d, this),
                c = a.previous = this.previous,
                e = a.next = this.next;
                c && (c.next = a);
                e && (e.previous = a);
                d[b] = a;
                a.parent = this.parent;
                this.parent = null
            },
            insertAfter: function(a) {
                var d = a.parent.children,
                b = CKEDITOR.tools.indexOf(d, a),
                c = a.next;
                d.splice(b + 1, 0, this);
                this.next = a.next;
                this.previous = a;
                a.next = this;
                c && (c.previous = this);
                this.parent = a.parent
            },
            insertBefore: function(a) {
                var d = a.parent.children,
                b = CKEDITOR.tools.indexOf(d, a);
                d.splice(b, 0, this);
                this.next = a; (this.previous = a.previous) && (a.previous.next = this);
                a.previous = this;
                this.parent = a.parent
            }
        }
    } (), "use strict", CKEDITOR.htmlParser.comment = function(a) {
        this.value = a;
        this._ = {
            isBlockLike: !1
        }
    },
    CKEDITOR.htmlParser.comment.prototype = CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node, {
        type: CKEDITOR.NODE_COMMENT,
        filter: function(a) {
            var d = this.value;
            if (! (d = a.onComment(d, this))) return this.remove(),
            !1;
            if ("string" != typeof d) return this.replaceWith(d),
            !1;
            this.value = d;
            return ! 0
        },
        writeHtml: function(a, d) {
            d && this.filter(d);
            a.comment(this.value)
        }
    }), "use strict",
    function() {
        CKEDITOR.htmlParser.text = function(a) {
            this.value = a;
            this._ = {
                isBlockLike: !1
            }
        };
        CKEDITOR.htmlParser.text.prototype = CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node, {
            type: CKEDITOR.NODE_TEXT,
            filter: function(a) {
                if (! (this.value = a.onText(this.value, this))) return this.remove(),
                !1
            },
            writeHtml: function(a, d) {
                d && this.filter(d);
                a.text(this.value)
            }
        })
    } (), "use strict",
    function() {
        CKEDITOR.htmlParser.cdata = function(a) {
            this.value = a
        };
        CKEDITOR.htmlParser.cdata.prototype = CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node, {
            type: CKEDITOR.NODE_TEXT,
            filter: function() {},
            writeHtml: function(a) {
                a.write(this.value)
            }
        })
    } (), "use strict", CKEDITOR.htmlParser.fragment = function() {
        this.children = [];
        this.parent = null;
        this._ = {
            isBlockLike: !0,
            hasInlineStarted: !1
        }
    },
    function() {
        function a(a) {
            return "a" == a.name && a.attributes.href || CKEDITOR.dtd.$removeEmpty[a.name]
        }
        var d = CKEDITOR.tools.extend({
            table: 1,
            ul: 1,
            ol: 1,
            dl: 1
        },
        CKEDITOR.dtd.table, CKEDITOR.dtd.ul, CKEDITOR.dtd.ol, CKEDITOR.dtd.dl),
        b = {
            ol: 1,
            ul: 1
        },
        c = CKEDITOR.tools.extend({},
        {
            html: 1
        },
        CKEDITOR.dtd.html, CKEDITOR.dtd.body, CKEDITOR.dtd.head, {
            style: 1,
            script: 1
        });
        CKEDITOR.htmlParser.fragment.fromHtml = function(e, g, f) {
            function k(a) {
                var b;
                if (0 < t.length) for (var c = 0; c < t.length; c++) {
                    var d = t[c],
                    e = d.name,
                    f = CKEDITOR.dtd[e],
                    g = w.name && CKEDITOR.dtd[w.name];
                    g && !g[e] || a && f && !f[a] && CKEDITOR.dtd[a] ? e == w.name && (n(w, w.parent, 1), c--) : (b || (h(), b = 1), d = d.clone(), d.parent = w, w = d, t.splice(c, 1), c--)
                }
            }
            function h() {
                for (; u.length;) n(u.shift(), w)
            }
            function l(a) {
                if (a._.isBlockLike && "pre" != a.name && "textarea" != a.name) {
                    var b = a.children.length,
                    c = a.children[b - 1],
                    d;
                    c && c.type == CKEDITOR.NODE_TEXT && ((d = CKEDITOR.tools.rtrim(c.value)) ? c.value = d: a.children.length = b - 1)
                }
            }
            function n(b, c, d) {
                c = c || w || q;
                var e = w;
                void 0 === b.previous && (p(c, b) && (w = c, r.onTagOpen(f, {}), b.returnPoint = c = w), l(b), a(b) && !b.children.length || c.add(b), "pre" == b.name && (A = !1), "textarea" == b.name && (v = !1));
                b.returnPoint ? (w = b.returnPoint, delete b.returnPoint) : w = d ? c: e
            }
            function p(a, b) {
                if ((a == q || "body" == a.name) && f && (!a.name || CKEDITOR.dtd[a.name][f])) {
                    var c, d;
                    return (c = b.attributes && (d = b.attributes["data-cke-real-element-type"]) ? d: b.name) && c in CKEDITOR.dtd.$inline && !(c in CKEDITOR.dtd.head) && !b.isOrphan || b.type == CKEDITOR.NODE_TEXT
                }
            }
            function s(a, b) {
                return a in CKEDITOR.dtd.$listItem || a in CKEDITOR.dtd.$tableContent ? a == b || "dt" == a && "dd" == b || "dd" == a && "dt" == b: !1
            }
            var r = new CKEDITOR.htmlParser,
            q = g instanceof CKEDITOR.htmlParser.element ? g: "string" == typeof g ? new CKEDITOR.htmlParser.element(g) : new CKEDITOR.htmlParser.fragment,
            t = [],
            u = [],
            w = q,
            v = "textarea" == q.name,
            A = "pre" == q.name;
            r.onTagOpen = function(e, f, g, q) {
                f = new CKEDITOR.htmlParser.element(e, f);
                f.isUnknown && g && (f.isEmpty = !0);
                f.isOptionalClose = q;
                if (a(f)) t.push(f);
                else {
                    if ("pre" == e) A = !0;
                    else {
                        if ("br" == e && A) {
                            w.add(new CKEDITOR.htmlParser.text("\n"));
                            return
                        }
                        "textarea" == e && (v = !0)
                    }
                    if ("br" == e) u.push(f);
                    else {
                        for (; ! (q = (g = w.name) ? CKEDITOR.dtd[g] || (w._.isBlockLike ? CKEDITOR.dtd.div: CKEDITOR.dtd.span) : c, f.isUnknown || w.isUnknown || q[e]);) if (w.isOptionalClose) r.onTagClose(g);
                        else if (e in b && g in b) g = w.children,
                        (g = g[g.length - 1]) && "li" == g.name || n(g = new CKEDITOR.htmlParser.element("li"), w),
                        !f.returnPoint && (f.returnPoint = w),
                        w = g;
                        else if (e in CKEDITOR.dtd.$listItem && !s(e, g)) r.onTagOpen("li" == e ? "ul": "dl", {},
                        0, 1);
                        else if (g in d && !s(e, g)) ! f.returnPoint && (f.returnPoint = w),
                        w = w.parent;
                        else if (g in CKEDITOR.dtd.$inline && t.unshift(w), w.parent) n(w, w.parent, 1);
                        else {
                            f.isOrphan = 1;
                            break
                        }
                        k(e);
                        h();
                        f.parent = w;
                        f.isEmpty ? n(f) : w = f
                    }
                }
            };
            r.onTagClose = function(a) {
                for (var b = t.length - 1; 0 <= b; b--) if (a == t[b].name) {
                    t.splice(b, 1);
                    return
                }
                for (var c = [], d = [], e = w; e != q && e.name != a;) e._.isBlockLike || d.unshift(e),
                c.push(e),
                e = e.returnPoint || e.parent;
                if (e != q) {
                    for (b = 0; b < c.length; b++) {
                        var g = c[b];
                        n(g, g.parent)
                    }
                    w = e;
                    e._.isBlockLike && h();
                    n(e, e.parent);
                    e == w && (w = w.parent);
                    t = t.concat(d)
                }
                "body" == a && (f = !1)
            };
            r.onText = function(a) {
                if (! (w._.hasInlineStarted && !u.length || A || v) && (a = CKEDITOR.tools.ltrim(a), 0 === a.length)) return;
                var e = w.name,
                g = e ? CKEDITOR.dtd[e] || (w._.isBlockLike ? CKEDITOR.dtd.div: CKEDITOR.dtd.span) : c;
                if (!v && !g["#"] && e in d) r.onTagOpen(e in b ? "li": "dl" == e ? "dd": "table" == e ? "tr": "tr" == e ? "td": ""),
                r.onText(a);
                else {
                    h();
                    k();
                    A || v || (a = a.replace(/[\t\r\n ]{2,}|[\t\r\n]/g, " "));
                    a = new CKEDITOR.htmlParser.text(a);
                    if (p(w, a)) this.onTagOpen(f, {},
                    0, 1);
                    w.add(a)
                }
            };
            r.onCDATA = function(a) {
                w.add(new CKEDITOR.htmlParser.cdata(a))
            };
            r.onComment = function(a) {
                h();
                k();
                w.add(new CKEDITOR.htmlParser.comment(a))
            };
            r.parse(e);
            for (h(!CKEDITOR.env.ie && 1); w != q;) n(w, w.parent, 1);
            l(q);
            return q
        };
        CKEDITOR.htmlParser.fragment.prototype = {
            type: CKEDITOR.NODE_DOCUMENT_FRAGMENT,
            add: function(a, b) {
                isNaN(b) && (b = this.children.length);
                var c = 0 < b ? this.children[b - 1] : null;
                if (c) {
                    if (a._.isBlockLike && c.type == CKEDITOR.NODE_TEXT && (c.value = CKEDITOR.tools.rtrim(c.value), 0 === c.value.length)) {
                        this.children.pop();
                        this.add(a);
                        return
                    }
                    c.next = a
                }
                a.previous = c;
                a.parent = this;
                this.children.splice(b, 0, a);
                this._.hasInlineStarted || (this._.hasInlineStarted = a.type == CKEDITOR.NODE_TEXT || a.type == CKEDITOR.NODE_ELEMENT && !a._.isBlockLike)
            },
            filter: function(a) {
                a.onRoot(this);
                this.filterChildren(a)
            },
            filterChildren: function(a, b) {
                if (this.childrenFilteredBy != a.id) {
                    if (b && !this.parent) a.onRoot(this);
                    this.childrenFilteredBy = a.id;
                    for (var c = 0; c < this.children.length; c++) ! 1 === this.children[c].filter(a) && c--
                }
            },
            writeHtml: function(a, b) {
                b && this.filter(b);
                this.writeChildrenHtml(a)
            },
            writeChildrenHtml: function(a, b, c) {
                if (c && !this.parent && b) b.onRoot(this);
                b && this.filterChildren(b);
                b = 0;
                c = this.children;
                for (var d = c.length; b < d; b++) c[b].writeHtml(a)
            },
            forEach: function(a, b, c) {
                c || b && this.type != b || a(this);
                c = this.children;
                for (var d, h = 0,
                l = c.length; h < l; h++) d = c[h],
                d.type == CKEDITOR.NODE_ELEMENT ? d.forEach(a, b) : b && d.type != b || a(d)
            }
        }
    } (),
    function() {
        function a(a, b) {
            for (var c = 0; a && c < b.length; c++) {
                var d = b[c];
                a = a.replace(d[0], d[1])
            }
            return a
        }
        function d(a, b, c) {
            "function" == typeof b && (b = [b]);
            var d, e;
            e = a.length;
            var n = b && b.length;
            if (n) {
                for (d = 0; d < e && a[d].pri <= c; d++);
                for (e = n - 1; 0 <= e; e--) if (n = b[e]) n.pri = c,
                a.splice(d, 0, n)
            }
        }
        function b(a, b, d) {
            if (b) for (var e in b) {
                var l = a[e];
                a[e] = c(l, b[e], d);
                l || a.$length++
            }
        }
        function c(a, b, c) {
            if (b) return b.pri = c,
            a ? (a.splice ? d(a, b, c) : (a = a.pri > c ? [b, a] : [a, b], a.filter = e), a) : b.filter = b
        }
        function e(a) {
            for (var b = a.type || a instanceof CKEDITOR.htmlParser.fragment,
            c = 0; c < this.length; c++) {
                if (b) var d = a.type,
                e = a.name;
                var n = this[c].apply(window, arguments);
                if (!1 === n) return n;
                if (b) {
                    if (n && (n.name != e || n.type != d)) return n
                } else if ("string" != typeof n) return n;
                void 0 != n && (a = n)
            }
            return a
        }
        CKEDITOR.htmlParser.filter = CKEDITOR.tools.createClass({
            $: function(a) {
                this.id = CKEDITOR.tools.getNextNumber();
                this._ = {
                    elementNames: [],
                    attributeNames: [],
                    elements: {
                        $length: 0
                    },
                    attributes: {
                        $length: 0
                    }
                };
                a && this.addRules(a, 10)
            },
            proto: {
                addRules: function(a, e) {
                    "number" != typeof e && (e = 10);
                    d(this._.elementNames, a.elementNames, e);
                    d(this._.attributeNames, a.attributeNames, e);
                    b(this._.elements, a.elements, e);
                    b(this._.attributes, a.attributes, e);
                    this._.text = c(this._.text, a.text, e) || this._.text;
                    this._.comment = c(this._.comment, a.comment, e) || this._.comment;
                    this._.root = c(this._.root, a.root, e) || this._.root
                },
                applyTo: function(a) {
                    a.filter(this)
                },
                onElementName: function(b) {
                    return a(b, this._.elementNames)
                },
                onAttributeName: function(b) {
                    return a(b, this._.attributeNames)
                },
                onText: function(a) {
                    var b = this._.text;
                    return b ? b.filter(a) : a
                },
                onComment: function(a, b) {
                    var c = this._.comment;
                    return c ? c.filter(a, b) : a
                },
                onRoot: function(a) {
                    var b = this._.root;
                    return b ? b.filter(a) : a
                },
                onElement: function(a) {
                    for (var b = [this._.elements["^"], this._.elements[a.name], this._.elements.$], c, d = 0; 3 > d; d++) if (c = b[d]) {
                        c = c.filter(a, this);
                        if (!1 === c) return null;
                        if (c && c != a) return this.onNode(c);
                        if (a.parent && !a.name) break
                    }
                    return a
                },
                onNode: function(a) {
                    var b = a.type;
                    return b == CKEDITOR.NODE_ELEMENT ? this.onElement(a) : b == CKEDITOR.NODE_TEXT ? new CKEDITOR.htmlParser.text(this.onText(a.value)) : b == CKEDITOR.NODE_COMMENT ? new CKEDITOR.htmlParser.comment(this.onComment(a.value)) : null
                },
                onAttribute: function(a, b, c) {
                    if (b = this._.attributes[b]) {
                        a = b.filter(c, a, this);
                        if (!1 === a) return ! 1;
                        if ("undefined" != typeof a) return a
                    }
                    return c
                }
            }
        })
    } (),
    function() {
        function a(a, d) {
            function q(a) {
                return a || CKEDITOR.env.ie ? new CKEDITOR.htmlParser.text("\u00a0") : new CKEDITOR.htmlParser.element("br", {
                    "data-cke-bogus": 1
                })
            }
            function l(a, d) {
                return function(e) {
                    if (e.type != CKEDITOR.NODE_DOCUMENT_FRAGMENT) {
                        var f = [],
                        k = b(e),
                        l,
                        m;
                        if (k) for (n(k, 1) && f.push(k); k;) {
                            if (g(k) && (l = c(k)) && n(l)) if ((m = c(l)) && !g(m)) f.push(l);
                            else {
                                var r = l,
                                t = q(p),
                                u = r.parent.children,
                                w = CKEDITOR.tools.indexOf(u, r);
                                u.splice(w + 1, 0, t);
                                u = r.next;
                                r.next = t;
                                t.previous = r;
                                t.parent = r.parent;
                                t.next = u;
                                h(l)
                            }
                            k = k.previous
                        }
                        for (k = 0; k < f.length; k++) h(f[k]);
                        if (f = CKEDITOR.env.opera && !a || ("function" == typeof d ? !1 !== d(e) : d)) ! p && CKEDITOR.env.ie && e.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT ? f = !1 : !p && CKEDITOR.env.ie && (7 < document.documentMode || e.name in CKEDITOR.dtd.tr || e.name in CKEDITOR.dtd.$listItem) ? f = !1 : (f = b(e), f = !f || "form" == e.name && "input" == f.name);
                        f && e.add(q(a))
                    }
                }
            }
            function n(a, b) {
                if (! (p && CKEDITOR.env.ie || a.type != CKEDITOR.NODE_ELEMENT || "br" != a.name || a.attributes["data-cke-eol"])) return ! 0;
                var c;
                return a.type == CKEDITOR.NODE_TEXT && (c = a.value.match(A)) && (c.index && (f(a, new CKEDITOR.htmlParser.text(a.value.substring(0, c.index))), a.value = c[0]), CKEDITOR.env.ie && p && (!b || a.parent.name in r) || !p && ((c = a.previous) && "br" == c.name || !c || g(c))) ? !0 : !1
            }
            var m = {
                elements: {}
            },
            p = "html" == d,
            r = CKEDITOR.tools.extend({},
            x),
            t;
            for (t in r)"#" in z[t] || delete r[t];
            for (t in r) m.elements[t] = l(p, !1 !== a.config.fillEmptyBlocks);
            m.root = l(p);
            m.elements.br = function(a) {
                return function(b) {
                    if (b.parent.type != CKEDITOR.NODE_DOCUMENT_FRAGMENT) {
                        var d = b.attributes;
                        if ("data-cke-bogus" in d || "data-cke-eol" in d) delete d["data-cke-bogus"];
                        else {
                            for (d = b.next; d && e(d);) d = d.next;
                            var h = c(b); ! d && g(b.parent) ? k(b.parent, q(a)) : g(d) && h && !g(h) && f(d, q(a))
                        }
                    }
                }
            } (p);
            return m
        }
        function d(a) {
            return a.enterMode != CKEDITOR.ENTER_BR && !1 !== a.autoParagraph ? a.enterMode == CKEDITOR.ENTER_DIV ? "div": "p": !1
        }
        function b(a) {
            for (a = a.children[a.children.length - 1]; a && e(a);) a = a.previous;
            return a
        }
        function c(a) {
            for (a = a.previous; a && e(a);) a = a.previous;
            return a
        }
        function e(a) {
            return a.type == CKEDITOR.NODE_TEXT && !CKEDITOR.tools.trim(a.value) || a.type == CKEDITOR.NODE_ELEMENT && a.attributes["data-cke-bookmark"]
        }
        function g(a) {
            return a && (a.type == CKEDITOR.NODE_ELEMENT && a.name in x || a.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT)
        }
        function f(a, b) {
            var c = a.parent.children,
            d = CKEDITOR.tools.indexOf(c, a);
            c.splice(d, 0, b);
            c = a.previous;
            a.previous = b;
            b.next = a;
            b.parent = a.parent;
            c && (b.previous = c, c.next = b)
        }
        function k(a, b) {
            var c = a.children[a.children.length - 1];
            a.children.push(b);
            b.parent = a;
            c && (c.next = b, b.previous = c)
        }
        function h(a) {
            var b = a.parent.children,
            c = CKEDITOR.tools.indexOf(b, a),
            d = a.previous;
            a = a.next;
            d && (d.next = a);
            a && (a.previous = d);
            b.splice(c, 1)
        }
        function l(a) {
            var b = a.parent;
            return b ? CKEDITOR.tools.indexOf(b.children, a) : -1
        }
        function n(a) {
            a = a.attributes;
            "false" != a.contenteditable && (a["data-cke-editable"] = a.contenteditable ? "true": 1);
            a.contenteditable = "false"
        }
        function p(a) {
            a = a.attributes;
            switch (a["data-cke-editable"]) {
            case "true":
                a.contenteditable = "true";
                break;
            case "1":
                delete a.contenteditable
            }
        }
        function s(a) {
            return a.replace(F,
            function(a, b, c) {
                return "<" + b + c.replace(J,
                function(a, b) {
                    return /^on/.test(b) || -1 != c.indexOf("data-cke-saved-" + b) ? a: (a = a.slice(1), " data-cke-saved-" + a + " data-cke-" + CKEDITOR.rnd + "-" + a)
                }) + ">"
            })
        }
        function r(a, b) {
            return a.replace(b,
            function(a, b, c) {
                0 === a.indexOf("<textarea") && (a = b + u(c).replace(/</g, "&lt;").replace(/>/g, "&gt;") + "</textarea>");
                return "<cke:encoded>" + encodeURIComponent(a) + "</cke:encoded>"
            })
        }
        function q(a) {
            return a.replace(K,
            function(a, b) {
                return decodeURIComponent(b)
            })
        }
        function t(a) {
            return a.replace(/<\!--(?!{cke_protected})[\s\S]+?--\>/g,
            function(a) {
                return "\x3c!--" + E + "{C}" + encodeURIComponent(a).replace(/--/g, "%2D%2D") + "--\x3e"
            })
        }
        function u(a) {
            return a.replace(/<\!--\{cke_protected\}\{C\}([\s\S]+?)--\>/g,
            function(a, b) {
                return decodeURIComponent(b)
            })
        }
        function w(a, b) {
            var c = b._.dataStore;
            return a.replace(/<\!--\{cke_protected\}([\s\S]+?)--\>/g,
            function(a, b) {
                return decodeURIComponent(b)
            }).replace(/\{cke_protected_(\d+)\}/g,
            function(a, b) {
                return c && c[b] || ""
            })
        }
        function v(a, b) {
            var c = [],
            d = b.config.protectedSource,
            e = b._.dataStore || (b._.dataStore = {
                id: 1
            }),
            f = /<\!--\{cke_temp(comment)?\}(\d*?)--\>/g,
            d = [/<script[\s\S]*?<\/script>/gi, /<noscript[\s\S]*?<\/noscript>/gi].concat(d);
            a = a.replace(/<\!--[\s\S]*?--\>/g,
            function(a) {
                return "\x3c!--{cke_tempcomment}" + (c.push(a) - 1) + "--\x3e"
            });
            for (var g = 0; g < d.length; g++) a = a.replace(d[g],
            function(a) {
                a = a.replace(f,
                function(a, b, d) {
                    return c[d]
                });
                return /cke_temp(comment)?/.test(a) ? a: "\x3c!--{cke_temp}" + (c.push(a) - 1) + "--\x3e"
            });
            a = a.replace(f,
            function(a, b, d) {
                return "\x3c!--" + E + (b ? "{C}": "") + encodeURIComponent(c[d]).replace(/--/g, "%2D%2D") + "--\x3e"
            });
            return a.replace(/(['"]).*?\1/g,
            function(a) {
                return a.replace(/<\!--\{cke_protected\}([\s\S]+?)--\>/g,
                function(a, b) {
                    e[e.id] = decodeURIComponent(b);
                    return "{cke_protected_" + e.id+++"}"
                })
            })
        }
        CKEDITOR.htmlDataProcessor = function(b) {
            var c, e, f = this;
            this.editor = b;
            this.dataFilter = c = new CKEDITOR.htmlParser.filter;
            this.htmlFilter = e = new CKEDITOR.htmlParser.filter;
            this.writer = new CKEDITOR.htmlParser.basicWriter;
            c.addRules(D);
            c.addRules(a(b, "data"));
            e.addRules(I);
            e.addRules(a(b, "html"));
            b.on("toHtml",
            function(a) {
                a = a.data;
                var c = a.dataValue,
                c = v(c, b),
                c = r(c, L),
                c = s(c),
                c = r(c, m),
                c = c.replace(O, "$1cke:$2"),
                c = c.replace(M, "<cke:$1$2></cke:$1>"),
                c = CKEDITOR.env.opera ? c: c.replace(/(<pre\b[^>]*>)(\r\n|\n)/g, "$1$2$2"),
                e = a.context || b.editable().getName(),
                f;
                CKEDITOR.env.ie && 9 > CKEDITOR.env.version && "pre" == e && (e = "div", c = "<pre>" + c + "</pre>", f = 1);
                e = b.document.createElement(e);
                e.setHtml("a" + c);
                c = e.getHtml().substr(1);
                c = c.replace(RegExp(" data-cke-" + CKEDITOR.rnd + "-", "ig"), " ");
                f && (c = c.replace(/^<pre>|<\/pre>$/gi, ""));
                c = c.replace(P, "$1$2");
                c = q(c);
                c = u(c);
                a.dataValue = CKEDITOR.htmlParser.fragment.fromHtml(c, a.context, !1 === a.fixForBody ? !1 : d(b.config))
            },
            null, null, 5);
            b.on("toHtml",
            function(a) {
                a.data.dataValue.filterChildren(f.dataFilter, !0)
            },
            null, null, 10);
            b.on("toHtml",
            function(a) {
                a = a.data;
                var b = a.dataValue,
                c = new CKEDITOR.htmlParser.basicWriter;
                b.writeChildrenHtml(c);
                b = c.getHtml(!0);
                a.dataValue = t(b)
            },
            null, null, 15);
            b.on("toDataFormat",
            function(a) {
                a.data.dataValue = CKEDITOR.htmlParser.fragment.fromHtml(a.data.dataValue, b.editable().getName(), d(b.config))
            },
            null, null, 5);
            b.on("toDataFormat",
            function(a) {
                a.data.dataValue.filterChildren(f.htmlFilter, !0)
            },
            null, null, 10);
            b.on("toDataFormat",
            function(a) {
                var c = a.data.dataValue,
                d = f.writer;
                d.reset();
                c.writeChildrenHtml(d);
                c = d.getHtml(!0);
                c = u(c);
                c = w(c, b);
                a.data.dataValue = c
            },
            null, null, 15)
        };
        CKEDITOR.htmlDataProcessor.prototype = {
            toHtml: function(a, b, c, d) {
                var e = this.editor; ! b && null !== b && (b = e.editable().getName());
                return e.fire("toHtml", {
                    dataValue: a,
                    context: b,
                    fixForBody: c,
                    dontFilter: !!d
                }).dataValue
            },
            toDataFormat: function(a) {
                return this.editor.fire("toDataFormat", {
                    dataValue: a
                }).dataValue
            }
        };
        var A = /(?:&nbsp;|\xa0)$/,
        E = "{cke_protected}",
        z = CKEDITOR.dtd,
        B = "caption colgroup col thead tfoot tbody".split(" "),
        x = CKEDITOR.tools.extend({},
        z.$blockLimit, z.$block),
        D = {
            elements: {},
            attributeNames: [[/^on/, "data-cke-pa-on"]]
        },
        I = {
            elementNames: [[/^cke:/, ""], [/^\?xml:namespace$/, ""]],
            attributeNames: [[/^data-cke-(saved|pa)-/, ""], [/^data-cke-.*/, ""], ["hidefocus", ""]],
            elements: {
                $: function(a) {
                    var b = a.attributes;
                    if (b) {
                        if (b["data-cke-temp"]) return ! 1;
                        for (var c = ["name", "href", "src"], d, e = 0; e < c.length; e++) d = "data-cke-saved-" + c[e],
                        d in b && delete b[c[e]]
                    }
                    return a
                },
                table: function(a) {
                    a.children.slice(0).sort(function(a, b) {
                        var c, d;
                        a.type == CKEDITOR.NODE_ELEMENT && b.type == a.type && (c = CKEDITOR.tools.indexOf(B, a.name), d = CKEDITOR.tools.indexOf(B, b.name)); - 1 < c && -1 < d && c != d || (c = l(a), d = l(b));
                        return c > d ? 1 : -1
                    })
                },
                embed: function(a) {
                    var b = a.parent;
                    if (b && "object" == b.name) {
                        var c = b.attributes.width,
                        b = b.attributes.height;
                        c && (a.attributes.width = c);
                        b && (a.attributes.height = b)
                    }
                },
                param: function(a) {
                    a.children = [];
                    a.isEmpty = !0;
                    return a
                },
                a: function(a) {
                    if (!a.children.length && !a.attributes.name && !a.attributes["data-cke-saved-name"]) return ! 1
                },
                span: function(a) {
                    "Apple-style-span" == a.attributes["class"] && delete a.name
                },
                html: function(a) {
                    delete a.attributes.contenteditable;
                    delete a.attributes["class"]
                },
                body: function(a) {
                    delete a.attributes.spellcheck;
                    delete a.attributes.contenteditable
                },
                style: function(a) {
                    var b = a.children[0];
                    b && b.value && (b.value = CKEDITOR.tools.trim(b.value));
                    a.attributes.type || (a.attributes.type = "text/css")
                },
                title: function(a) {
                    var b = a.children[0]; ! b && k(a, b = new CKEDITOR.htmlParser.text);
                    b.value = a.attributes["data-cke-title"] || ""
                }
            },
            attributes: {
                "class": function(a) {
                    return CKEDITOR.tools.ltrim(a.replace(/(?:^|\s+)cke_[^\s]*/g, "")) || !1
                }
            }
        };
        CKEDITOR.env.ie && (I.attributes.style = function(a) {
            return a.replace(/(^|;)([^\:]+)/g,
            function(a) {
                return a.toLowerCase()
            })
        });
        for (var C in {
            input: 1,
            textarea: 1
        }) D.elements[C] = n,
        I.elements[C] = p;
        var F = /<(a|area|img|input|source)\b([^>]*)>/gi,
        J = /\s(on\w+|href|src|name)\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|(?:[^ "'>]+))/gi,
        m = /(?:<style(?=[ >])[^>]*>[\s\S]*?<\/style>)|(?:<(:?link|meta|base)[^>]*>)/gi,
        L = /(<textarea(?=[ >])[^>]*>)([\s\S]*?)(?:<\/textarea>)/gi,
        K = /<cke:encoded>([^<]*)<\/cke:encoded>/gi,
        O = /(<\/?)((?:object|embed|param|html|body|head|title)[^>]*>)/gi,
        P = /(<\/?)cke:((?:html|body|head|title)[^>]*>)/gi,
        M = /<cke:(param|embed)([^>]*?)\/?>(?!\s*<\/cke:\1)/gi
    } (), "use strict", CKEDITOR.htmlParser.element = function(a, d) {
        this.name = a;
        this.attributes = d || {};
        this.children = [];
        var b = a || "",
        c = b.match(/^cke:(.*)/);
        c && (b = c[1]);
        b = !!(CKEDITOR.dtd.$nonBodyContent[b] || CKEDITOR.dtd.$block[b] || CKEDITOR.dtd.$listItem[b] || CKEDITOR.dtd.$tableContent[b] || CKEDITOR.dtd.$nonEditable[b] || "br" == b);
        this.isEmpty = !!CKEDITOR.dtd.$empty[a];
        this.isUnknown = !CKEDITOR.dtd[a];
        this._ = {
            isBlockLike: b,
            hasInlineStarted: this.isEmpty || !b
        }
    },
    CKEDITOR.htmlParser.cssStyle = function(a) {
        var d = {}; ((a instanceof CKEDITOR.htmlParser.element ? a.attributes.style: a) || "").replace(/&quot;/g, '"').replace(/\s*([^ :;]+)\s*:\s*([^;]+)\s*(?=;|$)/g,
        function(a, c, e) {
            "font-family" == c && (e = e.replace(/["']/g, ""));
            d[c.toLowerCase()] = e
        });
        return {
            rules: d,
            populate: function(a) {
                var c = this.toString();
                c && (a instanceof CKEDITOR.dom.element ? a.setAttribute("style", c) : a instanceof CKEDITOR.htmlParser.element ? a.attributes.style = c: a.style = c)
            },
            toString: function() {
                var a = [],
                c;
                for (c in d) d[c] && a.push(c, ":", d[c], ";");
                return a.join("")
            }
        }
    },
    function() {
        var a = function(a, c) {
            a = a[0];
            c = c[0];
            return a < c ? -1 : a > c ? 1 : 0
        },
        d = CKEDITOR.htmlParser.fragment.prototype;
        CKEDITOR.htmlParser.element.prototype = CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node, {
            type: CKEDITOR.NODE_ELEMENT,
            add: d.add,
            clone: function() {
                return new CKEDITOR.htmlParser.element(this.name, this.attributes)
            },
            filter: function(a) {
                var c = this,
                d, g;
                if (!c.parent) a.onRoot(c);
                for (;;) {
                    d = c.name;
                    if (! (g = a.onElementName(d))) return this.remove(),
                    !1;
                    c.name = g;
                    if (! (c = a.onElement(c))) return this.remove(),
                    !1;
                    if (c !== this) return this.replaceWith(c),
                    !1;
                    if (c.name == d) break;
                    if (c.type != CKEDITOR.NODE_ELEMENT) return this.replaceWith(c),
                    !1;
                    if (!c.name) return this.replaceWithChildren(),
                    !1
                }
                d = c.attributes;
                var f, k;
                for (f in d) {
                    k = f;
                    for (g = d[f];;) if (k = a.onAttributeName(f)) if (k != f) delete d[f],
                    f = k;
                    else break;
                    else {
                        delete d[f];
                        break
                    }
                    k && (!1 === (g = a.onAttribute(c, k, g)) ? delete d[k] : d[k] = g)
                }
                c.isEmpty || this.filterChildren(a);
                return ! 0
            },
            filterChildren: d.filterChildren,
            writeHtml: function(b, c) {
                c && this.filter(c);
                var d = this.name,
                g = [],
                f = this.attributes,
                k,
                h;
                b.openTag(d, f);
                for (k in f) g.push([k, f[k]]);
                b.sortAttributes && g.sort(a);
                k = 0;
                for (h = g.length; k < h; k++) f = g[k],
                b.attribute(f[0], f[1]);
                b.openTagClose(d, this.isEmpty);
                this.writeChildrenHtml(b);
                this.isEmpty || b.closeTag(d)
            },
            writeChildrenHtml: d.writeChildrenHtml,
            replaceWithChildren: function() {
                for (var a = this.children,
                c = a.length; c;) a[--c].insertAfter(this);
                this.remove()
            },
            forEach: d.forEach
        })
    } (),
    function() {
        var a = {};
        CKEDITOR.template = function(d) {
            if (a[d]) this.output = a[d];
            else {
                var b = d.replace(/'/g, "\\'").replace(/{([^}]+)}/g,
                function(a, b) {
                    return "',data['" + b + "']==undefined?'{" + b + "}':data['" + b + "'],'"
                });
                this.output = a[d] = Function("data", "buffer", "return buffer?buffer.push('" + b + "'):['" + b + "'].join('');")
            }
        }
    } (), delete CKEDITOR.loadFullCore, CKEDITOR.instances = {},
    CKEDITOR.document = new CKEDITOR.dom.document(document), CKEDITOR.add = function(a) {
        CKEDITOR.instances[a.name] = a;
        a.on("focus",
        function() {
            CKEDITOR.currentInstance != a && (CKEDITOR.currentInstance = a, CKEDITOR.fire("currentInstance"))
        });
        a.on("blur",
        function() {
            CKEDITOR.currentInstance == a && (CKEDITOR.currentInstance = null, CKEDITOR.fire("currentInstance"))
        });
        CKEDITOR.fire("instance", null, a)
    },
    CKEDITOR.remove = function(a) {
        delete CKEDITOR.instances[a.name]
    },
    function() {
        var a = {};
        CKEDITOR.addTemplate = function(d, b) {
            var c = a[d];
            if (c) return c;
            c = {
                name: d,
                source: b
            };
            CKEDITOR.fire("template", c);
            return a[d] = new CKEDITOR.template(c.source)
        };
        CKEDITOR.getTemplate = function(d) {
            return a[d]
        }
    } (),
    function() {
        var a = [];
        CKEDITOR.addCss = function(d) {
            a.push(d)
        };
        CKEDITOR.getCss = function() {
            return a.join("\n")
        }
    } (), CKEDITOR.on("instanceDestroyed",
    function() {
        CKEDITOR.tools.isEmpty(this.instances) && CKEDITOR.fire("reset")
    }), CKEDITOR.TRISTATE_ON = 1, CKEDITOR.TRISTATE_OFF = 2, CKEDITOR.TRISTATE_DISABLED = 0,
    function() {
        CKEDITOR.inline = function(a, d) {
            if (!CKEDITOR.env.isCompatible) return null;
            a = CKEDITOR.dom.element.get(a);
            if (a.getEditor()) throw 'The editor instance "' + a.getEditor().name + '" is already attached to the provided element.';
            var b = new CKEDITOR.editor(d, a, CKEDITOR.ELEMENT_MODE_INLINE),
            c = a.is("textarea") ? a: null;
            c ? (b.setData(c.getValue(), null, !0), a = CKEDITOR.dom.element.createFromHtml('<div contenteditable="' + !!b.readOnly + '" class="cke_textarea_inline">' + c.getValue() + "</div>", CKEDITOR.document), a.insertAfter(c), c.hide(), c.$.form && b._attachToForm()) : b.setData(a.getHtml(), null, !0);
            b.on("loaded",
            function() {
                b.fire("uiReady");
                b.editable(a);
                b.container = a;
                b.setData(b.getData(1));
                b.resetDirty();
                b.fire("contentDom");
                b.mode = "wysiwyg";
                b.fire("mode");
                b.status = "ready";
                b.fireOnce("instanceReady");
                CKEDITOR.fire("instanceReady", null, b)
            },
            null, null, 1E4);
            b.on("destroy",
            function() {
                c && (b.container.clearCustomData(), b.container.remove(), c.show());
                b.element.clearCustomData();
                delete b.element
            });
            return b
        };
        CKEDITOR.inlineAll = function() {
            var a, d, b;
            for (b in CKEDITOR.dtd.$editable) for (var c = CKEDITOR.document.getElementsByTag(b), e = 0, g = c.count(); e < g; e++) a = c.getItem(e),
            "true" == a.getAttribute("contenteditable") && (d = {
                element: a,
                config: {}
            },
            !1 !== CKEDITOR.fire("inline", d) && CKEDITOR.inline(a, d.config))
        };
        CKEDITOR.domReady(function() { ! CKEDITOR.disableAutoInline && CKEDITOR.inlineAll()
        })
    } (), CKEDITOR.replaceClass = "ckeditor",
    function() {
        function a(a, c, f, k) {
            if (!CKEDITOR.env.isCompatible) return null;
            a = CKEDITOR.dom.element.get(a);
            if (a.getEditor()) throw 'The editor instance "' + a.getEditor().name + '" is already attached to the provided element.';
            var h = new CKEDITOR.editor(c, a, k);
            k == CKEDITOR.ELEMENT_MODE_REPLACE && (a.setStyle("visibility", "hidden"), h._.required = a.hasAttribute("required"), a.removeAttribute("required"));
            f && h.setData(f, null, !0);
            h.on("loaded",
            function() {
                b(h);
                k == CKEDITOR.ELEMENT_MODE_REPLACE && h.config.autoUpdateElement && a.$.form && h._attachToForm();
                h.setMode(h.config.startupMode,
                function() {
                    h.resetDirty();
                    h.status = "ready";
                    h.fireOnce("instanceReady");
                    CKEDITOR.fire("instanceReady", null, h)
                })
            });
            h.on("destroy", d);
            return h
        }
        function d() {
            var a = this.container,
            b = this.element;
            a && (a.clearCustomData(), a.remove());
            b && (b.clearCustomData(), this.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE && (b.show(), this._.required && b.setAttribute("required", "required")), delete this.element)
        }
        function b(a) {
            var b = a.name,
            d = a.element,
            k = a.elementMode,
            h = a.fire("uiSpace", {
                space: "top",
                html: ""
            }).html,
            l = a.fire("uiSpace", {
                space: "bottom",
                html: ""
            }).html;
            c || (c = CKEDITOR.addTemplate("maincontainer", '<{outerEl} id="cke_{name}" class="{id} cke cke_reset cke_chrome cke_editor_{name} cke_{langDir} ' + CKEDITOR.env.cssClass + '"  dir="{langDir}" lang="{langCode}" role="application" aria-labelledby="cke_{name}_arialbl"><span id="cke_{name}_arialbl" class="cke_voice_label">{voiceLabel}</span><{outerEl} class="cke_inner cke_reset" role="presentation">{topHtml}<{outerEl} id="{contentId}" class="cke_contents cke_reset" role="presentation"></{outerEl}>{bottomHtml}</{outerEl}></{outerEl}>'));
            b = CKEDITOR.dom.element.createFromHtml(c.output({
                id: a.id,
                name: b,
                langDir: a.lang.dir,
                langCode: a.langCode,
                voiceLabel: [a.lang.editor, a.name].join(", "),
                topHtml: h ? '<span id="' + a.ui.spaceId("top") + '" class="cke_top cke_reset_all" role="presentation" style="height:auto">' + h + "</span>": "",
                contentId: a.ui.spaceId("contents"),
                bottomHtml: l ? '<span id="' + a.ui.spaceId("bottom") + '" class="cke_bottom cke_reset_all" role="presentation">' + l + "</span>": "",
                outerEl: CKEDITOR.env.ie ? "span": "div"
            }));
            k == CKEDITOR.ELEMENT_MODE_REPLACE ? (d.hide(), b.insertAfter(d)) : d.append(b);
            a.container = b;
            h && a.ui.space("top").unselectable();
            l && a.ui.space("bottom").unselectable();
            d = a.config.width;
            k = a.config.height;
            d && b.setStyle("width", CKEDITOR.tools.cssLength(d));
            k && a.ui.space("contents").setStyle("height", CKEDITOR.tools.cssLength(k));
            b.disableContextMenu();
            CKEDITOR.env.webkit && b.on("focus",
            function() {
                a.focus()
            });
            a.fireOnce("uiReady")
        }
        CKEDITOR.replace = function(b, c) {
            return a(b, c, null, CKEDITOR.ELEMENT_MODE_REPLACE)
        };
        CKEDITOR.appendTo = function(b, c, d) {
            return a(b, c, d, CKEDITOR.ELEMENT_MODE_APPENDTO)
        };
        CKEDITOR.replaceAll = function() {
            for (var a = document.getElementsByTagName("textarea"), b = 0; b < a.length; b++) {
                var c = null,
                d = a[b];
                if (d.name || d.id) {
                    if ("string" == typeof arguments[0]) {
                        if (!RegExp("(?:^|\\s)" + arguments[0] + "(?:$|\\s)").test(d.className)) continue
                    } else if ("function" == typeof arguments[0] && (c = {},
                    !1 === arguments[0](d, c))) continue;
                    this.replace(d, c)
                }
            }
        };
        CKEDITOR.editor.prototype.addMode = function(a, b) { (this._.modes || (this._.modes = {}))[a] = b
        };
        CKEDITOR.editor.prototype.setMode = function(a, b) {
            var c = this,
            d = this._.modes;
            if (a != c.mode && d && d[a]) {
                c.fire("beforeSetMode", a);
                if (c.mode) {
                    var h = c.checkDirty();
                    c._.previousMode = c.mode;
                    c.fire("beforeModeUnload");
                    c.editable(0);
                    c.ui.space("contents").setHtml("");
                    c.mode = ""
                }
                this._.modes[a](function() {
                    c.mode = a;
                    void 0 !== h && !h && c.resetDirty();
                    setTimeout(function() {
                        c.fire("mode");
                        b && b.call(c)
                    },
                    0)
                })
            }
        };
        CKEDITOR.editor.prototype.resize = function(a, b, c, d) {
            var h = this.container,
            l = this.ui.space("contents"),
            n = CKEDITOR.env.webkit && this.document && this.document.getWindow().$.frameElement;
            d = d ? h.getChild(1) : h;
            d.setSize("width", a, !0);
            n && (n.style.width = "1%");
            l.setStyle("height", Math.max(b - (c ? 0 : (d.$.offsetHeight || 0) - (l.$.clientHeight || 0)), 0) + "px");
            n && (n.style.width = "100%");
            this.fire("resize")
        };
        CKEDITOR.editor.prototype.getResizable = function(a) {
            return a ? this.ui.space("contents") : this.container
        };
        var c;
        CKEDITOR.domReady(function() {
            CKEDITOR.replaceClass && CKEDITOR.replaceAll(CKEDITOR.replaceClass)
        })
    } (), CKEDITOR.config.startupMode = "wysiwyg",
    function() {
        function a(a) {
            var c = a.editor,
            d = c.editable(),
            e = a.data.path,
            f = e.blockLimit,
            g = a.data.selection.getRanges()[0],
            h = c.config.enterMode;
            if (CKEDITOR.env.gecko) {
                var k = e.block || e.blockLimit || e.root,
                l = k && k.getLast(b);
                k && k.isBlockBoundary() && !(l && l.type == CKEDITOR.NODE_ELEMENT && l.isBlockBoundary() || k.is("pre") || k.getBogus()) && k.appendBogus()
            } ! 1 !== c.config.autoParagraph && h != CKEDITOR.ENTER_BR && g.collapsed && d.equals(f) && !e.block && (d = g.clone(), d.enlarge(CKEDITOR.ENLARGE_BLOCK_CONTENTS), e = new CKEDITOR.dom.walker(d), e.guard = function(a) {
                return ! b(a) || a.type == CKEDITOR.NODE_COMMENT || a.isReadOnly()
            },
            !e.checkForward() || d.checkStartOfBlock() && d.checkEndOfBlock()) && (c = g.fixBlock(!0, c.config.enterMode == CKEDITOR.ENTER_DIV ? "div": "p"), CKEDITOR.env.ie && (c = c.getFirst(b)) && c.type == CKEDITOR.NODE_TEXT && CKEDITOR.tools.trim(c.getText()).match(/^(?:&nbsp;|\xa0)$/) && c.remove(), g.select(), a.cancel())
        }
        function d(a) {
            var b = a.data.getTarget();
            b.is("input") && (b = b.getAttribute("type"), "submit" != b && "reset" != b || a.data.preventDefault())
        }
        function b(a) {
            return h(a) && l(a)
        }
        function c(a, b) {
            return function(c) {
                var d = CKEDITOR.dom.element.get(c.data.$.toElement || c.data.$.fromElement || c.data.$.relatedTarget);
                d && (b.equals(d) || b.contains(d)) || a.call(this, c)
            }
        }
        function e(a) {
            var c, d = a.getRanges()[0];
            a = a.root;
            var e = d.startPath(),
            f = {
                table: 1,
                ul: 1,
                ol: 1,
                dl: 1
            },
            g = CKEDITOR.dom.walker.bogus();
            if (e.contains(f)) {
                var e = function(a) {
                    return function(d, e) {
                        e && d.type == CKEDITOR.NODE_ELEMENT && d.is(f) && (c = d);
                        if (! (e || !b(d) || a && g(d))) return ! 1
                    }
                },
                h = d.clone();
                h.collapse(1);
                h.setStartAt(a, CKEDITOR.POSITION_AFTER_START);
                a = new CKEDITOR.dom.walker(h);
                a.guard = e();
                a.checkBackward();
                if (c) return h = d.clone(),
                h.collapse(),
                h.setEndAt(c, CKEDITOR.POSITION_AFTER_END),
                a = new CKEDITOR.dom.walker(h),
                a.guard = e(!0),
                c = !1,
                a.checkForward(),
                c
            }
            return null
        }
        function g(a) {
            a.editor.focus();
            a.editor.fire("saveSnapshot")
        }
        function f(a, b) {
            var c = a.editor; ! b && c.getSelection().scrollIntoView();
            setTimeout(function() {
                c.fire("saveSnapshot")
            },
            0)
        }
        CKEDITOR.editable = CKEDITOR.tools.createClass({
            base: CKEDITOR.dom.element,
            $: function(a, b) {
                this.base(b.$ || b);
                this.editor = a;
                this.hasFocus = !1;
                this.setup()
            },
            proto: {
                focus: function() {
                    this.$[CKEDITOR.env.ie && this.getDocument().equals(CKEDITOR.document) ? "setActive": "focus"]();
                    CKEDITOR.env.safari && !this.isInline() && (CKEDITOR.document.getActive().equals(this.getWindow().getFrame()) || this.getWindow().focus())
                },
                on: function(a, b) {
                    var d = Array.prototype.slice.call(arguments, 0);
                    CKEDITOR.env.ie && /^focus|blur$/.exec(a) && (a = "focus" == a ? "focusin": "focusout", b = c(b, this), d[0] = a, d[1] = b);
                    return CKEDITOR.dom.element.prototype.on.apply(this, d)
                },
                attachListener: function(a, b, c, d, e, f) { ! this._.listeners && (this._.listeners = []);
                    var g = Array.prototype.slice.call(arguments, 1);
                    this._.listeners.push(a.on.apply(a, g))
                },
                clearListeners: function() {
                    var a = this._.listeners;
                    try {
                        for (; a.length;) a.pop().removeListener()
                    } catch(b) {}
                },
                restoreAttrs: function() {
                    var a = this._.attrChanges,
                    b, c;
                    for (c in a) a.hasOwnProperty(c) && (b = a[c], null !== b ? this.setAttribute(c, b) : this.removeAttribute(c))
                },
                attachClass: function(a) {
                    var b = this.getCustomData("classes");
                    this.hasClass(a) || (!b && (b = []), b.push(a), this.setCustomData("classes", b), this.addClass(a))
                },
                changeAttr: function(a, b) {
                    var c = this.getAttribute(a);
                    b !== c && (!this._.attrChanges && (this._.attrChanges = {}), a in this._.attrChanges || (this._.attrChanges[a] = c), this.setAttribute(a, b))
                },
                insertHtml: function(a, b) {
                    g(this);
                    n(this, b || "html", a)
                },
                insertText: function(a) {
                    g(this);
                    var b = this.editor,
                    c = b.getSelection().getStartElement().hasAscendant("pre", !0) ? CKEDITOR.ENTER_BR: b.config.enterMode,
                    b = c == CKEDITOR.ENTER_BR,
                    d = CKEDITOR.tools;
                    a = d.htmlEncode(a.replace(/\r\n/g, "\n"));
                    a = a.replace(/\t/g, "&nbsp;&nbsp; &nbsp;");
                    c = c == CKEDITOR.ENTER_P ? "p": "div";
                    if (!b) {
                        var e = /\n{2}/g;
                        if (e.test(a)) {
                            var f = "<" + c + ">",
                            h = "</" + c + ">";
                            a = f + a.replace(e,
                            function() {
                                return h + f
                            }) + h
                        }
                    }
                    a = a.replace(/\n/g, "<br>");
                    b || (a = a.replace(RegExp("<br>(?=</" + c + ">)"),
                    function(a) {
                        return d.repeat(a, 2)
                    }));
                    a = a.replace(/^ | $/g, "&nbsp;");
                    a = a.replace(/(>|\s) /g,
                    function(a, b) {
                        return b + "&nbsp;"
                    }).replace(/ (?=<)/g, "&nbsp;");
                    n(this, "text", a)
                },
                insertElement: function(a) {
                    g(this);
                    for (var c = this.editor,
                    d = c.config.enterMode,
                    e = c.getSelection(), h = e.getRanges(), k = a.getName(), l = CKEDITOR.dtd.$block[k], n, A, E, z = h.length - 1; 0 <= z; z--) if (n = h[z], !n.checkReadOnly()) {
                        n.deleteContents(1);
                        A = !z && a || a.clone(1);
                        var B, x;
                        if (l) for (; (B = n.getCommonAncestor(0, 1)) && (x = CKEDITOR.dtd[B.getName()]) && (!x || !x[k]);) B.getName() in CKEDITOR.dtd.span ? n.splitElement(B) : n.checkStartOfBlock() && n.checkEndOfBlock() ? (n.setStartBefore(B), n.collapse(!0), B.remove()) : n.splitBlock(d == CKEDITOR.ENTER_DIV ? "div": "p", c.editable());
                        n.insertNode(A);
                        E || (E = A)
                    }
                    E && (n.moveToPosition(E, CKEDITOR.POSITION_AFTER_END), l && ((a = E.getNext(b)) && a.type == CKEDITOR.NODE_ELEMENT && a.is(CKEDITOR.dtd.$block) ? a.getDtd()["#"] ? n.moveToElementEditStart(a) : n.moveToElementEditEnd(E) : a || d == CKEDITOR.ENTER_BR || (a = n.fixBlock(!0, d == CKEDITOR.ENTER_DIV ? "div": "p"), n.moveToElementEditStart(a))));
                    e.selectRanges([n]);
                    f(this, CKEDITOR.env.opera)
                },
                setData: function(a, b) { ! b && this.editor.dataProcessor && (a = this.editor.dataProcessor.toHtml(a));
                    this.setHtml(a);
                    this.editor.fire("dataReady")
                },
                getData: function(a) {
                    var b = this.getHtml(); ! a && this.editor.dataProcessor && (b = this.editor.dataProcessor.toDataFormat(b));
                    return b
                },
                setReadOnly: function(a) {
                    this.setAttribute("contenteditable", !a)
                },
                detach: function() {
                    this.removeClass("cke_editable");
                    var a = this.editor;
                    this._.detach();
                    delete a.document;
                    delete a.window
                },
                isInline: function() {
                    return this.getDocument().equals(CKEDITOR.document)
                },
                setup: function() {
                    var a = this.editor;
                    this.attachListener(a, "beforeGetData",
                    function() {
                        var b = this.getData();
                        this.is("textarea") || !1 !== a.config.ignoreEmptyParagraph && (b = b.replace(k,
                        function(a, b) {
                            return b
                        }));
                        a.setData(b, null, 1)
                    },
                    this);
                    this.attachListener(a, "getSnapshot",
                    function(a) {
                        a.data = this.getData(1)
                    },
                    this);
                    this.attachListener(a, "afterSetData",
                    function() {
                        this.setData(a.getData(1))
                    },
                    this);
                    this.attachListener(a, "loadSnapshot",
                    function(a) {
                        this.setData(a.data, 1)
                    },
                    this);
                    this.attachListener(a, "beforeFocus",
                    function() {
                        var b = a.getSelection(); (b = b && b.getNative()) && "Control" == b.type || this.focus()
                    },
                    this);
                    this.attachListener(a, "insertHtml",
                    function(a) {
                        this.insertHtml(a.data.dataValue, a.data.mode)
                    },
                    this);
                    this.attachListener(a, "insertElement",
                    function(a) {
                        this.insertElement(a.data)
                    },
                    this);
                    this.attachListener(a, "insertText",
                    function(a) {
                        this.insertText(a.data)
                    },
                    this);
                    this.setReadOnly(a.readOnly);
                    this.attachClass("cke_editable");
                    this.attachClass(a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? "cke_editable_inline": a.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE || a.elementMode == CKEDITOR.ELEMENT_MODE_APPENDTO ? "cke_editable_themed": "");
                    this.attachClass("cke_contents_" + a.config.contentsLangDirection);
                    a.keystrokeHandler.blockedKeystrokes[8] = +a.readOnly;
                    a.keystrokeHandler.attach(this);
                    this.on("blur",
                    function(a) {
                        CKEDITOR.env.opera && CKEDITOR.document.getActive().equals(this.isInline() ? this: this.getWindow().getFrame()) ? a.cancel() : this.hasFocus = !1
                    },
                    null, null, -1);
                    this.on("focus",
                    function() {
                        this.hasFocus = !0
                    },
                    null, null, -1);
                    a.focusManager.add(this);
                    this.equals(CKEDITOR.document.getActive()) && (this.hasFocus = !0, a.once("contentDom",
                    function() {
                        a.focusManager.focus()
                    }));
                    this.isInline() && this.changeAttr("tabindex", a.tabIndex);
                    if (!this.is("textarea")) {
                        a.document = this.getDocument();
                        a.window = this.getWindow();
                        var b = a.document;
                        this.changeAttr("spellcheck", !a.config.disableNativeSpellChecker);
                        var c = a.config.contentsLangDirection;
                        this.getDirection(1) != c && this.changeAttr("dir", c);
                        var f = CKEDITOR.getCss();
                        f && (c = b.getHead(), c.getCustomData("stylesheet") || (f = b.appendStyleText(f), f = new CKEDITOR.dom.element(f.ownerNode || f.owningElement), c.setCustomData("stylesheet", f), f.data("cke-temp", 1)));
                        c = b.getCustomData("stylesheet_ref") || 0;
                        b.setCustomData("stylesheet_ref", c + 1);
                        this.setCustomData("cke_includeReadonly", !a.config.disableReadonlyStyling);
                        this.attachListener(this, "click",
                        function(a) {
                            a = a.data;
                            var b = a.getTarget();
                            b.is("a") && 2 != a.$.button && b.isReadOnly() && a.preventDefault()
                        });
                        this.attachListener(a, "key",
                        function(b) {
                            if (a.readOnly) return ! 0;
                            var c = b.data.keyCode,
                            d;
                            if (c in {
                                8 : 1,
                                46 : 1
                            }) {
                                var f = a.getSelection();
                                b = f.getRanges()[0];
                                var g = b.startPath(),
                                k,
                                q,
                                l,
                                c = 8 == c; (f = e(f)) ? (a.fire("saveSnapshot"), b.moveToPosition(f, CKEDITOR.POSITION_BEFORE_START), f.remove(), b.select(), a.fire("saveSnapshot"), d = 1) : b.collapsed && ((k = g.block) && b[c ? "checkStartOfBlock": "checkEndOfBlock"]() && (l = k[c ? "getPrevious": "getNext"](h)) && l.is("table") ? (a.fire("saveSnapshot"), b[c ? "checkEndOfBlock": "checkStartOfBlock"]() && k.remove(), b["moveToElementEdit" + (c ? "End": "Start")](l), b.select(), a.fire("saveSnapshot"), d = 1) : g.blockLimit && g.blockLimit.is("td") && (q = g.blockLimit.getAscendant("table")) && b.checkBoundaryOfElement(q, c ? CKEDITOR.START: CKEDITOR.END) && (l = q[c ? "getPrevious": "getNext"](h)) ? (a.fire("saveSnapshot"), b["moveToElementEdit" + (c ? "End": "Start")](l), b.checkStartOfBlock() && b.checkEndOfBlock() ? l.remove() : b.select(), a.fire("saveSnapshot"), d = 1) : (q = g.contains(["td", "th", "caption"])) && b.checkBoundaryOfElement(q, c ? CKEDITOR.START: CKEDITOR.END) && (d = 1))
                            }
                            return ! d
                        });
                        CKEDITOR.env.ie && this.attachListener(this, "click", d);
                        CKEDITOR.env.ie || CKEDITOR.env.opera || this.attachListener(this, "mousedown",
                        function(b) {
                            var c = b.data.getTarget();
                            c.is("img", "hr", "input", "textarea", "select") && (a.getSelection().selectElement(c), c.is("input", "textarea", "select") && b.data.preventDefault())
                        });
                        CKEDITOR.env.gecko && this.attachListener(this, "mouseup",
                        function(b) {
                            if (2 == b.data.$.button && (b = b.data.getTarget(), !b.getOuterHtml().replace(k, ""))) {
                                var c = a.createRange();
                                c.moveToElementEditStart(b);
                                c.select(!0)
                            }
                        });
                        CKEDITOR.env.webkit && (this.attachListener(this, "click",
                        function(a) {
                            a.data.getTarget().is("input", "select") && a.data.preventDefault()
                        }), this.attachListener(this, "mouseup",
                        function(a) {
                            a.data.getTarget().is("input", "textarea") && a.data.preventDefault()
                        }))
                    }
                }
            },
            _: {
                detach: function() {
                    this.editor.setData(this.editor.getData(), 0, 1);
                    this.clearListeners();
                    this.restoreAttrs();
                    var a;
                    if (a = this.removeCustomData("classes")) for (; a.length;) this.removeClass(a.pop());
                    a = this.getDocument();
                    var b = a.getHead();
                    if (b.getCustomData("stylesheet")) {
                        var c = a.getCustomData("stylesheet_ref"); --c ? a.setCustomData("stylesheet_ref", c) : (a.removeCustomData("stylesheet_ref"), b.removeCustomData("stylesheet").remove())
                    }
                    delete this.editor
                }
            }
        });
        CKEDITOR.editor.prototype.editable = function(a) {
            var b = this._.editable;
            if (b && a) return 0;
            arguments.length && (b = this._.editable = a ? a instanceof CKEDITOR.editable ? a: new CKEDITOR.editable(this, a) : (b && b.detach(), null));
            return b
        };
        var k = /(^|<body\b[^>]*>)\s*<(p|div|address|h\d|center|pre)[^>]*>\s*(?:<br[^>]*>|&nbsp;|\u00A0|&#160;)?\s*(:?<\/\2>)?\s*(?=$|<\/body>)/gi,
        h = CKEDITOR.dom.walker.whitespaces(!0),
        l = CKEDITOR.dom.walker.bookmark(!1, !0);
        CKEDITOR.on("instanceLoaded",
        function(b) {
            var c = b.editor;
            c.on("insertElement",
            function(a) {
                a = a.data;
                a.type == CKEDITOR.NODE_ELEMENT && (a.is("input") || a.is("textarea")) && ("false" != a.getAttribute("contentEditable") && a.data("cke-editable", a.hasAttribute("contenteditable") ? "true": "1"), a.setAttribute("contentEditable", !1))
            });
            c.on("selectionChange",
            function(b) {
                if (!c.readOnly) {
                    var d = c.getSelection();
                    d && !d.isLocked && (d = c.checkDirty(), c.fire("lockSnapshot"), a(b), c.fire("unlockSnapshot"), !d && c.resetDirty())
                }
            })
        });
        CKEDITOR.on("instanceCreated",
        function(a) {
            var b = a.editor;
            b.on("mode",
            function() {
                var a = b.editable();
                if (a && a.isInline()) {
                    var c = b.title;
                    a.changeAttr("role", "textbox");
                    a.changeAttr("aria-label", c);
                    c && a.changeAttr("title", c);
                    if (c = this.ui.space(this.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? "top": "contents")) {
                        var d = CKEDITOR.tools.getNextId(),
                        e = CKEDITOR.dom.element.createFromHtml('<span id="' + d + '" class="cke_voice_label">' + this.lang.common.editorHelp + "</span>");
                        c.append(e);
                        a.changeAttr("aria-describedby", d)
                    }
                }
            })
        });
        CKEDITOR.addCss(".cke_editable{cursor:text}.cke_editable img,.cke_editable input,.cke_editable textarea{cursor:default}");
        var n = function() {
            function a(b) {
                return b.type == CKEDITOR.NODE_ELEMENT
            }
            function c(b, d) {
                var e, f, g, h, q = [],
                l = d.range.startContainer;
                e = d.range.startPath();
                for (var l = k[l.getName()], n = 0, r = b.getChildren(), t = r.count(), u = -1, v = -1, A = 0, E = e.contains(k.$list); n < t; ++n) e = r.getItem(n),
                a(e) ? (g = e.getName(), E && g in CKEDITOR.dtd.$list ? q = q.concat(c(e, d)) : (h = !!l[g], "br" != g || !e.data("cke-eol") || n && n != t - 1 || (A = (f = n ? q[n - 1].node: r.getItem(n + 1)) && (!a(f) || !f.is("br")), f = f && a(f) && k.$block[f.getName()]), -1 == u && !h && (u = n), h || (v = n), q.push({
                    isElement: 1,
                    isLineBreak: A,
                    isBlock: e.isBlockBoundary(),
                    hasBlockSibling: f,
                    node: e,
                    name: g,
                    allowed: h
                }), f = A = 0)) : q.push({
                    isElement: 0,
                    node: e,
                    allowed: 1
                }); - 1 < u && (q[u].firstNotAllowed = 1); - 1 < v && (q[v].lastNotAllowed = 1);
                return q
            }
            function d(b, c) {
                var e = [],
                f = b.getChildren(),
                g = f.count(),
                h,
                q = 0,
                l = k[c],
                n = !b.is(k.$inline) || b.is("br");
                for (n && e.push(" "); q < g; q++) h = f.getItem(q),
                a(h) && !h.is(l) ? e = e.concat(d(h, c)) : e.push(h);
                n && e.push(" ");
                return e
            }
            function e(b) {
                return b && a(b) && (b.is(k.$removeEmpty) || b.is("a") && !b.isBlockBoundary())
            }
            function g(b, c, d, e) {
                var f = b.clone(),
                h,
                k;
                f.setEndAt(c, CKEDITOR.POSITION_BEFORE_END); (h = (new CKEDITOR.dom.walker(f)).next()) && a(h) && l[h.getName()] && (k = h.getPrevious()) && a(k) && !k.getParent().equals(b.startContainer) && d.contains(k) && e.contains(h) && h.isIdentical(k) && (h.moveChildren(k), h.remove(), g(b, c, d, e))
            }
            function h(b, c) {
                function d(b, c) {
                    if (c.isBlock && c.isElement && !c.node.is("br") && a(b) && b.is("br")) return b.remove(),
                    1
                }
                var e = c.endContainer.getChild(c.endOffset),
                f = c.endContainer.getChild(c.endOffset - 1);
                e && d(e, b[b.length - 1]);
                f && d(f, b[0]) && (c.setEnd(c.endContainer, c.endOffset - 1), c.collapse())
            }
            var k = CKEDITOR.dtd,
            l = {
                p: 1,
                div: 1,
                h1: 1,
                h2: 1,
                h3: 1,
                h4: 1,
                h5: 1,
                h6: 1,
                ul: 1,
                ol: 1,
                li: 1,
                pre: 1,
                dl: 1,
                blockquote: 1
            },
            n = {
                p: 1,
                div: 1,
                h1: 1,
                h2: 1,
                h3: 1,
                h4: 1,
                h5: 1,
                h6: 1
            },
            E = CKEDITOR.tools.extend({},
            k.$inline);
            delete E.br;
            return function(l, v, x) {
                var D = l.editor;
                l.getDocument();
                var I = D.getSelection().getRanges()[0],
                C = !1;
                "unfiltered_html" == v && (v = "html", C = !0);
                if (!I.checkReadOnly()) {
                    var F = (new CKEDITOR.dom.elementPath(I.startContainer, I.root)).blockLimit || I.root;
                    v = {
                        type: v,
                        dontFilter: C,
                        editable: l,
                        editor: D,
                        range: I,
                        blockLimit: F,
                        mergeCandidates: [],
                        zombies: []
                    };
                    var D = v.range,
                    C = v.mergeCandidates,
                    J, m, L, K;
                    "text" == v.type && D.shrink(CKEDITOR.SHRINK_ELEMENT, !0, !1) && (J = CKEDITOR.dom.element.createFromHtml("<span>&nbsp;</span>", D.document), D.insertNode(J), D.setStartAfter(J));
                    m = new CKEDITOR.dom.elementPath(D.startContainer);
                    v.endPath = L = new CKEDITOR.dom.elementPath(D.endContainer);
                    if (!D.collapsed) {
                        var F = L.block || L.blockLimit,
                        O = D.getCommonAncestor();
                        F && !F.equals(O) && !F.contains(O) && D.checkEndOfBlock() && v.zombies.push(F);
                        D.deleteContents()
                    }
                    for (; (K = a(D.startContainer) && D.startContainer.getChild(D.startOffset - 1)) && a(K) && K.isBlockBoundary() && m.contains(K);) D.moveToPosition(K, CKEDITOR.POSITION_BEFORE_END);
                    g(D, v.blockLimit, m, L);
                    J && (D.setEndBefore(J), D.collapse(), J.remove());
                    J = D.startPath();
                    if (F = J.contains(e, !1, 1)) D.splitElement(F),
                    v.inlineStylesRoot = F,
                    v.inlineStylesPeak = J.lastElement;
                    J = D.createBookmark(); (F = J.startNode.getPrevious(b)) && a(F) && e(F) && C.push(F); (F = J.startNode.getNext(b)) && a(F) && e(F) && C.push(F);
                    for (F = J.startNode; (F = F.getParent()) && e(F);) C.push(F);
                    D.moveToBookmark(J);
                    if (J = x) {
                        J = v.range;
                        if ("text" == v.type && v.inlineStylesRoot) {
                            K = v.inlineStylesPeak;
                            D = K.getDocument().createText("{cke-peak}");
                            for (C = v.inlineStylesRoot.getParent(); ! K.equals(C);) D = D.appendTo(K.clone()),
                            K = K.getParent();
                            x = D.getOuterHtml().split("{cke-peak}").join(x)
                        }
                        K = v.blockLimit.getName();
                        if (/^\s+|\s+$/.test(x) && "span" in CKEDITOR.dtd[K]) {
                            var P = '<span data-cke-marker="1">&nbsp;</span>';
                            x = P + x + P
                        }
                        x = v.editor.dataProcessor.toHtml(x, null, !1, v.dontFilter);
                        K = J.document.createElement("body");
                        K.setHtml(x);
                        P && (K.getFirst().remove(), K.getLast().remove());
                        if ((P = J.startPath().block) && (1 != P.getChildCount() || !P.getBogus())) a: {
                            var M;
                            if (1 == K.getChildCount() && a(M = K.getFirst()) && M.is(n)) {
                                P = M.getElementsByTag("*");
                                J = 0;
                                for (C = P.count(); J < C; J++) if (D = P.getItem(J), !D.is(E)) break a;
                                M.moveChildren(M.getParent(1));
                                M.remove()
                            }
                        }
                        v.dataWrapper = K;
                        J = x
                    }
                    if (J) {
                        M = v.range;
                        var P = M.document,
                        N;
                        x = v.blockLimit;
                        J = 0;
                        var R;
                        K = [];
                        var Q, V, C = D = 0,
                        G, H;
                        m = M.startContainer;
                        var F = v.endPath.elements[0],
                        U;
                        L = F.getPosition(m);
                        O = !!F.getCommonAncestor(m) && L != CKEDITOR.POSITION_IDENTICAL && !(L & CKEDITOR.POSITION_CONTAINS + CKEDITOR.POSITION_IS_CONTAINED);
                        m = c(v.dataWrapper, v);
                        for (h(m, M); J < m.length; J++) {
                            L = m[J];
                            if (N = L.isLineBreak) {
                                N = M;
                                G = x;
                                var S = void 0,
                                Y = void 0;
                                L.hasBlockSibling ? N = 1 : (S = N.startContainer.getAscendant(k.$block, 1)) && S.is({
                                    div: 1,
                                    p: 1
                                }) ? (Y = S.getPosition(G), Y == CKEDITOR.POSITION_IDENTICAL || Y == CKEDITOR.POSITION_CONTAINS ? N = 0 : (G = N.splitElement(S), N.moveToPosition(G, CKEDITOR.POSITION_AFTER_START), N = 1)) : N = 0
                            }
                            if (N) C = 0 < J;
                            else {
                                N = M.startPath(); ! L.isBlock && (V = v.editor.config.enterMode != CKEDITOR.ENTER_BR && !1 !== v.editor.config.autoParagraph ? v.editor.config.enterMode == CKEDITOR.ENTER_DIV ? "div": "p": !1) && !N.block && N.blockLimit && N.blockLimit.equals(M.root) && (V = P.createElement(V), !CKEDITOR.env.ie && V.appendBogus(), M.insertNode(V), !CKEDITOR.env.ie && (R = V.getBogus()) && R.remove(), M.moveToPosition(V, CKEDITOR.POSITION_BEFORE_END));
                                if ((N = M.startPath().block) && !N.equals(Q)) {
                                    if (R = N.getBogus()) R.remove(),
                                    K.push(N);
                                    Q = N
                                }
                                L.firstNotAllowed && (D = 1);
                                if (D && L.isElement) {
                                    N = M.startContainer;
                                    for (G = null; N && !k[N.getName()][L.name];) {
                                        if (N.equals(x)) {
                                            N = null;
                                            break
                                        }
                                        G = N;
                                        N = N.getParent()
                                    }
                                    if (N) G && (H = M.splitElement(G), v.zombies.push(H), v.zombies.push(G));
                                    else {
                                        G = x.getName();
                                        U = !J;
                                        N = J == m.length - 1;
                                        G = d(L.node, G);
                                        for (var S = [], Y = G.length, aa = 0, ca = void 0, W = 0, T = -1; aa < Y; aa++) ca = G[aa],
                                        " " == ca ? (W || U && !aa || (S.push(new CKEDITOR.dom.text(" ")), T = S.length), W = 1) : (S.push(ca), W = 0);
                                        N && T == S.length && S.pop();
                                        U = S
                                    }
                                }
                                if (U) {
                                    for (; N = U.pop();) M.insertNode(N);
                                    U = 0
                                } else M.insertNode(L.node);
                                L.lastNotAllowed && J < m.length - 1 && ((H = O ? F: H) && M.setEndAt(H, CKEDITOR.POSITION_AFTER_START), D = 0);
                                M.collapse()
                            }
                        }
                        v.dontMoveCaret = C;
                        v.bogusNeededBlocks = K
                    }
                    R = v.range;
                    var X;
                    H = v.bogusNeededBlocks;
                    for (U = R.createBookmark(); Q = v.zombies.pop();) Q.getParent() && (V = R.clone(), V.moveToElementEditStart(Q), V.removeEmptyBlocksAtEnd());
                    if (H) for (; Q = H.pop();) Q.append(CKEDITOR.env.ie ? R.document.createText("\u00a0") : R.document.createElement("br"));
                    for (; Q = v.mergeCandidates.pop();) Q.mergeSiblings();
                    R.moveToBookmark(U);
                    if (!v.dontMoveCaret) {
                        for (Q = a(R.startContainer) && R.startContainer.getChild(R.startOffset - 1); Q && a(Q) && !Q.is(k.$empty);) {
                            if (Q.isBlockBoundary()) R.moveToPosition(Q, CKEDITOR.POSITION_BEFORE_END);
                            else {
                                if (e(Q) && Q.getHtml().match(/(\s|&nbsp;)$/g)) {
                                    X = null;
                                    break
                                }
                                X = R.clone();
                                X.moveToPosition(Q, CKEDITOR.POSITION_BEFORE_END)
                            }
                            Q = Q.getLast(b)
                        }
                        X && R.moveToRange(X)
                    }
                    I.select();
                    f(l)
                }
            }
        } ()
    } (),
    function() {
        function a() {
            var a = this.getSelection(1);
            if (a.getType() != CKEDITOR.SELECTION_NONE) {
                this.fire("selectionCheck", a);
                var b = this.elementPath();
                b.compare(this._.selectionPreviousPath) || (this._.selectionPreviousPath = b, this.fire("selectionChange", {
                    selection: a,
                    path: b
                }))
            }
        }
        function d() {
            l = !0;
            h || (b.call(this), h = CKEDITOR.tools.setTimeout(b, 200, this))
        }
        function b() {
            h = null;
            l && (CKEDITOR.tools.setTimeout(a, 0, this), l = !1)
        }
        function c(a) {
            function b(c, d) {
                return c && c.type != CKEDITOR.NODE_TEXT ? a.clone()["moveToElementEdit" + (d ? "End": "Start")](c) : !1
            }
            if (! (a.root instanceof CKEDITOR.editable)) return ! 1;
            var c = a.startContainer,
            d = a.getPreviousNode(n, null, c),
            e = a.getNextNode(n, null, c);
            return b(d) || b(e, 1) || !(d || e || c.type == CKEDITOR.NODE_ELEMENT && c.isBlockBoundary() && c.getBogus()) ? !0 : !1
        }
        function e(a) {
            return a.getCustomData("cke-fillingChar")
        }
        function g(a, b) {
            var c = a && a.removeCustomData("cke-fillingChar");
            if (c) {
                if (!1 !== b) {
                    var d, e = a.getDocument().getSelection().getNative(),
                    g = e && "None" != e.type && e.getRangeAt(0);
                    if (1 < c.getLength() && g && g.intersectsNode(c.$)) {
                        d = [e.anchorOffset, e.focusOffset];
                        g = e.focusNode == c.$ && 0 < e.focusOffset;
                        e.anchorNode == c.$ && 0 < e.anchorOffset && d[0]--;
                        g && d[1]--;
                        var h, g = e;
                        g.isCollapsed || (h = g.getRangeAt(0), h.setStart(g.anchorNode, g.anchorOffset), h.setEnd(g.focusNode, g.focusOffset), h = h.collapsed);
                        h && d.unshift(d.pop())
                    }
                }
                c.setText(f(c.getText()));
                d && (c = e.getRangeAt(0), c.setStart(c.startContainer, d[0]), c.setEnd(c.startContainer, d[1]), e.removeAllRanges(), e.addRange(c))
            }
        }
        function f(a) {
            return a.replace(/\u200B( )?/g,
            function(a) {
                return a[1] ? "\u00a0": ""
            })
        }
        function k(a, b, c) {
            var d = a.on("focus",
            function(a) {
                a.cancel()
            },
            null, null, -100);
            if (CKEDITOR.env.ie) var e = a.getDocument().on("selectionchange",
            function(a) {
                a.cancel()
            },
            null, null, -100);
            else {
                var f = new CKEDITOR.dom.range(a);
                f.moveToElementEditStart(a);
                var g = a.getDocument().$.createRange();
                g.setStart(f.startContainer.$, f.startOffset);
                g.collapse(1);
                b.removeAllRanges();
                b.addRange(g)
            }
            c && a.focus();
            d.removeListener();
            e && e.removeListener()
        }
        var h, l, n = CKEDITOR.dom.walker.invisible(1);
        CKEDITOR.on("instanceCreated",
        function(b) {
            function c() {
                var a = e.getSelection();
                a && a.removeAllRanges()
            }
            var e = b.editor;
            e.define("selectionChange", {
                errorProof: 1
            });
            e.on("contentDom",
            function() {
                var b = e.document,
                c = CKEDITOR.document,
                f = e.editable(),
                h = b.getBody(),
                k = b.getDocumentElement(),
                q = f.isInline(),
                l;
                CKEDITOR.env.gecko && f.attachListener(f, "focus",
                function(a) {
                    a.removeListener();
                    0 !== l && (a = e.getSelection().getNative(), a.isCollapsed && a.anchorNode == f.$ && (a = e.createRange(), a.moveToElementEditStart(f), a.select()))
                },
                null, null, -2);
                f.attachListener(f, "focus",
                function() {
                    e.unlockSelection(l);
                    l = 0
                },
                null, null, -1);
                f.attachListener(f, "mousedown",
                function() {
                    l = 0
                });
                if (CKEDITOR.env.ie || CKEDITOR.env.opera || q) {
                    var n, r = function() {
                        n = e.getSelection(1);
                        n.lock()
                    };
                    p ? f.attachListener(f, "beforedeactivate", r, null, null, -1) : f.attachListener(e, "selectionCheck", r, null, null, -1);
                    f.attachListener(f, "blur",
                    function() {
                        e.lockSelection(n);
                        l = 1
                    },
                    null, null, -1)
                }
                if (CKEDITOR.env.ie && !q) {
                    var s;
                    f.attachListener(f, "mousedown",
                    function(a) {
                        2 == a.data.$.button && "None" == e.document.$.selection.type && (s = e.window.getScrollPosition())
                    });
                    f.attachListener(f, "mouseup",
                    function(a) {
                        2 == a.data.$.button && s && (e.document.$.documentElement.scrollLeft = s.x, e.document.$.documentElement.scrollTop = s.y);
                        s = null
                    });
                    if ("BackCompat" != b.$.compatMode) {
                        if (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) k.on("mousedown",
                        function(a) {
                            function b(a) {
                                a = a.data.$;
                                if (e) {
                                    var c = h.$.createTextRange();
                                    try {
                                        c.moveToPoint(a.x, a.y)
                                    } catch(d) {}
                                    e.setEndPoint(0 > g.compareEndPoints("StartToStart", c) ? "EndToEnd": "StartToStart", c);
                                    e.select()
                                }
                            }
                            function d() {
                                k.removeListener("mousemove", b);
                                c.removeListener("mouseup", d);
                                k.removeListener("mouseup", d);
                                e.select()
                            }
                            a = a.data;
                            if (a.getTarget().is("html") && a.$.y < k.$.clientHeight && a.$.x < k.$.clientWidth) {
                                var e = h.$.createTextRange();
                                try {
                                    e.moveToPoint(a.$.x, a.$.y)
                                } catch(f) {}
                                var g = e.duplicate();
                                k.on("mousemove", b);
                                c.on("mouseup", d);
                                k.on("mouseup", d)
                            }
                        });
                        if (7 < CKEDITOR.env.version) {
                            k.on("mousedown",
                            function(a) {
                                a.data.getTarget().is("html") && (c.on("mouseup", C), k.on("mouseup", C))
                            });
                            var C = function() {
                                c.removeListener("mouseup", C);
                                k.removeListener("mouseup", C);
                                var a = CKEDITOR.document.$.selection,
                                d = a.createRange();
                                "None" != a.type && d.parentElement().ownerDocument == b.$ && d.select()
                            }
                        }
                    }
                }
                f.attachListener(f, "selectionchange", a, e);
                f.attachListener(f, "keyup", d, e);
                f.attachListener(f, "focus",
                function() {
                    e.forceNextSelectionCheck();
                    e.selectionChange(1)
                });
                if (q ? CKEDITOR.env.webkit || CKEDITOR.env.gecko: CKEDITOR.env.opera) {
                    var F;
                    f.attachListener(f, "mousedown",
                    function() {
                        F = 1
                    });
                    f.attachListener(b.getDocumentElement(), "mouseup",
                    function() {
                        F && d.call(e);
                        F = 0
                    })
                } else f.attachListener(CKEDITOR.env.ie ? f: b.getDocumentElement(), "mouseup", d, e);
                CKEDITOR.env.webkit && f.attachListener(b, "keydown",
                function(a) {
                    switch (a.data.getKey()) {
                    case 13:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 39:
                    case 8:
                    case 45:
                    case 46:
                        g(f)
                    }
                },
                null, null, -1)
            });
            e.on("contentDomUnload", e.forceNextSelectionCheck, e);
            e.on("dataReady",
            function() {
                e.selectionChange(1)
            });
            CKEDITOR.env.ie9Compat && e.on("beforeDestroy", c, null, null, 9);
            CKEDITOR.env.webkit && e.on("setData", c);
            e.on("contentDomUnload",
            function() {
                e.unlockSelection()
            })
        });
        CKEDITOR.on("instanceReady",
        function(a) {
            var b = a.editor;
            if (CKEDITOR.env.webkit) {
                b.on("selectionChange",
                function() {
                    var a = b.editable(),
                    c = e(a);
                    c && (c.getCustomData("ready") ? g(a) : c.setCustomData("ready", 1))
                },
                null, null, -1);
                b.on("beforeSetMode",
                function() {
                    g(b.editable())
                },
                null, null, -1);
                var c, d;
                a = function() {
                    var a = b.editable();
                    if (a && (a = e(a))) {
                        var g = b.document.$.defaultView.getSelection();
                        "Caret" == g.type && g.anchorNode == a.$ && (d = 1);
                        c = a.getText();
                        a.setText(f(c))
                    }
                };
                var h = function() {
                    var a = b.editable();
                    a && (a = e(a)) && (a.setText(c), d && (b.document.$.defaultView.getSelection().setPosition(a.$, a.getLength()), d = 0))
                };
                b.on("beforeUndoImage", a);
                b.on("afterUndoImage", h);
                b.on("beforeGetData", a, null, null, 0);
                b.on("getData", h)
            }
        });
        CKEDITOR.editor.prototype.selectionChange = function(b) { (b ? a: d).call(this)
        };
        CKEDITOR.editor.prototype.getSelection = function(a) {
            return this._.savedSelection && !a ? this._.savedSelection: (a = this.editable()) ? new CKEDITOR.dom.selection(a) : null
        };
        CKEDITOR.editor.prototype.lockSelection = function(a) {
            a = a || this.getSelection(1);
            return a.getType() != CKEDITOR.SELECTION_NONE ? (!a.isLocked && a.lock(), this._.savedSelection = a, !0) : !1
        };
        CKEDITOR.editor.prototype.unlockSelection = function(a) {
            var b = this._.savedSelection;
            return b ? (b.unlock(a), delete this._.savedSelection, !0) : !1
        };
        CKEDITOR.editor.prototype.forceNextSelectionCheck = function() {
            delete this._.selectionPreviousPath
        };
        CKEDITOR.dom.document.prototype.getSelection = function() {
            return new CKEDITOR.dom.selection(this)
        };
        CKEDITOR.dom.range.prototype.select = function() {
            var a = this.root instanceof CKEDITOR.editable ? this.root.editor.getSelection() : new CKEDITOR.dom.selection(this.root);
            a.selectRanges([this]);
            return a
        };
        CKEDITOR.SELECTION_NONE = 1;
        CKEDITOR.SELECTION_TEXT = 2;
        CKEDITOR.SELECTION_ELEMENT = 3;
        var p = "function" != typeof window.getSelection;
        CKEDITOR.dom.selection = function(a) {
            var b = a instanceof CKEDITOR.dom.element;
            this.document = a instanceof CKEDITOR.dom.document ? a: a.getDocument();
            this.root = a = b ? a: this.document.getBody();
            this.isLocked = 0;
            this._ = {
                cache: {}
            };
            b = p ? this.document.$.selection: this.document.getWindow().$.getSelection();
            if (CKEDITOR.env.webkit)("None" == b.type && this.document.getActive().equals(a) || "Caret" == b.type && b.anchorNode.nodeType == CKEDITOR.NODE_DOCUMENT) && k(a, b);
            else if (CKEDITOR.env.gecko) b && this.document.getActive().equals(a) && b.anchorNode && b.anchorNode.nodeType == CKEDITOR.NODE_DOCUMENT && k(a, b, !0);
            else if (CKEDITOR.env.ie) {
                var c;
                try {
                    c = this.document.getActive()
                } catch(d) {}
                p ? "None" == b.type && c && c.equals(this.document.getDocumentElement()) && k(a, null, !0) : ((b = b && b.anchorNode) && (b = new CKEDITOR.dom.node(b)), c && c.equals(this.document.getDocumentElement()) && b && (a.equals(b) || a.contains(b)) && k(a, null, !0))
            }
            c = this.getNative();
            var e, f;
            if (c) if (c.getRangeAt) e = (f = c.rangeCount && c.getRangeAt(0)) && new CKEDITOR.dom.node(f.commonAncestorContainer);
            else {
                try {
                    f = c.createRange()
                } catch(g) {}
                e = f && CKEDITOR.dom.element.get(f.item && f.item(0) || f.parentElement())
            }
            e && (a.equals(e) || a.contains(e)) || (this._.cache.type = CKEDITOR.SELECTION_NONE, this._.cache.startElement = null, this._.cache.selectedElement = null, this._.cache.selectedText = "", this._.cache.ranges = new CKEDITOR.dom.rangeList);
            return this
        };
        var s = {
            img: 1,
            hr: 1,
            li: 1,
            table: 1,
            tr: 1,
            td: 1,
            th: 1,
            embed: 1,
            object: 1,
            ol: 1,
            ul: 1,
            a: 1,
            input: 1,
            form: 1,
            select: 1,
            textarea: 1,
            button: 1,
            fieldset: 1,
            thead: 1,
            tfoot: 1
        };
        CKEDITOR.dom.selection.prototype = {
            getNative: function() {
                return void 0 !== this._.cache.nativeSel ? this._.cache.nativeSel: this._.cache.nativeSel = p ? this.document.$.selection: this.document.getWindow().$.getSelection()
            },
            getType: p ?
            function() {
                var a = this._.cache;
                if (a.type) return a.type;
                var b = CKEDITOR.SELECTION_NONE;
                try {
                    var c = this.getNative(),
                    d = c.type;
                    "Text" == d && (b = CKEDITOR.SELECTION_TEXT);
                    "Control" == d && (b = CKEDITOR.SELECTION_ELEMENT);
                    c.createRange().parentElement() && (b = CKEDITOR.SELECTION_TEXT)
                } catch(e) {}
                return a.type = b
            }: function() {
                var a = this._.cache;
                if (a.type) return a.type;
                var b = CKEDITOR.SELECTION_TEXT,
                c = this.getNative();
                if (!c || !c.rangeCount) b = CKEDITOR.SELECTION_NONE;
                else if (1 == c.rangeCount) {
                    var c = c.getRangeAt(0),
                    d = c.startContainer;
                    d == c.endContainer && 1 == d.nodeType && 1 == c.endOffset - c.startOffset && s[d.childNodes[c.startOffset].nodeName.toLowerCase()] && (b = CKEDITOR.SELECTION_ELEMENT)
                }
                return a.type = b
            },
            getRanges: function() {
                var a = p ?
                function() {
                    function a(b) {
                        return (new CKEDITOR.dom.node(b)).getIndex()
                    }
                    var b = function(b, c) {
                        b = b.duplicate();
                        b.collapse(c);
                        var d = b.parentElement(),
                        e = d.ownerDocument;
                        if (!d.hasChildNodes()) return {
                            container: d,
                            offset: 0
                        };
                        for (var f = d.children,
                        g, h, k = b.duplicate(), l = 0, n = f.length - 1, p = -1, r, t; l <= n;) if (p = Math.floor((l + n) / 2), g = f[p], k.moveToElementText(g), r = k.compareEndPoints("StartToStart", b), 0 < r) n = p - 1;
                        else if (0 > r) l = p + 1;
                        else return CKEDITOR.env.ie9Compat && "BR" == g.tagName ? (f = e.defaultView.getSelection(), {
                            container: f[c ? "anchorNode": "focusNode"],
                            offset: f[c ? "anchorOffset": "focusOffset"]
                        }) : {
                            container: d,
                            offset: a(g)
                        };
                        if ( - 1 == p || p == f.length - 1 && 0 > r) {
                            k.moveToElementText(d);
                            k.setEndPoint("StartToStart", b);
                            e = k.text.replace(/(\r\n|\r)/g, "\n").length;
                            f = d.childNodes;
                            if (!e) return g = f[f.length - 1],
                            g.nodeType != CKEDITOR.NODE_TEXT ? {
                                container: d,
                                offset: f.length
                            }: {
                                container: g,
                                offset: g.nodeValue.length
                            };
                            for (d = f.length; 0 < e && 0 < d;) h = f[--d],
                            h.nodeType == CKEDITOR.NODE_TEXT && (t = h, e -= h.nodeValue.length);
                            return {
                                container: t,
                                offset: -e
                            }
                        }
                        k.collapse(0 < r ? !0 : !1);
                        k.setEndPoint(0 < r ? "StartToStart": "EndToStart", b);
                        e = k.text.replace(/(\r\n|\r)/g, "\n").length;
                        if (!e) return {
                            container: d,
                            offset: a(g) + (0 < r ? 0 : 1)
                        };
                        for (; 0 < e;) try {
                            h = g[0 < r ? "previousSibling": "nextSibling"],
                            h.nodeType == CKEDITOR.NODE_TEXT && (e -= h.nodeValue.length, t = h),
                            g = h
                        } catch(m) {
                            return {
                                container: d,
                                offset: a(g)
                            }
                        }
                        return {
                            container: t,
                            offset: 0 < r ? -e: t.nodeValue.length + e
                        }
                    };
                    return function() {
                        var a = this.getNative(),
                        c = a && a.createRange(),
                        d = this.getType();
                        if (!a) return [];
                        if (d == CKEDITOR.SELECTION_TEXT) return a = new CKEDITOR.dom.range(this.root),
                        d = b(c, !0),
                        a.setStart(new CKEDITOR.dom.node(d.container), d.offset),
                        d = b(c),
                        a.setEnd(new CKEDITOR.dom.node(d.container), d.offset),
                        a.endContainer.getPosition(a.startContainer) & CKEDITOR.POSITION_PRECEDING && a.endOffset <= a.startContainer.getIndex() && a.collapse(),
                        [a];
                        if (d == CKEDITOR.SELECTION_ELEMENT) {
                            for (var d = [], e = 0; e < c.length; e++) {
                                for (var f = c.item(e), g = f.parentNode, h = 0, a = new CKEDITOR.dom.range(this.root); h < g.childNodes.length && g.childNodes[h] != f; h++);
                                a.setStart(new CKEDITOR.dom.node(g), h);
                                a.setEnd(new CKEDITOR.dom.node(g), h + 1);
                                d.push(a)
                            }
                            return d
                        }
                        return []
                    }
                } () : function() {
                    var a = [],
                    b,
                    c = this.getNative();
                    if (!c) return a;
                    for (var d = 0; d < c.rangeCount; d++) {
                        var e = c.getRangeAt(d);
                        b = new CKEDITOR.dom.range(this.root);
                        b.setStart(new CKEDITOR.dom.node(e.startContainer), e.startOffset);
                        b.setEnd(new CKEDITOR.dom.node(e.endContainer), e.endOffset);
                        a.push(b)
                    }
                    return a
                };
                return function(b) {
                    var c = this._.cache;
                    if (c.ranges && !b) return c.ranges;
                    c.ranges || (c.ranges = new CKEDITOR.dom.rangeList(a.call(this)));
                    if (b) for (var d = c.ranges,
                    e = 0; e < d.length; e++) {
                        var f = d[e];
                        f.getCommonAncestor().isReadOnly() && d.splice(e, 1);
                        if (!f.collapsed) {
                            if (f.startContainer.isReadOnly()) {
                                b = f.startContainer;
                                for (var g; b && !((g = b.type == CKEDITOR.NODE_ELEMENT) && b.is("body") || !b.isReadOnly());) g && "false" == b.getAttribute("contentEditable") && f.setStartAfter(b),
                                b = b.getParent()
                            }
                            b = f.startContainer;
                            g = f.endContainer;
                            var h = f.startOffset,
                            k = f.endOffset,
                            l = f.clone();
                            b && b.type == CKEDITOR.NODE_TEXT && (h >= b.getLength() ? l.setStartAfter(b) : l.setStartBefore(b));
                            g && g.type == CKEDITOR.NODE_TEXT && (k ? l.setEndAfter(g) : l.setEndBefore(g));
                            b = new CKEDITOR.dom.walker(l);
                            b.evaluator = function(a) {
                                if (a.type == CKEDITOR.NODE_ELEMENT && a.isReadOnly()) {
                                    var b = f.clone();
                                    f.setEndBefore(a);
                                    f.collapsed && d.splice(e--, 1);
                                    a.getPosition(l.endContainer) & CKEDITOR.POSITION_CONTAINS || (b.setStartAfter(a), b.collapsed || d.splice(e + 1, 0, b));
                                    return ! 0
                                }
                                return ! 1
                            };
                            b.next()
                        }
                    }
                    return c.ranges
                }
            } (),
            getStartElement: function() {
                var a = this._.cache;
                if (void 0 !== a.startElement) return a.startElement;
                var b;
                switch (this.getType()) {
                case CKEDITOR.SELECTION_ELEMENT:
                    return this.getSelectedElement();
                case CKEDITOR.SELECTION_TEXT:
                    var c = this.getRanges()[0];
                    if (c) {
                        if (c.collapsed) b = c.startContainer,
                        b.type != CKEDITOR.NODE_ELEMENT && (b = b.getParent());
                        else {
                            for (c.optimize(); b = c.startContainer, c.startOffset == (b.getChildCount ? b.getChildCount() : b.getLength()) && !b.isBlockBoundary();) c.setStartAfter(b);
                            b = c.startContainer;
                            if (b.type != CKEDITOR.NODE_ELEMENT) return b.getParent();
                            if ((b = b.getChild(c.startOffset)) && b.type == CKEDITOR.NODE_ELEMENT) for (c = b.getFirst(); c && c.type == CKEDITOR.NODE_ELEMENT;) b = c,
                            c = c.getFirst();
                            else b = c.startContainer
                        }
                        b = b.$
                    }
                }
                return a.startElement = b ? new CKEDITOR.dom.element(b) : null
            },
            getSelectedElement: function() {
                var a = this._.cache;
                if (void 0 !== a.selectedElement) return a.selectedElement;
                var b = this,
                c = CKEDITOR.tools.tryThese(function() {
                    return b.getNative().createRange().item(0)
                },
                function() {
                    for (var a = b.getRanges()[0], c, d, e = 2; e && !((c = a.getEnclosedNode()) && c.type == CKEDITOR.NODE_ELEMENT && s[c.getName()] && (d = c)); e--) a.shrink(CKEDITOR.SHRINK_ELEMENT);
                    return d.$
                });
                return a.selectedElement = c ? new CKEDITOR.dom.element(c) : null
            },
            getSelectedText: function() {
                var a = this._.cache;
                if (void 0 !== a.selectedText) return a.selectedText;
                var b = this.getNative(),
                b = p ? "Control" == b.type ? "": b.createRange().text: b.toString();
                return a.selectedText = b
            },
            lock: function() {
                this.getRanges();
                this.getStartElement();
                this.getSelectedElement();
                this.getSelectedText();
                this._.cache.nativeSel = null;
                this.isLocked = 1
            },
            unlock: function(a) {
                if (this.isLocked) {
                    if (a) var b = this.getSelectedElement(),
                    c = !b && this.getRanges();
                    this.isLocked = 0;
                    this.reset();
                    a && (a = b || c[0] && c[0].getCommonAncestor()) && a.getAscendant("body", 1) && (b ? this.selectElement(b) : this.selectRanges(c))
                }
            },
            reset: function() {
                this._.cache = {}
            },
            selectElement: function(a) {
                var b = new CKEDITOR.dom.range(this.root);
                b.setStartBefore(a);
                b.setEndAfter(a);
                this.selectRanges([b])
            },
            selectRanges: function(a) {
                if (a.length) if (this.isLocked) {
                    var b = CKEDITOR.document.getActive();
                    this.unlock();
                    this.selectRanges(a);
                    this.lock(); ! b.equals(this.root) && b.focus()
                } else {
                    if (p) {
                        var d = CKEDITOR.dom.walker.whitespaces(!0),
                        e = /\ufeff|\u00a0/,
                        f = {
                            table: 1,
                            tbody: 1,
                            tr: 1
                        };
                        1 < a.length && (b = a[a.length - 1], a[0].setEnd(b.endContainer, b.endOffset));
                        b = a[0];
                        a = b.collapsed;
                        var h, k, l, n = b.getEnclosedNode();
                        if (n && n.type == CKEDITOR.NODE_ELEMENT && n.getName() in s && (!n.is("a") || !n.getText())) try {
                            l = n.$.createControlRange();
                            l.addElement(n.$);
                            l.select();
                            return
                        } catch(B) {} (b.startContainer.type == CKEDITOR.NODE_ELEMENT && b.startContainer.getName() in f || b.endContainer.type == CKEDITOR.NODE_ELEMENT && b.endContainer.getName() in f) && b.shrink(CKEDITOR.NODE_ELEMENT, !0);
                        l = b.createBookmark();
                        var f = l.startNode,
                        x;
                        a || (x = l.endNode);
                        l = b.document.$.body.createTextRange();
                        l.moveToElementText(f.$);
                        l.moveStart("character", 1);
                        x ? (e = b.document.$.body.createTextRange(), e.moveToElementText(x.$), l.setEndPoint("EndToEnd", e), l.moveEnd("character", -1)) : (h = f.getNext(d), k = f.hasAscendant("pre"), h = !(h && h.getText && h.getText().match(e)) && (k || !f.hasPrevious() || f.getPrevious().is && f.getPrevious().is("br")), k = b.document.createElement("span"), k.setHtml("&#65279;"), k.insertBefore(f), h && b.document.createText("\ufeff").insertBefore(f));
                        b.setStartBefore(f);
                        f.remove();
                        a ? (h ? (l.moveStart("character", -1), l.select(), b.document.$.selection.clear()) : l.select(), b.moveToPosition(k, CKEDITOR.POSITION_BEFORE_START), k.remove()) : (b.setEndBefore(x), x.remove(), l.select())
                    } else {
                        x = this.getNative();
                        if (!x) return;
                        CKEDITOR.env.opera && (b = this.document.$.createRange(), b.selectNodeContents(this.root.$), x.addRange(b));
                        this.removeAllRanges();
                        for (e = 0; e < a.length; e++) {
                            if (e < a.length - 1 && (b = a[e], l = a[e + 1], k = b.clone(), k.setStart(b.endContainer, b.endOffset), k.setEnd(l.startContainer, l.startOffset), !k.collapsed && (k.shrink(CKEDITOR.NODE_ELEMENT, !0), h = k.getCommonAncestor(), k = k.getEnclosedNode(), h.isReadOnly() || k && k.isReadOnly()))) {
                                l.setStart(b.startContainer, b.startOffset);
                                a.splice(e--, 1);
                                continue
                            }
                            b = a[e];
                            l = this.document.$.createRange();
                            h = b.startContainer;
                            CKEDITOR.env.opera && b.collapsed && h.type == CKEDITOR.NODE_ELEMENT && (k = h.getChild(b.startOffset - 1), d = h.getChild(b.startOffset), !k && !d && h.is(CKEDITOR.dtd.$removeEmpty) || k && k.type == CKEDITOR.NODE_ELEMENT || d && d.type == CKEDITOR.NODE_ELEMENT) && (b.insertNode(this.document.createText("")), b.collapse(1));
                            b.collapsed && CKEDITOR.env.webkit && c(b) && (h = this.root, g(h, !1), k = h.getDocument().createText("\u200b"), h.setCustomData("cke-fillingChar", k), b.insertNode(k), (h = k.getNext()) && !k.getPrevious() && h.type == CKEDITOR.NODE_ELEMENT && "br" == h.getName() ? (g(this.root), b.moveToPosition(h, CKEDITOR.POSITION_BEFORE_START)) : b.moveToPosition(k, CKEDITOR.POSITION_AFTER_END));
                            l.setStart(b.startContainer.$, b.startOffset);
                            try {
                                l.setEnd(b.endContainer.$, b.endOffset)
                            } catch(D) {
                                if (0 <= D.toString().indexOf("NS_ERROR_ILLEGAL_VALUE")) b.collapse(1),
                                l.setEnd(b.endContainer.$, b.endOffset);
                                else throw D;
                            }
                            x.addRange(l)
                        }
                    }
                    this.reset();
                    this.root.fire("selectionchange")
                }
            },
            createBookmarks: function(a) {
                return this.getRanges().createBookmarks(a)
            },
            createBookmarks2: function(a) {
                return this.getRanges().createBookmarks2(a)
            },
            selectBookmarks: function(a) {
                for (var b = [], c = 0; c < a.length; c++) {
                    var d = new CKEDITOR.dom.range(this.root);
                    d.moveToBookmark(a[c]);
                    b.push(d)
                }
                this.selectRanges(b);
                return this
            },
            getCommonAncestor: function() {
                var a = this.getRanges();
                return a[0].startContainer.getCommonAncestor(a[a.length - 1].endContainer)
            },
            scrollIntoView: function() {
                this.type != CKEDITOR.SELECTION_NONE && this.getRanges()[0].scrollIntoView()
            },
            removeAllRanges: function() {
                var a = this.getNative();
                try {
                    a && a[p ? "empty": "removeAllRanges"]()
                } catch(b) {}
                this.reset()
            }
        }
    } (), CKEDITOR.editor.prototype.attachStyleStateChange = function(a, d) {
        var b = this._.styleStateChangeCallbacks;
        b || (b = this._.styleStateChangeCallbacks = [], this.on("selectionChange",
        function(a) {
            for (var d = 0; d < b.length; d++) {
                var g = b[d],
                f = g.style.checkActive(a.data.path) ? CKEDITOR.TRISTATE_ON: CKEDITOR.TRISTATE_OFF;
                g.fn.call(this, f)
            }
        }));
        b.push({
            style: a,
            fn: d
        })
    },
    CKEDITOR.STYLE_BLOCK = 1, CKEDITOR.STYLE_INLINE = 2, CKEDITOR.STYLE_OBJECT = 3,
    function() {
        function a(a, b) {
            for (var c, d; (a = a.getParent()) && !a.equals(b);) if (a.getAttribute("data-nostyle")) c = a;
            else if (!d) {
                var e = a.getAttribute("contentEditable");
                "false" == e ? c = a: "true" == e && (d = 1)
            }
            return c
        }
        function d(b) {
            var c = b.document;
            if (b.collapsed) c = t(this, c),
            b.insertNode(c),
            b.moveToPosition(c, CKEDITOR.POSITION_BEFORE_END);
            else {
                var d = this.element,
                e = this._.definition,
                f, g = e.ignoreReadonly,
                h = g || e.includeReadonly;
                void 0 == h && (h = b.root.getCustomData("cke_includeReadonly"));
                var k = CKEDITOR.dtd[d] || (f = !0, CKEDITOR.dtd.span);
                b.enlarge(CKEDITOR.ENLARGE_INLINE, 1);
                b.trim();
                var l = b.createBookmark(),
                n = l.startNode,
                q = l.endNode,
                p = n,
                r;
                if (!g) {
                    var w = b.getCommonAncestor(),
                    g = a(n, w),
                    w = a(q, w);
                    g && (p = g.getNextSourceNode(!0));
                    w && (q = w)
                }
                for (p.getPosition(q) == CKEDITOR.POSITION_FOLLOWING && (p = 0); p;) {
                    g = !1;
                    if (p.equals(q)) p = null,
                    g = !0;
                    else {
                        var u = p.type,
                        v = u == CKEDITOR.NODE_ELEMENT ? p.getName() : null,
                        w = v && "false" == p.getAttribute("contentEditable"),
                        A = v && p.getAttribute("data-nostyle");
                        if (v && p.data("cke-bookmark")) {
                            p = p.getNextSourceNode(!0);
                            continue
                        }
                        if (v && (!k[v] || A || w && !h || (p.getPosition(q) | CKEDITOR.POSITION_PRECEDING | CKEDITOR.POSITION_IDENTICAL | CKEDITOR.POSITION_IS_CONTAINED) != CKEDITOR.POSITION_PRECEDING + CKEDITOR.POSITION_IDENTICAL + CKEDITOR.POSITION_IS_CONTAINED || e.childRule && !e.childRule(p))) g = !0;
                        else {
                            var x = p.getParent();
                            if (!x || !(x.getDtd() || CKEDITOR.dtd.span)[d] && !f || e.parentRule && !e.parentRule(x)) g = !0;
                            else if (r || v && CKEDITOR.dtd.$removeEmpty[v] && (p.getPosition(q) | CKEDITOR.POSITION_PRECEDING | CKEDITOR.POSITION_IDENTICAL | CKEDITOR.POSITION_IS_CONTAINED) != CKEDITOR.POSITION_PRECEDING + CKEDITOR.POSITION_IDENTICAL + CKEDITOR.POSITION_IS_CONTAINED || (r = b.clone(), r.setStartBefore(p)), u == CKEDITOR.NODE_TEXT || w || u == CKEDITOR.NODE_ELEMENT && !p.getChildCount()) {
                                for (var u = p,
                                E; (g = !u.getNext(I)) && (E = u.getParent(), k[E.getName()]) && (E.getPosition(n) | CKEDITOR.POSITION_FOLLOWING | CKEDITOR.POSITION_IDENTICAL | CKEDITOR.POSITION_IS_CONTAINED) == CKEDITOR.POSITION_FOLLOWING + CKEDITOR.POSITION_IDENTICAL + CKEDITOR.POSITION_IS_CONTAINED && (!e.childRule || e.childRule(E));) u = E;
                                r.setEndAfter(u)
                            }
                        }
                        p = p.getNextSourceNode(A || w && !h)
                    }
                    if (g && r && !r.collapsed) {
                        for (var g = t(this, c), w = g.hasAttributes(), A = r.getCommonAncestor(), u = {},
                        v = {},
                        x = {},
                        z = {},
                        T, B, C; g && A;) {
                            if (A.getName() == d) {
                                for (T in e.attributes) ! z[T] && (C = A.getAttribute(B)) && (g.getAttribute(T) == C ? v[T] = 1 : z[T] = 1);
                                for (B in e.styles) ! x[B] && (C = A.getStyle(B)) && (g.getStyle(B) == C ? u[B] = 1 : x[B] = 1)
                            }
                            A = A.getParent()
                        }
                        for (T in v) g.removeAttribute(T);
                        for (B in u) g.removeStyle(B);
                        w && !g.hasAttributes() && (g = null);
                        g ? (r.extractContents().appendTo(g), s.call(this, g), r.insertNode(g), g.mergeSiblings(), CKEDITOR.env.ie || g.$.normalize()) : (g = new CKEDITOR.dom.element("span"), r.extractContents().appendTo(g), r.insertNode(g), s.call(this, g), g.remove(!0));
                        r = null
                    }
                }
                b.moveToBookmark(l);
                b.shrink(CKEDITOR.SHRINK_TEXT)
            }
        }
        function b(a) {
            a.enlarge(CKEDITOR.ENLARGE_INLINE, 1);
            var b = a.createBookmark(),
            c = b.startNode;
            if (a.collapsed) {
                for (var d = new CKEDITOR.dom.elementPath(c.getParent(), a.root), e, f = 0, g; f < d.elements.length && (g = d.elements[f]) && g != d.block && g != d.blockLimit; f++) if (this.checkElementRemovable(g)) {
                    var h;
                    a.collapsed && (a.checkBoundaryOfElement(g, CKEDITOR.END) || (h = a.checkBoundaryOfElement(g, CKEDITOR.START))) ? (e = g, e.match = h ? "start": "end") : (g.mergeSiblings(), g.getName() == this.element ? p.call(this, g) : r(g, v(this)[g.getName()]))
                }
                if (e) {
                    g = c;
                    for (f = 0;; f++) {
                        h = d.elements[f];
                        if (h.equals(e)) break;
                        else if (h.match) continue;
                        else h = h.clone();
                        h.append(g);
                        g = h
                    }
                    g["start" == e.match ? "insertBefore": "insertAfter"](e)
                }
            } else {
                var k = b.endNode,
                l = this,
                d = function() {
                    for (var a = new CKEDITOR.dom.elementPath(c.getParent()), b = new CKEDITOR.dom.elementPath(k.getParent()), d = null, e = null, f = 0; f < a.elements.length; f++) {
                        var g = a.elements[f];
                        if (g == a.block || g == a.blockLimit) break;
                        l.checkElementRemovable(g) && (d = g)
                    }
                    for (f = 0; f < b.elements.length; f++) {
                        g = b.elements[f];
                        if (g == b.block || g == b.blockLimit) break;
                        l.checkElementRemovable(g) && (e = g)
                    }
                    e && k.breakParent(e);
                    d && c.breakParent(d)
                };
                d();
                for (e = c; ! e.equals(k);) f = e.getNextSourceNode(),
                e.type == CKEDITOR.NODE_ELEMENT && this.checkElementRemovable(e) && (e.getName() == this.element ? p.call(this, e) : r(e, v(this)[e.getName()]), f.type == CKEDITOR.NODE_ELEMENT && f.contains(c) && (d(), f = c.getNext())),
                e = f
            }
            a.moveToBookmark(b)
        }
        function c(a) {
            var b = a.getEnclosedNode() || a.getCommonAncestor(!1, !0); (a = (new CKEDITOR.dom.elementPath(b, a.root)).contains(this.element, 1)) && !a.isReadOnly() && u(a, this)
        }
        function e(a) {
            var b = a.getCommonAncestor(!0, !0);
            if (a = (new CKEDITOR.dom.elementPath(b, a.root)).contains(this.element, 1)) {
                var b = this._.definition,
                c = b.attributes;
                if (c) for (var d in c) a.removeAttribute(d, c[d]);
                if (b.styles) for (var e in b.styles) b.styles.hasOwnProperty(e) && a.removeStyle(e)
            }
        }
        function g(a) {
            var b = a.createBookmark(!0),
            c = a.createIterator();
            c.enforceRealBlocks = !0;
            this._.enterMode && (c.enlargeBr = this._.enterMode != CKEDITOR.ENTER_BR);
            for (var d, e = a.document; d = c.getNextParagraph();) if (!d.isReadOnly()) {
                var f = t(this, e, d);
                k(d, f)
            }
            a.moveToBookmark(b)
        }
        function f(a) {
            var b = a.createBookmark(1),
            c = a.createIterator();
            c.enforceRealBlocks = !0;
            c.enlargeBr = this._.enterMode != CKEDITOR.ENTER_BR;
            for (var d; d = c.getNextParagraph();) if (this.checkElementRemovable(d)) if (d.is("pre")) {
                var e = this._.enterMode == CKEDITOR.ENTER_BR ? null: a.document.createElement(this._.enterMode == CKEDITOR.ENTER_P ? "p": "div");
                e && d.copyAttributes(e);
                k(d, e)
            } else p.call(this, d);
            a.moveToBookmark(b)
        }
        function k(a, b) {
            var c = !b;
            c && (b = a.getDocument().createElement("div"), a.copyAttributes(b));
            var d = b && b.is("pre"),
            e = a.is("pre"),
            f = !d && e;
            if (d && !e) {
                e = b; (f = a.getBogus()) && f.remove();
                f = a.getHtml();
                f = l(f, /(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g, "");
                f = f.replace(/[ \t\r\n]*(<br[^>]*>)[ \t\r\n]*/gi, "$1");
                f = f.replace(/([ \t\n\r]+|&nbsp;)/g, " ");
                f = f.replace(/<br\b[^>]*>/gi, "\n");
                if (CKEDITOR.env.ie) {
                    var g = a.getDocument().createElement("div");
                    g.append(e);
                    e.$.outerHTML = "<pre>" + f + "</pre>";
                    e.copyAttributes(g.getFirst());
                    e = g.getFirst().remove()
                } else e.setHtml(f);
                b = e
            } else f ? b = n(c ? [a.getHtml()] : h(a), b) : a.moveChildren(b);
            b.replace(a);
            if (d) {
                var c = b,
                k; (k = c.getPrevious(C)) && k.is && k.is("pre") && (d = l(k.getHtml(), /\n$/, "") + "\n\n" + l(c.getHtml(), /^\n/, ""), CKEDITOR.env.ie ? c.$.outerHTML = "<pre>" + d + "</pre>": c.setHtml(d), k.remove())
            } else c && q(b)
        }
        function h(a) {
            a.getName();
            var b = [];
            l(a.getOuterHtml(), /(\S\s*)\n(?:\s|(<span[^>]+data-cke-bookmark.*?\/span>))*\n(?!$)/gi,
            function(a, b, c) {
                return b + "</pre>" + c + "<pre>"
            }).replace(/<pre\b.*?>([\s\S]*?)<\/pre>/gi,
            function(a, c) {
                b.push(c)
            });
            return b
        }
        function l(a, b, c) {
            var d = "",
            e = "";
            a = a.replace(/(^<span[^>]+data-cke-bookmark.*?\/span>)|(<span[^>]+data-cke-bookmark.*?\/span>$)/gi,
            function(a, b, c) {
                b && (d = b);
                c && (e = c);
                return ""
            });
            return d + a.replace(b, c) + e
        }
        function n(a, b) {
            var c;
            1 < a.length && (c = new CKEDITOR.dom.documentFragment(b.getDocument()));
            for (var d = 0; d < a.length; d++) {
                var e = a[d],
                e = e.replace(/(\r\n|\r)/g, "\n"),
                e = l(e, /^[ \t]*\n/, ""),
                e = l(e, /\n$/, ""),
                e = l(e, /^[ \t]+|[ \t]+$/g,
                function(a, b) {
                    return 1 == a.length ? "&nbsp;": b ? " " + CKEDITOR.tools.repeat("&nbsp;", a.length - 1) : CKEDITOR.tools.repeat("&nbsp;", a.length - 1) + " "
                }),
                e = e.replace(/\n/g, "<br>"),
                e = e.replace(/[ \t]{2,}/g,
                function(a) {
                    return CKEDITOR.tools.repeat("&nbsp;", a.length - 1) + " "
                });
                if (c) {
                    var f = b.clone();
                    f.setHtml(e);
                    c.append(f)
                } else b.setHtml(e)
            }
            return c || b
        }
        function p(a) {
            var b = this._.definition,
            c = b.attributes,
            b = b.styles,
            d = v(this)[a.getName()],
            e = CKEDITOR.tools.isEmpty(c) && CKEDITOR.tools.isEmpty(b),
            f;
            for (f in c) if ("class" != f && !this._.definition.fullMatch || a.getAttribute(f) == A(f, c[f])) e = a.hasAttribute(f),
            a.removeAttribute(f);
            for (var g in b) this._.definition.fullMatch && a.getStyle(g) != A(g, b[g], !0) || (e = e || !!a.getStyle(g), a.removeStyle(g));
            r(a, d, z[a.getName()]);
            e && (this._.definition.alwaysRemoveElement ? q(a, 1) : !CKEDITOR.dtd.$block[a.getName()] || this._.enterMode == CKEDITOR.ENTER_BR && !a.hasAttributes() ? q(a) : a.renameNode(this._.enterMode == CKEDITOR.ENTER_P ? "p": "div"))
        }
        function s(a) {
            for (var b = v(this), c = a.getElementsByTag(this.element), d = c.count(); 0 <= --d;) p.call(this, c.getItem(d));
            for (var e in b) if (e != this.element) for (c = a.getElementsByTag(e), d = c.count() - 1; 0 <= d; d--) {
                var f = c.getItem(d);
                r(f, b[e])
            }
        }
        function r(a, b, c) {
            if (b = b && b.attributes) for (var d = 0; d < b.length; d++) {
                var e = b[d][0],
                f;
                if (f = a.getAttribute(e)) {
                    var g = b[d][1]; (null === g || g.test && g.test(f) || "string" == typeof g && f == g) && a.removeAttribute(e)
                }
            }
            c || q(a)
        }
        function q(a, b) {
            if (!a.hasAttributes() || b) if (CKEDITOR.dtd.$block[a.getName()]) {
                var c = a.getPrevious(C),
                d = a.getNext(C); ! c || c.type != CKEDITOR.NODE_TEXT && c.isBlockBoundary({
                    br: 1
                }) || a.append("br", 1); ! d || d.type != CKEDITOR.NODE_TEXT && d.isBlockBoundary({
                    br: 1
                }) || a.append("br");
                a.remove(!0)
            } else c = a.getFirst(),
            d = a.getLast(),
            a.remove(!0),
            c && (c.type == CKEDITOR.NODE_ELEMENT && c.mergeSiblings(), d && !c.equals(d) && d.type == CKEDITOR.NODE_ELEMENT && d.mergeSiblings())
        }
        function t(a, b, c) {
            var d;
            d = a.element;
            "*" == d && (d = "span");
            d = new CKEDITOR.dom.element(d, b);
            c && c.copyAttributes(d);
            d = u(d, a);
            b.getCustomData("doc_processing_style") && d.hasAttribute("id") ? d.removeAttribute("id") : b.setCustomData("doc_processing_style", 1);
            return d
        }
        function u(a, b) {
            var c = b._.definition,
            d = c.attributes,
            c = CKEDITOR.style.getStyleText(c);
            if (d) for (var e in d) a.setAttribute(e, d[e]);
            c && a.setAttribute("style", c);
            return a
        }
        function w(a, b) {
            for (var c in a) a[c] = a[c].replace(D,
            function(a, c) {
                return b[c]
            })
        }
        function v(a) {
            if (a._.overrides) return a._.overrides;
            var b = a._.overrides = {},
            c = a._.definition.overrides;
            if (c) {
                CKEDITOR.tools.isArray(c) || (c = [c]);
                for (var d = 0; d < c.length; d++) {
                    var e = c[d],
                    f,
                    g;
                    "string" == typeof e ? f = e.toLowerCase() : (f = e.element ? e.element.toLowerCase() : a.element, g = e.attributes);
                    e = b[f] || (b[f] = {});
                    if (g) {
                        var e = e.attributes = e.attributes || [],
                        h;
                        for (h in g) e.push([h.toLowerCase(), g[h]])
                    }
                }
            }
            return b
        }
        function A(a, b, c) {
            var d = new CKEDITOR.dom.element("span");
            d[c ? "setStyle": "setAttribute"](a, b);
            return d[c ? "getStyle": "getAttribute"](a)
        }
        function E(a, b) {
            for (var c = a.document,
            d = a.getRanges(), e = b ? this.removeFromRange: this.applyToRange, f, g = d.createIterator(); f = g.getNextRange();) e.call(this, f);
            a.selectRanges(d);
            c.removeCustomData("doc_processing_style")
        }
        var z = {
            address: 1,
            div: 1,
            h1: 1,
            h2: 1,
            h3: 1,
            h4: 1,
            h5: 1,
            h6: 1,
            p: 1,
            pre: 1,
            section: 1,
            header: 1,
            footer: 1,
            nav: 1,
            article: 1,
            aside: 1,
            figure: 1,
            dialog: 1,
            hgroup: 1,
            time: 1,
            meter: 1,
            menu: 1,
            command: 1,
            keygen: 1,
            output: 1,
            progress: 1,
            details: 1,
            datagrid: 1,
            datalist: 1
        },
        B = {
            a: 1,
            embed: 1,
            hr: 1,
            img: 1,
            li: 1,
            object: 1,
            ol: 1,
            table: 1,
            td: 1,
            tr: 1,
            th: 1,
            ul: 1,
            dl: 1,
            dt: 1,
            dd: 1,
            form: 1,
            audio: 1,
            video: 1
        },
        x = /\s*(?:;\s*|$)/,
        D = /#\((.+?)\)/g,
        I = CKEDITOR.dom.walker.bookmark(0, 1),
        C = CKEDITOR.dom.walker.whitespaces(1);
        CKEDITOR.style = function(a, b) {
            var c = a.attributes;
            c && c.style && (a.styles = CKEDITOR.tools.extend({},
            a.styles, CKEDITOR.tools.parseCssText(c.style)), delete c.style);
            b && (a = CKEDITOR.tools.clone(a), w(a.attributes, b), w(a.styles, b));
            c = this.element = a.element ? "string" == typeof a.element ? a.element.toLowerCase() : a.element: "*";
            this.type = a.type || (z[c] ? CKEDITOR.STYLE_BLOCK: B[c] ? CKEDITOR.STYLE_OBJECT: CKEDITOR.STYLE_INLINE);
            "object" == typeof this.element && (this.type = CKEDITOR.STYLE_OBJECT);
            this._ = {
                definition: a
            }
        };
        CKEDITOR.editor.prototype.applyStyle = function(a) {
            E.call(a, this.getSelection())
        };
        CKEDITOR.editor.prototype.removeStyle = function(a) {
            E.call(a, this.getSelection(), 1)
        };
        CKEDITOR.style.prototype = {
            apply: function(a) {
                E.call(this, a.getSelection())
            },
            remove: function(a) {
                E.call(this, a.getSelection(), 1)
            },
            applyToRange: function(a) {
                return (this.applyToRange = this.type == CKEDITOR.STYLE_INLINE ? d: this.type == CKEDITOR.STYLE_BLOCK ? g: this.type == CKEDITOR.STYLE_OBJECT ? c: null).call(this, a)
            },
            removeFromRange: function(a) {
                return (this.removeFromRange = this.type == CKEDITOR.STYLE_INLINE ? b: this.type == CKEDITOR.STYLE_BLOCK ? f: this.type == CKEDITOR.STYLE_OBJECT ? e: null).call(this, a)
            },
            applyToObject: function(a) {
                u(a, this)
            },
            checkActive: function(a) {
                switch (this.type) {
                case CKEDITOR.STYLE_BLOCK:
                    return this.checkElementRemovable(a.block || a.blockLimit, !0);
                case CKEDITOR.STYLE_OBJECT:
                case CKEDITOR.STYLE_INLINE:
                    for (var b = a.elements,
                    c = 0,
                    d; c < b.length; c++) if (d = b[c], this.type != CKEDITOR.STYLE_INLINE || d != a.block && d != a.blockLimit) {
                        if (this.type == CKEDITOR.STYLE_OBJECT) {
                            var e = d.getName();
                            if (! ("string" == typeof this.element ? e == this.element: e in this.element)) continue
                        }
                        if (this.checkElementRemovable(d, !0)) return ! 0
                    }
                }
                return ! 1
            },
            checkApplicable: function(a) {
                switch (this.type) {
                case CKEDITOR.STYLE_OBJECT:
                    return a.contains(this.element)
                }
                return ! 0
            },
            checkElementMatch: function(a, b) {
                var c = this._.definition;
                if (!a || !c.ignoreReadonly && a.isReadOnly()) return ! 1;
                var d = a.getName();
                if ("string" == typeof this.element ? d == this.element: d in this.element) {
                    if (!b && !a.hasAttributes()) return ! 0;
                    if (d = c._AC) c = d;
                    else {
                        var d = {},
                        e = 0,
                        f = c.attributes;
                        if (f) for (var g in f) e++,
                        d[g] = f[g];
                        if (g = CKEDITOR.style.getStyleText(c)) d.style || e++,
                        d.style = g;
                        d._length = e;
                        c = c._AC = d
                    }
                    if (c._length) {
                        for (var h in c) if ("_length" != h) {
                            e = a.getAttribute(h) || "";
                            if ("style" == h) a: {
                                d = c[h];
                                "string" == typeof d && (d = CKEDITOR.tools.parseCssText(d));
                                "string" == typeof e && (e = CKEDITOR.tools.parseCssText(e, !0));
                                g = void 0;
                                for (g in d) if (! (g in e) || e[g] != d[g] && "inherit" != d[g] && "inherit" != e[g]) {
                                    d = !1;
                                    break a
                                }
                                d = !0
                            } else d = c[h] == e;
                            if (d) {
                                if (!b) return ! 0
                            } else if (b) return ! 1
                        }
                        if (b) return ! 0
                    } else return ! 0
                }
                return ! 1
            },
            checkElementRemovable: function(a, b) {
                if (this.checkElementMatch(a, b)) return ! 0;
                var c = v(this)[a.getName()];
                if (c) {
                    var d;
                    if (! (c = c.attributes)) return ! 0;
                    for (var e = 0; e < c.length; e++) if (d = c[e][0], d = a.getAttribute(d)) {
                        var f = c[e][1];
                        if (null === f || "string" == typeof f && d == f || f.test(d)) return ! 0
                    }
                }
                return ! 1
            },
            buildPreview: function(a) {
                var b = this._.definition,
                c = [],
                d = b.element;
                "bdo" == d && (d = "span");
                var c = ["<", d],
                e = b.attributes;
                if (e) for (var f in e) c.push(" ", f, '="', e[f], '"'); (e = CKEDITOR.style.getStyleText(b)) && c.push(' style="', e, '"');
                c.push(">", a || b.name, "</", d, ">");
                return c.join("")
            },
            getDefinition: function() {
                return this._.definition
            }
        };
        CKEDITOR.style.getStyleText = function(a) {
            var b = a._ST;
            if (b) return b;
            var b = a.styles,
            c = a.attributes && a.attributes.style || "",
            d = "";
            c.length && (c = c.replace(x, ";"));
            for (var e in b) {
                var f = b[e],
                g = (e + ":" + f).replace(x, ";");
                "inherit" == f ? d += g: c += g
            }
            c.length && (c = CKEDITOR.tools.normalizeCssText(c, !0));
            return a._ST = c + d
        }
    } (), CKEDITOR.styleCommand = function(a, d) {
        this.requiredContent = this.allowedContent = this.style = a;
        CKEDITOR.tools.extend(this, d, !0)
    },
    CKEDITOR.styleCommand.prototype.exec = function(a) {
        a.focus();
        this.state == CKEDITOR.TRISTATE_OFF ? a.applyStyle(this.style) : this.state == CKEDITOR.TRISTATE_ON && a.removeStyle(this.style)
    },
    CKEDITOR.stylesSet = new CKEDITOR.resourceManager("", "stylesSet"), CKEDITOR.addStylesSet = CKEDITOR.tools.bind(CKEDITOR.stylesSet.add, CKEDITOR.stylesSet), CKEDITOR.loadStylesSet = function(a, d, b) {
        CKEDITOR.stylesSet.addExternal(a, d, "");
        CKEDITOR.stylesSet.load(a, b)
    },
    CKEDITOR.editor.prototype.getStylesSet = function(a) {
        if (this._.stylesDefinitions) a(this._.stylesDefinitions);
        else {
            var d = this,
            b = d.config.stylesCombo_stylesSet || d.config.stylesSet;
            if (!1 === b) a(null);
            else if (b instanceof Array) d._.stylesDefinitions = b,
            a(b);
            else {
                b || (b = "default");
                var b = b.split(":"),
                c = b[0];
                CKEDITOR.stylesSet.addExternal(c, b[1] ? b.slice(1).join(":") : CKEDITOR.getUrl("styles.js"), "");
                CKEDITOR.stylesSet.load(c,
                function(b) {
                    d._.stylesDefinitions = b[c];
                    a(d._.stylesDefinitions)
                })
            }
        }
    },
    CKEDITOR.dom.comment = function(a, d) {
        "string" == typeof a && (a = (d ? d.$: document).createComment(a));
        CKEDITOR.dom.domObject.call(this, a)
    },
    CKEDITOR.dom.comment.prototype = new CKEDITOR.dom.node, CKEDITOR.tools.extend(CKEDITOR.dom.comment.prototype, {
        type: CKEDITOR.NODE_COMMENT,
        getOuterHtml: function() {
            return "\x3c!--" + this.$.nodeValue + "--\x3e"
        }
    }),
    function() {
        var a = {},
        d;
        for (d in CKEDITOR.dtd.$blockLimit) d in CKEDITOR.dtd.$list || (a[d] = 1);
        var b = {};
        for (d in CKEDITOR.dtd.$block) d in CKEDITOR.dtd.$blockLimit || d in CKEDITOR.dtd.$empty || (b[d] = 1);
        CKEDITOR.dom.elementPath = function(c, d) {
            var g = null,
            f = null,
            k = [];
            d = d || c.getDocument().getBody();
            var h = c;
            do
            if (h.type == CKEDITOR.NODE_ELEMENT) {
                k.push(h);
                if (!this.lastElement && (this.lastElement = h, h.is(CKEDITOR.dtd.$object))) continue;
                var l = h.getName();
                if (!f && (!g && b[l] && (g = h), a[l])) {
                    var n;
                    if (n = !g) {
                        if (l = "div" == l) {
                            a: {
                                l = h.getChildren();
                                n = 0;
                                for (var p = l.count(); n < p; n++) {
                                    var s = l.getItem(n);
                                    if (s.type == CKEDITOR.NODE_ELEMENT && CKEDITOR.dtd.$block[s.getName()]) {
                                        l = !0;
                                        break a
                                    }
                                }
                                l = !1
                            }
                            l = !l && !h.equals(d)
                        }
                        n = l
                    }
                    n ? g = h: f = h
                }
                if (h.equals(d)) break
            }
            while (h = h.getParent());
            this.block = g;
            this.blockLimit = f;
            this.root = d;
            this.elements = k
        }
    } (), CKEDITOR.dom.elementPath.prototype = {
        compare: function(a) {
            var d = this.elements;
            a = a && a.elements;
            if (!a || d.length != a.length) return ! 1;
            for (var b = 0; b < d.length; b++) if (!d[b].equals(a[b])) return ! 1;
            return ! 0
        },
        contains: function(a, d, b) {
            var c;
            "string" == typeof a && (c = function(b) {
                return b.getName() == a
            });
            a instanceof CKEDITOR.dom.element ? c = function(b) {
                return b.equals(a)
            }: CKEDITOR.tools.isArray(a) ? c = function(b) {
                return - 1 < CKEDITOR.tools.indexOf(a, b.getName())
            }: "function" == typeof a ? c = a: "object" == typeof a && (c = function(b) {
                return b.getName() in a
            });
            var e = this.elements,
            g = e.length;
            d && g--;
            b && (e = Array.prototype.slice.call(e, 0), e.reverse());
            for (d = 0; d < g; d++) if (c(e[d])) return e[d];
            return null
        },
        isContextFor: function(a) {
            var d;
            return a in CKEDITOR.dtd.$block ? (d = this.contains(CKEDITOR.dtd.$intermediate) || this.root.equals(this.block) && this.block || this.blockLimit, !!d.getDtd()[a]) : !0
        },
        direction: function() {
            return (this.block || this.blockLimit || this.root).getDirection(1)
        }
    },
    CKEDITOR.dom.text = function(a, d) {
        "string" == typeof a && (a = (d ? d.$: document).createTextNode(a));
        this.$ = a
    },
    CKEDITOR.dom.text.prototype = new CKEDITOR.dom.node, CKEDITOR.tools.extend(CKEDITOR.dom.text.prototype, {
        type: CKEDITOR.NODE_TEXT,
        getLength: function() {
            return this.$.nodeValue.length
        },
        getText: function() {
            return this.$.nodeValue
        },
        setText: function(a) {
            this.$.nodeValue = a
        },
        split: function(a) {
            var d = this.$.parentNode,
            b = d.childNodes.length,
            c = this.getLength(),
            e = this.getDocument(),
            g = new CKEDITOR.dom.text(this.$.splitText(a), e);
            d.childNodes.length == b && (a >= c ? (g = e.createText(""), g.insertAfter(this)) : (a = e.createText(""), a.insertAfter(g), a.remove()));
            return g
        },
        substring: function(a, d) {
            return "number" != typeof d ? this.$.nodeValue.substr(a) : this.$.nodeValue.substring(a, d)
        }
    }),
    function() {
        function a(a, c, d) {
            var g = a.serializable,
            f = c[d ? "endContainer": "startContainer"],
            k = d ? "endOffset": "startOffset",
            h = g ? c.document.getById(a.startNode) : a.startNode;
            a = g ? c.document.getById(a.endNode) : a.endNode;
            f.equals(h.getPrevious()) ? (c.startOffset = c.startOffset - f.getLength() - a.getPrevious().getLength(), f = a.getNext()) : f.equals(a.getPrevious()) && (c.startOffset -= f.getLength(), f = a.getNext());
            f.equals(h.getParent()) && c[k]++;
            f.equals(a.getParent()) && c[k]++;
            c[d ? "endContainer": "startContainer"] = f;
            return c
        }
        CKEDITOR.dom.rangeList = function(a) {
            if (a instanceof CKEDITOR.dom.rangeList) return a;
            a ? a instanceof CKEDITOR.dom.range && (a = [a]) : a = [];
            return CKEDITOR.tools.extend(a, d)
        };
        var d = {
            createIterator: function() {
                var a = this,
                c = CKEDITOR.dom.walker.bookmark(),
                d = [],
                g;
                return {
                    getNextRange: function(f) {
                        g = void 0 == g ? 0 : g + 1;
                        var k = a[g];
                        if (k && 1 < a.length) {
                            if (!g) for (var h = a.length - 1; 0 <= h; h--) d.unshift(a[h].createBookmark(!0));
                            if (f) for (var l = 0; a[g + l + 1];) {
                                var n = k.document;
                                f = 0;
                                h = n.getById(d[l].endNode);
                                for (n = n.getById(d[l + 1].startNode);;) {
                                    h = h.getNextSourceNode(!1);
                                    if (n.equals(h)) f = 1;
                                    else if (c(h) || h.type == CKEDITOR.NODE_ELEMENT && h.isBlockBoundary()) continue;
                                    break
                                }
                                if (!f) break;
                                l++
                            }
                            for (k.moveToBookmark(d.shift()); l--;) h = a[++g],
                            h.moveToBookmark(d.shift()),
                            k.setEnd(h.endContainer, h.endOffset)
                        }
                        return k
                    }
                }
            },
            createBookmarks: function(b) {
                for (var c = [], d, g = 0; g < this.length; g++) {
                    c.push(d = this[g].createBookmark(b, !0));
                    for (var f = g + 1; f < this.length; f++) this[f] = a(d, this[f]),
                    this[f] = a(d, this[f], !0)
                }
                return c
            },
            createBookmarks2: function(a) {
                for (var c = [], d = 0; d < this.length; d++) c.push(this[d].createBookmark2(a));
                return c
            },
            moveToBookmarks: function(a) {
                for (var c = 0; c < this.length; c++) this[c].moveToBookmark(a[c])
            }
        }
    } (),
    function() {
        function a() {
            return CKEDITOR.getUrl(CKEDITOR.skinName.split(",")[1] || "skins/" + CKEDITOR.skinName.split(",")[0] + "/")
        }
        function d(b) {
            var c = CKEDITOR.skin["ua_" + b],
            d = CKEDITOR.env;
            if (c) for (var c = c.split(",").sort(function(a, b) {
                return a > b ? -1 : 1
            }), e = 0, f; e < c.length; e++) if (f = c[e], d.ie && (f.replace(/^ie/, "") == d.version || d.quirks && "iequirks" == f) && (f = "ie"), d[f]) {
                b += "_" + c[e];
                break
            }
            return CKEDITOR.getUrl(a() + b + ".css")
        }
        function b(a, b) {
            g[a] || (CKEDITOR.document.appendStyleSheet(d(a)), g[a] = 1);
            b && b()
        }
        function c(a) {
            var b = a.getById(f);
            b || (b = a.getHead().append("style"), b.setAttribute("id", f), b.setAttribute("type", "text/css"));
            return b
        }
        function e(a, b, c) {
            var d, e, f;
            if (CKEDITOR.env.webkit) for (b = b.split("}").slice(0, -1), e = 0; e < b.length; e++) b[e] = b[e].split("{");
            for (var g = 0; g < a.length; g++) if (CKEDITOR.env.webkit) for (e = 0; e < b.length; e++) {
                f = b[e][1];
                for (d = 0; d < c.length; d++) f = f.replace(c[d][0], c[d][1]);
                a[g].$.sheet.addRule(b[e][0], f)
            } else {
                f = b;
                for (d = 0; d < c.length; d++) f = f.replace(c[d][0], c[d][1]);
                CKEDITOR.env.ie ? a[g].$.styleSheet.cssText += f: a[g].$.innerHTML += f
            }
        }
        var g = {};
        CKEDITOR.skin = {
            path: a,
            loadPart: function(c, d) {
                CKEDITOR.skin.name != CKEDITOR.skinName.split(",")[0] ? CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(a() + "skin.js"),
                function() {
                    b(c, d)
                }) : b(c, d)
            },
            getPath: function(a) {
                return CKEDITOR.getUrl(d(a))
            },
            icons: {},
            addIcon: function(a, b, c, d) {
                a = a.toLowerCase();
                this.icons[a] || (this.icons[a] = {
                    path: b,
                    offset: c || 0,
                    bgsize: d || "16px"
                })
            },
            getIconStyle: function(a, b, c, d, e) {
                var f;
                a && (a = a.toLowerCase(), b && (f = this.icons[a + "-rtl"]), f || (f = this.icons[a]));
                a = c || f && f.path || "";
                d = d || f && f.offset;
                e = e || f && f.bgsize || "16px";
                return a && "background-image:url(" + CKEDITOR.getUrl(a) + ");background-position:0 " + d + "px;background-size:" + e + ";"
            }
        };
        CKEDITOR.tools.extend(CKEDITOR.editor.prototype, {
            getUiColor: function() {
                return this.uiColor
            },
            setUiColor: function(a) {
                var b = c(CKEDITOR.document);
                return (this.setUiColor = function(a) {
                    var c = CKEDITOR.skin.chameleon,
                    d = [[h, a]];
                    this.uiColor = a;
                    e([b], c(this, "editor"), d);
                    e(k, c(this, "panel"), d)
                }).call(this, a)
            }
        });
        var f = "cke_ui_color",
        k = [],
        h = /\$color/g;
        CKEDITOR.on("instanceLoaded",
        function(a) {
            if (!CKEDITOR.env.ie || !CKEDITOR.env.quirks) {
                var b = a.editor;
                a = function(a) {
                    a = (a.data[0] || a.data).element.getElementsByTag("iframe").getItem(0).getFrameDocument();
                    if (!a.getById("cke_ui_color")) {
                        a = c(a);
                        k.push(a);
                        var d = b.getUiColor();
                        d && e([a], CKEDITOR.skin.chameleon(b, "panel"), [[h, d]])
                    }
                };
                b.on("panelShow", a);
                b.on("menuShow", a);
                b.config.uiColor && b.setUiColor(b.config.uiColor)
            }
        })
    } (),
    function() {
        if (CKEDITOR.env.webkit) CKEDITOR.env.hc = !1;
        else {
            var a = CKEDITOR.dom.element.createFromHtml('<div style="width:0px;height:0px;position:absolute;left:-10000px;border: 1px solid;border-color: red blue;"></div>', CKEDITOR.document);
            a.appendTo(CKEDITOR.document.getHead());
            try {
                CKEDITOR.env.hc = a.getComputedStyle("border-top-color") == a.getComputedStyle("border-right-color")
            } catch(d) {
                CKEDITOR.env.hc = !1
            }
            a.remove()
        }
        CKEDITOR.env.hc && (CKEDITOR.env.cssClass += " cke_hc");
        CKEDITOR.document.appendStyleText(".cke{visibility:hidden;}");
        CKEDITOR.status = "loaded";
        CKEDITOR.fireOnce("loaded");
        if (a = CKEDITOR._.pending) {
            delete CKEDITOR._.pending;
            for (var b = 0; b < a.length; b++) CKEDITOR.editor.prototype.constructor.apply(a[b][0], a[b][1]),
            CKEDITOR.add(a[b][0])
        }
    } (), CKEDITOR.skin.name = "moono", CKEDITOR.skin.ua_editor = "ie,iequirks,ie7,ie8,gecko", CKEDITOR.skin.ua_dialog = "ie,iequirks,ie7,ie8,opera", CKEDITOR.skin.chameleon = function() {
        var a = function() {
            return function(a, b) {
                for (var d = a.match(/[^#]./g), f = 0; 3 > f; f++) {
                    var k = d,
                    h = f,
                    l;
                    l = parseInt(d[f], 16);
                    l = ("0" + (0 > b ? 0 | l * (1 + b) : 0 | l + (255 - l) * b).toString(16)).slice( - 2);
                    k[h] = l
                }
                return "#" + d.join("")
            }
        } (),
        d = function() {
            var a = new CKEDITOR.template("background:#{to};background-image:-webkit-gradient(linear,lefttop,leftbottom,from({from}),to({to}));background-image:-moz-linear-gradient(top,{from},{to});background-image:-webkit-linear-gradient(top,{from},{to});background-image:-o-linear-gradient(top,{from},{to});background-image:-ms-linear-gradient(top,{from},{to});background-image:linear-gradient(top,{from},{to});filter:progid:DXImageTransform.Microsoft.gradient(gradientType=0,startColorstr='{from}',endColorstr='{to}');");
            return function(b, d) {
                return a.output({
                    from: b,
                    to: d
                })
            }
        } (),
        b = {
            editor: new CKEDITOR.template("{id}.cke_chrome [border-color:{defaultBorder};] {id} .cke_top [ {defaultGradient}border-bottom-color:{defaultBorder};] {id} .cke_bottom [{defaultGradient}border-top-color:{defaultBorder};] {id} .cke_resizer [border-right-color:{ckeResizer}] {id} .cke_dialog_title [{defaultGradient}border-bottom-color:{defaultBorder};] {id} .cke_dialog_footer [{defaultGradient}outline-color:{defaultBorder};border-top-color:{defaultBorder};] {id} .cke_dialog_tab [{lightGradient}border-color:{defaultBorder};] {id} .cke_dialog_tab:hover [{mediumGradient}] {id} .cke_dialog_contents [border-top-color:{defaultBorder};] {id} .cke_dialog_tab_selected, {id} .cke_dialog_tab_selected:hover [background:{dialogTabSelected};border-bottom-color:{dialogTabSelectedBorder};] {id} .cke_dialog_body [background:{dialogBody};border-color:{defaultBorder};] {id} .cke_toolgroup [{lightGradient}border-color:{defaultBorder};] {id} a.cke_button_off:hover, {id} a.cke_button_off:focus, {id} a.cke_button_off:active [{mediumGradient}] {id} .cke_button_on [{ckeButtonOn}] {id} .cke_toolbar_separator [background-color: {ckeToolbarSeparator};] {id} .cke_combo_button [border-color:{defaultBorder};{lightGradient}] {id} a.cke_combo_button:hover, {id} a.cke_combo_button:focus, {id} .cke_combo_on a.cke_combo_button [border-color:{defaultBorder};{mediumGradient}] {id} .cke_path_item [color:{elementsPathColor};] {id} a.cke_path_item:hover, {id} a.cke_path_item:focus, {id} a.cke_path_item:active [background-color:{elementsPathBg};] {id}.cke_panel [border-color:{defaultBorder};] "),
            panel: new CKEDITOR.template(".cke_panel_grouptitle [{lightGradient}border-color:{defaultBorder};] .cke_menubutton_icon [background-color:{menubuttonIcon};] .cke_menubutton:hover .cke_menubutton_icon, .cke_menubutton:focus .cke_menubutton_icon, .cke_menubutton:active .cke_menubutton_icon [background-color:{menubuttonIconHover};] .cke_menuseparator [background-color:{menubuttonIcon};] a:hover.cke_colorbox, a:focus.cke_colorbox, a:active.cke_colorbox [border-color:{defaultBorder};] a:hover.cke_colorauto, a:hover.cke_colormore, a:focus.cke_colorauto, a:focus.cke_colormore, a:active.cke_colorauto, a:active.cke_colormore [background-color:{ckeColorauto};border-color:{defaultBorder};] ")
        };
        return function(c, e) {
            var g = c.uiColor,
            g = {
                id: "." + c.id,
                defaultBorder: a(g, -0.1),
                defaultGradient: d(a(g, 0.9), g),
                lightGradient: d(a(g, 1), a(g, 0.7)),
                mediumGradient: d(a(g, 0.8), a(g, 0.5)),
                ckeButtonOn: d(a(g, 0.6), a(g, 0.7)),
                ckeResizer: a(g, -0.4),
                ckeToolbarSeparator: a(g, 0.5),
                ckeColorauto: a(g, 0.8),
                dialogBody: a(g, 0.7),
                dialogTabSelected: d("#FFFFFF", "#FFFFFF"),
                dialogTabSelectedBorder: "#FFF",
                elementsPathColor: a(g, -0.6),
                elementsPathBg: g,
                menubuttonIcon: a(g, 0.5),
                menubuttonIconHover: a(g, 0.3)
            };
            return b[e].output(g).replace(/\[/g, "{").replace(/\]/g, "}")
        }
    } (), CKEDITOR.plugins.add("dialogui", {
        onLoad: function() {
            var a = function(a) {
                this._ || (this._ = {});
                this._["default"] = this._.initValue = a["default"] || "";
                this._.required = a.required || !1;
                for (var b = [this._], c = 1; c < arguments.length; c++) b.push(arguments[c]);
                b.push(!0);
                CKEDITOR.tools.extend.apply(CKEDITOR.tools, b);
                return this._
            },
            d = {
                build: function(a, b, c) {
                    return new CKEDITOR.ui.dialog.textInput(a, b, c)
                }
            },
            b = {
                build: function(a, b, c) {
                    return new CKEDITOR.ui.dialog[b.type](a, b, c)
                }
            },
            c = {
                isChanged: function() {
                    return this.getValue() != this.getInitValue()
                },
                reset: function(a) {
                    this.setValue(this.getInitValue(), a)
                },
                setInitValue: function() {
                    this._.initValue = this.getValue()
                },
                resetInitValue: function() {
                    this._.initValue = this._["default"]
                },
                getInitValue: function() {
                    return this._.initValue
                }
            },
            e = CKEDITOR.tools.extend({},
            CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors, {
                onChange: function(a, b) {
                    this._.domOnChangeRegistered || (a.on("load",
                    function() {
                        this.getInputElement().on("change",
                        function() {
                            a.parts.dialog.isVisible() && this.fire("change", {
                                value: this.getValue()
                            })
                        },
                        this)
                    },
                    this), this._.domOnChangeRegistered = !0);
                    this.on("change", b)
                }
            },
            !0),
            g = /^on([A-Z]\w+)/,
            f = function(a) {
                for (var b in a)(g.test(b) || "title" == b || "type" == b) && delete a[b];
                return a
            };
            CKEDITOR.tools.extend(CKEDITOR.ui.dialog, {
                labeledElement: function(b, c, d, e) {
                    if (! (4 > arguments.length)) {
                        var f = a.call(this, c);
                        f.labelId = CKEDITOR.tools.getNextId() + "_label";
                        this._.children = [];
                        CKEDITOR.ui.dialog.uiElement.call(this, b, c, d, "div", null, {
                            role: "presentation"
                        },
                        function() {
                            var a = [],
                            d = c.required ? " cke_required": "";
                            "horizontal" != c.labelLayout ? a.push('<label class="cke_dialog_ui_labeled_label' + d + '" ', ' id="' + f.labelId + '"', f.inputId ? ' for="' + f.inputId + '"': "", (c.labelStyle ? ' style="' + c.labelStyle + '"': "") + ">", c.label, "</label>", '<div class="cke_dialog_ui_labeled_content"' + (c.controlStyle ? ' style="' + c.controlStyle + '"': "") + ' role="presentation">', e.call(this, b, c), "</div>") : (d = {
                                type: "hbox",
                                widths: c.widths,
                                padding: 0,
                                children: [{
                                    type: "html",
                                    html: '<label class="cke_dialog_ui_labeled_label' + d + '" id="' + f.labelId + '" for="' + f.inputId + '"' + (c.labelStyle ? ' style="' + c.labelStyle + '"': "") + ">" + CKEDITOR.tools.htmlEncode(c.label) + "</span>"
                                },
                                {
                                    type: "html",
                                    html: '<span class="cke_dialog_ui_labeled_content"' + (c.controlStyle ? ' style="' + c.controlStyle + '"': "") + ">" + e.call(this, b, c) + "</span>"
                                }]
                            },
                            CKEDITOR.dialog._.uiElementBuilders.hbox.build(b, d, a));
                            return a.join("")
                        })
                    }
                },
                textInput: function(b, c, d) {
                    if (! (3 > arguments.length)) {
                        a.call(this, c);
                        var e = this._.inputId = CKEDITOR.tools.getNextId() + "_textInput",
                        f = {
                            "class": "cke_dialog_ui_input_" + c.type,
                            id: e,
                            type: c.type
                        };
                        c.validate && (this.validate = c.validate);
                        c.maxLength && (f.maxlength = c.maxLength);
                        c.size && (f.size = c.size);
                        c.inputStyle && (f.style = c.inputStyle);
                        var g = this,
                        r = !1;
                        b.on("load",
                        function() {
                            g.getInputElement().on("keydown",
                            function(a) {
                                13 == a.data.getKeystroke() && (r = !0)
                            });
                            g.getInputElement().on("keyup",
                            function(a) {
                                13 == a.data.getKeystroke() && r && (b.getButton("ok") && setTimeout(function() {
                                    b.getButton("ok").click()
                                },
                                0), r = !1)
                            },
                            null, null, 1E3)
                        });
                        CKEDITOR.ui.dialog.labeledElement.call(this, b, c, d,
                        function() {
                            var a = ['<div class="cke_dialog_ui_input_', c.type, '" role="presentation"'];
                            c.width && a.push('style="width:' + c.width + '" ');
                            a.push("><input ");
                            f["aria-labelledby"] = this._.labelId;
                            this._.required && (f["aria-required"] = this._.required);
                            for (var b in f) a.push(b + '="' + f[b] + '" ');
                            a.push(" /></div>");
                            return a.join("")
                        })
                    }
                },
                textarea: function(b, c, d) {
                    if (! (3 > arguments.length)) {
                        a.call(this, c);
                        var e = this,
                        f = this._.inputId = CKEDITOR.tools.getNextId() + "_textarea",
                        g = {};
                        c.validate && (this.validate = c.validate);
                        g.rows = c.rows || 5;
                        g.cols = c.cols || 20;
                        g["class"] = "cke_dialog_ui_input_textarea " + (c["class"] || "");
                        "undefined" != typeof c.inputStyle && (g.style = c.inputStyle);
                        c.dir && (g.dir = c.dir);
                        CKEDITOR.ui.dialog.labeledElement.call(this, b, c, d,
                        function() {
                            g["aria-labelledby"] = this._.labelId;
                            this._.required && (g["aria-required"] = this._.required);
                            var a = ['<div class="cke_dialog_ui_input_textarea" role="presentation"><textarea id="', f, '" '],
                            b;
                            for (b in g) a.push(b + '="' + CKEDITOR.tools.htmlEncode(g[b]) + '" ');
                            a.push(">", CKEDITOR.tools.htmlEncode(e._["default"]), "</textarea></div>");
                            return a.join("")
                        })
                    }
                },
                checkbox: function(b, c, d) {
                    if (! (3 > arguments.length)) {
                        var e = a.call(this, c, {
                            "default": !!c["default"]
                        });
                        c.validate && (this.validate = c.validate);
                        CKEDITOR.ui.dialog.uiElement.call(this, b, c, d, "span", null, null,
                        function() {
                            var a = CKEDITOR.tools.extend({},
                            c, {
                                id: c.id ? c.id + "_checkbox": CKEDITOR.tools.getNextId() + "_checkbox"
                            },
                            !0),
                            d = [],
                            g = CKEDITOR.tools.getNextId() + "_label",
                            l = {
                                "class": "cke_dialog_ui_checkbox_input",
                                type: "checkbox",
                                "aria-labelledby": g
                            };
                            f(a);
                            c["default"] && (l.checked = "checked");
                            "undefined" != typeof a.inputStyle && (a.style = a.inputStyle);
                            e.checkbox = new CKEDITOR.ui.dialog.uiElement(b, a, d, "input", null, l);
                            d.push(' <label id="', g, '" for="', l.id, '"' + (c.labelStyle ? ' style="' + c.labelStyle + '"': "") + ">", CKEDITOR.tools.htmlEncode(c.label), "</label>");
                            return d.join("")
                        })
                    }
                },
                radio: function(b, c, d) {
                    if (! (3 > arguments.length)) {
                        a.call(this, c);
                        this._["default"] || (this._["default"] = this._.initValue = c.items[0][1]);
                        c.validate && (this.validate = c.valdiate);
                        var e = [],
                        g = this;
                        CKEDITOR.ui.dialog.labeledElement.call(this, b, c, d,
                        function() {
                            for (var a = [], d = [], l = c.id ? c.id + "_radio": CKEDITOR.tools.getNextId() + "_radio", t = 0; t < c.items.length; t++) {
                                var u = c.items[t],
                                w = void 0 !== u[2] ? u[2] : u[0],
                                v = void 0 !== u[1] ? u[1] : u[0],
                                A = CKEDITOR.tools.getNextId() + "_radio_input",
                                E = A + "_label",
                                A = CKEDITOR.tools.extend({},
                                c, {
                                    id: A,
                                    title: null,
                                    type: null
                                },
                                !0),
                                w = CKEDITOR.tools.extend({},
                                A, {
                                    title: w
                                },
                                !0),
                                z = {
                                    type: "radio",
                                    "class": "cke_dialog_ui_radio_input",
                                    name: l,
                                    value: v,
                                    "aria-labelledby": E
                                },
                                B = [];
                                g._["default"] == v && (z.checked = "checked");
                                f(A);
                                f(w);
                                "undefined" != typeof A.inputStyle && (A.style = A.inputStyle);
                                e.push(new CKEDITOR.ui.dialog.uiElement(b, A, B, "input", null, z));
                                B.push(" ");
                                new CKEDITOR.ui.dialog.uiElement(b, w, B, "label", null, {
                                    id: E,
                                    "for": z.id
                                },
                                u[0]);
                                a.push(B.join(""))
                            }
                            new CKEDITOR.ui.dialog.hbox(b, e, a, d);
                            return d.join("")
                        });
                        this._.children = e
                    }
                },
                button: function(b, c, d) {
                    if (arguments.length) {
                        "function" == typeof c && (c = c(b.getParentEditor()));
                        a.call(this, c, {
                            disabled: c.disabled || !1
                        });
                        CKEDITOR.event.implementOn(this);
                        var e = this;
                        b.on("load",
                        function() {
                            var a = this.getElement(); (function() {
                                a.on("click",
                                function(a) {
                                    e.click();
                                    a.data.preventDefault()
                                });
                                a.on("keydown",
                                function(a) {
                                    a.data.getKeystroke() in {
                                        32 : 1
                                    } && (e.click(), a.data.preventDefault())
                                })
                            })();
                            a.unselectable()
                        },
                        this);
                        var f = CKEDITOR.tools.extend({},
                        c);
                        delete f.style;
                        var g = CKEDITOR.tools.getNextId() + "_label";
                        CKEDITOR.ui.dialog.uiElement.call(this, b, f, d, "a", null, {
                            style: c.style,
                            href: "javascript:void(0)",
                            title: c.label,
                            hidefocus: "true",
                            "class": c["class"],
                            role: "button",
                            "aria-labelledby": g
                        },
                        '<span id="' + g + '" class="cke_dialog_ui_button">' + CKEDITOR.tools.htmlEncode(c.label) + "</span>")
                    }
                },
                select: function(b, c, d) {
                    if (! (3 > arguments.length)) {
                        var e = a.call(this, c);
                        c.validate && (this.validate = c.validate);
                        e.inputId = CKEDITOR.tools.getNextId() + "_select";
                        CKEDITOR.ui.dialog.labeledElement.call(this, b, c, d,
                        function() {
                            var a = CKEDITOR.tools.extend({},
                            c, {
                                id: c.id ? c.id + "_select": CKEDITOR.tools.getNextId() + "_select"
                            },
                            !0),
                            d = [],
                            g = [],
                            l = {
                                id: e.inputId,
                                "class": "cke_dialog_ui_input_select",
                                "aria-labelledby": this._.labelId
                            };
                            d.push('<div class="cke_dialog_ui_input_', c.type, '" role="presentation"');
                            c.width && d.push('style="width:' + c.width + '" ');
                            d.push(">");
                            void 0 != c.size && (l.size = c.size);
                            void 0 != c.multiple && (l.multiple = c.multiple);
                            f(a);
                            for (var t = 0,
                            u; t < c.items.length && (u = c.items[t]); t++) g.push('<option value="', CKEDITOR.tools.htmlEncode(void 0 !== u[1] ? u[1] : u[0]).replace(/"/g, "&quot;"), '" /> ', CKEDITOR.tools.htmlEncode(u[0]));
                            "undefined" != typeof a.inputStyle && (a.style = a.inputStyle);
                            e.select = new CKEDITOR.ui.dialog.uiElement(b, a, d, "select", null, l, g.join(""));
                            d.push("</div>");
                            return d.join("")
                        })
                    }
                },
                file: function(b, c, d) {
                    if (! (3 > arguments.length)) {
                        void 0 === c["default"] && (c["default"] = "");
                        var e = CKEDITOR.tools.extend(a.call(this, c), {
                            definition: c,
                            buttons: []
                        });
                        c.validate && (this.validate = c.validate);
                        b.on("load",
                        function() {
                            CKEDITOR.document.getById(e.frameId).getParent().addClass("cke_dialog_ui_input_file")
                        });
                        CKEDITOR.ui.dialog.labeledElement.call(this, b, c, d,
                        function() {
                            e.frameId = CKEDITOR.tools.getNextId() + "_fileInput";
                            var a = ['<iframe frameborder="0" allowtransparency="0" class="cke_dialog_ui_input_file" role="presentation" id="', e.frameId, '" title="', c.label, '" src="javascript:void('];
                            a.push(CKEDITOR.env.ie ? "(function(){" + encodeURIComponent("document.open();(" + CKEDITOR.tools.fixDomain + ")();document.close();") + "})()": "0");
                            a.push(')"></iframe>');
                            return a.join("")
                        })
                    }
                },
                fileButton: function(b, c, d) {
                    if (! (3 > arguments.length)) {
                        a.call(this, c);
                        var e = this;
                        c.validate && (this.validate = c.validate);
                        var f = CKEDITOR.tools.extend({},
                        c),
                        g = f.onClick;
                        f.className = (f.className ? f.className + " ": "") + "cke_dialog_ui_button";
                        f.onClick = function(a) {
                            var d = c["for"];
                            g && !1 === g.call(this, a) || (b.getContentElement(d[0], d[1]).submit(), this.disable())
                        };
                        b.on("load",
                        function() {
                            b.getContentElement(c["for"][0], c["for"][1])._.buttons.push(e)
                        });
                        CKEDITOR.ui.dialog.button.call(this, b, f, d)
                    }
                },
                html: function() {
                    var a = /^\s*<[\w:]+\s+([^>]*)?>/,
                    b = /^(\s*<[\w:]+(?:\s+[^>]*)?)((?:.|\r|\n)+)$/,
                    c = /\/$/;
                    return function(d, e, f) {
                        if (! (3 > arguments.length)) {
                            var g = [],
                            q = e.html;
                            "<" != q.charAt(0) && (q = "<span>" + q + "</span>");
                            var t = e.focus;
                            if (t) {
                                var u = this.focus;
                                this.focus = function() { ("function" == typeof t ? t: u).call(this);
                                    this.fire("focus")
                                };
                                e.isFocusable && (this.isFocusable = this.isFocusable);
                                this.keyboardFocusable = !0
                            }
                            CKEDITOR.ui.dialog.uiElement.call(this, d, e, g, "span", null, null, "");
                            g = g.join("").match(a);
                            q = q.match(b) || ["", "", ""];
                            c.test(q[1]) && (q[1] = q[1].slice(0, -1), q[2] = "/" + q[2]);
                            f.push([q[1], " ", g[1] || "", q[2]].join(""))
                        }
                    }
                } (),
                fieldset: function(a, b, c, d, e) {
                    var f = e.label;
                    this._ = {
                        children: b
                    };
                    CKEDITOR.ui.dialog.uiElement.call(this, a, e, d, "fieldset", null, null,
                    function() {
                        var a = [];
                        f && a.push("<legend" + (e.labelStyle ? ' style="' + e.labelStyle + '"': "") + ">" + f + "</legend>");
                        for (var b = 0; b < c.length; b++) a.push(c[b]);
                        return a.join("")
                    })
                }
            },
            !0);
            CKEDITOR.ui.dialog.html.prototype = new CKEDITOR.ui.dialog.uiElement;
            CKEDITOR.ui.dialog.labeledElement.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {
                setLabel: function(a) {
                    var b = CKEDITOR.document.getById(this._.labelId);
                    1 > b.getChildCount() ? (new CKEDITOR.dom.text(a, CKEDITOR.document)).appendTo(b) : b.getChild(0).$.nodeValue = a;
                    return this
                },
                getLabel: function() {
                    var a = CKEDITOR.document.getById(this._.labelId);
                    return ! a || 1 > a.getChildCount() ? "": a.getChild(0).getText()
                },
                eventProcessors: e
            },
            !0);
            CKEDITOR.ui.dialog.button.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {
                click: function() {
                    return this._.disabled ? !1 : this.fire("click", {
                        dialog: this._.dialog
                    })
                },
                enable: function() {
                    this._.disabled = !1;
                    var a = this.getElement();
                    a && a.removeClass("cke_disabled")
                },
                disable: function() {
                    this._.disabled = !0;
                    this.getElement().addClass("cke_disabled")
                },
                isVisible: function() {
                    return this.getElement().getFirst().isVisible()
                },
                isEnabled: function() {
                    return ! this._.disabled
                },
                eventProcessors: CKEDITOR.tools.extend({},
                CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors, {
                    onClick: function(a, b) {
                        this.on("click",
                        function() {
                            b.apply(this, arguments)
                        })
                    }
                },
                !0),
                accessKeyUp: function() {
                    this.click()
                },
                accessKeyDown: function() {
                    this.focus()
                },
                keyboardFocusable: !0
            },
            !0);
            CKEDITOR.ui.dialog.textInput.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement, {
                getInputElement: function() {
                    return CKEDITOR.document.getById(this._.inputId)
                },
                focus: function() {
                    var a = this.selectParentTab();
                    setTimeout(function() {
                        var b = a.getInputElement();
                        b && b.$.focus()
                    },
                    0)
                },
                select: function() {
                    var a = this.selectParentTab();
                    setTimeout(function() {
                        var b = a.getInputElement();
                        b && (b.$.focus(), b.$.select())
                    },
                    0)
                },
                accessKeyUp: function() {
                    this.select()
                },
                setValue: function(a) { ! a && (a = "");
                    return CKEDITOR.ui.dialog.uiElement.prototype.setValue.apply(this, arguments)
                },
                keyboardFocusable: !0
            },
            c, !0);
            CKEDITOR.ui.dialog.textarea.prototype = new CKEDITOR.ui.dialog.textInput;
            CKEDITOR.ui.dialog.select.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement, {
                getInputElement: function() {
                    return this._.select.getElement()
                },
                add: function(a, b, c) {
                    var d = new CKEDITOR.dom.element("option", this.getDialog().getParentEditor().document),
                    e = this.getInputElement().$;
                    d.$.text = a;
                    d.$.value = void 0 === b || null === b ? a: b;
                    void 0 === c || null === c ? CKEDITOR.env.ie ? e.add(d.$) : e.add(d.$, null) : e.add(d.$, c);
                    return this
                },
                remove: function(a) {
                    this.getInputElement().$.remove(a);
                    return this
                },
                clear: function() {
                    for (var a = this.getInputElement().$; 0 < a.length;) a.remove(0);
                    return this
                },
                keyboardFocusable: !0
            },
            c, !0);
            CKEDITOR.ui.dialog.checkbox.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {
                getInputElement: function() {
                    return this._.checkbox.getElement()
                },
                setValue: function(a, b) {
                    this.getInputElement().$.checked = a; ! b && this.fire("change", {
                        value: a
                    })
                },
                getValue: function() {
                    return this.getInputElement().$.checked
                },
                accessKeyUp: function() {
                    this.setValue(!this.getValue())
                },
                eventProcessors: {
                    onChange: function(a, b) {
                        if (!CKEDITOR.env.ie || 8 < CKEDITOR.env.version) return e.onChange.apply(this, arguments);
                        a.on("load",
                        function() {
                            var a = this._.checkbox.getElement();
                            a.on("propertychange",
                            function(b) {
                                b = b.data.$;
                                "checked" == b.propertyName && this.fire("change", {
                                    value: a.$.checked
                                })
                            },
                            this)
                        },
                        this);
                        this.on("change", b);
                        return null
                    }
                },
                keyboardFocusable: !0
            },
            c, !0);
            CKEDITOR.ui.dialog.radio.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {
                setValue: function(a, b) {
                    for (var c = this._.children,
                    d, e = 0; e < c.length && (d = c[e]); e++) d.getElement().$.checked = d.getValue() == a; ! b && this.fire("change", {
                        value: a
                    })
                },
                getValue: function() {
                    for (var a = this._.children,
                    b = 0; b < a.length; b++) if (a[b].getElement().$.checked) return a[b].getValue();
                    return null
                },
                accessKeyUp: function() {
                    var a = this._.children,
                    b;
                    for (b = 0; b < a.length; b++) if (a[b].getElement().$.checked) {
                        a[b].getElement().focus();
                        return
                    }
                    a[0].getElement().focus()
                },
                eventProcessors: {
                    onChange: function(a, b) {
                        if (CKEDITOR.env.ie) a.on("load",
                        function() {
                            for (var a = this._.children,
                            b = this,
                            c = 0; c < a.length; c++) a[c].getElement().on("propertychange",
                            function(a) {
                                a = a.data.$;
                                "checked" == a.propertyName && this.$.checked && b.fire("change", {
                                    value: this.getAttribute("value")
                                })
                            })
                        },
                        this),
                        this.on("change", b);
                        else return e.onChange.apply(this, arguments);
                        return null
                    }
                },
                keyboardFocusable: !0
            },
            c, !0);
            CKEDITOR.ui.dialog.file.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement, c, {
                getInputElement: function() {
                    var a = CKEDITOR.document.getById(this._.frameId).getFrameDocument();
                    return 0 < a.$.forms.length ? new CKEDITOR.dom.element(a.$.forms[0].elements[0]) : this.getElement()
                },
                submit: function() {
                    this.getInputElement().getParent().$.submit();
                    return this
                },
                getAction: function() {
                    return this.getInputElement().getParent().$.action
                },
                registerEvents: function(a) {
                    var b = /^on([A-Z]\w+)/,
                    c, d = function(a, b, c, d) {
                        a.on("formLoaded",
                        function() {
                            a.getInputElement().on(c, d, a)
                        })
                    },
                    e;
                    for (e in a) if (c = e.match(b)) this.eventProcessors[e] ? this.eventProcessors[e].call(this, this._.dialog, a[e]) : d(this, this._.dialog, c[1].toLowerCase(), a[e]);
                    return this
                },
                reset: function() {
                    function a() {
                        c.$.open();
                        var k = "";
                        d.size && (k = d.size - (CKEDITOR.env.ie ? 7 : 0));
                        var w = b.frameId + "_input";
                        c.$.write(['<html dir="' + q + '" lang="' + t + '"><head><title></title></head><body style="margin: 0; overflow: hidden; background: transparent;">', '<form enctype="multipart/form-data" method="POST" dir="' + q + '" lang="' + t + '" action="', CKEDITOR.tools.htmlEncode(d.action), '"><label id="', b.labelId, '" for="', w, '" style="display:none">', CKEDITOR.tools.htmlEncode(d.label), '</label><input id="', w, '" aria-labelledby="', b.labelId, '" type="file" name="', CKEDITOR.tools.htmlEncode(d.id || "cke_upload"), '" size="', CKEDITOR.tools.htmlEncode(0 < k ? k: ""), '" /></form></body></html><script>', CKEDITOR.env.ie ? "(" + CKEDITOR.tools.fixDomain + ")();": "", "window.parent.CKEDITOR.tools.callFunction(" + f + ");", "window.onbeforeunload = function() {window.parent.CKEDITOR.tools.callFunction(" + g + ")}", "\x3c/script>"].join(""));
                        c.$.close();
                        for (k = 0; k < e.length; k++) e[k].enable()
                    }
                    var b = this._,
                    c = CKEDITOR.document.getById(b.frameId).getFrameDocument(),
                    d = b.definition,
                    e = b.buttons,
                    f = this.formLoadedNumber,
                    g = this.formUnloadNumber,
                    q = b.dialog._.editor.lang.dir,
                    t = b.dialog._.editor.langCode;
                    f || (f = this.formLoadedNumber = CKEDITOR.tools.addFunction(function() {
                        this.fire("formLoaded")
                    },
                    this), g = this.formUnloadNumber = CKEDITOR.tools.addFunction(function() {
                        this.getInputElement().clearCustomData()
                    },
                    this), this.getDialog()._.editor.on("destroy",
                    function() {
                        CKEDITOR.tools.removeFunction(f);
                        CKEDITOR.tools.removeFunction(g)
                    }));
                    CKEDITOR.env.gecko ? setTimeout(a, 500) : a()
                },
                getValue: function() {
                    return this.getInputElement().$.value || ""
                },
                setInitValue: function() {
                    this._.initValue = ""
                },
                eventProcessors: {
                    onChange: function(a, b) {
                        this._.domOnChangeRegistered || (this.on("formLoaded",
                        function() {
                            this.getInputElement().on("change",
                            function() {
                                this.fire("change", {
                                    value: this.getValue()
                                })
                            },
                            this)
                        },
                        this), this._.domOnChangeRegistered = !0);
                        this.on("change", b)
                    }
                },
                keyboardFocusable: !0
            },
            !0);
            CKEDITOR.ui.dialog.fileButton.prototype = new CKEDITOR.ui.dialog.button;
            CKEDITOR.ui.dialog.fieldset.prototype = CKEDITOR.tools.clone(CKEDITOR.ui.dialog.hbox.prototype);
            CKEDITOR.dialog.addUIElement("text", d);
            CKEDITOR.dialog.addUIElement("password", d);
            CKEDITOR.dialog.addUIElement("textarea", b);
            CKEDITOR.dialog.addUIElement("checkbox", b);
            CKEDITOR.dialog.addUIElement("radio", b);
            CKEDITOR.dialog.addUIElement("button", b);
            CKEDITOR.dialog.addUIElement("select", b);
            CKEDITOR.dialog.addUIElement("file", b);
            CKEDITOR.dialog.addUIElement("fileButton", b);
            CKEDITOR.dialog.addUIElement("html", b);
            CKEDITOR.dialog.addUIElement("fieldset", {
                build: function(a, b, c) {
                    for (var d = b.children,
                    e, f = [], g = [], q = 0; q < d.length && (e = d[q]); q++) {
                        var t = [];
                        f.push(t);
                        g.push(CKEDITOR.dialog._.uiElementBuilders[e.type].build(a, e, t))
                    }
                    return new CKEDITOR.ui.dialog[b.type](a, g, f, c, b)
                }
            })
        }
    }), CKEDITOR.DIALOG_RESIZE_NONE = 0, CKEDITOR.DIALOG_RESIZE_WIDTH = 1, CKEDITOR.DIALOG_RESIZE_HEIGHT = 2, CKEDITOR.DIALOG_RESIZE_BOTH = 3,
    function() {
        function a() {
            for (var a = this._.tabIdList.length,
            b = CKEDITOR.tools.indexOf(this._.tabIdList, this._.currentTabId) + a, c = b - 1; c > b - a; c--) if (this._.tabs[this._.tabIdList[c % a]][0].$.offsetHeight) return this._.tabIdList[c % a];
            return null
        }
        function d() {
            for (var a = this._.tabIdList.length,
            b = CKEDITOR.tools.indexOf(this._.tabIdList, this._.currentTabId), c = b + 1; c < b + a; c++) if (this._.tabs[this._.tabIdList[c % a]][0].$.offsetHeight) return this._.tabIdList[c % a];
            return null
        }
        function b(a, b) {
            for (var c = a.$.getElementsByTagName("input"), d = 0, e = c.length; d < e; d++) {
                var f = new CKEDITOR.dom.element(c[d]);
                "text" == f.getAttribute("type").toLowerCase() && (b ? (f.setAttribute("value", f.getCustomData("fake_value") || ""), f.removeCustomData("fake_value")) : (f.setCustomData("fake_value", f.getAttribute("value")), f.setAttribute("value", "")))
            }
        }
        function c(a, b) {
            var c = this.getInputElement();
            c && (a ? c.removeAttribute("aria-invalid") : c.setAttribute("aria-invalid", !0));
            a || (this.select ? this.select() : this.focus());
            b && alert(b);
            this.fire("validated", {
                valid: a,
                msg: b
            })
        }
        function e() {
            var a = this.getInputElement();
            a && a.removeAttribute("aria-invalid")
        }
        function g(a) {
            a = CKEDITOR.dom.element.createFromHtml(CKEDITOR.addTemplate("dialog", t).output({
                id: CKEDITOR.tools.getNextNumber(),
                editorId: a.id,
                langDir: a.lang.dir,
                langCode: a.langCode,
                editorDialogClass: "cke_editor_" + a.name.replace(/\./g, "\\.") + "_dialog",
                closeTitle: a.lang.common.close,
                hidpi: CKEDITOR.env.hidpi ? "cke_hidpi": ""
            }));
            var b = a.getChild([0, 0, 0, 0, 0]),
            c = b.getChild(0),
            d = b.getChild(1);
            if (CKEDITOR.env.ie && !CKEDITOR.env.ie6Compat) {
                var e = "javascript:void(function(){" + encodeURIComponent("document.open();(" + CKEDITOR.tools.fixDomain + ")();document.close();") + "}())";
                CKEDITOR.dom.element.createFromHtml('<iframe frameBorder="0" class="cke_iframe_shim" src="' + e + '" tabIndex="-1"></iframe>').appendTo(b.getParent())
            }
            c.unselectable();
            d.unselectable();
            return {
                element: a,
                parts: {
                    dialog: a.getChild(0),
                    title: c,
                    close: d,
                    tabs: b.getChild(2),
                    contents: b.getChild([3, 0, 0, 0]),
                    footer: b.getChild([3, 0, 1, 0])
                }
            }
        }
        function f(a, b, c) {
            this.element = b;
            this.focusIndex = c;
            this.tabIndex = 0;
            this.isFocusable = function() {
                return ! b.getAttribute("disabled") && b.isVisible()
            };
            this.focus = function() {
                a._.currentFocusIndex = this.focusIndex;
                this.element.focus()
            };
            b.on("keydown",
            function(a) {
                a.data.getKeystroke() in {
                    32 : 1,
                    13 : 1
                } && this.fire("click")
            });
            b.on("focus",
            function() {
                this.fire("mouseover")
            });
            b.on("blur",
            function() {
                this.fire("mouseout")
            })
        }
        function k(a) {
            function b() {
                a.layout()
            }
            var c = CKEDITOR.document.getWindow();
            c.on("resize", b);
            a.on("hide",
            function() {
                c.removeListener("resize", b)
            })
        }
        function h(a, b) {
            this._ = {
                dialog: a
            };
            CKEDITOR.tools.extend(this, b)
        }
        function l(a) {
            function b(c) {
                var k = a.getSize(),
                l = CKEDITOR.document.getWindow().getViewPaneSize(),
                n = c.data.$.screenX,
                q = c.data.$.screenY,
                m = n - d.x,
                p = q - d.y;
                d = {
                    x: n,
                    y: q
                };
                e.x += m;
                e.y += p;
                a.move(e.x + h[3] < g ? -h[3] : e.x - h[1] > l.width - k.width - g ? l.width - k.width + ("rtl" == f.lang.dir ? 0 : h[1]) : e.x, e.y + h[0] < g ? -h[0] : e.y - h[2] > l.height - k.height - g ? l.height - k.height + h[2] : e.y, 1);
                c.data.preventDefault()
            }
            function c() {
                CKEDITOR.document.removeListener("mousemove", b);
                CKEDITOR.document.removeListener("mouseup", c);
                if (CKEDITOR.env.ie6Compat) {
                    var a = x.getChild(0).getFrameDocument();
                    a.removeListener("mousemove", b);
                    a.removeListener("mouseup", c)
                }
            }
            var d = null,
            e = null;
            a.getElement().getFirst();
            var f = a.getParentEditor(),
            g = f.config.dialog_magnetDistance,
            h = CKEDITOR.skin.margins || [0, 0, 0, 0];
            "undefined" == typeof g && (g = 20);
            a.parts.title.on("mousedown",
            function(f) {
                d = {
                    x: f.data.$.screenX,
                    y: f.data.$.screenY
                };
                CKEDITOR.document.on("mousemove", b);
                CKEDITOR.document.on("mouseup", c);
                e = a.getPosition();
                if (CKEDITOR.env.ie6Compat) {
                    var g = x.getChild(0).getFrameDocument();
                    g.on("mousemove", b);
                    g.on("mouseup", c)
                }
                f.data.preventDefault()
            },
            a)
        }
        function n(a) {
            function b(c) {
                var m = "rtl" == h.lang.dir,
                p = q.width,
                t = q.height,
                w = p + (c.data.$.screenX - d) * (m ? -1 : 1) * (a._.moved ? 1 : 2),
                r = t + (c.data.$.screenY - e) * (a._.moved ? 1 : 2),
                u = a._.element.getFirst(),
                u = m && u.getComputedStyle("right"),
                v = a.getPosition();
                v.y + r > n.height && (r = n.height - v.y); (m ? u: v.x) + w > n.width && (w = n.width - (m ? u: v.x));
                if (g == CKEDITOR.DIALOG_RESIZE_WIDTH || g == CKEDITOR.DIALOG_RESIZE_BOTH) p = Math.max(f.minWidth || 0, w - k);
                if (g == CKEDITOR.DIALOG_RESIZE_HEIGHT || g == CKEDITOR.DIALOG_RESIZE_BOTH) t = Math.max(f.minHeight || 0, r - l);
                a.resize(p, t);
                a._.moved || a.layout();
                c.data.preventDefault()
            }
            function c() {
                CKEDITOR.document.removeListener("mouseup", c);
                CKEDITOR.document.removeListener("mousemove", b);
                m && (m.remove(), m = null);
                if (CKEDITOR.env.ie6Compat) {
                    var a = x.getChild(0).getFrameDocument();
                    a.removeListener("mouseup", c);
                    a.removeListener("mousemove", b)
                }
            }
            var d, e, f = a.definition,
            g = f.resizable;
            if (g != CKEDITOR.DIALOG_RESIZE_NONE) {
                var h = a.getParentEditor(),
                k,
                l,
                n,
                q,
                m,
                p = CKEDITOR.tools.addFunction(function(f) {
                    q = a.getSize();
                    var g = a.parts.contents;
                    g.$.getElementsByTagName("iframe").length && (m = CKEDITOR.dom.element.createFromHtml('<div class="cke_dialog_resize_cover" style="height: 100%; position: absolute; width: 100%;"></div>'), g.append(m));
                    l = q.height - a.parts.contents.getSize("height", !(CKEDITOR.env.gecko || CKEDITOR.env.opera || CKEDITOR.env.ie && CKEDITOR.env.quirks));
                    k = q.width - a.parts.contents.getSize("width", 1);
                    d = f.screenX;
                    e = f.screenY;
                    n = CKEDITOR.document.getWindow().getViewPaneSize();
                    CKEDITOR.document.on("mousemove", b);
                    CKEDITOR.document.on("mouseup", c);
                    CKEDITOR.env.ie6Compat && (g = x.getChild(0).getFrameDocument(), g.on("mousemove", b), g.on("mouseup", c));
                    f.preventDefault && f.preventDefault()
                });
                a.on("load",
                function() {
                    var b = "";
                    g == CKEDITOR.DIALOG_RESIZE_WIDTH ? b = " cke_resizer_horizontal": g == CKEDITOR.DIALOG_RESIZE_HEIGHT && (b = " cke_resizer_vertical");
                    b = CKEDITOR.dom.element.createFromHtml('<div class="cke_resizer' + b + " cke_resizer_" + h.lang.dir + '" title="' + CKEDITOR.tools.htmlEncode(h.lang.common.resize) + '" onmousedown="CKEDITOR.tools.callFunction(' + p + ', event )">' + ("ltr" == h.lang.dir ? "\u25e2": "\u25e3") + "</div>");
                    a.parts.footer.append(b, 1)
                });
                h.on("destroy",
                function() {
                    CKEDITOR.tools.removeFunction(p)
                })
            }
        }
        function p(a) {
            a.data.preventDefault(1)
        }
        function s(a) {
            var b = CKEDITOR.document.getWindow(),
            c = a.config,
            d = c.dialog_backgroundCoverColor || "white",
            e = c.dialog_backgroundCoverOpacity,
            f = c.baseFloatZIndex,
            c = CKEDITOR.tools.genKey(d, e, f),
            g = B[c];
            g ? g.show() : (f = ['<div tabIndex="-1" style="position: ', CKEDITOR.env.ie6Compat ? "absolute": "fixed", "; z-index: ", f, "; top: 0px; left: 0px; ", CKEDITOR.env.ie6Compat ? "": "background-color: " + d, '" class="cke_dialog_background_cover">'], CKEDITOR.env.ie6Compat && (d = "<html><body style=\\'background-color:" + d + ";\\'></body></html>", f.push('<iframe hidefocus="true" frameborder="0" id="cke_dialog_background_iframe" src="javascript:'), f.push("void((function(){" + encodeURIComponent("document.open();(" + CKEDITOR.tools.fixDomain + ")();document.write( '" + d + "' );document.close();") + "})())"), f.push('" style="position:absolute;left:0;top:0;width:100%;height: 100%;filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0)"></iframe>')), f.push("</div>"), g = CKEDITOR.dom.element.createFromHtml(f.join("")), g.setOpacity(void 0 != e ? e: 0.5), g.on("keydown", p), g.on("keypress", p), g.on("keyup", p), g.appendTo(CKEDITOR.document.getBody()), B[c] = g);
            a.focusManager.add(g);
            x = g;
            a = function() {
                var a = b.getViewPaneSize();
                g.setStyles({
                    width: a.width + "px",
                    height: a.height + "px"
                })
            };
            var h = function() {
                var a = b.getScrollPosition(),
                c = CKEDITOR.dialog._.currentTop;
                g.setStyles({
                    left: a.x + "px",
                    top: a.y + "px"
                });
                if (c) {
                    do a = c.getPosition(),
                    c.move(a.x, a.y);
                    while (c = c._.parentDialog)
                }
            };
            z = a;
            b.on("resize", a);
            a();
            CKEDITOR.env.mac && CKEDITOR.env.webkit || g.focus();
            if (CKEDITOR.env.ie6Compat) {
                var k = function() {
                    h();
                    arguments.callee.prevScrollHandler.apply(this, arguments)
                };
                b.$.setTimeout(function() {
                    k.prevScrollHandler = window.onscroll ||
                    function() {};
                    window.onscroll = k
                },
                0);
                h()
            }
        }
        function r(a) {
            x && (a.focusManager.remove(x), a = CKEDITOR.document.getWindow(), x.hide(), a.removeListener("resize", z), CKEDITOR.env.ie6Compat && a.$.setTimeout(function() {
                window.onscroll = window.onscroll && window.onscroll.prevScrollHandler || null
            },
            0), z = null)
        }
        var q = CKEDITOR.tools.cssLength,
        t = '<div class="cke_reset_all {editorId} {editorDialogClass} {hidpi}" dir="{langDir}" lang="{langCode}" role="dialog" aria-labelledby="cke_dialog_title_{id}"><table class="cke_dialog ' + CKEDITOR.env.cssClass + ' cke_{langDir}" style="position:absolute" role="presentation"><tr><td role="presentation"><div class="cke_dialog_body" role="presentation"><div id="cke_dialog_title_{id}" class="cke_dialog_title" role="presentation"></div><a id="cke_dialog_close_button_{id}" class="cke_dialog_close_button" href="javascript:void(0)" title="{closeTitle}" role="button"><span class="cke_label">X</span></a><div id="cke_dialog_tabs_{id}" class="cke_dialog_tabs" role="tablist"></div><table class="cke_dialog_contents" role="presentation"><tr><td id="cke_dialog_contents_{id}" class="cke_dialog_contents_body" role="presentation"></td></tr><tr><td id="cke_dialog_footer_{id}" class="cke_dialog_footer" role="presentation"></td></tr></table></div></td></tr></table></div>';
        CKEDITOR.dialog = function(b, f) {
            function h() {
                var a = z._.focusList;
                a.sort(function(a, b) {
                    return a.tabIndex != b.tabIndex ? b.tabIndex - a.tabIndex: a.focusIndex - b.focusIndex
                });
                for (var b = a.length,
                c = 0; c < b; c++) a[c].focusIndex = c
            }
            function k(a) {
                var b = z._.focusList;
                a = a || 0;
                if (! (1 > b.length)) {
                    var c = z._.currentFocusIndex;
                    try {
                        b[c].getInputElement().$.blur()
                    } catch(d) {}
                    for (var e = c = (c + a + b.length) % b.length; a && !b[e].isFocusable() && (e = (e + a + b.length) % b.length, e != c););
                    b[e].focus();
                    "text" == b[e].type && b[e].select()
                }
            }
            function q(c) {
                if (z == CKEDITOR.dialog._.currentTop) {
                    var e = c.data.getKeystroke(),
                    f = "rtl" == b.lang.dir;
                    s = A = 0;
                    if (9 == e || e == CKEDITOR.SHIFT + 9) e = e == CKEDITOR.SHIFT + 9,
                    z._.tabBarMode ? (e = e ? a.call(z) : d.call(z), z.selectPage(e), z._.tabs[e][0].focus()) : k(e ? -1 : 1),
                    s = 1;
                    else if (e == CKEDITOR.ALT + 121 && !z._.tabBarMode && 1 < z.getPageCount()) z._.tabBarMode = !0,
                    z._.tabs[z._.currentTabId][0].focus(),
                    s = 1;
                    else if (37 != e && 39 != e || !z._.tabBarMode) if (13 != e && 32 != e || !z._.tabBarMode) if (13 == e) e = c.data.getTarget(),
                    e.is("a", "button", "select", "textarea") || e.is("input") && "button" == e.$.type || ((e = this.getButton("ok")) && CKEDITOR.tools.setTimeout(e.click, 0, e), s = 1),
                    A = 1;
                    else if (27 == e)(e = this.getButton("cancel")) ? CKEDITOR.tools.setTimeout(e.click, 0, e) : !1 !== this.fire("cancel", {
                        hide: !0
                    }).hide && this.hide(),
                    A = 1;
                    else return;
                    else this.selectPage(this._.currentTabId),
                    this._.tabBarMode = !1,
                    this._.currentFocusIndex = -1,
                    k(1),
                    s = 1;
                    else e = e == (f ? 39 : 37) ? a.call(z) : d.call(z),
                    z.selectPage(e),
                    z._.tabs[e][0].focus(),
                    s = 1;
                    m(c)
                }
            }
            function m(a) {
                s ? a.data.preventDefault(1) : A && a.data.stopPropagation()
            }
            var p = CKEDITOR.dialog._.dialogDefinitions[f],
            t = CKEDITOR.tools.clone(u),
            w = b.config.dialog_buttonsOrder || "OS",
            r = b.lang.dir,
            v = {},
            s,
            A; ("OS" == w && CKEDITOR.env.mac || "rtl" == w && "ltr" == r || "ltr" == w && "rtl" == r) && t.buttons.reverse();
            p = CKEDITOR.tools.extend(p(b), t);
            p = CKEDITOR.tools.clone(p);
            p = new E(this, p);
            t = g(b);
            this._ = {
                editor: b,
                element: t.element,
                name: f,
                contentSize: {
                    width: 0,
                    height: 0
                },
                size: {
                    width: 0,
                    height: 0
                },
                contents: {},
                buttons: {},
                accessKeyMap: {},
                tabs: {},
                tabIdList: [],
                currentTabId: null,
                currentTabIndex: null,
                pageCount: 0,
                lastTab: null,
                tabBarMode: !1,
                focusList: [],
                currentFocusIndex: 0,
                hasFocus: !1
            };
            this.parts = t.parts;
            CKEDITOR.tools.setTimeout(function() {
                b.fire("ariaWidget", this.parts.contents)
            },
            0, this);
            t = {
                position: CKEDITOR.env.ie6Compat ? "absolute": "fixed",
                top: 0,
                visibility: "hidden"
            };
            t["rtl" == r ? "right": "left"] = 0;
            this.parts.dialog.setStyles(t);
            CKEDITOR.event.call(this);
            this.definition = p = CKEDITOR.fire("dialogDefinition", {
                name: f,
                definition: p
            },
            b).definition;
            if (! ("removeDialogTabs" in b._) && b.config.removeDialogTabs) {
                t = b.config.removeDialogTabs.split(";");
                for (r = 0; r < t.length; r++) if (w = t[r].split(":"), 2 == w.length) {
                    var x = w[0];
                    v[x] || (v[x] = []);
                    v[x].push(w[1])
                }
                b._.removeDialogTabs = v
            }
            if (b._.removeDialogTabs && (v = b._.removeDialogTabs[f])) for (r = 0; r < v.length; r++) p.removeContents(v[r]);
            if (p.onLoad) this.on("load", p.onLoad);
            if (p.onShow) this.on("show", p.onShow);
            if (p.onHide) this.on("hide", p.onHide);
            if (p.onOk) this.on("ok",
            function(a) {
                b.fire("saveSnapshot");
                setTimeout(function() {
                    b.fire("saveSnapshot")
                },
                0); ! 1 === p.onOk.call(this, a) && (a.data.hide = !1)
            });
            if (p.onCancel) this.on("cancel",
            function(a) { ! 1 === p.onCancel.call(this, a) && (a.data.hide = !1)
            });
            var z = this,
            B = function(a) {
                var b = z._.contents,
                c;
                for (c in b) for (var d in b[c]) if (a.call(this, b[c][d])) return
            };
            this.on("ok",
            function(a) {
                B(function(b) {
                    if (b.validate) {
                        var d = b.validate(this),
                        e = "string" == typeof d || !1 === d;
                        e && (a.data.hide = !1, a.stop());
                        c.call(b, !e, "string" == typeof d ? d: void 0);
                        return e
                    }
                })
            },
            this, null, 0);
            this.on("cancel",
            function(a) {
                B(function(c) {
                    if (c.isChanged()) return confirm(b.lang.common.confirmCancel) || (a.data.hide = !1),
                    !0
                })
            },
            this, null, 0);
            this.parts.close.on("click",
            function(a) { ! 1 !== this.fire("cancel", {
                    hide: !0
                }).hide && this.hide();
                a.data.preventDefault()
            },
            this);
            this.changeFocus = k;
            var T = this._.element;
            b.focusManager.add(T, 1);
            this.on("show",
            function() {
                T.on("keydown", q, this);
                if (CKEDITOR.env.opera || CKEDITOR.env.gecko) T.on("keypress", m, this)
            });
            this.on("hide",
            function() {
                T.removeListener("keydown", q); (CKEDITOR.env.opera || CKEDITOR.env.gecko) && T.removeListener("keypress", m);
                B(function(a) {
                    e.apply(a)
                })
            });
            this.on("iframeAdded",
            function(a) { (new CKEDITOR.dom.document(a.data.iframe.$.contentWindow.document)).on("keydown", q, this, null, 0)
            });
            this.on("show",
            function() {
                h();
                if (b.config.dialog_startupFocusTab && 1 < z._.pageCount) z._.tabBarMode = !0,
                z._.tabs[z._.currentTabId][0].focus();
                else if (!this._.hasFocus) if (this._.currentFocusIndex = -1, p.onFocus) {
                    var a = p.onFocus.call(this);
                    a && a.focus()
                } else k(1)
            },
            this, null, 4294967295);
            if (CKEDITOR.env.ie6Compat) this.on("load",
            function() {
                var a = this.getElement(),
                b = a.getFirst();
                b.remove();
                b.appendTo(a)
            },
            this);
            l(this);
            n(this); (new CKEDITOR.dom.text(p.title, CKEDITOR.document)).appendTo(this.parts.title);
            for (r = 0; r < p.contents.length; r++)(v = p.contents[r]) && this.addPage(v);
            this.parts.tabs.on("click",
            function(a) {
                var b = a.data.getTarget();
                b.hasClass("cke_dialog_tab") && (b = b.$.id, this.selectPage(b.substring(4, b.lastIndexOf("_"))), this._.tabBarMode && (this._.tabBarMode = !1, this._.currentFocusIndex = -1, k(1)), a.data.preventDefault())
            },
            this);
            r = [];
            v = CKEDITOR.dialog._.uiElementBuilders.hbox.build(this, {
                type: "hbox",
                className: "cke_dialog_footer_buttons",
                widths: [],
                children: p.buttons
            },
            r).getChild();
            this.parts.footer.setHtml(r.join(""));
            for (r = 0; r < v.length; r++) this._.buttons[v[r].id] = v[r]
        };
        CKEDITOR.dialog.prototype = {
            destroy: function() {
                this.hide();
                this._.element.remove()
            },
            resize: function() {
                return function(a, b) {
                    this._.contentSize && this._.contentSize.width == a && this._.contentSize.height == b || (CKEDITOR.dialog.fire("resize", {
                        dialog: this,
                        width: a,
                        height: b
                    },
                    this._.editor), this.fire("resize", {
                        width: a,
                        height: b
                    },
                    this._.editor), this.parts.contents.setStyles({
                        width: a + "px",
                        height: b + "px"
                    }), "rtl" == this._.editor.lang.dir && this._.position && (this._.position.x = CKEDITOR.document.getWindow().getViewPaneSize().width - this._.contentSize.width - parseInt(this._.element.getFirst().getStyle("right"), 10)), this._.contentSize = {
                        width: a,
                        height: b
                    })
                }
            } (),
            getSize: function() {
                var a = this._.element.getFirst();
                return {
                    width: a.$.offsetWidth || 0,
                    height: a.$.offsetHeight || 0
                }
            },
            move: function(a, b, c) {
                var d = this._.element.getFirst(),
                e = "rtl" == this._.editor.lang.dir,
                f = "fixed" == d.getComputedStyle("position");
                CKEDITOR.env.ie && d.setStyle("zoom", "100%");
                f && this._.position && this._.position.x == a && this._.position.y == b || (this._.position = {
                    x: a,
                    y: b
                },
                f || (f = CKEDITOR.document.getWindow().getScrollPosition(), a += f.x, b += f.y), e && (f = this.getSize(), a = CKEDITOR.document.getWindow().getViewPaneSize().width - f.width - a), b = {
                    top: (0 < b ? b: 0) + "px"
                },
                b[e ? "right": "left"] = (0 < a ? a: 0) + "px", d.setStyles(b), c && (this._.moved = 1))
            },
            getPosition: function() {
                return CKEDITOR.tools.extend({},
                this._.position)
            },
            show: function() {
                var a = this._.element,
                b = this.definition;
                a.getParent() && a.getParent().equals(CKEDITOR.document.getBody()) ? a.setStyle("display", "block") : a.appendTo(CKEDITOR.document.getBody());
                if (CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version) {
                    var c = this.parts.dialog;
                    c.setStyle("position", "absolute");
                    setTimeout(function() {
                        c.setStyle("position", "fixed")
                    },
                    0)
                }
                this.resize(this._.contentSize && this._.contentSize.width || b.width || b.minWidth, this._.contentSize && this._.contentSize.height || b.height || b.minHeight);
                this.reset();
                this.selectPage(this.definition.contents[0].id);
                null === CKEDITOR.dialog._.currentZIndex && (CKEDITOR.dialog._.currentZIndex = this._.editor.config.baseFloatZIndex);
                this._.element.getFirst().setStyle("z-index", CKEDITOR.dialog._.currentZIndex += 10);
                null === CKEDITOR.dialog._.currentTop ? (CKEDITOR.dialog._.currentTop = this, this._.parentDialog = null, s(this._.editor)) : (this._.parentDialog = CKEDITOR.dialog._.currentTop, this._.parentDialog.getElement().getFirst().$.style.zIndex -= Math.floor(this._.editor.config.baseFloatZIndex / 2), CKEDITOR.dialog._.currentTop = this);
                a.on("keydown", I);
                a.on(CKEDITOR.env.opera ? "keypress": "keyup", C);
                this._.hasFocus = !1;
                CKEDITOR.tools.setTimeout(function() {
                    this.layout();
                    k(this);
                    this.parts.dialog.setStyle("visibility", "");
                    this.fireOnce("load", {});
                    CKEDITOR.ui.fire("ready", this);
                    this.fire("show", {});
                    this._.editor.fire("dialogShow", this);
                    this._.parentDialog || this._.editor.focusManager.lock();
                    this.foreach(function(a) {
                        a.setInitValue && a.setInitValue()
                    })
                },
                100, this)
            },
            layout: function() {
                var a = this.parts.dialog,
                b = this.getSize(),
                c = CKEDITOR.document.getWindow().getViewPaneSize(),
                d = (c.width - b.width) / 2,
                e = (c.height - b.height) / 2;
                CKEDITOR.env.ie6Compat || (b.height + (0 < e ? e: 0) > c.height || b.width + (0 < d ? d: 0) > c.width ? a.setStyle("position", "absolute") : a.setStyle("position", "fixed"));
                this.move(this._.moved ? this._.position.x: d, this._.moved ? this._.position.y: e)
            },
            foreach: function(a) {
                for (var b in this._.contents) for (var c in this._.contents[b]) a.call(this, this._.contents[b][c]);
                return this
            },
            reset: function() {
                var a = function(a) {
                    a.reset && a.reset(1)
                };
                return function() {
                    this.foreach(a);
                    return this
                }
            } (),
            setupContent: function() {
                var a = arguments;
                this.foreach(function(b) {
                    b.setup && b.setup.apply(b, a)
                })
            },
            commitContent: function() {
                var a = arguments;
                this.foreach(function(b) {
                    CKEDITOR.env.ie && this._.currentFocusIndex == b.focusIndex && b.getInputElement().$.blur();
                    b.commit && b.commit.apply(b, a)
                })
            },
            hide: function() {
                if (this.parts.dialog.isVisible()) {
                    this.fire("hide", {});
                    this._.editor.fire("dialogHide", this);
                    this.selectPage(this._.tabIdList[0]);
                    var a = this._.element;
                    a.setStyle("display", "none");
                    this.parts.dialog.setStyle("visibility", "hidden");
                    for (J(this); CKEDITOR.dialog._.currentTop != this;) CKEDITOR.dialog._.currentTop.hide();
                    if (this._.parentDialog) {
                        var b = this._.parentDialog.getElement().getFirst();
                        b.setStyle("z-index", parseInt(b.$.style.zIndex, 10) + Math.floor(this._.editor.config.baseFloatZIndex / 2))
                    } else r(this._.editor);
                    if (CKEDITOR.dialog._.currentTop = this._.parentDialog) CKEDITOR.dialog._.currentZIndex -= 10;
                    else {
                        CKEDITOR.dialog._.currentZIndex = null;
                        a.removeListener("keydown", I);
                        a.removeListener(CKEDITOR.env.opera ? "keypress": "keyup", C);
                        var c = this._.editor;
                        c.focus();
                        setTimeout(function() {
                            c.focusManager.unlock()
                        },
                        0)
                    }
                    delete this._.parentDialog;
                    this.foreach(function(a) {
                        a.resetInitValue && a.resetInitValue()
                    })
                }
            },
            addPage: function(a) {
                if (!a.requiredContent || this._.editor.filter.check(a.requiredContent)) {
                    for (var b = [], c = a.label ? ' title="' + CKEDITOR.tools.htmlEncode(a.label) + '"': "", d = CKEDITOR.dialog._.uiElementBuilders.vbox.build(this, {
                        type: "vbox",
                        className: "cke_dialog_page_contents",
                        children: a.elements,
                        expand: !!a.expand,
                        padding: a.padding,
                        style: a.style || "width: 100%;"
                    },
                    b), e = this._.contents[a.id] = {},
                    f = d.getChild(), g = 0; d = f.shift();) ! d.notAllowed && "hbox" != d.type && "vbox" != d.type && g++,
                    e[d.id] = d,
                    "function" == typeof d.getChild && f.push.apply(f, d.getChild());
                    g || (a.hidden = !0);
                    b = CKEDITOR.dom.element.createFromHtml(b.join(""));
                    b.setAttribute("role", "tabpanel");
                    d = CKEDITOR.env;
                    e = "cke_" + a.id + "_" + CKEDITOR.tools.getNextNumber();
                    c = CKEDITOR.dom.element.createFromHtml(['<a class="cke_dialog_tab"', 0 < this._.pageCount ? " cke_last": "cke_first", c, a.hidden ? ' style="display:none"': "", ' id="', e, '"', d.gecko && 10900 <= d.version && !d.hc ? "": ' href="javascript:void(0)"', ' tabIndex="-1" hidefocus="true" role="tab">', a.label, "</a>"].join(""));
                    b.setAttribute("aria-labelledby", e);
                    this._.tabs[a.id] = [c, b];
                    this._.tabIdList.push(a.id); ! a.hidden && this._.pageCount++;
                    this._.lastTab = c;
                    this.updateStyle();
                    b.setAttribute("name", a.id);
                    b.appendTo(this.parts.contents);
                    c.unselectable();
                    this.parts.tabs.append(c);
                    a.accessKey && (F(this, this, "CTRL+" + a.accessKey, L, m), this._.accessKeyMap["CTRL+" + a.accessKey] = a.id)
                }
            },
            selectPage: function(a) {
                if (this._.currentTabId != a && !0 !== this.fire("selectPage", {
                    page: a,
                    currentPage: this._.currentTabId
                })) {
                    for (var c in this._.tabs) {
                        var d = this._.tabs[c][0],
                        e = this._.tabs[c][1];
                        c != a && (d.removeClass("cke_dialog_tab_selected"), e.hide());
                        e.setAttribute("aria-hidden", c != a)
                    }
                    var f = this._.tabs[a];
                    f[0].addClass("cke_dialog_tab_selected");
                    CKEDITOR.env.ie6Compat || CKEDITOR.env.ie7Compat ? (b(f[1]), f[1].show(), setTimeout(function() {
                        b(f[1], 1)
                    },
                    0)) : f[1].show();
                    this._.currentTabId = a;
                    this._.currentTabIndex = CKEDITOR.tools.indexOf(this._.tabIdList, a)
                }
            },
            updateStyle: function() {
                this.parts.dialog[(1 === this._.pageCount ? "add": "remove") + "Class"]("cke_single_page")
            },
            hidePage: function(b) {
                var c = this._.tabs[b] && this._.tabs[b][0];
                c && 1 != this._.pageCount && c.isVisible() && (b == this._.currentTabId && this.selectPage(a.call(this)), c.hide(), this._.pageCount--, this.updateStyle())
            },
            showPage: function(a) {
                if (a = this._.tabs[a] && this._.tabs[a][0]) a.show(),
                this._.pageCount++,
                this.updateStyle()
            },
            getElement: function() {
                return this._.element
            },
            getName: function() {
                return this._.name
            },
            getContentElement: function(a, b) {
                var c = this._.contents[a];
                return c && c[b]
            },
            getValueOf: function(a, b) {
                return this.getContentElement(a, b).getValue()
            },
            setValueOf: function(a, b, c) {
                return this.getContentElement(a, b).setValue(c)
            },
            getButton: function(a) {
                return this._.buttons[a]
            },
            click: function(a) {
                return this._.buttons[a].click()
            },
            disableButton: function(a) {
                return this._.buttons[a].disable()
            },
            enableButton: function(a) {
                return this._.buttons[a].enable()
            },
            getPageCount: function() {
                return this._.pageCount
            },
            getParentEditor: function() {
                return this._.editor
            },
            getSelectedElement: function() {
                return this.getParentEditor().getSelection().getSelectedElement()
            },
            addFocusable: function(a, b) {
                if ("undefined" == typeof b) b = this._.focusList.length,
                this._.focusList.push(new f(this, a, b));
                else {
                    this._.focusList.splice(b, 0, new f(this, a, b));
                    for (var c = b + 1; c < this._.focusList.length; c++) this._.focusList[c].focusIndex++
                }
            }
        };
        CKEDITOR.tools.extend(CKEDITOR.dialog, {
            add: function(a, b) {
                this._.dialogDefinitions[a] && "function" != typeof b || (this._.dialogDefinitions[a] = b)
            },
            exists: function(a) {
                return !! this._.dialogDefinitions[a]
            },
            getCurrent: function() {
                return CKEDITOR.dialog._.currentTop
            },
            isTabEnabled: function(a, b, c) {
                a = a.config.removeDialogTabs;
                return ! (a && a.match(RegExp("(?:^|;)" + b + ":" + c + "(?:$|;)", "i")))
            },
            okButton: function() {
                var a = function(a, b) {
                    b = b || {};
                    return CKEDITOR.tools.extend({
                        id: "ok",
                        type: "button",
                        label: a.lang.common.ok,
                        "class": "cke_dialog_ui_button_ok",
                        onClick: function(a) {
                            a = a.data.dialog; ! 1 !== a.fire("ok", {
                                hide: !0
                            }).hide && a.hide()
                        }
                    },
                    b, !0)
                };
                a.type = "button";
                a.override = function(b) {
                    return CKEDITOR.tools.extend(function(c) {
                        return a(c, b)
                    },
                    {
                        type: "button"
                    },
                    !0)
                };
                return a
            } (),
            cancelButton: function() {
                var a = function(a, b) {
                    b = b || {};
                    return CKEDITOR.tools.extend({
                        id: "cancel",
                        type: "button",
                        label: a.lang.common.cancel,
                        "class": "cke_dialog_ui_button_cancel",
                        onClick: function(a) {
                            a = a.data.dialog; ! 1 !== a.fire("cancel", {
                                hide: !0
                            }).hide && a.hide()
                        }
                    },
                    b, !0)
                };
                a.type = "button";
                a.override = function(b) {
                    return CKEDITOR.tools.extend(function(c) {
                        return a(c, b)
                    },
                    {
                        type: "button"
                    },
                    !0)
                };
                return a
            } (),
            addUIElement: function(a, b) {
                this._.uiElementBuilders[a] = b
            }
        });
        CKEDITOR.dialog._ = {
            uiElementBuilders: {},
            dialogDefinitions: {},
            currentTop: null,
            currentZIndex: null
        };
        CKEDITOR.event.implementOn(CKEDITOR.dialog);
        CKEDITOR.event.implementOn(CKEDITOR.dialog.prototype);
        var u = {
            resizable: CKEDITOR.DIALOG_RESIZE_BOTH,
            minWidth: 600,
            minHeight: 400,
            buttons: [CKEDITOR.dialog.okButton, CKEDITOR.dialog.cancelButton]
        },
        w = function(a, b, c) {
            for (var d = 0,
            e; e = a[d]; d++) if (e.id == b || c && e[c] && (e = w(e[c], b, c))) return e;
            return null
        },
        v = function(a, b, c, d, e) {
            if (c) {
                for (var f = 0,
                g; g = a[f]; f++) {
                    if (g.id == c) return a.splice(f, 0, b),
                    b;
                    if (d && g[d] && (g = v(g[d], b, c, d, !0))) return g
                }
                if (e) return null
            }
            a.push(b);
            return b
        },
        A = function(a, b, c) {
            for (var d = 0,
            e; e = a[d]; d++) {
                if (e.id == b) return a.splice(d, 1);
                if (c && e[c] && (e = A(e[c], b, c))) return e
            }
            return null
        },
        E = function(a, b) {
            this.dialog = a;
            for (var c = b.contents,
            d = 0,
            e; e = c[d]; d++) c[d] = e && new h(a, e);
            CKEDITOR.tools.extend(this, b)
        };
        E.prototype = {
            getContents: function(a) {
                return w(this.contents, a)
            },
            getButton: function(a) {
                return w(this.buttons, a)
            },
            addContents: function(a, b) {
                return v(this.contents, a, b)
            },
            addButton: function(a, b) {
                return v(this.buttons, a, b)
            },
            removeContents: function(a) {
                A(this.contents, a)
            },
            removeButton: function(a) {
                A(this.buttons, a)
            }
        };
        h.prototype = {
            get: function(a) {
                return w(this.elements, a, "children")
            },
            add: function(a, b) {
                return v(this.elements, a, b, "children")
            },
            remove: function(a) {
                A(this.elements, a, "children")
            }
        };
        var z, B = {},
        x, D = {},
        I = function(a) {
            var b = a.data.$.ctrlKey || a.data.$.metaKey,
            c = a.data.$.altKey,
            d = a.data.$.shiftKey,
            e = String.fromCharCode(a.data.$.keyCode); (b = D[(b ? "CTRL+": "") + (c ? "ALT+": "") + (d ? "SHIFT+": "") + e]) && b.length && (b = b[b.length - 1], b.keydown && b.keydown.call(b.uiElement, b.dialog, b.key), a.data.preventDefault())
        },
        C = function(a) {
            var b = a.data.$.ctrlKey || a.data.$.metaKey,
            c = a.data.$.altKey,
            d = a.data.$.shiftKey,
            e = String.fromCharCode(a.data.$.keyCode); (b = D[(b ? "CTRL+": "") + (c ? "ALT+": "") + (d ? "SHIFT+": "") + e]) && b.length && (b = b[b.length - 1], b.keyup && (b.keyup.call(b.uiElement, b.dialog, b.key), a.data.preventDefault()))
        },
        F = function(a, b, c, d, e) { (D[c] || (D[c] = [])).push({
                uiElement: a,
                dialog: b,
                key: c,
                keyup: e || a.accessKeyUp,
                keydown: d || a.accessKeyDown
            })
        },
        J = function(a) {
            for (var b in D) {
                for (var c = D[b], d = c.length - 1; 0 <= d; d--) c[d].dialog != a && c[d].uiElement != a || c.splice(d, 1);
                0 === c.length && delete D[b]
            }
        },
        m = function(a, b) {
            a._.accessKeyMap[b] && a.selectPage(a._.accessKeyMap[b])
        },
        L = function() {}; (function() {
            CKEDITOR.ui.dialog = {
                uiElement: function(a, b, c, d, e, f, g) {
                    if (! (4 > arguments.length)) {
                        var h = (d.call ? d(b) : d) || "div",
                        k = ["<", h, " "],
                        l = (e && e.call ? e(b) : e) || {},
                        q = (f && f.call ? f(b) : f) || {},
                        n = (g && g.call ? g.call(this, a, b) : g) || "",
                        m = this.domId = q.id || CKEDITOR.tools.getNextId() + "_uiElement";
                        this.id = b.id;
                        b.requiredContent && !a.getParentEditor().filter.check(b.requiredContent) && (l.display = "none", this.notAllowed = !0);
                        q.id = m;
                        var p = {};
                        b.type && (p["cke_dialog_ui_" + b.type] = 1);
                        b.className && (p[b.className] = 1);
                        b.disabled && (p.cke_disabled = 1);
                        for (var t = q["class"] && q["class"].split ? q["class"].split(" ") : [], m = 0; m < t.length; m++) t[m] && (p[t[m]] = 1);
                        t = [];
                        for (m in p) t.push(m);
                        q["class"] = t.join(" ");
                        b.title && (q.title = b.title);
                        p = (b.style || "").split(";");
                        b.align && (t = b.align, l["margin-left"] = "left" == t ? 0 : "auto", l["margin-right"] = "right" == t ? 0 : "auto");
                        for (m in l) p.push(m + ":" + l[m]);
                        b.hidden && p.push("display:none");
                        for (m = p.length - 1; 0 <= m; m--)"" === p[m] && p.splice(m, 1);
                        0 < p.length && (q.style = (q.style ? q.style + "; ": "") + p.join("; "));
                        for (m in q) k.push(m + '="' + CKEDITOR.tools.htmlEncode(q[m]) + '" ');
                        k.push(">", n, "</", h, ">");
                        c.push(k.join("")); (this._ || (this._ = {})).dialog = a;
                        "boolean" == typeof b.isChanged && (this.isChanged = function() {
                            return b.isChanged
                        });
                        "function" == typeof b.isChanged && (this.isChanged = b.isChanged);
                        "function" == typeof b.setValue && (this.setValue = CKEDITOR.tools.override(this.setValue,
                        function(a) {
                            return function(c) {
                                a.call(this, b.setValue.call(this, c))
                            }
                        }));
                        "function" == typeof b.getValue && (this.getValue = CKEDITOR.tools.override(this.getValue,
                        function(a) {
                            return function() {
                                return b.getValue.call(this, a.call(this))
                            }
                        }));
                        CKEDITOR.event.implementOn(this);
                        this.registerEvents(b);
                        this.accessKeyUp && this.accessKeyDown && b.accessKey && F(this, a, "CTRL+" + b.accessKey);
                        var r = this;
                        a.on("load",
                        function() {
                            var b = r.getInputElement();
                            if (b) {
                                var c = r.type in {
                                    checkbox: 1,
                                    ratio: 1
                                } && CKEDITOR.env.ie && 8 > CKEDITOR.env.version ? "cke_dialog_ui_focused": "";
                                b.on("focus",
                                function() {
                                    a._.tabBarMode = !1;
                                    a._.hasFocus = !0;
                                    r.fire("focus");
                                    c && this.addClass(c)
                                });
                                b.on("blur",
                                function() {
                                    r.fire("blur");
                                    c && this.removeClass(c)
                                })
                            }
                        });
                        this.keyboardFocusable && (this.tabIndex = b.tabIndex || 0, this.focusIndex = a._.focusList.push(this) - 1, this.on("focus",
                        function() {
                            a._.currentFocusIndex = r.focusIndex
                        }));
                        CKEDITOR.tools.extend(this, b)
                    }
                },
                hbox: function(a, b, c, d, e) {
                    if (! (4 > arguments.length)) {
                        this._ || (this._ = {});
                        var f = this._.children = b,
                        g = e && e.widths || null,
                        h = e && e.height || null,
                        k, l = {
                            role: "presentation"
                        };
                        e && e.align && (l.align = e.align);
                        CKEDITOR.ui.dialog.uiElement.call(this, a, e || {
                            type: "hbox"
                        },
                        d, "table", {},
                        l,
                        function() {
                            var a = ['<tbody><tr class="cke_dialog_ui_hbox">'];
                            for (k = 0; k < c.length; k++) {
                                var b = "cke_dialog_ui_hbox_child",
                                d = [];
                                0 === k && (b = "cke_dialog_ui_hbox_first");
                                k == c.length - 1 && (b = "cke_dialog_ui_hbox_last");
                                a.push('<td class="', b, '" role="presentation" ');
                                g ? g[k] && d.push("width:" + q(g[k])) : d.push("width:" + Math.floor(100 / c.length) + "%");
                                h && d.push("height:" + q(h));
                                e && void 0 != e.padding && d.push("padding:" + q(e.padding));
                                CKEDITOR.env.ie && CKEDITOR.env.quirks && f[k].align && d.push("text-align:" + f[k].align);
                                0 < d.length && a.push('style="' + d.join("; ") + '" ');
                                a.push(">", c[k], "</td>")
                            }
                            a.push("</tr></tbody>");
                            return a.join("")
                        })
                    }
                },
                vbox: function(a, b, c, d, e) {
                    if (! (3 > arguments.length)) {
                        this._ || (this._ = {});
                        var f = this._.children = b,
                        g = e && e.width || null,
                        h = e && e.heights || null;
                        CKEDITOR.ui.dialog.uiElement.call(this, a, e || {
                            type: "vbox"
                        },
                        d, "div", null, {
                            role: "presentation"
                        },
                        function() {
                            var b = ['<table role="presentation" cellspacing="0" border="0" '];
                            b.push('style="');
                            e && e.expand && b.push("height:100%;");
                            b.push("width:" + q(g || "100%"), ";");
                            CKEDITOR.env.webkit && b.push("float:none;");
                            b.push('"');
                            b.push('align="', CKEDITOR.tools.htmlEncode(e && e.align || ("ltr" == a.getParentEditor().lang.dir ? "left": "right")), '" ');
                            b.push("><tbody>");
                            for (var d = 0; d < c.length; d++) {
                                var k = [];
                                b.push('<tr><td role="presentation" ');
                                g && k.push("width:" + q(g || "100%"));
                                h ? k.push("height:" + q(h[d])) : e && e.expand && k.push("height:" + Math.floor(100 / c.length) + "%");
                                e && void 0 != e.padding && k.push("padding:" + q(e.padding));
                                CKEDITOR.env.ie && CKEDITOR.env.quirks && f[d].align && k.push("text-align:" + f[d].align);
                                0 < k.length && b.push('style="', k.join("; "), '" ');
                                b.push(' class="cke_dialog_ui_vbox_child">', c[d], "</td></tr>")
                            }
                            b.push("</tbody></table>");
                            return b.join("")
                        })
                    }
                }
            }
        })();
        CKEDITOR.ui.dialog.uiElement.prototype = {
            getElement: function() {
                return CKEDITOR.document.getById(this.domId)
            },
            getInputElement: function() {
                return this.getElement()
            },
            getDialog: function() {
                return this._.dialog
            },
            setValue: function(a, b) {
                this.getInputElement().setValue(a); ! b && this.fire("change", {
                    value: a
                });
                return this
            },
            getValue: function() {
                return this.getInputElement().getValue()
            },
            isChanged: function() {
                return ! 1
            },
            selectParentTab: function() {
                for (var a = this.getInputElement(); (a = a.getParent()) && -1 == a.$.className.search("cke_dialog_page_contents"););
                if (!a) return this;
                a = a.getAttribute("name");
                this._.dialog._.currentTabId != a && this._.dialog.selectPage(a);
                return this
            },
            focus: function() {
                this.selectParentTab().getInputElement().focus();
                return this
            },
            registerEvents: function(a) {
                var b = /^on([A-Z]\w+)/,
                c, d = function(a, b, c, d) {
                    b.on("load",
                    function() {
                        a.getInputElement().on(c, d, a)
                    })
                },
                e;
                for (e in a) if (c = e.match(b)) this.eventProcessors[e] ? this.eventProcessors[e].call(this, this._.dialog, a[e]) : d(this, this._.dialog, c[1].toLowerCase(), a[e]);
                return this
            },
            eventProcessors: {
                onLoad: function(a, b) {
                    a.on("load", b, this)
                },
                onShow: function(a, b) {
                    a.on("show", b, this)
                },
                onHide: function(a, b) {
                    a.on("hide", b, this)
                }
            },
            accessKeyDown: function() {
                this.focus()
            },
            accessKeyUp: function() {},
            disable: function() {
                var a = this.getElement();
                this.getInputElement().setAttribute("disabled", "true");
                a.addClass("cke_disabled")
            },
            enable: function() {
                var a = this.getElement();
                this.getInputElement().removeAttribute("disabled");
                a.removeClass("cke_disabled")
            },
            isEnabled: function() {
                return ! this.getElement().hasClass("cke_disabled")
            },
            isVisible: function() {
                return this.getInputElement().isVisible()
            },
            isFocusable: function() {
                return this.isEnabled() && this.isVisible() ? !0 : !1
            }
        };
        CKEDITOR.ui.dialog.hbox.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {
            getChild: function(a) {
                if (1 > arguments.length) return this._.children.concat();
                a.splice || (a = [a]);
                return 2 > a.length ? this._.children[a[0]] : this._.children[a[0]] && this._.children[a[0]].getChild ? this._.children[a[0]].getChild(a.slice(1, a.length)) : null
            }
        },
        !0);
        CKEDITOR.ui.dialog.vbox.prototype = new CKEDITOR.ui.dialog.hbox; (function() {
            var a = {
                build: function(a, b, c) {
                    for (var d = b.children,
                    e, f = [], g = [], h = 0; h < d.length && (e = d[h]); h++) {
                        var k = [];
                        f.push(k);
                        g.push(CKEDITOR.dialog._.uiElementBuilders[e.type].build(a, e, k))
                    }
                    return new CKEDITOR.ui.dialog[b.type](a, g, f, c, b)
                }
            };
            CKEDITOR.dialog.addUIElement("hbox", a);
            CKEDITOR.dialog.addUIElement("vbox", a)
        })();
        CKEDITOR.dialogCommand = function(a, b) {
            this.dialogName = a;
            CKEDITOR.tools.extend(this, b, !0)
        };
        CKEDITOR.dialogCommand.prototype = {
            exec: function(a) {
                CKEDITOR.env.opera ? CKEDITOR.tools.setTimeout(function() {
                    a.openDialog(this.dialogName)
                },
                0, this) : a.openDialog(this.dialogName)
            },
            canUndo: !1,
            editorFocus: 1
        }; (function() {
            var a = /^([a]|[^a])+$/,
            b = /^\d*$/,
            c = /^\d*(?:\.\d+)?$/,
            d = /^(((\d*(\.\d+))|(\d*))(px|\%)?)?$/,
            e = /^(((\d*(\.\d+))|(\d*))(px|em|ex|in|cm|mm|pt|pc|\%)?)?$/i,
            f = /^(\s*[\w-]+\s*:\s*[^:;]+(?:;|$))*$/;
            CKEDITOR.VALIDATE_OR = 1;
            CKEDITOR.VALIDATE_AND = 2;
            CKEDITOR.dialog.validate = {
                functions: function() {
                    var a = arguments;
                    return function() {
                        var b = this && this.getValue ? this.getValue() : a[0],
                        c = void 0,
                        d = CKEDITOR.VALIDATE_AND,
                        e = [],
                        f;
                        for (f = 0; f < a.length; f++) if ("function" == typeof a[f]) e.push(a[f]);
                        else break;
                        f < a.length && "string" == typeof a[f] && (c = a[f], f++);
                        f < a.length && "number" == typeof a[f] && (d = a[f]);
                        var g = d == CKEDITOR.VALIDATE_AND ? !0 : !1;
                        for (f = 0; f < e.length; f++) g = d == CKEDITOR.VALIDATE_AND ? g && e[f](b) : g || e[f](b);
                        return g ? !0 : c
                    }
                },
                regex: function(a, b) {
                    return function(c) {
                        c = this && this.getValue ? this.getValue() : c;
                        return a.test(c) ? !0 : b
                    }
                },
                notEmpty: function(b) {
                    return this.regex(a, b)
                },
                integer: function(a) {
                    return this.regex(b, a)
                },
                number: function(a) {
                    return this.regex(c, a)
                },
                cssLength: function(a) {
                    return this.functions(function(a) {
                        return e.test(CKEDITOR.tools.trim(a))
                    },
                    a)
                },
                htmlLength: function(a) {
                    return this.functions(function(a) {
                        return d.test(CKEDITOR.tools.trim(a))
                    },
                    a)
                },
                inlineStyle: function(a) {
                    return this.functions(function(a) {
                        return f.test(CKEDITOR.tools.trim(a))
                    },
                    a)
                },
                equals: function(a, b) {
                    return this.functions(function(b) {
                        return b == a
                    },
                    b)
                },
                notEqual: function(a, b) {
                    return this.functions(function(b) {
                        return b != a
                    },
                    b)
                }
            };
            CKEDITOR.on("instanceDestroyed",
            function(a) {
                if (CKEDITOR.tools.isEmpty(CKEDITOR.instances)) {
                    for (var b; b = CKEDITOR.dialog._.currentTop;) b.hide();
                    for (var c in B) B[c].remove();
                    B = {}
                }
                a = a.editor._.storedDialogs;
                for (var d in a) a[d].destroy()
            })
        })();
        CKEDITOR.tools.extend(CKEDITOR.editor.prototype, {
            openDialog: function(a, b) {
                var c = null,
                d = CKEDITOR.dialog._.dialogDefinitions[a];
                null === CKEDITOR.dialog._.currentTop && s(this);
                if ("function" == typeof d) c = this._.storedDialogs || (this._.storedDialogs = {}),
                c = c[a] || (c[a] = new CKEDITOR.dialog(this, a)),
                b && b.call(c, c),
                c.show();
                else {
                    if ("failed" == d) throw r(this),
                    Error('[CKEDITOR.dialog.openDialog] Dialog "' + a + '" failed when loading definition.');
                    "string" == typeof d && CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(d),
                    function() {
                        "function" != typeof CKEDITOR.dialog._.dialogDefinitions[a] && (CKEDITOR.dialog._.dialogDefinitions[a] = "failed");
                        this.openDialog(a, b)
                    },
                    this, 0, 1)
                }
                CKEDITOR.skin.loadPart("dialog");
                return c
            }
        })
    } (), CKEDITOR.plugins.add("dialog", {
        requires: "dialogui",
        init: function(a) {
            a.on("contentDom",
            function() {
                var d = a.editable();
                d.attachListener(d, "dblclick",
                function(b) {
                    if (a.readOnly) return ! 1;
                    b = {
                        element: b.data.getTarget()
                    };
                    a.fire("doubleclick", b);
                    b.dialog && a.openDialog(b.dialog);
                    return 1
                })
            })
        }
    }),
    function() {
        CKEDITOR.plugins.add("a11yhelp", {
            requires: "dialog",
            availableLangs: {
                ar: 1,
                az: 1,
                bg: 1,
                ca: 1,
                cs: 1,
                cy: 1,
                da: 1,
                de: 1,
                el: 1,
                en: 1,
                eo: 1,
                es: 1,
                et: 1,
                fa: 1,
                fi: 1,
                fr: 1,
                "fr-ca": 1,
                gl: 1,
                gu: 1,
                he: 1,
                hi: 1,
                hr: 1,
                hu: 1,
                id: 1,
                it: 1,
                ja: 1,
                km: 1,
                ku: 1,
                lt: 1,
                lv: 1,
                mk: 1,
                mn: 1,
                nb: 1,
                nl: 1,
                no: 1,
                pl: 1,
                pt: 1,
                "pt-br": 1,
                ro: 1,
                ru: 1,
                si: 1,
                sk: 1,
                sl: 1,
                sq: 1,
                sr: 1,
                "sr-latn": 1,
                sv: 1,
                th: 1,
                tr: 1,
                ug: 1,
                uk: 1,
                vi: 1,
                "zh-cn": 1,
                "zh-tw": 1
            },
            init: function(a) {
                var d = this;
                a.addCommand("a11yHelp", {
                    exec: function() {
                        var b = a.langCode,
                        b = d.availableLangs[b] ? b: d.availableLangs[b.replace(/-.*/, "")] ? b.replace(/-.*/, "") : "en";
                        CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(d.path + "dialogs/lang/" + b + ".js"),
                        function() {
                            a.lang.a11yhelp = d.langEntries[b];
                            a.openDialog("a11yHelp")
                        })
                    },
                    modes: {
                        wysiwyg: 1,
                        source: 1
                    },
                    readOnly: 1,
                    canUndo: !1
                });
                a.setKeystroke(CKEDITOR.ALT + 48, "a11yHelp");
                CKEDITOR.dialog.add("a11yHelp", this.path + "dialogs/a11yhelp.js")
            }
        })
    } (), CKEDITOR.plugins.add("about", {
        requires: "dialog",
        init: function(a) {
            var d = a.addCommand("about", new CKEDITOR.dialogCommand("about"));
            d.modes = {
                wysiwyg: 1,
                source: 1
            };
            d.canUndo = !1;
            d.readOnly = 1;
            a.ui.addButton && a.ui.addButton("About", {
                label: a.lang.about.title,
                command: "about",
                toolbar: "about"
            });
            CKEDITOR.dialog.add("about", this.path + "dialogs/about.js")
        }
    }), CKEDITOR.plugins.add("basicstyles", {
        init: function(a) {
            var d = 0,
            b = function(b, e, g, l) {
                if (l) {
                    l = new CKEDITOR.style(l);
                    var n = c[g];
                    n.unshift(l);
                    a.attachStyleStateChange(l,
                    function(b) { ! a.readOnly && a.getCommand(g).setState(b)
                    });
                    a.addCommand(g, new CKEDITOR.styleCommand(l, {
                        contentForms: n
                    }));
                    a.ui.addButton && a.ui.addButton(b, {
                        label: e,
                        command: g,
                        toolbar: "basicstyles," + (d += 10)
                    })
                }
            },
            c = {
                bold: ["strong", "b", ["span",
                function(a) {
                    a = a.styles["font-weight"];
                    return "bold" == a || 700 <= +a
                }]],
                italic: ["em", "i", ["span",
                function(a) {
                    return "italic" == a.styles["font-style"]
                }]],
                underline: ["u", ["span",
                function(a) {
                    return "underline" == a.styles["text-decoration"]
                }]],
                strike: ["s", "strike", ["span",
                function(a) {
                    return "line-through" == a.styles["text-decoration"]
                }]],
                subscript: ["sub"],
                superscript: ["sup"]
            },
            e = a.config,
            g = a.lang.basicstyles;
            b("Bold", g.bold, "bold", e.coreStyles_bold);
            b("Italic", g.italic, "italic", e.coreStyles_italic);
            b("Underline", g.underline, "underline", e.coreStyles_underline);
            b("Strike", g.strike, "strike", e.coreStyles_strike);
            b("Subscript", g.subscript, "subscript", e.coreStyles_subscript);
            b("Superscript", g.superscript, "superscript", e.coreStyles_superscript);
            a.setKeystroke([[CKEDITOR.CTRL + 66, "bold"], [CKEDITOR.CTRL + 73, "italic"], [CKEDITOR.CTRL + 85, "underline"]])
        }
    }), CKEDITOR.config.coreStyles_bold = {
        element: "strong",
        overrides: "b"
    },
    CKEDITOR.config.coreStyles_italic = {
        element: "em",
        overrides: "i"
    },
    CKEDITOR.config.coreStyles_underline = {
        element: "u"
    },
    CKEDITOR.config.coreStyles_strike = {
        element: "s",
        overrides: "strike"
    },
    CKEDITOR.config.coreStyles_subscript = {
        element: "sub"
    },
    CKEDITOR.config.coreStyles_superscript = {
        element: "sup"
    },
    function() {
        function a(a, b, c, d) {
            if (!a.isReadOnly() && !a.equals(c.editable())) {
                CKEDITOR.dom.element.setMarker(d, a, "bidi_processed", 1);
                d = a;
                for (var e = c.editable(); (d = d.getParent()) && !d.equals(e);) if (d.getCustomData("bidi_processed")) {
                    a.removeStyle("direction");
                    a.removeAttribute("dir");
                    return
                }
                d = "useComputedState" in c.config ? c.config.useComputedState: 1; (d ? a.getComputedStyle("direction") : a.getStyle("direction") || a.hasAttribute("dir")) != b && (a.removeStyle("direction"), d ? (a.removeAttribute("dir"), b != a.getComputedStyle("direction") && a.setAttribute("dir", b)) : a.setAttribute("dir", b), c.forceNextSelectionCheck())
            }
        }
        function d(a, b, c) {
            var d = a.getCommonAncestor(!1, !0);
            a = a.clone();
            a.enlarge(c == CKEDITOR.ENTER_BR ? CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS: CKEDITOR.ENLARGE_BLOCK_CONTENTS);
            if (a.checkBoundaryOfElement(d, CKEDITOR.START) && a.checkBoundaryOfElement(d, CKEDITOR.END)) {
                for (var e; d && d.type == CKEDITOR.NODE_ELEMENT && (e = d.getParent()) && 1 == e.getChildCount() && !(d.getName() in b);) d = e;
                return d.type == CKEDITOR.NODE_ELEMENT && d.getName() in b && d
            }
        }
        function b(b) {
            return {
                context: "p",
                allowedContent: {
                    "h1 h2 h3 h4 h5 h6 table ul ol blockquote div tr p div li td": {
                        propertiesOnly: !0,
                        attributes: "dir"
                    }
                },
                requiredContent: "p[dir]",
                refresh: function(a, b) {
                    var c = a.config.useComputedState,
                    d, c = void 0 === c || c;
                    if (!c) {
                        d = b.lastElement;
                        for (var e = a.editable(); d && !(d.getName() in f || d.equals(e));) {
                            var g = d.getParent();
                            if (!g) break;
                            d = g
                        }
                    }
                    d = d || b.block || b.blockLimit;
                    d.equals(a.editable()) && (e = a.getSelection().getRanges()[0].getEnclosedNode()) && e.type == CKEDITOR.NODE_ELEMENT && (d = e);
                    d && (c = c ? d.getComputedStyle("direction") : d.getStyle("direction") || d.getAttribute("dir"), a.getCommand("bidirtl").setState("rtl" == c ? CKEDITOR.TRISTATE_ON: CKEDITOR.TRISTATE_OFF), a.getCommand("bidiltr").setState("ltr" == c ? CKEDITOR.TRISTATE_ON: CKEDITOR.TRISTATE_OFF));
                    c = (b.block || b.blockLimit || a.editable()).getDirection(1);
                    c != (a._.selDir || a.lang.dir) && (a._.selDir = c, a.fire("contentDirChanged", c))
                },
                exec: function(c) {
                    var f = c.getSelection(),
                    h = c.config.enterMode,
                    k = f.getRanges();
                    if (k && k.length) {
                        for (var l = {},
                        u = f.createBookmarks(), k = k.createIterator(), w, v = 0; w = k.getNextRange(1);) {
                            var A = w.getEnclosedNode();
                            A && (!A || A.type == CKEDITOR.NODE_ELEMENT && A.getName() in g) || (A = d(w, e, h));
                            A && a(A, b, c, l);
                            var E = new CKEDITOR.dom.walker(w),
                            z = u[v].startNode,
                            B = u[v++].endNode;
                            E.evaluator = function(a) {
                                return !! (a.type == CKEDITOR.NODE_ELEMENT && a.getName() in e && (a.getName() != (h == CKEDITOR.ENTER_P ? "p": "div") || a.getParent().type != CKEDITOR.NODE_ELEMENT || "blockquote" != a.getParent().getName()) && a.getPosition(z) & CKEDITOR.POSITION_FOLLOWING && (a.getPosition(B) & CKEDITOR.POSITION_PRECEDING + CKEDITOR.POSITION_CONTAINS) == CKEDITOR.POSITION_PRECEDING)
                            };
                            for (; A = E.next();) a(A, b, c, l);
                            w = w.createIterator();
                            for (w.enlargeBr = h != CKEDITOR.ENTER_BR; A = w.getNextParagraph(h == CKEDITOR.ENTER_P ? "p": "div");) a(A, b, c, l)
                        }
                        CKEDITOR.dom.element.clearAllMarkers(l);
                        c.forceNextSelectionCheck();
                        f.selectBookmarks(u);
                        c.focus()
                    }
                }
            }
        }
        function c(a) {
            var b = a == k.setAttribute,
            c = a == k.removeAttribute,
            d = /\bdirection\s*:\s*(.*?)\s*(:?$|;)/;
            return function(e, f) {
                if (!this.isReadOnly()) {
                    var g;
                    if (g = e == (b || c ? "dir": "direction") || "style" == e && (c || d.test(f))) {
                        a: {
                            g = this;
                            for (var h = g.getDocument().getBody().getParent(); g;) {
                                if (g.equals(h)) {
                                    g = !1;
                                    break a
                                }
                                g = g.getParent()
                            }
                            g = !0
                        }
                        g = !g
                    }
                    if (g && (g = this.getDirection(1), h = a.apply(this, arguments), g != this.getDirection(1))) return this.getDocument().fire("dirChanged", this),
                    h
                }
                return a.apply(this, arguments)
            }
        }
        var e = {
            table: 1,
            ul: 1,
            ol: 1,
            blockquote: 1,
            div: 1
        },
        g = {},
        f = {};
        CKEDITOR.tools.extend(g, e, {
            tr: 1,
            p: 1,
            div: 1,
            li: 1
        });
        CKEDITOR.tools.extend(f, g, {
            td: 1
        });
        CKEDITOR.plugins.add("bidi", {
            init: function(a) {
                function c(b, d, e, f, g) {
                    a.addCommand(e, new CKEDITOR.command(a, f));
                    a.ui.addButton && a.ui.addButton(b, {
                        label: d,
                        command: e,
                        toolbar: "bidi," + g
                    })
                }
                if (!a.blockless) {
                    var d = a.lang.bidi;
                    a.ui.addToolbarGroup && a.ui.addToolbarGroup("bidi", "align", "paragraph");
                    c("BidiLtr", d.ltr, "bidiltr", b("ltr"), 10);
                    c("BidiRtl", d.rtl, "bidirtl", b("rtl"), 20);
                    a.on("contentDom",
                    function() {
                        a.document.on("dirChanged",
                        function(b) {
                            a.fire("dirChanged", {
                                node: b.data,
                                dir: b.data.getDirection(1)
                            })
                        })
                    });
                    a.on("contentDirChanged",
                    function(b) {
                        b = (a.lang.dir != b.data ? "add": "remove") + "Class";
                        var c = a.ui.space(a.config.toolbarLocation);
                        if (c) c[b]("cke_mixed_dir_content")
                    })
                }
            }
        });
        for (var k = CKEDITOR.dom.element.prototype,
        h = ["setStyle", "removeStyle", "setAttribute", "removeAttribute"], l = 0; l < h.length; l++) k[h[l]] = CKEDITOR.tools.override(k[h[l]], c)
    } (),
    function() {
        var a = {
            exec: function(a) {
                var b = a.getCommand("blockquote").state,
                c = a.getSelection(),
                e = c && c.getRanges(!0)[0];
                if (e) {
                    var g = c.createBookmarks();
                    if (CKEDITOR.env.ie) {
                        var f = g[0].startNode,
                        k = g[0].endNode,
                        h;
                        if (f && "blockquote" == f.getParent().getName()) for (h = f; h = h.getNext();) if (h.type == CKEDITOR.NODE_ELEMENT && h.isBlockBoundary()) {
                            f.move(h, !0);
                            break
                        }
                        if (k && "blockquote" == k.getParent().getName()) for (h = k; h = h.getPrevious();) if (h.type == CKEDITOR.NODE_ELEMENT && h.isBlockBoundary()) {
                            k.move(h);
                            break
                        }
                    }
                    var l = e.createIterator();
                    l.enlargeBr = a.config.enterMode != CKEDITOR.ENTER_BR;
                    if (b == CKEDITOR.TRISTATE_OFF) {
                        for (f = []; b = l.getNextParagraph();) f.push(b);
                        1 > f.length && (b = a.document.createElement(a.config.enterMode == CKEDITOR.ENTER_P ? "p": "div"), k = g.shift(), e.insertNode(b), b.append(new CKEDITOR.dom.text("\ufeff", a.document)), e.moveToBookmark(k), e.selectNodeContents(b), e.collapse(!0), k = e.createBookmark(), f.push(b), g.unshift(k));
                        h = f[0].getParent();
                        e = [];
                        for (k = 0; k < f.length; k++) b = f[k],
                        h = h.getCommonAncestor(b.getParent());
                        for (b = {
                            table: 1,
                            tbody: 1,
                            tr: 1,
                            ol: 1,
                            ul: 1
                        }; b[h.getName()];) h = h.getParent();
                        for (k = null; 0 < f.length;) {
                            for (b = f.shift(); ! b.getParent().equals(h);) b = b.getParent();
                            b.equals(k) || e.push(b);
                            k = b
                        }
                        for (; 0 < e.length;) if (b = e.shift(), "blockquote" == b.getName()) {
                            for (k = new CKEDITOR.dom.documentFragment(a.document); b.getFirst();) k.append(b.getFirst().remove()),
                            f.push(k.getLast());
                            k.replace(b)
                        } else f.push(b);
                        e = a.document.createElement("blockquote");
                        for (e.insertBefore(f[0]); 0 < f.length;) b = f.shift(),
                        e.append(b)
                    } else if (b == CKEDITOR.TRISTATE_ON) {
                        k = [];
                        for (h = {}; b = l.getNextParagraph();) {
                            for (f = e = null; b.getParent();) {
                                if ("blockquote" == b.getParent().getName()) {
                                    e = b.getParent();
                                    f = b;
                                    break
                                }
                                b = b.getParent()
                            }
                            e && f && !f.getCustomData("blockquote_moveout") && (k.push(f), CKEDITOR.dom.element.setMarker(h, f, "blockquote_moveout", !0))
                        }
                        CKEDITOR.dom.element.clearAllMarkers(h);
                        b = [];
                        f = [];
                        for (h = {}; 0 < k.length;) l = k.shift(),
                        e = l.getParent(),
                        l.getPrevious() ? l.getNext() ? (l.breakParent(l.getParent()), f.push(l.getNext())) : l.remove().insertAfter(e) : l.remove().insertBefore(e),
                        e.getCustomData("blockquote_processed") || (f.push(e), CKEDITOR.dom.element.setMarker(h, e, "blockquote_processed", !0)),
                        b.push(l);
                        CKEDITOR.dom.element.clearAllMarkers(h);
                        for (k = f.length - 1; 0 <= k; k--) {
                            e = f[k];
                            a: {
                                h = e;
                                for (var l = 0,
                                n = h.getChildCount(), p = void 0; l < n && (p = h.getChild(l)); l++) if (p.type == CKEDITOR.NODE_ELEMENT && p.isBlockBoundary()) {
                                    h = !1;
                                    break a
                                }
                                h = !0
                            }
                            h && e.remove()
                        }
                        if (a.config.enterMode == CKEDITOR.ENTER_BR) for (e = !0; b.length;) if (l = b.shift(), "div" == l.getName()) {
                            k = new CKEDITOR.dom.documentFragment(a.document);
                            e && l.getPrevious() && (l.getPrevious().type != CKEDITOR.NODE_ELEMENT || !l.getPrevious().isBlockBoundary()) && k.append(a.document.createElement("br"));
                            for (e = l.getNext() && !(l.getNext().type == CKEDITOR.NODE_ELEMENT && l.getNext().isBlockBoundary()); l.getFirst();) l.getFirst().remove().appendTo(k);
                            e && k.append(a.document.createElement("br"));
                            k.replace(l);
                            e = !1
                        }
                    }
                    c.selectBookmarks(g);
                    a.focus()
                }
            },
            refresh: function(a, b) {
                this.setState(a.elementPath(b.block || b.blockLimit).contains("blockquote", 1) ? CKEDITOR.TRISTATE_ON: CKEDITOR.TRISTATE_OFF)
            },
            context: "blockquote",
            allowedContent: "blockquote",
            requiredContent: "blockquote"
        };
        CKEDITOR.plugins.add("blockquote", {
            init: function(d) {
                d.blockless || (d.addCommand("blockquote", a), d.ui.addButton && d.ui.addButton("Blockquote", {
                    label: d.lang.blockquote.toolbar,
                    command: "blockquote",
                    toolbar: "blocks,10"
                }))
            }
        })
    } (), "use strict",
    function() {
        function a(a) {
            function b() {
                var c = a.editable();
                c.on(D,
                function(a) {
                    CKEDITOR.env.ie && z || v(a)
                });
                CKEDITOR.env.ie && c.on("paste",
                function(b) {
                    B || (e(), b.data.preventDefault(), v(b), s("paste") || a.openDialog("paste"))
                });
                CKEDITOR.env.ie && (c.on("contextmenu", g, null, null, 0), c.on("beforepaste",
                function(a) {
                    a.data && !a.data.$.ctrlKey && g()
                },
                null, null, 0));
                c.on("beforecut",
                function() { ! z && q(a)
                });
                var d;
                c.attachListener(CKEDITOR.env.ie ? c: a.document.getDocumentElement(), "mouseup",
                function() {
                    d = setTimeout(function() {
                        A()
                    },
                    0)
                });
                a.on("destroy",
                function() {
                    clearTimeout(d)
                });
                c.on("keyup", A)
            }
            function c(b) {
                return {
                    type: b,
                    canUndo: "cut" == b,
                    startDisabled: !0,
                    exec: function() {
                        "cut" == this.type && q();
                        var b, c = this.type;
                        if (CKEDITOR.env.ie) b = s(c);
                        else try {
                            b = a.document.$.execCommand(c, !1, null)
                        } catch(d) {
                            b = !1
                        }
                        b || alert(a.lang.clipboard[this.type + "Error"]);
                        return b
                    }
                }
            }
            function d() {
                return {
                    canUndo: !1,
                    async: !0,
                    exec: function(a, b) {
                        var c = function(b, c) {
                            b && r(b.type, b.dataValue, !!c);
                            a.fire("afterCommandExec", {
                                name: "paste",
                                command: d,
                                returnValue: !!b
                            })
                        },
                        d = this;
                        "string" == typeof b ? c({
                            type: "auto",
                            dataValue: b
                        },
                        1) : a.getClipboardData(c)
                    }
                }
            }
            function e() {
                B = 1;
                setTimeout(function() {
                    B = 0
                },
                100)
            }
            function g() {
                z = 1;
                setTimeout(function() {
                    z = 0
                },
                10)
            }
            function s(b) {
                var c = a.document,
                d = c.getBody(),
                e = !1,
                g = function() {
                    e = !0
                };
                d.on(b, g); (7 < CKEDITOR.env.version ? c.$: c.$.selection.createRange()).execCommand(b);
                d.removeListener(b, g);
                return e
            }
            function r(b, c, d) {
                b = {
                    type: b
                };
                if (d && !a.fire("beforePaste", b) || !c) return ! 1;
                b.dataValue = c;
                return a.fire("paste", b)
            }
            function q() {
                if (CKEDITOR.env.ie && !CKEDITOR.env.quirks) {
                    var b = a.getSelection(),
                    c,
                    d,
                    e;
                    b.getType() == CKEDITOR.SELECTION_ELEMENT && (c = b.getSelectedElement()) && (d = b.getRanges()[0], e = a.document.createText(""), e.insertBefore(c), d.setStartBefore(e), d.setEndAfter(c), b.selectRanges([d]), setTimeout(function() {
                        c.getParent() && (e.remove(), b.selectElement(c))
                    },
                    0))
                }
            }
            function t(b, c) {
                var d = a.document,
                e = a.editable(),
                g = function(a) {
                    a.cancel()
                },
                h = CKEDITOR.env.gecko && 10902 >= CKEDITOR.env.version,
                k;
                if (!d.getById("cke_pastebin")) {
                    var l = a.getSelection(),
                    q = l.createBookmarks(),
                    n = new CKEDITOR.dom.element(!CKEDITOR.env.webkit && !e.is("body") || CKEDITOR.env.ie || CKEDITOR.env.opera ? "div": "body", d);
                    n.setAttribute("id", "cke_pastebin");
                    CKEDITOR.env.opera && n.appendBogus();
                    var p = 0,
                    d = d.getWindow();
                    h ? (n.insertAfter(q[0].startNode), n.setStyle("display", "inline")) : (CKEDITOR.env.webkit ? (e.append(n), n.addClass("cke_editable"), e.is("body") || (h = "static" != e.getComputedStyle("position") ? e: CKEDITOR.dom.element.get(e.$.offsetParent), p = h.getDocumentPosition().y)) : e.getAscendant(CKEDITOR.env.ie || CKEDITOR.env.opera ? "body": "html", 1).append(n), n.setStyles({
                        position: "absolute",
                        top: d.getScrollPosition().y - p + 10 + "px",
                        width: "1px",
                        height: Math.max(1, d.getViewPaneSize().height - 20) + "px",
                        overflow: "hidden",
                        margin: 0,
                        padding: 0
                    })); (h = n.getParent().isReadOnly()) ? (n.setOpacity(0), n.setAttribute("contenteditable", !0)) : n.setStyle("ltr" == a.config.contentsLangDirection ? "left": "right", "-1000px");
                    a.on("selectionChange", g, null, null, 0);
                    CKEDITOR.env.webkit && (k = e.once("blur", g, null, null, -100));
                    h && n.focus();
                    h = new CKEDITOR.dom.range(n);
                    h.selectNodeContents(n);
                    var t = h.select();
                    CKEDITOR.env.ie && (k = e.once("blur",
                    function() {
                        a.lockSelection(t)
                    }));
                    var w = CKEDITOR.document.getWindow().getScrollPosition().y;
                    setTimeout(function() {
                        if (CKEDITOR.env.webkit || CKEDITOR.env.opera) CKEDITOR.document[CKEDITOR.env.webkit ? "getBody": "getDocumentElement"]().$.scrollTop = w;
                        k && k.removeListener();
                        CKEDITOR.env.ie && e.focus();
                        l.selectBookmarks(q);
                        n.remove();
                        var b;
                        CKEDITOR.env.webkit && (b = n.getFirst()) && b.is && b.hasClass("Apple-style-span") && (n = b);
                        a.removeListener("selectionChange", g);
                        c(n.getHtml())
                    },
                    0)
                }
            }
            function u() {
                if (CKEDITOR.env.ie) {
                    a.focus();
                    e();
                    var b = a.focusManager;
                    b.lock();
                    if (a.editable().fire(D) && !s("paste")) return b.unlock(),
                    !1;
                    b.unlock()
                } else try {
                    if (a.editable().fire(D) && !a.document.$.execCommand("Paste", !1, null)) throw 0;
                } catch(c) {
                    return ! 1
                }
                return ! 0
            }
            function w(b) {
                if ("wysiwyg" == a.mode) switch (b.data.keyCode) {
                case CKEDITOR.CTRL + 86 : case CKEDITOR.SHIFT + 45 : b = a.editable();
                    e(); ! CKEDITOR.env.ie && b.fire("beforepaste"); (CKEDITOR.env.opera || CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version) && b.fire("paste");
                    break;
                case CKEDITOR.CTRL + 88 : case CKEDITOR.SHIFT + 46 : a.fire("saveSnapshot"),
                    setTimeout(function() {
                        a.fire("saveSnapshot")
                    },
                    0)
                }
            }
            function v(b) {
                var c = {
                    type: "auto"
                },
                d = a.fire("beforePaste", c);
                t(b,
                function(a) {
                    a = a.replace(/<span[^>]+data-cke-bookmark[^<]*?<\/span>/ig, "");
                    d && r(c.type, a, 0, 1)
                })
            }
            function A() {
                if ("wysiwyg" == a.mode) {
                    var b = E("Paste");
                    a.getCommand("cut").setState(E("Cut"));
                    a.getCommand("copy").setState(E("Copy"));
                    a.getCommand("paste").setState(b);
                    a.fire("pasteState", b)
                }
            }
            function E(b) {
                var c;
                if (x && b in {
                    Paste: 1,
                    Cut: 1
                }) return CKEDITOR.TRISTATE_DISABLED;
                if ("Paste" == b) {
                    CKEDITOR.env.ie && (z = 1);
                    try {
                        c = a.document.$.queryCommandEnabled(b) || CKEDITOR.env.webkit
                    } catch(d) {}
                    z = 0
                } else b = a.getSelection(),
                c = b.getRanges(),
                c = b.getType() != CKEDITOR.SELECTION_NONE && !(1 == c.length && c[0].collapsed);
                return c ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED
            }
            var z = 0,
            B = 0,
            x = 0,
            D = CKEDITOR.env.ie ? "beforepaste": "paste"; (function() {
                a.on("key", w);
                a.on("contentDom", b);
                a.on("selectionChange",
                function(a) {
                    x = a.data.selection.getRanges()[0].checkReadOnly();
                    A()
                });
                a.contextMenu && a.contextMenu.addListener(function(a, b) {
                    x = b.getRanges()[0].checkReadOnly();
                    return {
                        cut: E("Cut"),
                        copy: E("Copy"),
                        paste: E("Paste")
                    }
                })
            })(); (function() {
                function b(c, d, e, g, h) {
                    var k = a.lang.clipboard[d];
                    a.addCommand(d, e);
                    a.ui.addButton && a.ui.addButton(c, {
                        label: k,
                        command: d,
                        toolbar: "clipboard," + g
                    });
                    a.addMenuItems && a.addMenuItem(d, {
                        label: k,
                        command: d,
                        group: "clipboard",
                        order: h
                    })
                }
                b("Cut", "cut", c("cut"), 10, 1);
                b("Copy", "copy", c("copy"), 20, 4);
                b("Paste", "paste", d(), 30, 8)
            })();
            a.getClipboardData = function(b, c) {
                function d(a) {
                    a.removeListener();
                    a.cancel();
                    c(a.data)
                }
                function e(a) {
                    a.removeListener();
                    a.cancel();
                    l = !0;
                    c({
                        type: k,
                        dataValue: a.data
                    })
                }
                function g() {
                    this.customTitle = b && b.title
                }
                var h = !1,
                k = "auto",
                l = !1;
                c || (c = b, b = null);
                a.on("paste", d, null, null, 0);
                a.on("beforePaste",
                function(a) {
                    a.removeListener();
                    h = !0;
                    k = a.data.type
                },
                null, null, 1E3); ! 1 === u() && (a.removeListener("paste", d), h && a.fire("pasteDialog", g) ? (a.on("pasteDialogCommit", e), a.on("dialogHide",
                function(a) {
                    a.removeListener();
                    a.data.removeListener("pasteDialogCommit", e);
                    setTimeout(function() {
                        l || c(null)
                    },
                    10)
                })) : c(null))
            }
        }
        function d(a) {
            if (CKEDITOR.env.webkit) {
                if (!a.match(/^[^<]*$/g) && !a.match(/^(<div><br( ?\/)?><\/div>|<div>[^<]*<\/div>)*$/gi)) return "html"
            } else if (CKEDITOR.env.ie) {
                if (!a.match(/^([^<]|<br( ?\/)?>)*$/gi) && !a.match(/^(<p>([^<]|<br( ?\/)?>)*<\/p>|(\r\n))*$/gi)) return "html"
            } else if (CKEDITOR.env.gecko || CKEDITOR.env.opera) {
                if (!a.match(/^([^<]|<br( ?\/)?>)*$/gi)) return "html"
            } else return "html";
            return "htmlifiedtext"
        }
        function b(a, b) {
            function c(a) {
                return CKEDITOR.tools.repeat("</p><p>", ~~ (a / 2)) + (1 == a % 2 ? "<br>": "")
            }
            b = b.replace(/\s+/g, " ").replace(/> +</g, "><").replace(/<br ?\/>/gi, "<br>");
            b = b.replace(/<\/?[A-Z]+>/g,
            function(a) {
                return a.toLowerCase()
            });
            if (b.match(/^[^<]$/)) return b;
            CKEDITOR.env.webkit && -1 < b.indexOf("<div>") && (b = b.replace(/^(<div>(<br>|)<\/div>)(?!$|(<div>(<br>|)<\/div>))/g, "<br>").replace(/^(<div>(<br>|)<\/div>){2}(?!$)/g, "<div></div>"), b.match(/<div>(<br>|)<\/div>/) && (b = "<p>" + b.replace(/(<div>(<br>|)<\/div>)+/g,
            function(a) {
                return c(a.split("</div><div>").length + 1)
            }) + "</p>"), b = b.replace(/<\/div><div>/g, "<br>"), b = b.replace(/<\/?div>/g, "")); (CKEDITOR.env.gecko || CKEDITOR.env.opera) && a.enterMode != CKEDITOR.ENTER_BR && (CKEDITOR.env.gecko && (b = b.replace(/^<br><br>$/, "<br>")), -1 < b.indexOf("<br><br>") && (b = "<p>" + b.replace(/(<br>){2,}/g,
            function(a) {
                return c(a.length / 4)
            }) + "</p>"));
            return g(a, b)
        }
        function c() {
            var a = new CKEDITOR.htmlParser.filter,
            b = {
                blockquote: 1,
                dl: 1,
                fieldset: 1,
                h1: 1,
                h2: 1,
                h3: 1,
                h4: 1,
                h5: 1,
                h6: 1,
                ol: 1,
                p: 1,
                table: 1,
                ul: 1
            },
            c = CKEDITOR.tools.extend({
                br: 0
            },
            CKEDITOR.dtd.$inline),
            d = {
                p: 1,
                br: 1,
                "cke:br": 1
            },
            e = CKEDITOR.dtd,
            g = CKEDITOR.tools.extend({
                area: 1,
                basefont: 1,
                embed: 1,
                iframe: 1,
                map: 1,
                object: 1,
                param: 1
            },
            CKEDITOR.dtd.$nonBodyContent, CKEDITOR.dtd.$cdata),
            s = function(a) {
                delete a.name;
                a.add(new CKEDITOR.htmlParser.text(" "))
            },
            r = function(a) {
                for (var b = a,
                c; (b = b.next) && b.name && b.name.match(/^h\d$/);) for (c = new CKEDITOR.htmlParser.element("cke:br"), c.isEmpty = !0, a.add(c); c = b.children.shift();) a.add(c)
            };
            a.addRules({
                elements: {
                    h1: r,
                    h2: r,
                    h3: r,
                    h4: r,
                    h5: r,
                    h6: r,
                    img: function(a) {
                        a = CKEDITOR.tools.trim(a.attributes.alt || "");
                        var b = " ";
                        a && !a.match(/(^http|\.(jpe?g|gif|png))/i) && (b = " [" + a + "] ");
                        return new CKEDITOR.htmlParser.text(b)
                    },
                    td: s,
                    th: s,
                    $: function(a) {
                        var f = a.name,
                        r;
                        if (g[f]) return ! 1;
                        delete a.attributes;
                        if ("br" == f) return a;
                        if (b[f]) a.name = "p";
                        else if (c[f]) delete a.name;
                        else if (e[f]) {
                            r = new CKEDITOR.htmlParser.element("cke:br");
                            r.isEmpty = !0;
                            if (CKEDITOR.dtd.$empty[f]) return r;
                            a.add(r, 0);
                            r = r.clone();
                            r.isEmpty = !0;
                            a.add(r);
                            delete a.name
                        }
                        d[a.name] || delete a.name;
                        return a
                    }
                }
            });
            return a
        }
        function e(a, b, c) {
            b = new CKEDITOR.htmlParser.fragment.fromHtml(b);
            var d = new CKEDITOR.htmlParser.basicWriter;
            b.writeHtml(d, c);
            b = d.getHtml();
            b = b.replace(/\s*(<\/?[a-z:]+ ?\/?>)\s*/g, "$1").replace(/(<cke:br \/>){2,}/g, "<cke:br />").replace(/(<cke:br \/>)(<\/?p>|<br \/>)/g, "$2").replace(/(<\/?p>|<br \/>)(<cke:br \/>)/g, "$1").replace(/<(cke:)?br( \/)?>/g, "<br>").replace(/<p><\/p>/g, "");
            var e = 0;
            b = b.replace(/<\/?p>/g,
            function(a) {
                if ("<p>" == a) {
                    if (1 < ++e) return "</p><p>"
                } else if (0 < --e) return "</p><p>";
                return a
            }).replace(/<p><\/p>/g, "");
            return g(a, b)
        }
        function g(a, b) {
            a.enterMode == CKEDITOR.ENTER_BR ? b = b.replace(/(<\/p><p>)+/g,
            function(a) {
                return CKEDITOR.tools.repeat("<br>", 2 * (a.length / 7))
            }).replace(/<\/?p>/g, "") : a.enterMode == CKEDITOR.ENTER_DIV && (b = b.replace(/<(\/)?p>/g, "<$1div>"));
            return b
        }
        CKEDITOR.plugins.add("clipboard", {
            requires: "dialog",
            init: function(f) {
                var g;
                a(f);
                CKEDITOR.dialog.add("paste", CKEDITOR.getUrl(this.path + "dialogs/paste.js"));
                f.on("paste",
                function(a) {
                    var b = a.data.dataValue,
                    c = CKEDITOR.dtd.$block; - 1 < b.indexOf("Apple-") && (b = b.replace(/<span class="Apple-converted-space">&nbsp;<\/span>/gi, " "), "html" != a.data.type && (b = b.replace(/<span class="Apple-tab-span"[^>]*>([^<]*)<\/span>/gi,
                    function(a, b) {
                        return b.replace(/\t/g, "&nbsp;&nbsp; &nbsp;")
                    })), -1 < b.indexOf('<br class="Apple-interchange-newline">') && (a.data.startsWithEOL = 1, a.data.preSniffing = "html", b = b.replace(/<br class="Apple-interchange-newline">/, "")), b = b.replace(/(<[^>]+) class="Apple-[^"]*"/gi, "$1"));
                    if (b.match(/^<[^<]+cke_(editable|contents)/i)) {
                        var d, e, f = new CKEDITOR.dom.element("div");
                        for (f.setHtml(b); 1 == f.getChildCount() && (d = f.getFirst()) && d.type == CKEDITOR.NODE_ELEMENT && (d.hasClass("cke_editable") || d.hasClass("cke_contents"));) f = e = d;
                        e && (b = e.getHtml().replace(/<br>$/i, ""))
                    }
                    CKEDITOR.env.ie ? b = b.replace(/^&nbsp;(?: |\r\n)?<(\w+)/g,
                    function(b, d) {
                        return d.toLowerCase() in c ? (a.data.preSniffing = "html", "<" + d) : b
                    }) : CKEDITOR.env.webkit ? b = b.replace(/<\/(\w+)><div><br><\/div>$/,
                    function(b, d) {
                        return d in c ? (a.data.endsWithEOL = 1, "</" + d + ">") : b
                    }) : CKEDITOR.env.gecko && (b = b.replace(/(\s)<br>$/, "$1"));
                    a.data.dataValue = b
                },
                null, null, 3);
                f.on("paste",
                function(a) {
                    a = a.data;
                    var l = a.type,
                    n = a.dataValue,
                    p, s = f.config.clipboard_defaultContentType || "html";
                    p = "html" == l || "html" == a.preSniffing ? "html": d(n);
                    "htmlifiedtext" == p ? n = b(f.config, n) : "text" == l && "html" == p && (n = e(f.config, n, g || (g = c(f))));
                    a.startsWithEOL && (n = '<br data-cke-eol="1">' + n);
                    a.endsWithEOL && (n += '<br data-cke-eol="1">');
                    "auto" == l && (l = "html" == p || "html" == s ? "html": "text");
                    a.type = l;
                    a.dataValue = n;
                    delete a.preSniffing;
                    delete a.startsWithEOL;
                    delete a.endsWithEOL
                },
                null, null, 6);
                f.on("paste",
                function(a) {
                    a = a.data;
                    f.insertHtml(a.dataValue, a.type);
                    setTimeout(function() {
                        f.fire("afterPaste")
                    },
                    0)
                },
                null, null, 1E3);
                f.on("pasteDialog",
                function(a) {
                    setTimeout(function() {
                        f.openDialog("paste", a.data)
                    },
                    0)
                })
            }
        })
    } (),
    function() {
        var a = '<a id="{id}" class="cke_button cke_button__{name} cke_button_{state} {cls}"' + (CKEDITOR.env.gecko && 10900 <= CKEDITOR.env.version && !CKEDITOR.env.hc ? "": '" href="javascript:void(\'{titleJs}\')"') + ' title="{title}" tabindex="-1" hidefocus="true" role="button" aria-labelledby="{id}_label" aria-haspopup="{hasArrow}"';
        if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac) a += ' onkeypress="return false;"';
        CKEDITOR.env.gecko && (a += ' onblur="this.style.cssText = this.style.cssText;"');
        var a = a + (' onkeydown="return CKEDITOR.tools.callFunction({keydownFn},event);" onfocus="return CKEDITOR.tools.callFunction({focusFn},event);"  onmousedown="return CKEDITOR.tools.callFunction({mousedownFn},event);" ' + (CKEDITOR.env.ie ? 'onclick="return false;" onmouseup': "onclick") + '="CKEDITOR.tools.callFunction({clickFn},this);return false;"><span class="cke_button_icon cke_button__{iconName}_icon" style="{style}"'),
        a = a + '>&nbsp;</span><span id="{id}_label" class="cke_button_label cke_button__{name}_label" aria-hidden="false">{label}</span>{arrowHtml}</a>',
        d = CKEDITOR.addTemplate("buttonArrow", '<span class="cke_button_arrow">' + (CKEDITOR.env.hc ? "&#9660;": "") + "</span>"),
        b = CKEDITOR.addTemplate("button", a);
        CKEDITOR.plugins.add("button", {
            beforeInit: function(a) {
                a.ui.addHandler(CKEDITOR.UI_BUTTON, CKEDITOR.ui.button.handler)
            }
        });
        CKEDITOR.UI_BUTTON = "button";
        CKEDITOR.ui.button = function(a) {
            CKEDITOR.tools.extend(this, a, {
                title: a.label,
                click: a.click ||
                function(b) {
                    b.execCommand(a.command)
                }
            });
            this._ = {}
        };
        CKEDITOR.ui.button.handler = {
            create: function(a) {
                return new CKEDITOR.ui.button(a)
            }
        };
        CKEDITOR.ui.button.prototype = {
            render: function(a, e) {
                var g = CKEDITOR.env,
                f = this._.id = CKEDITOR.tools.getNextId(),
                k = "",
                h = this.command,
                l;
                this._.editor = a;
                var n = {
                    id: f,
                    button: this,
                    editor: a,
                    focus: function() {
                        CKEDITOR.document.getById(f).focus()
                    },
                    execute: function() {
                        this.button.click(a)
                    },
                    attach: function(a) {
                        this.button.attach(a)
                    }
                },
                p = CKEDITOR.tools.addFunction(function(a) {
                    if (n.onkey) return a = new CKEDITOR.dom.event(a),
                    !1 !== n.onkey(n, a.getKeystroke())
                }),
                s = CKEDITOR.tools.addFunction(function(a) {
                    var b;
                    n.onfocus && (b = !1 !== n.onfocus(n, new CKEDITOR.dom.event(a)));
                    CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version && a.preventBubble();
                    return b
                }),
                r = 0,
                q = CKEDITOR.tools.addFunction(function() {
                    if (CKEDITOR.env.opera) {
                        var b = a.editable();
                        b.isInline() && b.hasFocus && (a.lockSelection(), r = 1)
                    }
                });
                n.clickFn = l = CKEDITOR.tools.addFunction(function() {
                    r && (a.unlockSelection(1), r = 0);
                    n.execute()
                });
                if (this.modes) {
                    var t = {},
                    u = function() {
                        var b = a.mode;
                        b && (b = this.modes[b] ? void 0 != t[b] ? t[b] : CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED, this.setState(a.readOnly && !this.readOnly ? CKEDITOR.TRISTATE_DISABLED: b))
                    };
                    a.on("beforeModeUnload",
                    function() {
                        a.mode && this._.state != CKEDITOR.TRISTATE_DISABLED && (t[a.mode] = this._.state)
                    },
                    this);
                    a.on("mode", u, this); ! this.readOnly && a.on("readOnly", u, this)
                } else h && (h = a.getCommand(h)) && (h.on("state",
                function() {
                    this.setState(h.state)
                },
                this), k += h.state == CKEDITOR.TRISTATE_ON ? "on": h.state == CKEDITOR.TRISTATE_DISABLED ? "disabled": "off");
                if (this.directional) a.on("contentDirChanged",
                function(b) {
                    var d = CKEDITOR.document.getById(this._.id),
                    e = d.getFirst();
                    b = b.data;
                    b != a.lang.dir ? d.addClass("cke_" + b) : d.removeClass("cke_ltr").removeClass("cke_rtl");
                    e.setAttribute("style", CKEDITOR.skin.getIconStyle(w, "rtl" == b, this.icon, this.iconOffset))
                },
                this);
                h || (k += "off");
                var w = u = this.name || this.command;
                this.icon && !/\./.test(this.icon) && (w = this.icon, this.icon = null);
                g = {
                    id: f,
                    name: u,
                    iconName: w,
                    label: this.label,
                    cls: this.className || "",
                    state: k,
                    title: this.title,
                    titleJs: g.gecko && 10900 <= g.version && !g.hc ? "": (this.title || "").replace("'", ""),
                    hasArrow: this.hasArrow ? "true": "false",
                    keydownFn: p,
                    mousedownFn: q,
                    focusFn: s,
                    clickFn: l,
                    style: CKEDITOR.skin.getIconStyle(w, "rtl" == a.lang.dir, this.icon, this.iconOffset),
                    arrowHtml: this.hasArrow ? d.output() : ""
                };
                b.output(g, e);
                if (this.onRender) this.onRender();
                return n
            },
            setState: function(a) {
                if (this._.state == a) return ! 1;
                this._.state = a;
                var b = CKEDITOR.document.getById(this._.id);
                return b ? (b.setState(a, "cke_button"), a == CKEDITOR.TRISTATE_DISABLED ? b.setAttribute("aria-disabled", !0) : b.removeAttribute("aria-disabled"), a == CKEDITOR.TRISTATE_ON ? b.setAttribute("aria-pressed", !0) : b.removeAttribute("aria-pressed"), !0) : !1
            },
            toFeature: function(a) {
                if (this._.feature) return this._.feature;
                var b = this; ! this.allowedContent && !this.requiredContent && this.command && (b = a.getCommand(this.command) || b);
                return this._.feature = b
            }
        };
        CKEDITOR.ui.prototype.addButton = function(a, b) {
            this.add(a, CKEDITOR.UI_BUTTON, b)
        }
    } (), CKEDITOR.plugins.add("panelbutton", {
        requires: "button",
        onLoad: function() {
            function a(a) {
                var b = this._;
                b.state != CKEDITOR.TRISTATE_DISABLED && (this.createPanel(a), b.on ? b.panel.hide() : b.panel.showBlock(this._.id, this.document.getById(this._.id), 4))
            }
            CKEDITOR.ui.panelButton = CKEDITOR.tools.createClass({
                base: CKEDITOR.ui.button,
                $: function(d) {
                    var b = d.panel || {};
                    delete d.panel;
                    this.base(d);
                    this.document = b.parent && b.parent.getDocument() || CKEDITOR.document;
                    b.block = {
                        attributes: b.attributes
                    };
                    this.hasArrow = b.toolbarRelated = !0;
                    this.click = a;
                    this._ = {
                        panelDefinition: b
                    }
                },
                statics: {
                    handler: {
                        create: function(a) {
                            return new CKEDITOR.ui.panelButton(a)
                        }
                    }
                },
                proto: {
                    createPanel: function(a) {
                        var b = this._;
                        if (!b.panel) {
                            var c = this._.panelDefinition,
                            e = this._.panelDefinition.block,
                            g = c.parent || CKEDITOR.document.getBody(),
                            f = this._.panel = new CKEDITOR.ui.floatPanel(a, g, c),
                            c = f.addBlock(b.id, e),
                            k = this;
                            f.onShow = function() {
                                k.className && this.element.addClass(k.className + "_panel");
                                k.setState(CKEDITOR.TRISTATE_ON);
                                b.on = 1;
                                k.editorFocus && a.focus();
                                if (k.onOpen) k.onOpen()
                            };
                            f.onHide = function(c) {
                                k.className && this.element.getFirst().removeClass(k.className + "_panel");
                                k.setState(k.modes && k.modes[a.mode] ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED);
                                b.on = 0;
                                if (!c && k.onClose) k.onClose()
                            };
                            f.onEscape = function() {
                                f.hide(1);
                                k.document.getById(b.id).focus()
                            };
                            if (this.onBlock) this.onBlock(f, c);
                            c.onHide = function() {
                                b.on = 0;
                                k.setState(CKEDITOR.TRISTATE_OFF)
                            }
                        }
                    }
                }
            })
        },
        beforeInit: function(a) {
            a.ui.addHandler(CKEDITOR.UI_PANELBUTTON, CKEDITOR.ui.panelButton.handler)
        }
    }), CKEDITOR.UI_PANELBUTTON = "panelbutton",
    function() {
        CKEDITOR.plugins.add("panel", {
            beforeInit: function(a) {
                a.ui.addHandler(CKEDITOR.UI_PANEL, CKEDITOR.ui.panel.handler)
            }
        });
        CKEDITOR.UI_PANEL = "panel";
        CKEDITOR.ui.panel = function(a, b) {
            b && CKEDITOR.tools.extend(this, b);
            CKEDITOR.tools.extend(this, {
                className: "",
                css: []
            });
            this.id = CKEDITOR.tools.getNextId();
            this.document = a;
            this.isFramed = this.forceIFrame || this.css.length;
            this._ = {
                blocks: {}
            }
        };
        CKEDITOR.ui.panel.handler = {
            create: function(a) {
                return new CKEDITOR.ui.panel(a)
            }
        };
        var a = CKEDITOR.addTemplate("panel", '<div lang="{langCode}" id="{id}" dir={dir} class="cke cke_reset_all {editorId} cke_panel cke_panel {cls} cke_{dir}" style="z-index:{z-index}" role="presentation">{frame}</div>'),
        d = CKEDITOR.addTemplate("panel-frame", '<iframe id="{id}" class="cke_panel_frame" role="presentation" frameborder="0" src="{src}"></iframe>'),
        b = CKEDITOR.addTemplate("panel-frame-inner", '<!DOCTYPE html><html class="cke_panel_container {env}" dir="{dir}" lang="{langCode}"><head>{css}</head><body class="cke_{dir}" style="margin:0;padding:0" onload="{onload}"></body></html>');
        CKEDITOR.ui.panel.prototype = {
            render: function(c, e) {
                this.getHolderElement = function() {
                    var a = this._.holder;
                    if (!a) {
                        if (this.isFramed) {
                            var a = this.document.getById(this.id + "_frame"),
                            c = a.getParent(),
                            a = a.getFrameDocument();
                            CKEDITOR.env.iOS && c.setStyles({
                                overflow: "scroll",
                                "-webkit-overflow-scrolling": "touch"
                            });
                            c = CKEDITOR.tools.addFunction(CKEDITOR.tools.bind(function() {
                                this.isLoaded = !0;
                                if (this.onLoad) this.onLoad()
                            },
                            this));
                            a.write(b.output(CKEDITOR.tools.extend({
                                css: CKEDITOR.tools.buildStyleHtml(this.css),
                                onload: "window.parent.CKEDITOR.tools.callFunction(" + c + ");"
                            },
                            g)));
                            a.getWindow().$.CKEDITOR = CKEDITOR;
                            a.on("key" + (CKEDITOR.env.opera ? "press": "down"),
                            function(a) {
                                var b = a.data.getKeystroke(),
                                c = this.document.getById(this.id).getAttribute("dir");
                                this._.onKeyDown && !1 === this._.onKeyDown(b) ? a.data.preventDefault() : (27 == b || b == ("rtl" == c ? 39 : 37)) && this.onEscape && !1 === this.onEscape(b) && a.data.preventDefault()
                            },
                            this);
                            a = a.getBody();
                            a.unselectable();
                            CKEDITOR.env.air && CKEDITOR.tools.callFunction(c)
                        } else a = this.document.getById(this.id);
                        this._.holder = a
                    }
                    return a
                };
                var g = {
                    editorId: c.id,
                    id: this.id,
                    langCode: c.langCode,
                    dir: c.lang.dir,
                    cls: this.className,
                    frame: "",
                    env: CKEDITOR.env.cssClass,
                    "z-index": c.config.baseFloatZIndex + 1
                };
                if (this.isFramed) {
                    var f = CKEDITOR.env.air ? "javascript:void(0)": CKEDITOR.env.ie ? "javascript:void(function(){" + encodeURIComponent("document.open();(" + CKEDITOR.tools.fixDomain + ")();document.close();") + "}())": "";
                    g.frame = d.output({
                        id: this.id + "_frame",
                        src: f
                    })
                }
                f = a.output(g);
                e && e.push(f);
                return f
            },
            addBlock: function(a, b) {
                b = this._.blocks[a] = b instanceof CKEDITOR.ui.panel.block ? b: new CKEDITOR.ui.panel.block(this.getHolderElement(), b);
                this._.currentBlock || this.showBlock(a);
                return b
            },
            getBlock: function(a) {
                return this._.blocks[a]
            },
            showBlock: function(a) {
                a = this._.blocks[a];
                var b = this._.currentBlock,
                d = !this.forceIFrame || CKEDITOR.env.ie ? this._.holder: this.document.getById(this.id + "_frame");
                b && (d.removeAttributes(b.attributes), b.hide());
                this._.currentBlock = a;
                d.setAttributes(a.attributes);
                CKEDITOR.fire("ariaWidget", d);
                a._.focusIndex = -1;
                this._.onKeyDown = a.onKeyDown && CKEDITOR.tools.bind(a.onKeyDown, a);
                a.show();
                return a
            },
            destroy: function() {
                this.element && this.element.remove()
            }
        };
        CKEDITOR.ui.panel.block = CKEDITOR.tools.createClass({
            $: function(a, b) {
                this.element = a.append(a.getDocument().createElement("div", {
                    attributes: {
                        tabIndex: -1,
                        "class": "cke_panel_block",
                        role: "presentation",
                        tabindex: 0
                    },
                    styles: {
                        display: "none"
                    }
                }));
                b && CKEDITOR.tools.extend(this, b);
                this.element.setAttributes({
                    "aria-label": this.attributes["aria-label"],
                    title: this.attributes.title || this.attributes["aria-label"]
                });
                delete this.attributes["aria-label"];
                delete this.attributes.title;
                this.keys = {};
                this._.focusIndex = -1;
                this.element.disableContextMenu()
            },
            _: {
                markItem: function(a) { - 1 != a && (a = this.element.getElementsByTag("a").getItem(this._.focusIndex = a), (CKEDITOR.env.webkit || CKEDITOR.env.opera) && a.getDocument().getWindow().focus(), a.focus(), this.onMark && this.onMark(a))
                }
            },
            proto: {
                show: function() {
                    this.element.setStyle("display", "")
                },
                hide: function() {
                    this.onHide && !0 === this.onHide.call(this) || this.element.setStyle("display", "none")
                },
                onKeyDown: function(a) {
                    var b = this.keys[a];
                    switch (b) {
                    case "next":
                        a = this._.focusIndex;
                        for (var b = this.element.getElementsByTag("a"), d; d = b.getItem(++a);) if (d.getAttribute("_cke_focus") && d.$.offsetWidth) {
                            this._.focusIndex = a;
                            d.focus();
                            break
                        }
                        return ! 1;
                    case "prev":
                        a = this._.focusIndex;
                        for (b = this.element.getElementsByTag("a"); 0 < a && (d = b.getItem(--a));) if (d.getAttribute("_cke_focus") && d.$.offsetWidth) {
                            this._.focusIndex = a;
                            d.focus();
                            break
                        }
                        return ! 1;
                    case "click":
                    case "mouseup":
                        return a = this._.focusIndex,
                        (d = 0 <= a && this.element.getElementsByTag("a").getItem(a)) && (d.$[b] ? d.$[b]() : d.$["on" + b]()),
                        !1
                    }
                    return ! 0
                }
            }
        })
    } (), CKEDITOR.plugins.add("floatpanel", {
        requires: "panel"
    }),
    function() {
        function a(a, c, e, g, f) {
            f = CKEDITOR.tools.genKey(c.getUniqueId(), e.getUniqueId(), a.lang.dir, a.uiColor || "", g.css || "", f || "");
            var k = d[f];
            k || (k = d[f] = new CKEDITOR.ui.panel(c, g), k.element = e.append(CKEDITOR.dom.element.createFromHtml(k.render(a), c)), k.element.setStyles({
                display: "none",
                position: "absolute"
            }));
            return k
        }
        var d = {};
        CKEDITOR.ui.floatPanel = CKEDITOR.tools.createClass({
            $: function(b, c, d, g) {
                function f() {
                    n.hide()
                }
                d.forceIFrame = 1;
                d.toolbarRelated && b.elementMode == CKEDITOR.ELEMENT_MODE_INLINE && (c = CKEDITOR.document.getById("cke_" + b.name));
                var k = c.getDocument();
                g = a(b, k, c, d, g || 0);
                var h = g.element,
                l = h.getFirst(),
                n = this;
                h.disableContextMenu();
                this.element = h;
                this._ = {
                    editor: b,
                    panel: g,
                    parentElement: c,
                    definition: d,
                    document: k,
                    iframe: l,
                    children: [],
                    dir: b.lang.dir
                };
                b.on("mode", f);
                b.on("resize", f);
                k.getWindow().on("resize", f)
            },
            proto: {
                addBlock: function(a, c) {
                    return this._.panel.addBlock(a, c)
                },
                addListBlock: function(a, c) {
                    return this._.panel.addListBlock(a, c)
                },
                getBlock: function(a) {
                    return this._.panel.getBlock(a)
                },
                showBlock: function(a, c, d, g, f) {
                    var k = this._.panel,
                    h = k.showBlock(a);
                    this.allowBlur(!1);
                    a = this._.editor.editable();
                    this._.returnFocus = a.hasFocus ? a: new CKEDITOR.dom.element(CKEDITOR.document.$.activeElement);
                    var l = this.element;
                    a = this._.iframe;
                    a = CKEDITOR.env.ie ? a: new CKEDITOR.dom.window(a.$.contentWindow);
                    var n = l.getDocument(),
                    p = this._.parentElement.getPositionedAncestor(),
                    s = c.getDocumentPosition(n),
                    n = p ? p.getDocumentPosition(n) : {
                        x: 0,
                        y: 0
                    },
                    r = "rtl" == this._.dir,
                    q = s.x + (g || 0) - n.x,
                    t = s.y + (f || 0) - n.y; ! r || 1 != d && 4 != d ? r || 2 != d && 3 != d || (q += c.$.offsetWidth - 1) : q += c.$.offsetWidth;
                    if (3 == d || 4 == d) t += c.$.offsetHeight - 1;
                    this._.panel._.offsetParentId = c.getId();
                    l.setStyles({
                        top: t + "px",
                        left: 0,
                        display: ""
                    });
                    l.setOpacity(0);
                    l.getFirst().removeStyle("width");
                    this._.editor.focusManager.add(a);
                    this._.blurSet || (CKEDITOR.event.useCapture = !0, a.on("blur",
                    function(a) {
                        this.allowBlur() && a.data.getPhase() == CKEDITOR.EVENT_PHASE_AT_TARGET && this.visible && !this._.activeChild && (delete this._.returnFocus, this.hide())
                    },
                    this), a.on("focus",
                    function() {
                        this._.focused = !0;
                        this.hideChild();
                        this.allowBlur(!0)
                    },
                    this), CKEDITOR.event.useCapture = !1, this._.blurSet = 1);
                    k.onEscape = CKEDITOR.tools.bind(function(a) {
                        if (this.onEscape && !1 === this.onEscape(a)) return ! 1
                    },
                    this);
                    CKEDITOR.tools.setTimeout(function() {
                        var a = CKEDITOR.tools.bind(function() {
                            l.removeStyle("width");
                            if (h.autoSize) {
                                var a = h.element.getDocument(),
                                a = (CKEDITOR.env.webkit ? h.element: a.getBody()).$.scrollWidth;
                                CKEDITOR.env.ie && CKEDITOR.env.quirks && 0 < a && (a += (l.$.offsetWidth || 0) - (l.$.clientWidth || 0) + 3);
                                l.setStyle("width", a + 10 + "px");
                                a = h.element.$.scrollHeight;
                                CKEDITOR.env.ie && CKEDITOR.env.quirks && 0 < a && (a += (l.$.offsetHeight || 0) - (l.$.clientHeight || 0) + 3);
                                l.setStyle("height", a + "px");
                                k._.currentBlock.element.setStyle("display", "none").removeStyle("display")
                            } else l.removeStyle("height");
                            r && (q -= l.$.offsetWidth);
                            l.setStyle("left", q + "px");
                            var b = k.element.getWindow(),
                            a = l.$.getBoundingClientRect(),
                            b = b.getViewPaneSize(),
                            c = a.width || a.right - a.left,
                            d = a.height || a.bottom - a.top,
                            e = r ? a.right: b.width - a.left,
                            f = r ? b.width - a.right: a.left;
                            r ? e < c && (q = f > c ? q + c: b.width > c ? q - a.left: q - a.right + b.width) : e < c && (q = f > c ? q - c: b.width > c ? q - a.right + b.width: q - a.left);
                            c = a.top;
                            b.height - a.top < d && (t = c > d ? t - d: b.height > d ? t - a.bottom + b.height: t - a.top);
                            CKEDITOR.env.ie && (b = a = new CKEDITOR.dom.element(l.$.offsetParent), "html" == b.getName() && (b = b.getDocument().getBody()), "rtl" == b.getComputedStyle("direction") && (q = CKEDITOR.env.ie8Compat ? q - 2 * l.getDocument().getDocumentElement().$.scrollLeft: q - (a.$.scrollWidth - a.$.clientWidth)));
                            var a = l.getFirst(),
                            g; (g = a.getCustomData("activePanel")) && g.onHide && g.onHide.call(this, 1);
                            a.setCustomData("activePanel", this);
                            l.setStyles({
                                top: t + "px",
                                left: q + "px"
                            });
                            l.setOpacity(1)
                        },
                        this);
                        k.isLoaded ? a() : k.onLoad = a;
                        CKEDITOR.tools.setTimeout(function() {
                            this.focus();
                            this.allowBlur(!0);
                            this._.editor.fire("panelShow", this)
                        },
                        0, this)
                    },
                    CKEDITOR.env.air ? 200 : 0, this);
                    this.visible = 1;
                    this.onShow && this.onShow.call(this)
                },
                focus: function() {
                    if (CKEDITOR.env.webkit) {
                        var a = CKEDITOR.document.getActive(); ! a.equals(this._.iframe) && a.$.blur()
                    } (this._.lastFocused || this._.iframe.getFrameDocument().getWindow()).focus()
                },
                blur: function() {
                    var a = this._.iframe.getFrameDocument().getActive();
                    a.is("a") && (this._.lastFocused = a)
                },
                hide: function(a) {
                    if (this.visible && (!this.onHide || !0 !== this.onHide.call(this))) {
                        this.hideChild();
                        CKEDITOR.env.gecko && this._.iframe.getFrameDocument().$.activeElement.blur();
                        this.element.setStyle("display", "none");
                        this.visible = 0;
                        this.element.getFirst().removeCustomData("activePanel");
                        if (a = a && this._.returnFocus) CKEDITOR.env.webkit && a.type && a.getWindow().$.focus(),
                        a.focus();
                        delete this._.lastFocused;
                        this._.editor.fire("panelHide", this)
                    }
                },
                allowBlur: function(a) {
                    var c = this._.panel;
                    void 0 != a && (c.allowBlur = a);
                    return c.allowBlur
                },
                showAsChild: function(a, c, d, g, f, k) {
                    if (this._.activeChild != a || a._.panel._.offsetParentId != d.getId()) this.hideChild(),
                    a.onHide = CKEDITOR.tools.bind(function() {
                        CKEDITOR.tools.setTimeout(function() {
                            this._.focused || this.hide()
                        },
                        0, this)
                    },
                    this),
                    this._.activeChild = a,
                    this._.focused = !1,
                    a.showBlock(c, d, g, f, k),
                    this.blur(),
                    (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) && setTimeout(function() {
                        a.element.getChild(0).$.style.cssText += ""
                    },
                    100)
                },
                hideChild: function(a) {
                    var c = this._.activeChild;
                    c && (delete c.onHide, delete this._.activeChild, c.hide(), a && this.focus())
                }
            }
        });
        CKEDITOR.on("instanceDestroyed",
        function() {
            var a = CKEDITOR.tools.isEmpty(CKEDITOR.instances),
            c;
            for (c in d) {
                var e = d[c];
                a ? e.destroy() : e.element.hide()
            }
            a && (d = {})
        })
    } (), CKEDITOR.plugins.add("colorbutton", {
        requires: "panelbutton,floatpanel",
        init: function(a) {
            function d(c, d, h, l) {
                var n = new CKEDITOR.style(e["colorButton_" + d + "Style"]),
                p = CKEDITOR.tools.getNextId() + "_colorBox";
                a.ui.add(c, CKEDITOR.UI_PANELBUTTON, {
                    label: h,
                    title: h,
                    modes: {
                        wysiwyg: 1
                    },
                    editorFocus: 1,
                    toolbar: "colors," + l,
                    allowedContent: n,
                    requiredContent: n,
                    panel: {
                        css: CKEDITOR.skin.getPath("editor"),
                        attributes: {
                            role: "listbox",
                            "aria-label": g.panelTitle
                        }
                    },
                    onBlock: function(c, e) {
                        e.autoSize = !0;
                        e.element.addClass("cke_colorblock");
                        e.element.setHtml(b(c, d, p));
                        e.element.getDocument().getBody().setStyle("overflow", "hidden");
                        CKEDITOR.ui.fire("ready", this);
                        var f = e.keys,
                        g = "rtl" == a.lang.dir;
                        f[g ? 37 : 39] = "next";
                        f[40] = "next";
                        f[9] = "next";
                        f[g ? 39 : 37] = "prev";
                        f[38] = "prev";
                        f[CKEDITOR.SHIFT + 9] = "prev";
                        f[32] = "click"
                    },
                    onOpen: function() {
                        var b = a.getSelection(),
                        b = b && b.getStartElement(),
                        b = a.elementPath(b),
                        c,
                        b = b.block || b.blockLimit || a.document.getBody();
                        do c = b && b.getComputedStyle("back" == d ? "background-color": "color") || "transparent";
                        while ("back" == d && "transparent" == c && b && (b = b.getParent()));
                        c && "transparent" != c || (c = "#ffffff");
                        this._.panel._.iframe.getFrameDocument().getById(p).setStyle("background-color", c);
                        return c
                    }
                })
            }
            function b(b, d, h) {
                var l = [],
                n = e.colorButton_colors.split(","),
                p = CKEDITOR.tools.addFunction(function(d, g) {
                    if ("?" == d) {
                        var h = arguments.callee,
                        k = function(a) {
                            this.removeListener("ok", k);
                            this.removeListener("cancel", k);
                            "ok" == a.name && h(this.getContentElement("picker", "selectedColor").getValue(), g)
                        };
                        a.openDialog("colordialog",
                        function() {
                            this.on("ok", k);
                            this.on("cancel", k)
                        })
                    } else {
                        a.focus();
                        b.hide();
                        a.fire("saveSnapshot");
                        a.removeStyle(new CKEDITOR.style(e["colorButton_" + g + "Style"], {
                            color: "inherit"
                        }));
                        if (d) {
                            var l = e["colorButton_" + g + "Style"];
                            l.childRule = "back" == g ?
                            function(a) {
                                return c(a)
                            }: function(a) {
                                return ! (a.is("a") || a.getElementsByTag("a").count()) || c(a)
                            };
                            a.applyStyle(new CKEDITOR.style(l, {
                                color: d
                            }))
                        }
                        a.fire("saveSnapshot")
                    }
                });
                l.push('<a class="cke_colorauto" _cke_focus=1 hidefocus=true title="', g.auto, '" onclick="CKEDITOR.tools.callFunction(', p, ",null,'", d, "');return false;\" href=\"javascript:void('", g.auto, '\')" role="option"><table role="presentation" cellspacing=0 cellpadding=0 width="100%"><tr><td><span class="cke_colorbox" id="', h, '"></span></td><td colspan=7 align=center>', g.auto, '</td></tr></table></a><table role="presentation" cellspacing=0 cellpadding=0 width="100%">');
                for (h = 0; h < n.length; h++) {
                    0 === h % 8 && l.push("</tr><tr>");
                    var s = n[h].split("/"),
                    r = s[0],
                    q = s[1] || r;
                    s[1] || (r = "#" + r.replace(/^(.)(.)(.)$/, "$1$1$2$2$3$3"));
                    s = a.lang.colorbutton.colors[q] || q;
                    l.push('<td><a class="cke_colorbox" _cke_focus=1 hidefocus=true title="', s, '" onclick="CKEDITOR.tools.callFunction(', p, ",'", r, "','", d, "'); return false;\" href=\"javascript:void('", s, '\')" role="option"><span class="cke_colorbox" style="background-color:#', q, '"></span></a></td>')
                } (a.plugins.colordialog && void 0 === e.colorButton_enableMore || e.colorButton_enableMore) && l.push('</tr><tr><td colspan=8 align=center><a class="cke_colormore" _cke_focus=1 hidefocus=true title="', g.more, '" onclick="CKEDITOR.tools.callFunction(', p, ",'?','", d, "');return false;\" href=\"javascript:void('", g.more, "')\"", ' role="option">', g.more, "</a></td>");
                l.push("</tr></table>");
                return l.join("")
            }
            function c(a) {
                return "false" == a.getAttribute("contentEditable") || a.getAttribute("data-nostyle")
            }
            var e = a.config,
            g = a.lang.colorbutton;
            CKEDITOR.env.hc || (d("TextColor", "fore", g.textColorTitle, 10), d("BGColor", "back", g.bgColorTitle, 20))
        }
    }), CKEDITOR.config.colorButton_colors = "000,800000,8B4513,2F4F4F,008080,000080,4B0082,696969,B22222,A52A2A,DAA520,006400,40E0D0,0000CD,800080,808080,F00,FF8C00,FFD700,008000,0FF,00F,EE82EE,A9A9A9,FFA07A,FFA500,FFFF00,00FF00,AFEEEE,ADD8E6,DDA0DD,D3D3D3,FFF0F5,FAEBD7,FFFFE0,F0FFF0,F0FFFF,F0F8FF,E6E6FA,FFF", CKEDITOR.config.colorButton_foreStyle = {
        element: "span",
        styles: {
            color: "#(color)"
        },
        overrides: [{
            element: "font",
            attributes: {
                color: null
            }
        }]
    },
    CKEDITOR.config.colorButton_backStyle = {
        element: "span",
        styles: {
            "background-color": "#(color)"
        }
    },
    CKEDITOR.plugins.colordialog = {
        requires: "dialog",
        init: function(a) {
            a.addCommand("colordialog", new CKEDITOR.dialogCommand("colordialog"));
            CKEDITOR.dialog.add("colordialog", this.path + "dialogs/colordialog.js");
            a.getColorFromDialog = function(d, b) {
                var c = function(a) {
                    this.removeListener("ok", c);
                    this.removeListener("cancel", c);
                    a = "ok" == a.name ? this.getValueOf("picker", "selectedColor") : null;
                    d.call(b, a)
                },
                e = function(a) {
                    a.on("ok", c);
                    a.on("cancel", c)
                };
                a.execCommand("colordialog");
                if (a._.storedDialogs && a._.storedDialogs.colordialog) e(a._.storedDialogs.colordialog);
                else CKEDITOR.on("dialogDefinition",
                function(a) {
                    if ("colordialog" == a.data.name) {
                        var b = a.data.definition;
                        a.removeListener();
                        b.onLoad = CKEDITOR.tools.override(b.onLoad,
                        function(a) {
                            return function() {
                                e(this);
                                b.onLoad = a;
                                "function" == typeof a && a.call(this)
                            }
                        })
                    }
                })
            }
        }
    },
    CKEDITOR.plugins.add("colordialog", CKEDITOR.plugins.colordialog), CKEDITOR.plugins.add("menu", {
        requires: "floatpanel",
        beforeInit: function(a) {
            for (var d = a.config.menu_groups.split(","), b = a._.menuGroups = {},
            c = a._.menuItems = {},
            e = 0; e < d.length; e++) b[d[e]] = e + 1;
            a.addMenuGroup = function(a, c) {
                b[a] = c || 100
            };
            a.addMenuItem = function(a, d) {
                b[d.group] && (c[a] = new CKEDITOR.menuItem(this, a, d))
            };
            a.addMenuItems = function(a) {
                for (var b in a) this.addMenuItem(b, a[b])
            };
            a.getMenuItem = function(a) {
                return c[a]
            };
            a.removeMenuItem = function(a) {
                delete c[a]
            }
        }
    }),
    function() {
        function a(a) {
            a.sort(function(a, b) {
                return a.group < b.group ? -1 : a.group > b.group ? 1 : a.order < b.order ? -1 : a.order > b.order ? 1 : 0
            })
        }
        var d = '<span class="cke_menuitem"><a id="{id}" class="cke_menubutton cke_menubutton__{name} cke_menubutton_{state} {cls}" href="{href}" title="{title}" tabindex="-1"_cke_focus=1 hidefocus="true" role="menuitem" aria-haspopup="{hasPopup}" aria-disabled="{disabled}"';
        if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac) d += ' onkeypress="return false;"';
        CKEDITOR.env.gecko && (d += ' onblur="this.style.cssText = this.style.cssText;"');
        var d = d + (' onmouseover="CKEDITOR.tools.callFunction({hoverFn},{index});" onmouseout="CKEDITOR.tools.callFunction({moveOutFn},{index});" ' + (CKEDITOR.env.ie ? 'onclick="return false;" onmouseup': "onclick") + '="CKEDITOR.tools.callFunction({clickFn},{index}); return false;">'),
        b = CKEDITOR.addTemplate("menuItem", d + '<span class="cke_menubutton_inner"><span class="cke_menubutton_icon"><span class="cke_button_icon cke_button__{iconName}_icon" style="{iconStyle}"></span></span><span class="cke_menubutton_label">{label}</span>{arrowHtml}</span></a></span>'),
        c = CKEDITOR.addTemplate("menuArrow", '<span class="cke_menuarrow"><span>{label}</span></span>');
        CKEDITOR.menu = CKEDITOR.tools.createClass({
            $: function(a, b) {
                b = this._.definition = b || {};
                this.id = CKEDITOR.tools.getNextId();
                this.editor = a;
                this.items = [];
                this._.listeners = [];
                this._.level = b.level || 1;
                var c = CKEDITOR.tools.extend({},
                b.panel, {
                    css: [CKEDITOR.skin.getPath("editor")],
                    level: this._.level - 1,
                    block: {}
                }),
                d = c.block.attributes = c.attributes || {}; ! d.role && (d.role = "menu");
                this._.panelDefinition = c
            },
            _: {
                onShow: function() {
                    var a = this.editor.getSelection(),
                    b = a && a.getStartElement(),
                    c = this.editor.elementPath(),
                    d = this._.listeners;
                    this.removeAll();
                    for (var h = 0; h < d.length; h++) {
                        var l = d[h](b, a, c);
                        if (l) for (var n in l) {
                            var p = this.editor.getMenuItem(n); ! p || p.command && !this.editor.getCommand(p.command).state || (p.state = l[n], this.add(p))
                        }
                    }
                },
                onClick: function(a) {
                    this.hide();
                    if (a.onClick) a.onClick();
                    else a.command && this.editor.execCommand(a.command)
                },
                onEscape: function(a) {
                    var b = this.parent;
                    b ? b._.panel.hideChild(1) : 27 == a && this.hide(1);
                    return ! 1
                },
                onHide: function() {
                    this.onHide && this.onHide()
                },
                showSubMenu: function(a) {
                    var b = this._.subMenu,
                    c = this.items[a];
                    if (c = c.getItems && c.getItems()) {
                        b ? b.removeAll() : (b = this._.subMenu = new CKEDITOR.menu(this.editor, CKEDITOR.tools.extend({},
                        this._.definition, {
                            level: this._.level + 1
                        },
                        !0)), b.parent = this, b._.onClick = CKEDITOR.tools.bind(this._.onClick, this));
                        for (var d in c) {
                            var h = this.editor.getMenuItem(d);
                            h && (h.state = c[d], b.add(h))
                        }
                        var l = this._.panel.getBlock(this.id).element.getDocument().getById(this.id + ("" + a));
                        setTimeout(function() {
                            b.show(l, 2)
                        },
                        0)
                    } else this._.panel.hideChild(1)
                }
            },
            proto: {
                add: function(a) {
                    a.order || (a.order = this.items.length);
                    this.items.push(a)
                },
                removeAll: function() {
                    this.items = []
                },
                show: function(b, c, d, k) {
                    if (!this.parent && (this._.onShow(), !this.items.length)) return;
                    c = c || ("rtl" == this.editor.lang.dir ? 2 : 1);
                    var h = this.items,
                    l = this.editor,
                    n = this._.panel,
                    p = this._.element;
                    if (!n) {
                        n = this._.panel = new CKEDITOR.ui.floatPanel(this.editor, CKEDITOR.document.getBody(), this._.panelDefinition, this._.level);
                        n.onEscape = CKEDITOR.tools.bind(function(a) {
                            if (!1 === this._.onEscape(a)) return ! 1
                        },
                        this);
                        n.onShow = function() {
                            n._.panel.getHolderElement().getParent().addClass("cke cke_reset_all")
                        };
                        n.onHide = CKEDITOR.tools.bind(function() {
                            this._.onHide && this._.onHide()
                        },
                        this);
                        p = n.addBlock(this.id, this._.panelDefinition.block);
                        p.autoSize = !0;
                        var s = p.keys;
                        s[40] = "next";
                        s[9] = "next";
                        s[38] = "prev";
                        s[CKEDITOR.SHIFT + 9] = "prev";
                        s["rtl" == l.lang.dir ? 37 : 39] = CKEDITOR.env.ie ? "mouseup": "click";
                        s[32] = CKEDITOR.env.ie ? "mouseup": "click";
                        CKEDITOR.env.ie && (s[13] = "mouseup");
                        p = this._.element = p.element;
                        s = p.getDocument();
                        s.getBody().setStyle("overflow", "hidden");
                        s.getElementsByTag("html").getItem(0).setStyle("overflow", "hidden");
                        this._.itemOverFn = CKEDITOR.tools.addFunction(function(a) {
                            clearTimeout(this._.showSubTimeout);
                            this._.showSubTimeout = CKEDITOR.tools.setTimeout(this._.showSubMenu, l.config.menu_subMenuDelay || 400, this, [a])
                        },
                        this);
                        this._.itemOutFn = CKEDITOR.tools.addFunction(function() {
                            clearTimeout(this._.showSubTimeout)
                        },
                        this);
                        this._.itemClickFn = CKEDITOR.tools.addFunction(function(a) {
                            var b = this.items[a];
                            if (b.state == CKEDITOR.TRISTATE_DISABLED) this.hide(1);
                            else if (b.getItems) this._.showSubMenu(a);
                            else this._.onClick(b)
                        },
                        this)
                    }
                    a(h);
                    for (var s = l.elementPath(), s = ['<div class="cke_menu' + (s && s.direction() != l.lang.dir ? " cke_mixed_dir_content": "") + '" role="presentation">'], r = h.length, q = r && h[0].group, t = 0; t < r; t++) {
                        var u = h[t];
                        q != u.group && (s.push('<div class="cke_menuseparator" role="separator"></div>'), q = u.group);
                        u.render(this, t, s)
                    }
                    s.push("</div>");
                    p.setHtml(s.join(""));
                    CKEDITOR.ui.fire("ready", this);
                    this.parent ? this.parent._.panel.showAsChild(n, this.id, b, c, d, k) : n.showBlock(this.id, b, c, d, k);
                    l.fire("menuShow", [n])
                },
                addListener: function(a) {
                    this._.listeners.push(a)
                },
                hide: function(a) {
                    this._.onHide && this._.onHide();
                    this._.panel && this._.panel.hide(a)
                }
            }
        });
        CKEDITOR.menuItem = CKEDITOR.tools.createClass({
            $: function(a, b, c) {
                CKEDITOR.tools.extend(this, c, {
                    order: 0,
                    className: "cke_menubutton__" + b
                });
                this.group = a._.menuGroups[this.group];
                this.editor = a;
                this.name = b
            },
            proto: {
                render: function(a, d, f) {
                    var k = a.id + ("" + d),
                    h = "undefined" == typeof this.state ? CKEDITOR.TRISTATE_OFF: this.state,
                    l = h == CKEDITOR.TRISTATE_ON ? "on": h == CKEDITOR.TRISTATE_DISABLED ? "disabled": "off",
                    n = this.getItems,
                    p = "&#" + ("rtl" == this.editor.lang.dir ? "9668": "9658") + ";",
                    s = this.name;
                    this.icon && !/\./.test(this.icon) && (s = this.icon);
                    a = {
                        id: k,
                        name: this.name,
                        iconName: s,
                        label: this.label,
                        cls: this.className || "",
                        state: l,
                        hasPopup: n ? "true": "false",
                        disabled: h == CKEDITOR.TRISTATE_DISABLED,
                        title: this.label,
                        href: "javascript:void('" + (this.label || "").replace("'") + "')",
                        hoverFn: a._.itemOverFn,
                        moveOutFn: a._.itemOutFn,
                        clickFn: a._.itemClickFn,
                        index: d,
                        iconStyle: CKEDITOR.skin.getIconStyle(s, "rtl" == this.editor.lang.dir, s == this.icon ? null: this.icon, this.iconOffset),
                        arrowHtml: n ? c.output({
                            label: p
                        }) : ""
                    };
                    b.output(a, f)
                }
            }
        })
    } (), CKEDITOR.config.menu_groups = "clipboard,form,tablecell,tablecellproperties,tablerow,tablecolumn,table,anchor,link,image,flash,checkbox,radio,textfield,hiddenfield,imagebutton,button,select,textarea,div", CKEDITOR.plugins.add("contextmenu", {
        requires: "menu",
        onLoad: function() {
            CKEDITOR.plugins.contextMenu = CKEDITOR.tools.createClass({
                base: CKEDITOR.menu,
                $: function(a) {
                    this.base.call(this, a, {
                        panel: {
                            className: "cke_menu_panel",
                            attributes: {
                                "aria-label": a.lang.contextmenu.options
                            }
                        }
                    })
                },
                proto: {
                    addTarget: function(a, d) {
                        if (CKEDITOR.env.opera && !("oncontextmenu" in document.body)) {
                            var b;
                            a.on("mousedown",
                            function(c) {
                                c = c.data;
                                if (2 != c.$.button) c.getKeystroke() == CKEDITOR.CTRL + 1 && a.fire("contextmenu", c);
                                else if (!d || (CKEDITOR.env.mac ? !c.$.metaKey: !c.$.ctrlKey)) {
                                    var e = c.getTarget();
                                    b || (e = e.getDocument(), b = e.createElement("input"), b.$.type = "button", e.getBody().append(b));
                                    b.setAttribute("style", "position:absolute;top:" + (c.$.clientY - 2) + "px;left:" + (c.$.clientX - 2) + "px;width:5px;height:5px;opacity:0.01")
                                }
                            });
                            a.on("mouseup",
                            function(c) {
                                b && (b.remove(), b = void 0, a.fire("contextmenu", c.data))
                            })
                        }
                        a.on("contextmenu",
                        function(a) {
                            a = a.data;
                            if (!d || !(CKEDITOR.env.webkit ? c: CKEDITOR.env.mac ? a.$.metaKey: a.$.ctrlKey)) {
                                a.preventDefault();
                                var b = a.getTarget().getDocument(),
                                e = a.getTarget().getDocument().getDocumentElement(),
                                h = !b.equals(CKEDITOR.document),
                                b = b.getWindow().getScrollPosition(),
                                l = h ? a.$.clientX: a.$.pageX || b.x + a.$.clientX,
                                n = h ? a.$.clientY: a.$.pageY || b.y + a.$.clientY;
                                CKEDITOR.tools.setTimeout(function() {
                                    this.open(e, null, l, n)
                                },
                                CKEDITOR.env.ie ? 200 : 0, this)
                            }
                        },
                        this);
                        if (CKEDITOR.env.opera) a.on("keypress",
                        function(a) {
                            a = a.data;
                            0 === a.$.keyCode && a.preventDefault()
                        });
                        if (CKEDITOR.env.webkit) {
                            var c, e = function() {
                                c = 0
                            };
                            a.on("keydown",
                            function(a) {
                                c = CKEDITOR.env.mac ? a.data.$.metaKey: a.data.$.ctrlKey
                            });
                            a.on("keyup", e);
                            a.on("contextmenu", e)
                        }
                    },
                    open: function(a, d, b, c) {
                        this.editor.focus();
                        a = a || CKEDITOR.document.getDocumentElement();
                        this.editor.selectionChange(1);
                        this.show(a, d, b, c)
                    }
                }
            })
        },
        beforeInit: function(a) {
            var d = a.contextMenu = new CKEDITOR.plugins.contextMenu(a);
            a.on("contentDom",
            function() {
                d.addTarget(a.editable(), !1 !== a.config.browserContextMenuOnCtrl)
            });
            a.addCommand("contextMenu", {
                exec: function() {
                    a.contextMenu.open(a.document.getBody())
                }
            });
            a.setKeystroke(CKEDITOR.SHIFT + 121, "contextMenu");
            a.setKeystroke(CKEDITOR.CTRL + CKEDITOR.SHIFT + 121, "contextMenu")
        }
    }),
    function() {
        function a(a) {
            var b = this.att;
            a = a && a.hasAttribute(b) && a.getAttribute(b) || "";
            void 0 !== a && this.setValue(a)
        }
        function d() {
            for (var a, b = 0; b < arguments.length; b++) if (arguments[b] instanceof CKEDITOR.dom.element) {
                a = arguments[b];
                break
            }
            if (a) {
                var b = this.att,
                d = this.getValue();
                d ? a.setAttribute(b, d) : a.removeAttribute(b, d)
            }
        }
        var b = {
            id: 1,
            dir: 1,
            classes: 1,
            styles: 1
        };
        CKEDITOR.plugins.add("dialogadvtab", {
            requires: "dialog",
            allowedContent: function(a) {
                a || (a = b);
                var d = [];
                a.id && d.push("id");
                a.dir && d.push("dir");
                var g = "";
                d.length && (g += "[" + d.join(",") + "]");
                a.classes && (g += "(*)");
                a.styles && (g += "{*}");
                return g
            },
            createAdvancedTab: function(c, e, g) {
                e || (e = b);
                var f = c.lang.common,
                k = {
                    id: "advanced",
                    label: f.advancedTab,
                    title: f.advancedTab,
                    elements: [{
                        type: "vbox",
                        padding: 1,
                        children: []
                    }]
                },
                h = [];
                if (e.id || e.dir) e.id && h.push({
                    id: "advId",
                    att: "id",
                    type: "text",
                    requiredContent: g ? g + "[id]": null,
                    label: f.id,
                    setup: a,
                    commit: d
                }),
                e.dir && h.push({
                    id: "advLangDir",
                    att: "dir",
                    type: "select",
                    requiredContent: g ? g + "[dir]": null,
                    label: f.langDir,
                    "default": "",
                    style: "width:100%",
                    items: [[f.notSet, ""], [f.langDirLTR, "ltr"], [f.langDirRTL, "rtl"]],
                    setup: a,
                    commit: d
                }),
                k.elements[0].children.push({
                    type: "hbox",
                    widths: ["50%", "50%"],
                    children: [].concat(h)
                });
                if (e.styles || e.classes) h = [],
                e.styles && h.push({
                    id: "advStyles",
                    att: "style",
                    type: "text",
                    requiredContent: g ? g + "{cke-xyz}": null,
                    label: f.styles,
                    "default": "",
                    validate: CKEDITOR.dialog.validate.inlineStyle(f.invalidInlineStyle),
                    onChange: function() {},
                    getStyle: function(a, b) {
                        var c = this.getValue().match(RegExp("(?:^|;)\\s*" + a + "\\s*:\\s*([^;]*)", "i"));
                        return c ? c[1] : b
                    },
                    updateStyle: function(a, b) {
                        var d = this.getValue(),
                        e = c.document.createElement("span");
                        e.setAttribute("style", d);
                        e.setStyle(a, b);
                        d = CKEDITOR.tools.normalizeCssText(e.getAttribute("style"));
                        this.setValue(d, 1)
                    },
                    setup: a,
                    commit: d
                }),
                e.classes && h.push({
                    type: "hbox",
                    widths: ["45%", "55%"],
                    children: [{
                        id: "advCSSClasses",
                        att: "class",
                        type: "text",
                        requiredContent: g ? g + "(cke-xyz)": null,
                        label: f.cssClasses,
                        "default": "",
                        setup: a,
                        commit: d
                    }]
                }),
                k.elements[0].children.push({
                    type: "hbox",
                    widths: ["50%", "50%"],
                    children: [].concat(h)
                });
                return k
            }
        })
    } (),
    function() {
        CKEDITOR.plugins.add("div", {
            requires: "dialog",
            init: function(a) {
                if (!a.blockless) {
                    var d = a.lang.div,
                    b = "div(*)";
                    CKEDITOR.dialog.isTabEnabled(a, "editdiv", "advanced") && (b += ";div[dir,id,lang,title]{*}");
                    a.addCommand("creatediv", new CKEDITOR.dialogCommand("creatediv", {
                        allowedContent: b,
                        requiredContent: "div",
                        contextSensitive: !0,
                        refresh: function(a, b) {
                            this.setState("div" in (a.config.div_wrapTable ? b.root: b.blockLimit).getDtd() ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED)
                        }
                    }));
                    a.addCommand("editdiv", new CKEDITOR.dialogCommand("editdiv", {
                        requiredContent: "div"
                    }));
                    a.addCommand("removediv", {
                        requiredContent: "div",
                        exec: function(a) {
                            function b(d) { (d = CKEDITOR.plugins.div.getSurroundDiv(a, d)) && !d.data("cke-div-added") && (l.push(d), d.data("cke-div-added"))
                            }
                            for (var d = a.getSelection(), f = d && d.getRanges(), k, h = d.createBookmarks(), l = [], n = 0; n < f.length; n++) k = f[n],
                            k.collapsed ? b(d.getStartElement()) : (k = new CKEDITOR.dom.walker(k), k.evaluator = b, k.lastForward());
                            for (n = 0; n < l.length; n++) l[n].remove(!0);
                            d.selectBookmarks(h)
                        }
                    });
                    a.ui.addButton && a.ui.addButton("CreateDiv", {
                        label: d.toolbar,
                        command: "creatediv",
                        toolbar: "blocks,50"
                    });
                    a.addMenuItems && (a.addMenuItems({
                        editdiv: {
                            label: d.edit,
                            command: "editdiv",
                            group: "div",
                            order: 1
                        },
                        removediv: {
                            label: d.remove,
                            command: "removediv",
                            group: "div",
                            order: 5
                        }
                    }), a.contextMenu && a.contextMenu.addListener(function(b) {
                        return ! b || b.isReadOnly() ? null: CKEDITOR.plugins.div.getSurroundDiv(a) ? {
                            editdiv: CKEDITOR.TRISTATE_OFF,
                            removediv: CKEDITOR.TRISTATE_OFF
                        }: null
                    }));
                    CKEDITOR.dialog.add("creatediv", this.path + "dialogs/div.js");
                    CKEDITOR.dialog.add("editdiv", this.path + "dialogs/div.js")
                }
            }
        });
        CKEDITOR.plugins.div = {
            getSurroundDiv: function(a, d) {
                var b = a.elementPath(d);
                return a.elementPath(b.blockLimit).contains("div", 1)
            }
        }
    } (),
    function() {
        function a(a, c) {
            function k(b) {
                b = a._.elementsPath.list[b];
                if (b.equals(a.editable())) {
                    var c = a.createRange();
                    c.selectNodeContents(b);
                    c.select()
                } else a.getSelection().selectElement(b);
                a.focus()
            }
            function h() {
                n && n.setHtml(b);
                delete a._.elementsPath.list
            }
            var l = a.ui.spaceId("path"),
            n,
            p = "cke_elementspath_" + CKEDITOR.tools.getNextNumber() + "_";
            a._.elementsPath = {
                idBase: p,
                filters: []
            };
            c.html += '<span id="' + l + '_label" class="cke_voice_label">' + a.lang.elementspath.eleLabel + '</span><span id="' + l + '" class="cke_path" role="group" aria-labelledby="' + l + '_label">' + b + "</span>";
            a.on("uiReady",
            function() {
                var b = a.ui.space("path");
                b && a.focusManager.add(b, 1)
            });
            var s = CKEDITOR.tools.addFunction(k),
            r = CKEDITOR.tools.addFunction(function(b, c) {
                var d = a._.elementsPath.idBase,
                e;
                c = new CKEDITOR.dom.event(c);
                e = "rtl" == a.lang.dir;
                switch (c.getKeystroke()) {
                case e ? 39 : 37 : case 9:
                    return (e = CKEDITOR.document.getById(d + (b + 1))) || (e = CKEDITOR.document.getById(d + "0")),
                    e.focus(),
                    !1;
                case e ? 37 : 39 : case CKEDITOR.SHIFT + 9 : return (e = CKEDITOR.document.getById(d + (b - 1))) || (e = CKEDITOR.document.getById(d + (a._.elementsPath.list.length - 1))),
                    e.focus(),
                    !1;
                case 27:
                    return a.focus(),
                    !1;
                case 13:
                case 32:
                    return k(b),
                    !1
                }
                return ! 0
            });
            a.on("selectionChange",
            function(c) {
                var d = a.editable(),
                f = c.data.selection.getStartElement();
                c = [];
                for (var h = a._.elementsPath.list = [], k = a._.elementsPath.filters; f;) {
                    var A = 0,
                    E;
                    E = f.data("cke-display-name") ? f.data("cke-display-name") : f.data("cke-real-element-type") ? f.data("cke-real-element-type") : f.getName();
                    for (var z = 0; z < k.length; z++) {
                        var B = k[z](f, E);
                        if (!1 === B) {
                            A = 1;
                            break
                        }
                        E = B || E
                    }
                    A || (A = h.push(f) - 1, z = a.lang.elementspath.eleTitle.replace(/%1/, E), E = e.output({
                        id: p + A,
                        label: z,
                        text: E,
                        jsTitle: "javascript:void('" + E + "')",
                        index: A,
                        keyDownFn: r,
                        clickFn: s
                    }), c.unshift(E));
                    if (f.equals(d)) break;
                    f = f.getParent()
                }
                n || (n = CKEDITOR.document.getById(l));
                d = n;
                d.setHtml(c.join("") + b);
                a.fire("elementsPathUpdate", {
                    space: d
                })
            });
            a.on("readOnly", h);
            a.on("contentDomUnload", h);
            a.addCommand("elementsPathFocus", d);
            a.setKeystroke(CKEDITOR.ALT + 122, "elementsPathFocus")
        }
        var d;
        d = {
            editorFocus: !1,
            readOnly: 1,
            exec: function(a) { (a = CKEDITOR.document.getById(a._.elementsPath.idBase + "0")) && a.focus(CKEDITOR.env.ie || CKEDITOR.env.air)
            }
        };
        var b = '<span class="cke_path_empty">&nbsp;</span>',
        c = "";
        if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac) c += ' onkeypress="return false;"';
        CKEDITOR.env.gecko && (c += ' onblur="this.style.cssText = this.style.cssText;"');
        var e = CKEDITOR.addTemplate("pathItem", '<a id="{id}" href="{jsTitle}" tabindex="-1" class="cke_path_item" title="{label}"' + (CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version ? ' onfocus="event.preventBubble();"': "") + c + ' hidefocus="true"  onkeydown="return CKEDITOR.tools.callFunction({keyDownFn},{index}, event );" onclick="CKEDITOR.tools.callFunction({clickFn},{index}); return false;" role="button" aria-label="{label}">{text}</a>');
        CKEDITOR.plugins.add("elementspath", {
            init: function(b) {
                b.on("uiSpace",
                function(c) {
                    "bottom" == c.data.space && a(b, c.data)
                })
            }
        })
    } (),
    function() {
        function a(a, b, c) {
            c = a.config.forceEnterMode || c;
            if ("wysiwyg" != a.mode) return ! 1;
            b || (b = a.config.enterMode);
            a.elementPath().isContextFor("p") || (b = CKEDITOR.ENTER_BR, c = 1);
            a.fire("saveSnapshot");
            b == CKEDITOR.ENTER_BR ? g(a, b, null, c) : f(a, b, null, c);
            a.fire("saveSnapshot");
            return ! 0
        }
        function d(a) {
            a = a.getSelection().getRanges(!0);
            for (var b = a.length - 1; 0 < b; b--) a[b].deleteContents();
            return a[0]
        }
        CKEDITOR.plugins.add("enterkey", {
            init: function(b) {
                b.addCommand("enter", {
                    modes: {
                        wysiwyg: 1
                    },
                    editorFocus: !1,
                    exec: function(b) {
                        a(b)
                    }
                });
                b.addCommand("shiftEnter", {
                    modes: {
                        wysiwyg: 1
                    },
                    editorFocus: !1,
                    exec: function(b) {
                        "wysiwyg" == b.mode && a(b, b.config.shiftEnterMode, 1)
                    }
                });
                b.setKeystroke([[13, "enter"], [CKEDITOR.SHIFT + 13, "shiftEnter"]])
            }
        });
        var b = CKEDITOR.dom.walker.whitespaces(),
        c = CKEDITOR.dom.walker.bookmark();
        CKEDITOR.plugins.enterkey = {
            enterBlock: function(a, e, f, p) {
                if (f = f || d(a)) {
                    var s = f.document,
                    r = f.checkStartOfBlock(),
                    q = f.checkEndOfBlock(),
                    t = a.elementPath(f.startContainer).block,
                    u = e == CKEDITOR.ENTER_DIV ? "div": "p",
                    w;
                    if (r && q) {
                        if (t && (t.is("li") || t.getParent().is("li"))) {
                            f = t.getParent();
                            w = f.getParent();
                            p = !t.hasPrevious();
                            var v = !t.hasNext(),
                            u = a.getSelection(),
                            A = u.createBookmarks(),
                            r = t.getDirection(1),
                            q = t.getAttribute("class"),
                            E = t.getAttribute("style"),
                            z = w.getDirection(1) != r;
                            a = a.config.enterMode != CKEDITOR.ENTER_BR || z || E || q;
                            if (w.is("li")) if (p || v) t[p ? "insertBefore": "insertAfter"](w);
                            else t.breakParent(w);
                            else {
                                if (a) if (w = s.createElement(e == CKEDITOR.ENTER_P ? "p": "div"), z && w.setAttribute("dir", r), E && w.setAttribute("style", E), q && w.setAttribute("class", q), t.moveChildren(w), p || v) w[p ? "insertBefore": "insertAfter"](f);
                                else t.breakParent(f),
                                w.insertAfter(f);
                                else if (t.appendBogus(), p || v) for (; s = t[p ? "getFirst": "getLast"]();) s[p ? "insertBefore": "insertAfter"](f);
                                else for (t.breakParent(f); s = t.getLast();) s.insertAfter(f);
                                t.remove()
                            }
                            u.selectBookmarks(A);
                            return
                        }
                        if (t && t.getParent().is("blockquote")) {
                            t.breakParent(t.getParent());
                            t.getPrevious().getFirst(CKEDITOR.dom.walker.invisible(1)) || t.getPrevious().remove();
                            t.getNext().getFirst(CKEDITOR.dom.walker.invisible(1)) || t.getNext().remove();
                            f.moveToElementEditStart(t);
                            f.select();
                            return
                        }
                    } else if (t && t.is("pre") && !q) {
                        g(a, e, f, p);
                        return
                    }
                    if (q = f.splitBlock(u)) {
                        e = q.previousBlock;
                        t = q.nextBlock;
                        a = q.wasStartOfBlock;
                        r = q.wasEndOfBlock;
                        t ? (A = t.getParent(), A.is("li") && (t.breakParent(A), t.move(t.getNext(), 1))) : e && (A = e.getParent()) && A.is("li") && (e.breakParent(A), A = e.getNext(), f.moveToElementEditStart(A), e.move(e.getPrevious()));
                        if (a || r) {
                            if (e) {
                                if (e.is("li") || !k.test(e.getName()) && !e.is("pre")) w = e.clone()
                            } else t && (w = t.clone());
                            w ? p && !w.is("li") && w.renameNode(u) : A && A.is("li") ? w = A: (w = s.createElement(u), e && (v = e.getDirection()) && w.setAttribute("dir", v));
                            if (s = q.elementPath) for (p = 0, u = s.elements.length; p < u; p++) {
                                A = s.elements[p];
                                if (A.equals(s.block) || A.equals(s.blockLimit)) break;
                                CKEDITOR.dtd.$removeEmpty[A.getName()] && (A = A.clone(), w.moveChildren(A), w.append(A))
                            }
                            CKEDITOR.env.ie || w.appendBogus();
                            w.getParent() || f.insertNode(w);
                            w.is("li") && w.removeAttribute("value"); ! CKEDITOR.env.ie || !a || r && e.getChildCount() || (f.moveToElementEditStart(r ? e: w), f.select());
                            f.moveToElementEditStart(a && !r ? t: w)
                        } else t.is("li") && (w = f.clone(), w.selectNodeContents(t), w = new CKEDITOR.dom.walker(w), w.evaluator = function(a) {
                            return ! (c(a) || b(a) || a.type == CKEDITOR.NODE_ELEMENT && a.getName() in CKEDITOR.dtd.$inline && !(a.getName() in CKEDITOR.dtd.$empty))
                        },
                        (A = w.next()) && A.type == CKEDITOR.NODE_ELEMENT && A.is("ul", "ol") && (CKEDITOR.env.ie ? s.createText("\u00a0") : s.createElement("br")).insertBefore(A)),
                        t && f.moveToElementEditStart(t);
                        f.select();
                        f.scrollIntoView()
                    }
                }
            },
            enterBr: function(a, b, c, e) {
                if (c = c || d(a)) {
                    var g = c.document,
                    r = c.checkEndOfBlock(),
                    q = new CKEDITOR.dom.elementPath(a.getSelection().getStartElement()),
                    t = q.block,
                    q = t && q.block.getName();
                    e || "li" != q ? (!e && r && k.test(q) ? (r = t.getDirection()) ? (g = g.createElement("div"), g.setAttribute("dir", r), g.insertAfter(t), c.setStart(g, 0)) : (g.createElement("br").insertAfter(t), CKEDITOR.env.gecko && g.createText("").insertAfter(t), c.setStartAt(t.getNext(), CKEDITOR.env.ie ? CKEDITOR.POSITION_BEFORE_START: CKEDITOR.POSITION_AFTER_START)) : (t = "pre" == q && CKEDITOR.env.ie && 8 > CKEDITOR.env.version ? g.createText("\r") : g.createElement("br"), c.deleteContents(), c.insertNode(t), CKEDITOR.env.ie ? c.setStartAt(t, CKEDITOR.POSITION_AFTER_END) : (g.createText("\ufeff").insertAfter(t), r && t.getParent().appendBogus(), t.getNext().$.nodeValue = "", c.setStartAt(t.getNext(), CKEDITOR.POSITION_AFTER_START))), c.collapse(!0), c.select(), c.scrollIntoView()) : f(a, b, c, e)
                }
            }
        };
        var e = CKEDITOR.plugins.enterkey,
        g = e.enterBr,
        f = e.enterBlock,
        k = /^h[1-6]$/
    } (),
    function() {
        function a(a, b) {
            var c = {},
            e = [],
            g = {
                nbsp: "\u00a0",
                shy: "\u00ad",
                gt: ">",
                lt: "<",
                amp: "&",
                apos: "'",
                quot: '"'
            };
            a = a.replace(/\b(nbsp|shy|gt|lt|amp|apos|quot)(?:,|$)/g,
            function(a, d) {
                var f = b ? "&" + d + ";": g[d];
                c[f] = b ? g[d] : "&" + d + ";";
                e.push(f);
                return ""
            });
            if (!b && a) {
                a = a.split(",");
                var f = document.createElement("div"),
                k;
                f.innerHTML = "&" + a.join(";&") + ";";
                k = f.innerHTML;
                f = null;
                for (f = 0; f < k.length; f++) {
                    var h = k.charAt(f);
                    c[h] = "&" + a[f] + ";";
                    e.push(h)
                }
            }
            c.regex = e.join(b ? "|": "");
            return c
        }
        CKEDITOR.plugins.add("entities", {
            afterInit: function(d) {
                var b = d.config;
                if (d = (d = d.dataProcessor) && d.htmlFilter) {
                    var c = []; ! 1 !== b.basicEntities && c.push("nbsp,gt,lt,amp");
                    b.entities && (c.length && c.push("quot,iexcl,cent,pound,curren,yen,brvbar,sect,uml,copy,ordf,laquo,not,shy,reg,macr,deg,plusmn,sup2,sup3,acute,micro,para,middot,cedil,sup1,ordm,raquo,frac14,frac12,frac34,iquest,times,divide,fnof,bull,hellip,prime,Prime,oline,frasl,weierp,image,real,trade,alefsym,larr,uarr,rarr,darr,harr,crarr,lArr,uArr,rArr,dArr,hArr,forall,part,exist,empty,nabla,isin,notin,ni,prod,sum,minus,lowast,radic,prop,infin,ang,and,or,cap,cup,int,there4,sim,cong,asymp,ne,equiv,le,ge,sub,sup,nsub,sube,supe,oplus,otimes,perp,sdot,lceil,rceil,lfloor,rfloor,lang,rang,loz,spades,clubs,hearts,diams,circ,tilde,ensp,emsp,thinsp,zwnj,zwj,lrm,rlm,ndash,mdash,lsquo,rsquo,sbquo,ldquo,rdquo,bdquo,dagger,Dagger,permil,lsaquo,rsaquo,euro"), b.entities_latin && c.push("Agrave,Aacute,Acirc,Atilde,Auml,Aring,AElig,Ccedil,Egrave,Eacute,Ecirc,Euml,Igrave,Iacute,Icirc,Iuml,ETH,Ntilde,Ograve,Oacute,Ocirc,Otilde,Ouml,Oslash,Ugrave,Uacute,Ucirc,Uuml,Yacute,THORN,szlig,agrave,aacute,acirc,atilde,auml,aring,aelig,ccedil,egrave,eacute,ecirc,euml,igrave,iacute,icirc,iuml,eth,ntilde,ograve,oacute,ocirc,otilde,ouml,oslash,ugrave,uacute,ucirc,uuml,yacute,thorn,yuml,OElig,oelig,Scaron,scaron,Yuml"), b.entities_greek && c.push("Alpha,Beta,Gamma,Delta,Epsilon,Zeta,Eta,Theta,Iota,Kappa,Lambda,Mu,Nu,Xi,Omicron,Pi,Rho,Sigma,Tau,Upsilon,Phi,Chi,Psi,Omega,alpha,beta,gamma,delta,epsilon,zeta,eta,theta,iota,kappa,lambda,mu,nu,xi,omicron,pi,rho,sigmaf,sigma,tau,upsilon,phi,chi,psi,omega,thetasym,upsih,piv"), b.entities_additional && c.push(b.entities_additional));
                    var e = a(c.join(",")),
                    g = e.regex ? "[" + e.regex + "]": "a^";
                    delete e.regex;
                    b.entities && b.entities_processNumerical && (g = "[^ -~]|" + g);
                    var g = RegExp(g, "g"),
                    f = function(a) {
                        return "force" != b.entities_processNumerical && e[a] ? e[a] : "&#" + a.charCodeAt(0) + ";"
                    },
                    k = a("nbsp,gt,lt,amp,shy", !0),
                    h = RegExp(k.regex, "g"),
                    l = function(a) {
                        return k[a]
                    };
                    d.addRules({
                        text: function(a) {
                            return a.replace(h, l).replace(g, f)
                        }
                    })
                }
            }
        })
    } (), CKEDITOR.config.basicEntities = !0, CKEDITOR.config.entities = !0, CKEDITOR.config.entities_latin = !0, CKEDITOR.config.entities_greek = !0, CKEDITOR.config.entities_additional = "#39", CKEDITOR.plugins.add("popup"), CKEDITOR.tools.extend(CKEDITOR.editor.prototype, {
        popup: function(a, d, b, c) {
            d = d || "80%";
            b = b || "70%";
            "string" == typeof d && 1 < d.length && "%" == d.substr(d.length - 1, 1) && (d = parseInt(window.screen.width * parseInt(d, 10) / 100, 10));
            "string" == typeof b && 1 < b.length && "%" == b.substr(b.length - 1, 1) && (b = parseInt(window.screen.height * parseInt(b, 10) / 100, 10));
            640 > d && (d = 640);
            420 > b && (b = 420);
            var e = parseInt((window.screen.height - b) / 2, 10),
            g = parseInt((window.screen.width - d) / 2, 10);
            c = (c || "location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,modal=yes,alwaysRaised=yes,resizable=yes,scrollbars=yes") + ",width=" + d + ",height=" + b + ",top=" + e + ",left=" + g;
            var f = window.open("", null, c, !0);
            if (!f) return ! 1;
            try { - 1 == navigator.userAgent.toLowerCase().indexOf(" chrome/") && (f.moveTo(g, e), f.resizeTo(d, b)),
                f.focus(),
                f.location.href = a
            } catch(k) {
                window.open(a, null, c, !0)
            }
            return ! 0
        }
    }),
    function() {
        function a(a, b) {
            var c = [];
            if (b) for (var d in b) c.push(d + "=" + encodeURIComponent(b[d]));
            else return a;
            return a + ( - 1 != a.indexOf("?") ? "&": "?") + c.join("&")
        }
        function d(a) {
            a += "";
            return a.charAt(0).toUpperCase() + a.substr(1)
        }
        function b() {
            var b = this.getDialog(),
            c = b.getParentEditor();
            c._.filebrowserSe = this;
            var e = c.config["filebrowser" + d(b.getName()) + "WindowWidth"] || c.config.filebrowserWindowWidth || "80%",
            b = c.config["filebrowser" + d(b.getName()) + "WindowHeight"] || c.config.filebrowserWindowHeight || "70%",
            f = this.filebrowser.params || {};
            f.CKEditor = c.name;
            f.CKEditorFuncNum = c._.filebrowserFn;
            f.langCode || (f.langCode = c.langCode);
            f = a(this.filebrowser.url, f);
            c.popup(f, e, b, c.config.filebrowserWindowFeatures || c.config.fileBrowserWindowFeatures)
        }
        function c() {
            var a = this.getDialog();
            a.getParentEditor()._.filebrowserSe = this;
            return a.getContentElement(this["for"][0], this["for"][1]).getInputElement().$.value && a.getContentElement(this["for"][0], this["for"][1]).getAction() ? !0 : !1
        }
        function e(b, c, d) {
            var e = d.params || {};
            e.CKEditor = b.name;
            e.CKEditorFuncNum = b._.filebrowserFn;
            e.langCode || (e.langCode = b.langCode);
            c.action = a(d.url, e);
            c.filebrowser = d
        }
        function g(a, f, k, p) {
            if (p && p.length) for (var s, r = p.length; r--;) if (s = p[r], "hbox" != s.type && "vbox" != s.type && "fieldset" != s.type || g(a, f, k, s.children), s.filebrowser) if ("string" == typeof s.filebrowser && (s.filebrowser = {
                action: "fileButton" == s.type ? "QuickUpload": "Browse",
                target: s.filebrowser
            }), "Browse" == s.filebrowser.action) {
                var q = s.filebrowser.url;
                void 0 === q && (q = a.config["filebrowser" + d(f) + "BrowseUrl"], void 0 === q && (q = a.config.filebrowserBrowseUrl));
                q && (s.onClick = b, s.filebrowser.url = q, s.hidden = !1)
            } else if ("QuickUpload" == s.filebrowser.action && s["for"] && (q = s.filebrowser.url, void 0 === q && (q = a.config["filebrowser" + d(f) + "UploadUrl"], void 0 === q && (q = a.config.filebrowserUploadUrl)), q)) {
                var t = s.onClick;
                s.onClick = function(a) {
                    var b = a.sender;
                    return t && !1 === t.call(b, a) ? !1 : c.call(b, a)
                };
                s.filebrowser.url = q;
                s.hidden = !1;
                e(a, k.getContents(s["for"][0]).get(s["for"][1]), s.filebrowser)
            }
        }
        function f(a, b, c) {
            if ( - 1 !== c.indexOf(";")) {
                c = c.split(";");
                for (var d = 0; d < c.length; d++) if (f(a, b, c[d])) return ! 0;
                return ! 1
            }
            return (a = a.getContents(b).get(c).filebrowser) && a.url
        }
        function k(a, b) {
            var c = this._.filebrowserSe.getDialog(),
            d = this._.filebrowserSe["for"],
            e = this._.filebrowserSe.filebrowser.onSelect;
            d && c.getContentElement(d[0], d[1]).reset(); ! ("function" == typeof b && !1 === b.call(this._.filebrowserSe) || e && !1 === e.call(this._.filebrowserSe, a, b)) && ("string" == typeof b && b && alert(b), a && (d = this._.filebrowserSe, c = d.getDialog(), d = d.filebrowser.target || null)) && (d = d.split(":"), e = c.getContentElement(d[0], d[1])) && (e.setValue(a), c.selectPage(d[0]))
        }
        CKEDITOR.plugins.add("filebrowser", {
            requires: "popup",
            init: function(a) {
                a._.filebrowserFn = CKEDITOR.tools.addFunction(k, a);
                a.on("destroy",
                function() {
                    CKEDITOR.tools.removeFunction(this._.filebrowserFn)
                })
            }
        });
        CKEDITOR.on("dialogDefinition",
        function(a) {
            for (var b = a.data.definition,
            c, d = 0; d < b.contents.length; ++d) if (c = b.contents[d]) g(a.editor, a.data.name, b, c.elements),
            c.hidden && c.filebrowser && (c.hidden = !f(b, c.id, c.filebrowser))
        })
    } (), CKEDITOR.plugins.add("find", {
        requires: "dialog",
        init: function(a) {
            var d = a.addCommand("find", new CKEDITOR.dialogCommand("find"));
            d.canUndo = !1;
            d.readOnly = 1;
            a.addCommand("replace", new CKEDITOR.dialogCommand("replace")).canUndo = !1;
            a.ui.addButton && (a.ui.addButton("Find", {
                label: a.lang.find.find,
                command: "find",
                toolbar: "find,10"
            }), a.ui.addButton("Replace", {
                label: a.lang.find.replace,
                command: "replace",
                toolbar: "find,20"
            }));
            CKEDITOR.dialog.add("find", this.path + "dialogs/find.js");
            CKEDITOR.dialog.add("replace", this.path + "dialogs/find.js")
        }
    }), CKEDITOR.config.find_highlight = {
        element: "span",
        styles: {
            "background-color": "#004",
            color: "#fff"
        }
    },
    function() {
        function a(a, b) {
            var d = c.exec(a),
            e = c.exec(b);
            if (d) {
                if (!d[2] && "px" == e[2]) return e[1];
                if ("px" == d[2] && !e[2]) return e[1] + "px"
            }
            return b
        }
        var d = CKEDITOR.htmlParser.cssStyle,
        b = CKEDITOR.tools.cssLength,
        c = /^((?:\d*(?:\.\d+))|(?:\d+))(.*)?$/i,
        e = {
            elements: {
                $: function(b) {
                    var c = b.attributes;
                    if ((c = (c = (c = c && c["data-cke-realelement"]) && new CKEDITOR.htmlParser.fragment.fromHtml(decodeURIComponent(c))) && c.children[0]) && b.attributes["data-cke-resizable"]) {
                        var e = (new d(b)).rules;
                        b = c.attributes;
                        var g = e.width,
                        e = e.height;
                        g && (b.width = a(b.width, g));
                        e && (b.height = a(b.height, e))
                    }
                    return c
                }
            }
        },
        g = CKEDITOR.plugins.add("fakeobjects", {
            afterInit: function(a) { (a = (a = a.dataProcessor) && a.htmlFilter) && a.addRules(e)
            }
        });
        CKEDITOR.editor.prototype.createFakeElement = function(a, c, e, l) {
            var n = this.lang.fakeobjects,
            n = n[e] || n.unknown;
            c = {
                "class": c,
                "data-cke-realelement": encodeURIComponent(a.getOuterHtml()),
                "data-cke-real-node-type": a.type,
                alt: n,
                title: n,
                align: a.getAttribute("align") || ""
            };
            CKEDITOR.env.hc || (c.src = CKEDITOR.getUrl(g.path + "images/spacer.gif"));
            e && (c["data-cke-real-element-type"] = e);
            l && (c["data-cke-resizable"] = l, e = new d, l = a.getAttribute("width"), a = a.getAttribute("height"), l && (e.rules.width = b(l)), a && (e.rules.height = b(a)), e.populate(c));
            return this.document.createElement("img", {
                attributes: c
            })
        };
        CKEDITOR.editor.prototype.createFakeParserElement = function(a, c, e, l) {
            var n = this.lang.fakeobjects,
            n = n[e] || n.unknown,
            p;
            p = new CKEDITOR.htmlParser.basicWriter;
            a.writeHtml(p);
            p = p.getHtml();
            c = {
                "class": c,
                "data-cke-realelement": encodeURIComponent(p),
                "data-cke-real-node-type": a.type,
                alt: n,
                title: n,
                align: a.attributes.align || ""
            };
            CKEDITOR.env.hc || (c.src = CKEDITOR.getUrl(g.path + "images/spacer.gif"));
            e && (c["data-cke-real-element-type"] = e);
            l && (c["data-cke-resizable"] = l, l = a.attributes, a = new d, e = l.width, l = l.height, void 0 != e && (a.rules.width = b(e)), void 0 != l && (a.rules.height = b(l)), a.populate(c));
            return new CKEDITOR.htmlParser.element("img", c)
        };
        CKEDITOR.editor.prototype.restoreRealElement = function(b) {
            if (b.data("cke-real-node-type") != CKEDITOR.NODE_ELEMENT) return null;
            var c = CKEDITOR.dom.element.createFromHtml(decodeURIComponent(b.data("cke-realelement")), this.document);
            if (b.data("cke-resizable")) {
                var d = b.getStyle("width");
                b = b.getStyle("height");
                d && c.setAttribute("width", a(c.getAttribute("width"), d));
                b && c.setAttribute("height", a(c.getAttribute("height"), b))
            }
            return c
        }
    } (),
    function() {
        function a(a) {
            a = a.attributes;
            return "application/x-shockwave-flash" == a.type || b.test(a.src || "")
        }
        function d(a, b) {
            return a.createFakeParserElement(b, "cke_flash", "flash", !0)
        }
        var b = /\.swf(?:$|\?)/i;
        CKEDITOR.plugins.add("flash", {
            requires: "dialog,fakeobjects",
            onLoad: function() {
                CKEDITOR.addCss("img.cke_flash{background-image: url(" + CKEDITOR.getUrl(this.path + "images/placeholder.png") + ");background-position: center center;background-repeat: no-repeat;border: 1px solid #a9a9a9;width: 80px;height: 80px;}")
            },
            init: function(a) {
                var b = "object[classid,codebase,height,hspace,vspace,width];param[name,value];embed[height,hspace,pluginspage,src,type,vspace,width]";
                CKEDITOR.dialog.isTabEnabled(a, "flash", "properties") && (b += ";object[align]; embed[allowscriptaccess,quality,scale,wmode]");
                CKEDITOR.dialog.isTabEnabled(a, "flash", "advanced") && (b += ";object[id]{*}; embed[bgcolor]{*}(*)");
                a.addCommand("flash", new CKEDITOR.dialogCommand("flash", {
                    allowedContent: b,
                    requiredContent: "embed"
                }));
                a.ui.addButton && a.ui.addButton("Flash", {
                    label: a.lang.common.flash,
                    command: "flash",
                    toolbar: "insert,20"
                });
                CKEDITOR.dialog.add("flash", this.path + "dialogs/flash.js");
                a.addMenuItems && a.addMenuItems({
                    flash: {
                        label: a.lang.flash.properties,
                        command: "flash",
                        group: "flash"
                    }
                });
                a.on("doubleclick",
                function(a) {
                    var b = a.data.element;
                    b.is("img") && "flash" == b.data("cke-real-element-type") && (a.data.dialog = "flash")
                });
                a.contextMenu && a.contextMenu.addListener(function(a) {
                    if (a && a.is("img") && !a.isReadOnly() && "flash" == a.data("cke-real-element-type")) return {
                        flash: CKEDITOR.TRISTATE_OFF
                    }
                })
            },
            afterInit: function(b) {
                var e = b.dataProcessor; (e = e && e.dataFilter) && e.addRules({
                    elements: {
                        "cke:object": function(e) {
                            var f = e.attributes;
                            if (! (f.classid && ("" + f.classid).toLowerCase() || a(e))) {
                                for (f = 0; f < e.children.length; f++) if ("cke:embed" == e.children[f].name) {
                                    if (!a(e.children[f])) break;
                                    return d(b, e)
                                }
                                return null
                            }
                            return d(b, e)
                        },
                        "cke:embed": function(e) {
                            return a(e) ? d(b, e) : null
                        }
                    }
                },
                5)
            }
        })
    } (), CKEDITOR.tools.extend(CKEDITOR.config, {
        flashEmbedTagOnly: !1,
        flashAddEmbedTag: !0,
        flashConvertOnEdit: !1
    }),
    function() {
        function a(a) {
            var g = a.config,
            f = a.fire("uiSpace", {
                space: "top",
                html: ""
            }).html,
            k = function() {
                function d(a, b, e) {
                    h.setStyle(b, c(e));
                    h.setStyle("position", a)
                }
                function f(a) {
                    var b = q.getDocumentPosition();
                    switch (a) {
                    case "top":
                        d("absolute", "top", b.y - v - z);
                        break;
                    case "pin":
                        d("fixed", "top", x);
                        break;
                    case "bottom":
                        d("absolute", "top", b.y + (u.height || u.bottom - u.top) + z)
                    }
                    l = a
                }
                var l, q, n, u, w, v, A, E = g.floatSpaceDockedOffsetX || 0,
                z = g.floatSpaceDockedOffsetY || 0,
                B = g.floatSpacePinnedOffsetX || 0,
                x = g.floatSpacePinnedOffsetY || 0;
                return function(d) {
                    if (q = a.editable()) if (d && "focus" == d.name && h.show(), h.removeStyle("left"), h.removeStyle("right"), n = h.getClientRect(), u = q.getClientRect(), w = b.getViewPaneSize(), v = n.height, A = "pageXOffset" in b.$ ? b.$.pageXOffset: CKEDITOR.document.$.documentElement.scrollLeft, l) {
                        v + z <= u.top ? f("top") : v + z > w.height - u.bottom ? f("pin") : f("bottom");
                        d = w.width / 2;
                        d = 0 < u.left && u.right < w.width && u.width > n.width ? "rtl" == a.config.contentsLangDirection ? "right": "left": d - u.left > u.right - d ? "left": "right";
                        var g;
                        n.width > w.width ? (d = "left", g = 0) : (g = "left" == d ? 0 < u.left ? u.left: 0 : u.right < w.width ? w.width - u.right: 0, g + n.width > w.width && (d = "left" == d ? "right": "left", g = 0));
                        h.setStyle(d, c(("pin" == l ? B: E) + g + ("pin" == l ? 0 : "left" == d ? A: -A)))
                    } else l = "pin",
                    f("pin"),
                    k(d)
                }
            } ();
            if (f) {
                var h = CKEDITOR.document.getBody().append(CKEDITOR.dom.element.createFromHtml(d.output({
                    content: f,
                    id: a.id,
                    langDir: a.lang.dir,
                    langCode: a.langCode,
                    name: a.name,
                    style: "display:none;z-index:" + (g.baseFloatZIndex - 1),
                    topId: a.ui.spaceId("top")
                }))),
                l = CKEDITOR.tools.eventsBuffer(500, k),
                n = CKEDITOR.tools.eventsBuffer(100, k);
                h.unselectable();
                h.on("mousedown",
                function(a) {
                    a = a.data;
                    a.getTarget().hasAscendant("a", 1) || a.preventDefault()
                });
                a.on("focus",
                function(c) {
                    k(c);
                    a.on("change", l.input);
                    b.on("scroll", n.input);
                    b.on("resize", n.input)
                });
                a.on("blur",
                function() {
                    h.hide();
                    a.removeListener("change", l.input);
                    b.removeListener("scroll", n.input);
                    b.removeListener("resize", n.input)
                });
                a.on("destroy",
                function() {
                    b.removeListener("scroll", n.input);
                    b.removeListener("resize", n.input);
                    h.clearCustomData();
                    h.remove()
                });
                a.focusManager.hasFocus && h.show();
                a.focusManager.add(h, 1)
            }
        }
        var d = CKEDITOR.addTemplate("floatcontainer", '<div id="cke_{name}" class="cke {id} cke_reset_all cke_chrome cke_editor_{name} cke_float cke_{langDir} ' + CKEDITOR.env.cssClass + '" dir="{langDir}" title="' + (CKEDITOR.env.gecko ? " ": "") + '" lang="{langCode}" role="application" style="{style}"><div class="cke_inner"><div id="{topId}" class="cke_top" role="presentation">{content}</div></div></div>'),
        b = CKEDITOR.document.getWindow(),
        c = CKEDITOR.tools.cssLength;
        CKEDITOR.plugins.add("floatingspace", {
            init: function(b) {
                b.on("loaded",
                function() {
                    a(this)
                },
                null, null, 20)
            }
        })
    } (), CKEDITOR.plugins.add("listblock", {
        requires: "panel",
        onLoad: function() {
            var a = CKEDITOR.addTemplate("panel-list", '<ul role="presentation" class="cke_panel_list">{items}</ul>'),
            d = CKEDITOR.addTemplate("panel-list-item", '<li id="{id}" class="cke_panel_listItem" role=presentation><a id="{id}_option" _cke_focus=1 hidefocus=true title="{title}" href="javascript:void(\'{val}\')"  {onclick}="CKEDITOR.tools.callFunction({clickFn},\'{val}\'); return false;" role="option">{text}</a></li>'),
            b = CKEDITOR.addTemplate("panel-list-group", '<h1 id="{id}" class="cke_panel_grouptitle" role="presentation" >{label}</h1>');
            CKEDITOR.ui.panel.prototype.addListBlock = function(a, b) {
                return this.addBlock(a, new CKEDITOR.ui.listBlock(this.getHolderElement(), b))
            };
            CKEDITOR.ui.listBlock = CKEDITOR.tools.createClass({
                base: CKEDITOR.ui.panel.block,
                $: function(a, b) {
                    b = b || {};
                    var d = b.attributes || (b.attributes = {}); (this.multiSelect = !!b.multiSelect) && (d["aria-multiselectable"] = !0); ! d.role && (d.role = "listbox");
                    this.base.apply(this, arguments);
                    this.element.setAttribute("role", d.role);
                    d = this.keys;
                    d[40] = "next";
                    d[9] = "next";
                    d[38] = "prev";
                    d[CKEDITOR.SHIFT + 9] = "prev";
                    d[32] = CKEDITOR.env.ie ? "mouseup": "click";
                    CKEDITOR.env.ie && (d[13] = "mouseup");
                    this._.pendingHtml = [];
                    this._.pendingList = [];
                    this._.items = {};
                    this._.groups = {}
                },
                _: {
                    close: function() {
                        if (this._.started) {
                            var b = a.output({
                                items: this._.pendingList.join("")
                            });
                            this._.pendingList = [];
                            this._.pendingHtml.push(b);
                            delete this._.started
                        }
                    },
                    getClick: function() {
                        this._.click || (this._.click = CKEDITOR.tools.addFunction(function(a) {
                            var b = this.toggle(a);
                            if (this.onClick) this.onClick(a, b)
                        },
                        this));
                        return this._.click
                    }
                },
                proto: {
                    add: function(a, b, g) {
                        var f = CKEDITOR.tools.getNextId();
                        this._.started || (this._.started = 1, this._.size = this._.size || 0);
                        this._.items[a] = f;
                        a = {
                            id: f,
                            val: a,
                            onclick: CKEDITOR.env.ie ? 'onclick="return false;" onmouseup': "onclick",
                            clickFn: this._.getClick(),
                            title: g || a,
                            text: b || a
                        };
                        this._.pendingList.push(d.output(a))
                    },
                    startGroup: function(a) {
                        this._.close();
                        var d = CKEDITOR.tools.getNextId();
                        this._.groups[a] = d;
                        this._.pendingHtml.push(b.output({
                            id: d,
                            label: a
                        }))
                    },
                    commit: function() {
                        this._.close();
                        this.element.appendHtml(this._.pendingHtml.join(""));
                        delete this._.size;
                        this._.pendingHtml = []
                    },
                    toggle: function(a) {
                        var b = this.isMarked(a);
                        b ? this.unmark(a) : this.mark(a);
                        return ! b
                    },
                    hideGroup: function(a) {
                        var b = (a = this.element.getDocument().getById(this._.groups[a])) && a.getNext();
                        a && (a.setStyle("display", "none"), b && "ul" == b.getName() && b.setStyle("display", "none"))
                    },
                    hideItem: function(a) {
                        this.element.getDocument().getById(this._.items[a]).setStyle("display", "none")
                    },
                    showAll: function() {
                        var a = this._.items,
                        b = this._.groups,
                        d = this.element.getDocument(),
                        f;
                        for (f in a) d.getById(a[f]).setStyle("display", "");
                        for (var k in b) a = d.getById(b[k]),
                        f = a.getNext(),
                        a.setStyle("display", ""),
                        f && "ul" == f.getName() && f.setStyle("display", "")
                    },
                    mark: function(a) {
                        this.multiSelect || this.unmarkAll();
                        a = this._.items[a];
                        var b = this.element.getDocument().getById(a);
                        b.addClass("cke_selected");
                        this.element.getDocument().getById(a + "_option").setAttribute("aria-selected", !0);
                        this.onMark && this.onMark(b)
                    },
                    unmark: function(a) {
                        var b = this.element.getDocument();
                        a = this._.items[a];
                        var d = b.getById(a);
                        d.removeClass("cke_selected");
                        b.getById(a + "_option").removeAttribute("aria-selected");
                        this.onUnmark && this.onUnmark(d)
                    },
                    unmarkAll: function() {
                        var a = this._.items,
                        b = this.element.getDocument(),
                        d;
                        for (d in a) {
                            var f = a[d];
                            b.getById(f).removeClass("cke_selected");
                            b.getById(f + "_option").removeAttribute("aria-selected")
                        }
                        this.onUnmark && this.onUnmark()
                    },
                    isMarked: function(a) {
                        return this.element.getDocument().getById(this._.items[a]).hasClass("cke_selected")
                    },
                    focus: function(a) {
                        this._.focusIndex = -1;
                        var b = this.element.getElementsByTag("a"),
                        d,
                        f = -1;
                        if (a) for (d = this.element.getDocument().getById(this._.items[a]).getFirst(); a = b.getItem(++f);) {
                            if (a.equals(d)) {
                                this._.focusIndex = f;
                                break
                            }
                        } else b = CKEDITOR.document.getWindow().getScrollPosition().y,
                        this.element.focus(),
                        CKEDITOR.env.webkit && (CKEDITOR.document[CKEDITOR.env.webkit ? "getBody": "getDocumentElement"]().$.scrollTop = b);
                        d && setTimeout(function() {
                            d.focus()
                        },
                        0)
                    }
                }
            })
        }
    }), CKEDITOR.plugins.add("richcombo", {
        requires: "floatpanel,listblock,button",
        beforeInit: function(a) {
            a.ui.addHandler(CKEDITOR.UI_RICHCOMBO, CKEDITOR.ui.richCombo.handler)
        }
    }),
    function() {
        var a = '<span id="{id}" class="cke_combo cke_combo__{name} {cls}" role="presentation"><span id="{id}_label" class="cke_combo_label">{label}</span><a class="cke_combo_button" hidefocus=true title="{title}" tabindex="-1"' + (CKEDITOR.env.gecko && 10900 <= CKEDITOR.env.version && !CKEDITOR.env.hc ? "": '" href="javascript:void(\'{titleJs}\')"') + ' hidefocus="true" role="button" aria-labelledby="{id}_label" aria-haspopup="true"';
        if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac) a += ' onkeypress="return false;"';
        CKEDITOR.env.gecko && (a += ' onblur="this.style.cssText = this.style.cssText;"');
        var a = a + (' onkeydown="return CKEDITOR.tools.callFunction({keydownFn},event,this);" onmousedown="return CKEDITOR.tools.callFunction({mousedownFn},event);"  onfocus="return CKEDITOR.tools.callFunction({focusFn},event);" ' + (CKEDITOR.env.ie ? 'onclick="return false;" onmouseup': "onclick") + '="CKEDITOR.tools.callFunction({clickFn},this);return false;"><span id="{id}_text" class="cke_combo_text cke_combo_inlinelabel">{label}</span><span class="cke_combo_open"><span class="cke_combo_arrow">' + (CKEDITOR.env.hc ? "&#9660;": CKEDITOR.env.air ? "&nbsp;": "") + "</span></span></a></span>"),
        d = CKEDITOR.addTemplate("combo", a);
        CKEDITOR.UI_RICHCOMBO = "richcombo";
        CKEDITOR.ui.richCombo = CKEDITOR.tools.createClass({
            $: function(a) {
                CKEDITOR.tools.extend(this, a, {
                    canGroup: !1,
                    title: a.label,
                    modes: {
                        wysiwyg: 1
                    },
                    editorFocus: 1
                });
                a = this.panel || {};
                delete this.panel;
                this.id = CKEDITOR.tools.getNextNumber();
                this.document = a.parent && a.parent.getDocument() || CKEDITOR.document;
                a.className = "cke_combopanel";
                a.block = {
                    multiSelect: a.multiSelect,
                    attributes: a.attributes
                };
                a.toolbarRelated = !0;
                this._ = {
                    panelDefinition: a,
                    items: {}
                }
            },
            proto: {
                renderHtml: function(a) {
                    var c = [];
                    this.render(a, c);
                    return c.join("")
                },
                render: function(a, c) {
                    function e() {
                        var c = this.modes[a.mode] ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED;
                        this.setState(a.readOnly && !this.readOnly ? CKEDITOR.TRISTATE_DISABLED: c);
                        this.setValue("")
                    }
                    var g = CKEDITOR.env,
                    f = "cke_" + this.id,
                    k = CKEDITOR.tools.addFunction(function(c) {
                        s && (a.unlockSelection(1), s = 0);
                        l.execute(c)
                    },
                    this),
                    h = this,
                    l = {
                        id: f,
                        combo: this,
                        focus: function() {
                            CKEDITOR.document.getById(f).getChild(1).focus()
                        },
                        execute: function(c) {
                            var d = h._;
                            if (d.state != CKEDITOR.TRISTATE_DISABLED) if (h.createPanel(a), d.on) d.panel.hide();
                            else {
                                h.commit();
                                var e = h.getValue();
                                e ? d.list.mark(e) : d.list.unmarkAll();
                                d.panel.showBlock(h.id, new CKEDITOR.dom.element(c), 4)
                            }
                        },
                        clickFn: k
                    };
                    a.on("mode", e, this); ! this.readOnly && a.on("readOnly", e, this);
                    var n = CKEDITOR.tools.addFunction(function(a, b) {
                        a = new CKEDITOR.dom.event(a);
                        var c = a.getKeystroke();
                        switch (c) {
                        case 13:
                        case 32:
                        case 40:
                            CKEDITOR.tools.callFunction(k, b);
                            break;
                        default:
                            l.onkey(l, c)
                        }
                        a.preventDefault()
                    }),
                    p = CKEDITOR.tools.addFunction(function() {
                        l.onfocus && l.onfocus()
                    }),
                    s = 0,
                    r = CKEDITOR.tools.addFunction(function() {
                        if (CKEDITOR.env.opera) {
                            var c = a.editable();
                            c.isInline() && c.hasFocus && (a.lockSelection(), s = 1)
                        }
                    });
                    l.keyDownFn = n;
                    g = {
                        id: f,
                        name: this.name || this.command,
                        label: this.label,
                        title: this.title,
                        cls: this.className || "",
                        titleJs: g.gecko && 10900 <= g.version && !g.hc ? "": (this.title || "").replace("'", ""),
                        keydownFn: n,
                        mousedownFn: r,
                        focusFn: p,
                        clickFn: k
                    };
                    d.output(g, c);
                    if (this.onRender) this.onRender();
                    return l
                },
                createPanel: function(a) {
                    if (!this._.panel) {
                        var c = this._.panelDefinition,
                        d = this._.panelDefinition.block,
                        g = c.parent || CKEDITOR.document.getBody(),
                        f = "cke_combopanel__" + this.name,
                        k = new CKEDITOR.ui.floatPanel(a, g, c),
                        h = k.addListBlock(this.id, d),
                        l = this;
                        k.onShow = function() {
                            this.element.addClass(f);
                            l.setState(CKEDITOR.TRISTATE_ON);
                            l._.on = 1;
                            l.editorFocus && a.focus();
                            if (l.onOpen) l.onOpen();
                            h.focus(!h.multiSelect && l.getValue())
                        };
                        k.onHide = function(c) {
                            this.element.removeClass(f);
                            l.setState(l.modes && l.modes[a.mode] ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED);
                            l._.on = 0;
                            if (!c && l.onClose) l.onClose()
                        };
                        k.onEscape = function() {
                            k.hide(1)
                        };
                        h.onClick = function(a, b) {
                            l.onClick && l.onClick.call(l, a, b);
                            k.hide()
                        };
                        this._.panel = k;
                        this._.list = h;
                        k.getBlock(this.id).onHide = function() {
                            l._.on = 0;
                            l.setState(CKEDITOR.TRISTATE_OFF)
                        };
                        this.init && this.init()
                    }
                },
                setValue: function(a, c) {
                    this._.value = a;
                    var d = this.document.getById("cke_" + this.id + "_text");
                    d && (a || c ? d.removeClass("cke_combo_inlinelabel") : (c = this.label, d.addClass("cke_combo_inlinelabel")), d.setText("undefined" != typeof c ? c: a))
                },
                getValue: function() {
                    return this._.value || ""
                },
                unmarkAll: function() {
                    this._.list.unmarkAll()
                },
                mark: function(a) {
                    this._.list.mark(a)
                },
                hideItem: function(a) {
                    this._.list.hideItem(a)
                },
                hideGroup: function(a) {
                    this._.list.hideGroup(a)
                },
                showAll: function() {
                    this._.list.showAll()
                },
                add: function(a, c, d) {
                    this._.items[a] = d || a;
                    this._.list.add(a, c, d)
                },
                startGroup: function(a) {
                    this._.list.startGroup(a)
                },
                commit: function() {
                    this._.committed || (this._.list.commit(), this._.committed = 1, CKEDITOR.ui.fire("ready", this));
                    this._.committed = 1
                },
                setState: function(a) {
                    if (this._.state != a) {
                        var c = this.document.getById("cke_" + this.id);
                        c.setState(a, "cke_combo");
                        a == CKEDITOR.TRISTATE_DISABLED ? c.setAttribute("aria-disabled", !0) : c.removeAttribute("aria-disabled");
                        this._.state = a
                    }
                },
                enable: function() {
                    this._.state == CKEDITOR.TRISTATE_DISABLED && this.setState(this._.lastState)
                },
                disable: function() {
                    this._.state != CKEDITOR.TRISTATE_DISABLED && (this._.lastState = this._.state, this.setState(CKEDITOR.TRISTATE_DISABLED))
                }
            },
            statics: {
                handler: {
                    create: function(a) {
                        return new CKEDITOR.ui.richCombo(a)
                    }
                }
            }
        });
        CKEDITOR.ui.prototype.addRichCombo = function(a, c) {
            this.add(a, CKEDITOR.UI_RICHCOMBO, c)
        }
    } (),
    function() {
        function a(a, b, c, e, g, f, k, h) {
            var l = a.config,
            n = new CKEDITOR.style(k),
            p = g.split(";");
            g = [];
            for (var s = {},
            r = 0; r < p.length; r++) {
                var q = p[r];
                if (q) {
                    var q = q.split("/"),
                    t = {},
                    u = p[r] = q[0];
                    t[c] = g[r] = q[1] || u;
                    s[u] = new CKEDITOR.style(k, t);
                    s[u]._.definition.name = u
                } else p.splice(r--, 1)
            }
            a.ui.addRichCombo(b, {
                label: e.label,
                title: e.panelTitle,
                toolbar: "styles," + h,
                allowedContent: n,
                requiredContent: n,
                panel: {
                    css: [CKEDITOR.skin.getPath("editor")].concat(l.contentsCss),
                    multiSelect: !1,
                    attributes: {
                        "aria-label": e.panelTitle
                    }
                },
                init: function() {
                    this.startGroup(e.panelTitle);
                    for (var a = 0; a < p.length; a++) {
                        var b = p[a];
                        this.add(b, s[b].buildPreview(), b)
                    }
                },
                onClick: function(b) {
                    a.focus();
                    a.fire("saveSnapshot");
                    var c = s[b];
                    a[this.getValue() == b ? "removeStyle": "applyStyle"](c);
                    a.fire("saveSnapshot")
                },
                onRender: function() {
                    a.on("selectionChange",
                    function(a) {
                        var b = this.getValue();
                        a = a.data.path.elements;
                        for (var c = 0,
                        d; c < a.length; c++) {
                            d = a[c];
                            for (var e in s) if (s[e].checkElementMatch(d, !0)) {
                                e != b && this.setValue(e);
                                return
                            }
                        }
                        this.setValue("", f)
                    },
                    this)
                }
            })
        }
        CKEDITOR.plugins.add("font", {
            requires: "richcombo",
            init: function(d) {
                var b = d.config;
                a(d, "Font", "family", d.lang.font, b.font_names, b.font_defaultLabel, b.font_style, 30);
                a(d, "FontSize", "size", d.lang.font.fontSize, b.fontSize_sizes, b.fontSize_defaultLabel, b.fontSize_style, 40)
            }
        })
    } (), CKEDITOR.config.font_names = "Arial/Arial, Helvetica, sans-serif;Comic Sans MS/Comic Sans MS, cursive;Courier New/Courier New, Courier, monospace;Georgia/Georgia, serif;Lucida Sans Unicode/Lucida Sans Unicode, Lucida Grande, sans-serif;Tahoma/Tahoma, Geneva, sans-serif;Times New Roman/Times New Roman, Times, serif;Trebuchet MS/Trebuchet MS, Helvetica, sans-serif;Verdana/Verdana, Geneva, sans-serif", CKEDITOR.config.font_defaultLabel = "", CKEDITOR.config.font_style = {
        element: "span",
        styles: {
            "font-family": "#(family)"
        },
        overrides: [{
            element: "font",
            attributes: {
                face: null
            }
        }]
    },
    CKEDITOR.config.fontSize_sizes = "8/8px;9/9px;10/10px;11/11px;12/12px;14/14px;16/16px;18/18px;20/20px;22/22px;24/24px;26/26px;28/28px;36/36px;48/48px;72/72px", CKEDITOR.config.fontSize_defaultLabel = "", CKEDITOR.config.fontSize_style = {
        element: "span",
        styles: {
            "font-size": "#(size)"
        },
        overrides: [{
            element: "font",
            attributes: {
                size: null
            }
        }]
    },
    CKEDITOR.plugins.add("format", {
        requires: "richcombo",
        init: function(a) {
            if (!a.blockless) {
                for (var d = a.config,
                b = a.lang.format,
                c = d.format_tags.split(";"), e = {},
                g = 0, f = [], k = 0; k < c.length; k++) {
                    var h = c[k],
                    l = new CKEDITOR.style(d["format_" + h]);
                    if (!a.filter.customConfig || a.filter.check(l)) g++,
                    e[h] = l,
                    e[h]._.enterMode = a.config.enterMode,
                    f.push(l)
                }
                0 !== g && a.ui.addRichCombo("Format", {
                    label: b.label,
                    title: b.panelTitle,
                    toolbar: "styles,20",
                    allowedContent: f,
                    panel: {
                        css: [CKEDITOR.skin.getPath("editor")].concat(d.contentsCss),
                        multiSelect: !1,
                        attributes: {
                            "aria-label": b.panelTitle
                        }
                    },
                    init: function() {
                        this.startGroup(b.panelTitle);
                        for (var a in e) {
                            var c = b["tag_" + a];
                            this.add(a, e[a].buildPreview(c), c)
                        }
                    },
                    onClick: function(b) {
                        a.focus();
                        a.fire("saveSnapshot");
                        b = e[b];
                        var c = a.elementPath();
                        a[b.checkActive(c) ? "removeStyle": "applyStyle"](b);
                        setTimeout(function() {
                            a.fire("saveSnapshot")
                        },
                        0)
                    },
                    onRender: function() {
                        a.on("selectionChange",
                        function(b) {
                            var c = this.getValue();
                            b = b.data.path;
                            var d = !a.readOnly && b.isContextFor("p");
                            this[d ? "enable": "disable"]();
                            if (d) {
                                for (var f in e) if (e[f].checkActive(b)) {
                                    f != c && this.setValue(f, a.lang.format["tag_" + f]);
                                    return
                                }
                                this.setValue("")
                            }
                        },
                        this)
                    }
                })
            }
        }
    }), CKEDITOR.config.format_tags = "p;h1;h2;h3;h4;h5;h6;pre;address;div", CKEDITOR.config.format_p = {
        element: "p"
    },
    CKEDITOR.config.format_div = {
        element: "div"
    },
    CKEDITOR.config.format_pre = {
        element: "pre"
    },
    CKEDITOR.config.format_address = {
        element: "address"
    },
    CKEDITOR.config.format_h1 = {
        element: "h1"
    },
    CKEDITOR.config.format_h2 = {
        element: "h2"
    },
    CKEDITOR.config.format_h3 = {
        element: "h3"
    },
    CKEDITOR.config.format_h4 = {
        element: "h4"
    },
    CKEDITOR.config.format_h5 = {
        element: "h5"
    },
    CKEDITOR.config.format_h6 = {
        element: "h6"
    },
    CKEDITOR.plugins.add("forms", {
        requires: "dialog,fakeobjects",
        onLoad: function() {
            CKEDITOR.addCss(".cke_editable form{border: 1px dotted #FF0000;padding: 2px;}\n");
            CKEDITOR.addCss("img.cke_hidden{background-image: url(" + CKEDITOR.getUrl(this.path + "images/hiddenfield.gif") + ");background-position: center center;background-repeat: no-repeat;border: 1px solid #a9a9a9;width: 16px !important;height: 16px !important;}")
        },
        init: function(a) {
            var d = a.lang,
            b = 0,
            c = {
                email: 1,
                password: 1,
                search: 1,
                tel: 1,
                text: 1,
                url: 1
            },
            e = {
                checkbox: "input[type,name,checked]",
                radio: "input[type,name,checked]",
                textfield: "input[type,name,value,size,maxlength]",
                textarea: "textarea[cols,rows,name]",
                select: "select[name,size,multiple]; option[value,selected]",
                button: "input[type,name,value]",
                form: "form[action,name,id,enctype,target,method]",
                hiddenfield: "input[type,name,value]",
                imagebutton: "input[type,alt,src]{width,height,border,border-width,border-style,margin,float}"
            },
            g = {
                checkbox: "input",
                radio: "input",
                textfield: "input",
                textarea: "textarea",
                select: "select",
                button: "input",
                form: "form",
                hiddenfield: "input",
                imagebutton: "input"
            },
            f = function(c, f, h) {
                var k = {
                    allowedContent: e[f],
                    requiredContent: g[f]
                };
                "form" == f && (k.context = "form");
                a.addCommand(f, new CKEDITOR.dialogCommand(f, k));
                a.ui.addButton && a.ui.addButton(c, {
                    label: d.common[c.charAt(0).toLowerCase() + c.slice(1)],
                    command: f,
                    toolbar: "forms," + (b += 10)
                });
                CKEDITOR.dialog.add(f, h)
            },
            k = this.path + "dialogs/"; ! a.blockless && f("Form", "form", k + "form.js");
            f("Checkbox", "checkbox", k + "checkbox.js");
            f("Radio", "radio", k + "radio.js");
            f("TextField", "textfield", k + "textfield.js");
            f("Textarea", "textarea", k + "textarea.js");
            f("Select", "select", k + "select.js");
            f("Button", "button", k + "button.js");
            var h = CKEDITOR.plugins.get("image");
            h && f("ImageButton", "imagebutton", CKEDITOR.plugins.getPath("image") + "dialogs/image.js");
            f("HiddenField", "hiddenfield", k + "hiddenfield.js");
            a.addMenuItems && (f = {
                checkbox: {
                    label: d.forms.checkboxAndRadio.checkboxTitle,
                    command: "checkbox",
                    group: "checkbox"
                },
                radio: {
                    label: d.forms.checkboxAndRadio.radioTitle,
                    command: "radio",
                    group: "radio"
                },
                textfield: {
                    label: d.forms.textfield.title,
                    command: "textfield",
                    group: "textfield"
                },
                hiddenfield: {
                    label: d.forms.hidden.title,
                    command: "hiddenfield",
                    group: "hiddenfield"
                },
                imagebutton: {
                    label: d.image.titleButton,
                    command: "imagebutton",
                    group: "imagebutton"
                },
                button: {
                    label: d.forms.button.title,
                    command: "button",
                    group: "button"
                },
                select: {
                    label: d.forms.select.title,
                    command: "select",
                    group: "select"
                },
                textarea: {
                    label: d.forms.textarea.title,
                    command: "textarea",
                    group: "textarea"
                }
            },
            !a.blockless && (f.form = {
                label: d.forms.form.menu,
                command: "form",
                group: "form"
            }), a.addMenuItems(f));
            a.contextMenu && (!a.blockless && a.contextMenu.addListener(function(a, b, c) {
                if ((a = c.contains("form", 1)) && !a.isReadOnly()) return {
                    form: CKEDITOR.TRISTATE_OFF
                }
            }), a.contextMenu.addListener(function(a) {
                if (a && !a.isReadOnly()) {
                    var b = a.getName();
                    if ("select" == b) return {
                        select: CKEDITOR.TRISTATE_OFF
                    };
                    if ("textarea" == b) return {
                        textarea: CKEDITOR.TRISTATE_OFF
                    };
                    if ("input" == b) {
                        var d = a.getAttribute("type") || "text";
                        switch (d) {
                        case "button":
                        case "submit":
                        case "reset":
                            return {
                                button:
                                CKEDITOR.TRISTATE_OFF
                            };
                        case "checkbox":
                            return {
                                checkbox:
                                CKEDITOR.TRISTATE_OFF
                            };
                        case "radio":
                            return {
                                radio:
                                CKEDITOR.TRISTATE_OFF
                            };
                        case "image":
                            return h ? {
                                imagebutton: CKEDITOR.TRISTATE_OFF
                            }: null
                        }
                        if (c[d]) return {
                            textfield: CKEDITOR.TRISTATE_OFF
                        }
                    }
                    if ("img" == b && "hiddenfield" == a.data("cke-real-element-type")) return {
                        hiddenfield: CKEDITOR.TRISTATE_OFF
                    }
                }
            }));
            a.on("doubleclick",
            function(b) {
                var d = b.data.element;
                if (!a.blockless && d.is("form")) b.data.dialog = "form";
                else if (d.is("select")) b.data.dialog = "select";
                else if (d.is("textarea")) b.data.dialog = "textarea";
                else if (d.is("img") && "hiddenfield" == d.data("cke-real-element-type")) b.data.dialog = "hiddenfield";
                else if (d.is("input")) {
                    d = d.getAttribute("type") || "text";
                    switch (d) {
                    case "button":
                    case "submit":
                    case "reset":
                        b.data.dialog = "button";
                        break;
                    case "checkbox":
                        b.data.dialog = "checkbox";
                        break;
                    case "radio":
                        b.data.dialog = "radio";
                        break;
                    case "image":
                        b.data.dialog = "imagebutton"
                    }
                    c[d] && (b.data.dialog = "textfield")
                }
            })
        },
        afterInit: function(a) {
            var d = a.dataProcessor,
            b = d && d.htmlFilter,
            d = d && d.dataFilter;
            CKEDITOR.env.ie && b && b.addRules({
                elements: {
                    input: function(a) {
                        a = a.attributes;
                        var b = a.type;
                        b || (a.type = "text");
                        "checkbox" != b && "radio" != b || "on" != a.value || delete a.value
                    }
                }
            });
            d && d.addRules({
                elements: {
                    input: function(b) {
                        if ("hidden" == b.attributes.type) return a.createFakeParserElement(b, "cke_hidden", "hiddenfield")
                    }
                }
            })
        }
    }), CKEDITOR.env.ie && (CKEDITOR.dom.element.prototype.hasAttribute = CKEDITOR.tools.override(CKEDITOR.dom.element.prototype.hasAttribute,
    function(a) {
        return function(d) {
            this.$.attributes.getNamedItem(d);
            if ("input" == this.getName()) switch (d) {
            case "class":
                return 0 < this.$.className.length;
            case "checked":
                return !! this.$.checked;
            case "value":
                var b = this.getAttribute("type");
                return "checkbox" == b || "radio" == b ? "on" != this.$.value: this.$.value
            }
            return a.apply(this, arguments)
        }
    })),
    function() {
        var a = {
            canUndo: !1,
            exec: function(a) {
                var b = a.document.createElement("hr");
                a.insertElement(b)
            },
            allowedContent: "hr",
            requiredContent: "hr"
        };
        CKEDITOR.plugins.add("horizontalrule", {
            init: function(d) {
                d.blockless || (d.addCommand("horizontalrule", a), d.ui.addButton && d.ui.addButton("HorizontalRule", {
                    label: d.lang.horizontalrule.toolbar,
                    command: "horizontalrule",
                    toolbar: "insert,40"
                }))
            }
        })
    } (), CKEDITOR.plugins.add("htmlwriter", {
        init: function(a) {
            var d = new CKEDITOR.htmlWriter;
            d.forceSimpleAmpersand = a.config.forceSimpleAmpersand;
            d.indentationChars = a.config.dataIndentationChars || "\t";
            a.dataProcessor.writer = d
        }
    }), CKEDITOR.htmlWriter = CKEDITOR.tools.createClass({
        base: CKEDITOR.htmlParser.basicWriter,
        $: function() {
            this.base();
            this.indentationChars = "\t";
            this.selfClosingEnd = " />";
            this.lineBreakChars = "\n";
            this.sortAttributes = 1;
            this._.indent = 0;
            this._.indentation = "";
            this._.inPre = 0;
            this._.rules = {};
            var a = CKEDITOR.dtd,
            d;
            for (d in CKEDITOR.tools.extend({},
            a.$nonBodyContent, a.$block, a.$listItem, a.$tableContent)) this.setRules(d, {
                indent: !a[d]["#"],
                breakBeforeOpen: 1,
                breakBeforeClose: !a[d]["#"],
                breakAfterClose: 1,
                needsSpace: d in a.$block && !(d in {
                    li: 1,
                    dt: 1,
                    dd: 1
                })
            });
            this.setRules("br", {
                breakAfterOpen: 1
            });
            this.setRules("title", {
                indent: 0,
                breakAfterOpen: 0
            });
            this.setRules("style", {
                indent: 0,
                breakBeforeClose: 1
            });
            this.setRules("pre", {
                breakAfterOpen: 1,
                indent: 0
            })
        },
        proto: {
            openTag: function(a) {
                var d = this._.rules[a];
                this._.afterCloser && d && d.needsSpace && this._.needsSpace && this._.output.push("\n");
                this._.indent ? this.indentation() : d && d.breakBeforeOpen && (this.lineBreak(), this.indentation());
                this._.output.push("<", a);
                this._.afterCloser = 0
            },
            openTagClose: function(a, d) {
                var b = this._.rules[a];
                d ? (this._.output.push(this.selfClosingEnd), b && b.breakAfterClose && (this._.needsSpace = b.needsSpace)) : (this._.output.push(">"), b && b.indent && (this._.indentation += this.indentationChars));
                b && b.breakAfterOpen && this.lineBreak();
                "pre" == a && (this._.inPre = 1)
            },
            attribute: function(a, d) {
                "string" == typeof d && (this.forceSimpleAmpersand && (d = d.replace(/&amp;/g, "&")), d = CKEDITOR.tools.htmlEncodeAttr(d));
                this._.output.push(" ", a, '="', d, '"')
            },
            closeTag: function(a) {
                var d = this._.rules[a];
                d && d.indent && (this._.indentation = this._.indentation.substr(this.indentationChars.length));
                this._.indent ? this.indentation() : d && d.breakBeforeClose && (this.lineBreak(), this.indentation());
                this._.output.push("</", a, ">");
                "pre" == a && (this._.inPre = 0);
                d && d.breakAfterClose && (this.lineBreak(), this._.needsSpace = d.needsSpace);
                this._.afterCloser = 1
            },
            text: function(a) {
                this._.indent && (this.indentation(), !this._.inPre && (a = CKEDITOR.tools.ltrim(a)));
                this._.output.push(a)
            },
            comment: function(a) {
                this._.indent && this.indentation();
                this._.output.push("\x3c!--", a, "--\x3e")
            },
            lineBreak: function() { ! this._.inPre && 0 < this._.output.length && this._.output.push(this.lineBreakChars);
                this._.indent = 1
            },
            indentation: function() { ! this._.inPre && this._.indentation && this._.output.push(this._.indentation);
                this._.indent = 0
            },
            reset: function() {
                this._.output = [];
                this._.indent = 0;
                this._.indentation = "";
                this._.afterCloser = 0;
                this._.inPre = 0
            },
            setRules: function(a, d) {
                var b = this._.rules[a];
                b ? CKEDITOR.tools.extend(b, d, !0) : this._.rules[a] = d
            }
        }
    }),
    function() {
        CKEDITOR.plugins.add("iframe", {
            requires: "dialog,fakeobjects",
            onLoad: function() {
                CKEDITOR.addCss("img.cke_iframe{background-image: url(" + CKEDITOR.getUrl(this.path + "images/placeholder.png") + ");background-position: center center;background-repeat: no-repeat;border: 1px solid #a9a9a9;width: 80px;height: 80px;}")
            },
            init: function(a) {
                var d = a.lang.iframe,
                b = "iframe[align,longdesc,frameborder,height,name,scrolling,src,title,width]";
                a.plugins.dialogadvtab && (b += ";iframe" + a.plugins.dialogadvtab.allowedContent({
                    id: 1,
                    classes: 1,
                    styles: 1
                }));
                CKEDITOR.dialog.add("iframe", this.path + "dialogs/iframe.js");
                a.addCommand("iframe", new CKEDITOR.dialogCommand("iframe", {
                    allowedContent: b,
                    requiredContent: "iframe"
                }));
                a.ui.addButton && a.ui.addButton("Iframe", {
                    label: d.toolbar,
                    command: "iframe",
                    toolbar: "insert,80"
                });
                a.on("doubleclick",
                function(a) {
                    var b = a.data.element;
                    b.is("img") && "iframe" == b.data("cke-real-element-type") && (a.data.dialog = "iframe")
                });
                a.addMenuItems && a.addMenuItems({
                    iframe: {
                        label: d.title,
                        command: "iframe",
                        group: "image"
                    }
                });
                a.contextMenu && a.contextMenu.addListener(function(a) {
                    if (a && a.is("img") && "iframe" == a.data("cke-real-element-type")) return {
                        iframe: CKEDITOR.TRISTATE_OFF
                    }
                })
            },
            afterInit: function(a) {
                var d = a.dataProcessor; (d = d && d.dataFilter) && d.addRules({
                    elements: {
                        iframe: function(b) {
                            return a.createFakeParserElement(b, "cke_iframe", "iframe", !0)
                        }
                    }
                })
            }
        })
    } (),
    function() {
        function a(a, c) {
            c || (c = a.getSelection().getSelectedElement());
            if (c && c.is("img") && !c.data("cke-realelement") && !c.isReadOnly()) return c
        }
        function d(a) {
            var c = a.getStyle("float");
            if ("inherit" == c || "none" == c) c = 0;
            c || (c = a.getAttribute("align"));
            return c
        }
        CKEDITOR.plugins.add("image", {
            requires: "dialog",
            init: function(b) {
                CKEDITOR.dialog.add("image", this.path + "dialogs/image.js");
                var c = "img[alt,!src]{border-style,border-width,float,height,margin,margin-bottom,margin-left,margin-right,margin-top,width}";
                CKEDITOR.dialog.isTabEnabled(b, "image", "advanced") && (c = "img[alt,dir,id,lang,longdesc,!src,title]{*}(*)");
                b.addCommand("image", new CKEDITOR.dialogCommand("image", {
                    allowedContent: c,
                    requiredContent: "img[alt,src]",
                    contentTransformations: [["img{width}: sizeToStyle", "img[width]: sizeToAttribute"], ["img{float}: alignmentToStyle", "img[align]: alignmentToAttribute"]]
                }));
                b.ui.addButton && b.ui.addButton("Image", {
                    label: b.lang.common.image,
                    command: "image",
                    toolbar: "insert,10"
                });
                b.on("doubleclick",
                function(a) {
                    var b = a.data.element; ! b.is("img") || b.data("cke-realelement") || b.isReadOnly() || (a.data.dialog = "image")
                });
                b.addMenuItems && b.addMenuItems({
                    image: {
                        label: b.lang.image.menu,
                        command: "image",
                        group: "image"
                    }
                });
                b.contextMenu && b.contextMenu.addListener(function(c) {
                    if (a(b, c)) return {
                        image: CKEDITOR.TRISTATE_OFF
                    }
                })
            },
            afterInit: function(b) {
                function c(c) {
                    var g = b.getCommand("justify" + c);
                    if (g) {
                        if ("left" == c || "right" == c) g.on("exec",
                        function(f) {
                            var g = a(b),
                            h;
                            g && (h = d(g), h == c ? (g.removeStyle("float"), c == d(g) && g.removeAttribute("align")) : g.setStyle("float", c), f.cancel())
                        });
                        g.on("refresh",
                        function(f) {
                            var g = a(b);
                            g && (g = d(g), this.setState(g == c ? CKEDITOR.TRISTATE_ON: "right" == c || "left" == c ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED), f.cancel())
                        })
                    }
                }
                c("left");
                c("right");
                c("center");
                c("block")
            }
        })
    } (), CKEDITOR.config.image_removeLinkByEmptyURL = !0,
    function() {
        function a(a, e) {
            var g, f;
            e.on("refresh",
            function(a) {
                var c = [d],
                e;
                for (e in a.data.states) c.push(a.data.states[e]);
                this.setState(CKEDITOR.tools.search(c, b) ? b: d)
            },
            e, null, 100);
            e.on("exec",
            function(b) {
                g = a.getSelection();
                f = g.createBookmarks(1);
                b.data || (b.data = {});
                b.data.done = !1
            },
            e, null, 0);
            e.on("exec",
            function() {
                a.forceNextSelectionCheck();
                g.selectBookmarks(f)
            },
            e, null, 100)
        }
        var d = CKEDITOR.TRISTATE_DISABLED,
        b = CKEDITOR.TRISTATE_OFF;
        CKEDITOR.plugins.add("indent", {
            init: function(b) {
                var d = CKEDITOR.plugins.indent.genericDefinition;
                a(b, b.addCommand("indent", new d(!0)));
                a(b, b.addCommand("outdent", new d));
                b.ui.addButton && (b.ui.addButton("Indent", {
                    label: b.lang.indent.indent,
                    command: "indent",
                    directional: !0,
                    toolbar: "indent,20"
                }), b.ui.addButton("Outdent", {
                    label: b.lang.indent.outdent,
                    command: "outdent",
                    directional: !0,
                    toolbar: "indent,10"
                }));
                b.on("dirChanged",
                function(a) {
                    var d = b.createRange(),
                    e = a.data.node;
                    d.setStartBefore(e);
                    d.setEndAfter(e);
                    for (var h = new CKEDITOR.dom.walker(d), l; l = h.next();) if (l.type == CKEDITOR.NODE_ELEMENT) if (!l.equals(e) && l.getDirection()) d.setStartAfter(l),
                    h = new CKEDITOR.dom.walker(d);
                    else {
                        var n = b.config.indentClasses;
                        if (n) for (var p = "ltr" == a.data.dir ? ["_rtl", ""] : ["", "_rtl"], s = 0; s < n.length; s++) l.hasClass(n[s] + p[0]) && (l.removeClass(n[s] + p[0]), l.addClass(n[s] + p[1]));
                        n = l.getStyle("margin-right");
                        p = l.getStyle("margin-left");
                        n ? l.setStyle("margin-left", n) : l.removeStyle("margin-left");
                        p ? l.setStyle("margin-right", p) : l.removeStyle("margin-right")
                    }
                })
            }
        });
        CKEDITOR.plugins.indent = {
            genericDefinition: function(a) {
                this.isIndent = !!a;
                this.startDisabled = !this.isIndent
            },
            specificDefinition: function(a, b, d) {
                this.name = b;
                this.editor = a;
                this.jobs = {};
                this.enterBr = a.config.enterMode == CKEDITOR.ENTER_BR;
                this.isIndent = !!d;
                this.relatedGlobal = d ? "indent": "outdent";
                this.indentKey = d ? 9 : CKEDITOR.SHIFT + 9;
                this.database = {}
            },
            registerCommands: function(a, b) {
                a.on("pluginsLoaded",
                function() {
                    for (var a in b)(function(a, b) {
                        var c = a.getCommand(b.relatedGlobal),
                        d;
                        for (d in b.jobs) c.on("exec",
                        function(c) {
                            c.data.done || (a.fire("lockSnapshot"), b.execJob(a, d) && (c.data.done = !0), a.fire("unlockSnapshot"), CKEDITOR.dom.element.clearAllMarkers(b.database))
                        },
                        this, null, d),
                        c.on("refresh",
                        function(c) {
                            c.data.states || (c.data.states = {});
                            c.data.states[b.name + "@" + d] = b.refreshJob(a, d, c.data.path)
                        },
                        this, null, d);
                        a.addFeature(b)
                    })(this, b[a])
                })
            }
        };
        CKEDITOR.plugins.indent.genericDefinition.prototype = {
            context: "p",
            exec: function() {}
        };
        CKEDITOR.plugins.indent.specificDefinition.prototype = {
            execJob: function(a, b) {
                var g = this.jobs[b];
                if (g.state != d) return g.exec.call(this, a)
            },
            refreshJob: function(a, b, d) {
                b = this.jobs[b];
                b.state = b.refresh.call(this, a, d);
                return b.state
            },
            getContext: function(a) {
                return a.contains(this.context)
            }
        }
    } (),
    function() {
        function a(a, b, c) {
            if (!a.getCustomData("indent_processed")) {
                var e = this.editor,
                g = this.isIndent;
                if (b) {
                    e = a.$.className.match(this.classNameRegex);
                    c = 0;
                    e && (e = e[1], c = CKEDITOR.tools.indexOf(b, e) + 1);
                    if (0 > (c += g ? 1 : -1)) return;
                    c = Math.min(c, b.length);
                    c = Math.max(c, 0);
                    a.$.className = CKEDITOR.tools.ltrim(a.$.className.replace(this.classNameRegex, ""));
                    0 < c && a.addClass(b[c - 1])
                } else {
                    b = d(a, c);
                    c = parseInt(a.getStyle(b), 10);
                    var p = e.config.indentOffset || 40;
                    isNaN(c) && (c = 0);
                    c += (g ? 1 : -1) * p;
                    if (0 > c) return;
                    c = Math.max(c, 0);
                    c = Math.ceil(c / p) * p;
                    a.setStyle(b, c ? c + (e.config.indentUnit || "px") : "");
                    "" === a.getAttribute("style") && a.removeAttribute("style")
                }
                CKEDITOR.dom.element.setMarker(this.database, a, "indent_processed", 1)
            }
        }
        function d(a, b) {
            return "ltr" == (b || a.getComputedStyle("direction")) ? "margin-left": "margin-right"
        }
        var b = CKEDITOR.dtd.$listItem,
        c = CKEDITOR.dtd.$list,
        e = CKEDITOR.TRISTATE_DISABLED,
        g = CKEDITOR.TRISTATE_OFF;
        CKEDITOR.plugins.add("indentblock", {
            requires: "indent",
            init: function(f) {
                function k(f, k) {
                    h.specificDefinition.apply(this, arguments);
                    this.allowedContent = {
                        "div h1 h2 h3 h4 h5 h6 ol p pre ul": {
                            propertiesOnly: !0,
                            styles: l ? null: "margin-left,margin-right",
                            classes: l || null
                        }
                    };
                    this.enterBr && (this.allowedContent.div = !0);
                    this.requiredContent = (this.enterBr ? "div": "p") + (l ? "(" + l.join(",") + ")": "{margin-left}");
                    this.jobs = {
                        20 : {
                            refresh: function(a, c) {
                                var f = c.block || c.blockLimit;
                                if (f.is(b)) f = f.getParent();
                                else if (f.getAscendant(b)) return e;
                                if (!this.enterBr && !this.getContext(c)) return e;
                                if (l) {
                                    var h;
                                    h = l;
                                    var f = f.$.className.match(this.classNameRegex),
                                    k = this.isIndent;
                                    return (h = f ? k ? f[1] != h.slice( - 1) : !0 : k) ? g: e
                                }
                                return this.isIndent ? g: f ? CKEDITOR[0 >= (parseInt(f.getStyle(d(f)), 10) || 0) ? "TRISTATE_DISABLED": "TRISTATE_OFF"] : e
                            },
                            exec: function(b) {
                                var d = b.getSelection(),
                                d = d && d.getRanges(1)[0],
                                e;
                                if (e = b.elementPath().contains(c)) a.call(this, e, l);
                                else for (d = d.createIterator(), b = b.config.enterMode, d.enforceRealBlocks = !0, d.enlargeBr = b != CKEDITOR.ENTER_BR; e = d.getNextParagraph(b == CKEDITOR.ENTER_P ? "p": "div");) a.call(this, e, l);
                                return ! 0
                            }
                        }
                    }
                }
                var h = CKEDITOR.plugins.indent,
                l = f.config.indentClasses;
                h.registerCommands(f, {
                    indentblock: new k(f, "indentblock", !0),
                    outdentblock: new k(f, "outdentblock")
                });
                CKEDITOR.tools.extend(k.prototype, h.specificDefinition.prototype, {
                    context: {
                        div: 1,
                        dl: 1,
                        h1: 1,
                        h2: 1,
                        h3: 1,
                        h4: 1,
                        h5: 1,
                        h6: 1,
                        ul: 1,
                        ol: 1,
                        p: 1,
                        pre: 1,
                        table: 1
                    },
                    classNameRegex: l ? RegExp("(?:^|\\s+)(" + l.join("|") + ")(?=$|\\s)") : null
                })
            }
        })
    } (),
    function() {
        function a(a) {
            function d(b) {
                for (var h = r.startContainer,
                q = r.endContainer; h && !h.getParent().equals(b);) h = h.getParent();
                for (; q && !q.getParent().equals(b);) q = q.getParent();
                if (!h || !q) return ! 1;
                for (var t = h,
                h = [], s = !1; ! s;) t.equals(q) && (s = !0),
                h.push(t),
                t = t.getNext();
                if (1 > h.length) return ! 1;
                t = b.getParents(!0);
                for (q = 0; q < t.length; q++) if (t[q].getName && p[t[q].getName()]) {
                    b = t[q];
                    break
                }
                for (var t = f.isIndent ? 1 : -1, q = h[0], h = h[h.length - 1], s = CKEDITOR.plugins.list.listToArray(b, g), z = s[h.getCustomData("listarray_index")].indent, q = q.getCustomData("listarray_index"); q <= h.getCustomData("listarray_index"); q++) if (s[q].indent += t, 0 < t) {
                    var B = s[q].parent;
                    s[q].parent = new CKEDITOR.dom.element(B.getName(), B.getDocument())
                }
                for (q = h.getCustomData("listarray_index") + 1; q < s.length && s[q].indent > z; q++) s[q].indent += t;
                h = CKEDITOR.plugins.list.arrayToList(s, g, null, a.config.enterMode, b.getDirection());
                if (!f.isIndent) {
                    var x;
                    if ((x = b.getParent()) && x.is("li")) for (var t = h.listNode.getChildren(), D = [], I, q = t.count() - 1; 0 <= q; q--)(I = t.getItem(q)) && I.is && I.is("li") && D.push(I)
                }
                h && h.listNode.replace(b);
                if (D && D.length) for (q = 0; q < D.length; q++) {
                    for (I = b = D[q]; (I = I.getNext()) && I.is && I.getName() in p;) CKEDITOR.env.ie && !b.getFirst(function(a) {
                        return c(a) && e(a)
                    }) && b.append(r.document.createText("\u00a0")),
                    b.append(I);
                    b.insertAfter(x)
                }
                return ! 0
            }
            for (var f = this,
            g = this.database,
            p = this.context,
            s = a.getSelection(), s = (s && s.getRanges(1)).createIterator(), r; r = s.getNextRange();) {
                for (var q = r.getCommonAncestor(); q && (q.type != CKEDITOR.NODE_ELEMENT || !p[q.getName()]);) q = q.getParent();
                q || (q = r.startPath().contains(p)) && r.setEndAt(q, CKEDITOR.POSITION_BEFORE_END);
                if (!q) {
                    var t = r.getEnclosedNode();
                    t && t.type == CKEDITOR.NODE_ELEMENT && t.getName() in p && (r.setStartAt(t, CKEDITOR.POSITION_AFTER_START), r.setEndAt(t, CKEDITOR.POSITION_BEFORE_END), q = t)
                }
                q && r.startContainer.type == CKEDITOR.NODE_ELEMENT && r.startContainer.getName() in p && (t = new CKEDITOR.dom.walker(r), t.evaluator = b, r.startContainer = t.next());
                q && r.endContainer.type == CKEDITOR.NODE_ELEMENT && r.endContainer.getName() in p && (t = new CKEDITOR.dom.walker(r), t.evaluator = b, r.endContainer = t.previous());
                if (q) return d(q)
            }
            return 0
        }
        function d(a, c) {
            c || (c = a.contains(this.context));
            return c && a.block && a.block.equals(c.getFirst(b))
        }
        function b(a) {
            return a.type == CKEDITOR.NODE_ELEMENT && a.is("li")
        }
        var c = CKEDITOR.dom.walker.whitespaces(!0),
        e = CKEDITOR.dom.walker.bookmark(!1, !0),
        g = CKEDITOR.TRISTATE_DISABLED,
        f = CKEDITOR.TRISTATE_OFF;
        CKEDITOR.plugins.add("indentlist", {
            requires: "indent",
            init: function(b) {
                function c(b, h) {
                    e.specificDefinition.apply(this, arguments);
                    this.requiredContent = ["ul", "ol"];
                    b.on("key",
                    function(a) {
                        if ("wysiwyg" == b.mode && a.data.keyCode == this.indentKey) {
                            var c = this.getContext(b.elementPath()); ! c || this.isIndent && d.call(this, b.elementPath(), c) || (b.execCommand(this.relatedGlobal), a.cancel())
                        }
                    },
                    this);
                    this.jobs[this.isIndent ? 10 : 30] = {
                        refresh: this.isIndent ?
                        function(a, b) {
                            var c = this.getContext(b),
                            e = d.call(this, b, c);
                            return c && this.isIndent && !e ? f: g
                        }: function(a, b) {
                            return ! this.getContext(b) || this.isIndent ? g: f
                        },
                        exec: CKEDITOR.tools.bind(a, this)
                    }
                }
                var e = CKEDITOR.plugins.indent;
                e.registerCommands(b, {
                    indentlist: new c(b, "indentlist", !0),
                    outdentlist: new c(b, "outdentlist")
                });
                CKEDITOR.tools.extend(c.prototype, e.specificDefinition.prototype, {
                    context: {
                        ol: 1,
                        ul: 1
                    }
                })
            }
        })
    } (),
    function() {
        function a(a, b) {
            b = void 0 === b || b;
            var d;
            if (b) d = a.getComputedStyle("text-align");
            else {
                for (; ! a.hasAttribute || !a.hasAttribute("align") && !a.getStyle("text-align");) {
                    d = a.getParent();
                    if (!d) break;
                    a = d
                }
                d = a.getStyle("text-align") || a.getAttribute("align") || ""
            }
            d && (d = d.replace(/(?:-(?:moz|webkit)-)?(?:start|auto)/i, "")); ! d && b && (d = "rtl" == a.getComputedStyle("direction") ? "right": "left");
            return d
        }
        function d(a, b, d) {
            this.editor = a;
            this.name = b;
            this.value = d;
            this.context = "p";
            b = a.config.justifyClasses;
            var f = a.config.enterMode == CKEDITOR.ENTER_P ? "p": "div";
            if (b) {
                switch (d) {
                case "left":
                    this.cssClassName = b[0];
                    break;
                case "center":
                    this.cssClassName = b[1];
                    break;
                case "right":
                    this.cssClassName = b[2];
                    break;
                case "justify":
                    this.cssClassName = b[3]
                }
                this.cssClassRegex = RegExp("(?:^|\\s+)(?:" + b.join("|") + ")(?=$|\\s)");
                this.requiredContent = f + "(" + this.cssClassName + ")"
            } else this.requiredContent = f + "{text-align}";
            this.allowedContent = {
                "caption div h1 h2 h3 h4 h5 h6 p pre td th li": {
                    propertiesOnly: !0,
                    styles: this.cssClassName ? null: "text-align",
                    classes: this.cssClassName || null
                }
            };
            a.config.enterMode == CKEDITOR.ENTER_BR && (this.allowedContent.div = !0)
        }
        function b(a) {
            var b = a.editor,
            d = b.createRange();
            d.setStartBefore(a.data.node);
            d.setEndAfter(a.data.node);
            for (var f = new CKEDITOR.dom.walker(d), k; k = f.next();) if (k.type == CKEDITOR.NODE_ELEMENT) if (!k.equals(a.data.node) && k.getDirection()) d.setStartAfter(k),
            f = new CKEDITOR.dom.walker(d);
            else {
                var h = b.config.justifyClasses;
                h && (k.hasClass(h[0]) ? (k.removeClass(h[0]), k.addClass(h[2])) : k.hasClass(h[2]) && (k.removeClass(h[2]), k.addClass(h[0])));
                h = k.getStyle("text-align");
                "left" == h ? k.setStyle("text-align", "right") : "right" == h && k.setStyle("text-align", "left")
            }
        }
        d.prototype = {
            exec: function(b) {
                var d = b.getSelection(),
                g = b.config.enterMode;
                if (d) {
                    for (var f = d.createBookmarks(), k = d.getRanges(!0), h = this.cssClassName, l, n, p = b.config.useComputedState, p = void 0 === p || p, s = k.length - 1; 0 <= s; s--) for (l = k[s].createIterator(), l.enlargeBr = g != CKEDITOR.ENTER_BR; n = l.getNextParagraph(g == CKEDITOR.ENTER_P ? "p": "div");) {
                        n.removeAttribute("align");
                        n.removeStyle("text-align");
                        var r = h && (n.$.className = CKEDITOR.tools.ltrim(n.$.className.replace(this.cssClassRegex, ""))),
                        q = this.state == CKEDITOR.TRISTATE_OFF && (!p || a(n, !0) != this.value);
                        h ? q ? n.addClass(h) : r || n.removeAttribute("class") : q && n.setStyle("text-align", this.value)
                    }
                    b.focus();
                    b.forceNextSelectionCheck();
                    d.selectBookmarks(f)
                }
            },
            refresh: function(b, d) {
                var g = d.block || d.blockLimit;
                this.setState("body" != g.getName() && a(g, this.editor.config.useComputedState) == this.value ? CKEDITOR.TRISTATE_ON: CKEDITOR.TRISTATE_OFF)
            }
        };
        CKEDITOR.plugins.add("justify", {
            init: function(a) {
                if (!a.blockless) {
                    var e = new d(a, "justifyleft", "left"),
                    g = new d(a, "justifycenter", "center"),
                    f = new d(a, "justifyright", "right"),
                    k = new d(a, "justifyblock", "justify");
                    a.addCommand("justifyleft", e);
                    a.addCommand("justifycenter", g);
                    a.addCommand("justifyright", f);
                    a.addCommand("justifyblock", k);
                    a.ui.addButton && (a.ui.addButton("JustifyLeft", {
                        label: a.lang.justify.left,
                        command: "justifyleft",
                        toolbar: "align,10"
                    }), a.ui.addButton("JustifyCenter", {
                        label: a.lang.justify.center,
                        command: "justifycenter",
                        toolbar: "align,20"
                    }), a.ui.addButton("JustifyRight", {
                        label: a.lang.justify.right,
                        command: "justifyright",
                        toolbar: "align,30"
                    }), a.ui.addButton("JustifyBlock", {
                        label: a.lang.justify.block,
                        command: "justifyblock",
                        toolbar: "align,40"
                    }));
                    a.on("dirChanged", b)
                }
            }
        })
    } (), CKEDITOR.plugins.add("link", {
        requires: "dialog,fakeobjects",
        onLoad: function() {
            function a(a) {
                return b.replace(/%1/g, "rtl" == a ? "right": "left").replace(/%2/g, "cke_contents_" + a)
            }
            var d = "background:url(" + CKEDITOR.getUrl(this.path + "images" + (CKEDITOR.env.hidpi ? "/hidpi": "") + "/anchor.png") + ") no-repeat %1 center;border:1px dotted #00f;background-size:16px;",
            b = ".%2 a.cke_anchor,.%2 a.cke_anchor_empty,.cke_editable.%2 a[name],.cke_editable.%2 a[data-cke-saved-name]{" + d + "padding-%1:18px;cursor:auto;}" + (CKEDITOR.env.ie ? "a.cke_anchor_empty{display:inline-block;}": "") + ".%2 img.cke_anchor{" + d + "width:16px;min-height:15px;height:1.15em;vertical-align:" + (CKEDITOR.env.opera ? "middle": "text-bottom") + ";}";
            CKEDITOR.addCss(a("ltr") + a("rtl"))
        },
        init: function(a) {
            var d = "a[!href]";
            CKEDITOR.dialog.isTabEnabled(a, "link", "advanced") && (d = d.replace("]", ",accesskey,charset,dir,id,lang,name,rel,tabindex,title,type]{*}(*)"));
            CKEDITOR.dialog.isTabEnabled(a, "link", "target") && (d = d.replace("]", ",target,onclick]"));
            a.addCommand("link", new CKEDITOR.dialogCommand("link", {
                allowedContent: d,
                requiredContent: "a[href]"
            }));
            a.addCommand("anchor", new CKEDITOR.dialogCommand("anchor", {
                allowedContent: "a[!name,id]",
                requiredContent: "a[name]"
            }));
            a.addCommand("unlink", new CKEDITOR.unlinkCommand);
            a.addCommand("removeAnchor", new CKEDITOR.removeAnchorCommand);
            a.setKeystroke(CKEDITOR.CTRL + 76, "link");
            a.ui.addButton && (a.ui.addButton("Link", {
                label: a.lang.link.toolbar,
                command: "link",
                toolbar: "links,10"
            }), a.ui.addButton("Unlink", {
                label: a.lang.link.unlink,
                command: "unlink",
                toolbar: "links,20"
            }), a.ui.addButton("Anchor", {
                label: a.lang.link.anchor.toolbar,
                command: "anchor",
                toolbar: "links,30"
            }));
            CKEDITOR.dialog.add("link", this.path + "dialogs/link.js");
            CKEDITOR.dialog.add("anchor", this.path + "dialogs/anchor.js");
            a.on("doubleclick",
            function(b) {
                var c = CKEDITOR.plugins.link.getSelectedLink(a) || b.data.element;
                c.isReadOnly() || (c.is("a") ? (b.data.dialog = !c.getAttribute("name") || c.getAttribute("href") && c.getChildCount() ? "link": "anchor", a.getSelection().selectElement(c)) : CKEDITOR.plugins.link.tryRestoreFakeAnchor(a, c) && (b.data.dialog = "anchor"))
            });
            a.addMenuItems && a.addMenuItems({
                anchor: {
                    label: a.lang.link.anchor.menu,
                    command: "anchor",
                    group: "anchor",
                    order: 1
                },
                removeAnchor: {
                    label: a.lang.link.anchor.remove,
                    command: "removeAnchor",
                    group: "anchor",
                    order: 5
                },
                link: {
                    label: a.lang.link.menu,
                    command: "link",
                    group: "link",
                    order: 1
                },
                unlink: {
                    label: a.lang.link.unlink,
                    command: "unlink",
                    group: "link",
                    order: 5
                }
            });
            a.contextMenu && a.contextMenu.addListener(function(b) {
                if (!b || b.isReadOnly()) return null;
                b = CKEDITOR.plugins.link.tryRestoreFakeAnchor(a, b);
                if (!b && !(b = CKEDITOR.plugins.link.getSelectedLink(a))) return null;
                var c = {};
                b.getAttribute("href") && b.getChildCount() && (c = {
                    link: CKEDITOR.TRISTATE_OFF,
                    unlink: CKEDITOR.TRISTATE_OFF
                });
                b && b.hasAttribute("name") && (c.anchor = c.removeAnchor = CKEDITOR.TRISTATE_OFF);
                return c
            })
        },
        afterInit: function(a) {
            var d = a.dataProcessor,
            b = d && d.dataFilter,
            d = d && d.htmlFilter,
            c = a._.elementsPath && a._.elementsPath.filters;
            b && b.addRules({
                elements: {
                    a: function(b) {
                        var c = b.attributes;
                        if (!c.name) return null;
                        var d = !b.children.length;
                        if (CKEDITOR.plugins.link.synAnchorSelector) {
                            b = d ? "cke_anchor_empty": "cke_anchor";
                            var k = c["class"];
                            c.name && (!k || 0 > k.indexOf(b)) && (c["class"] = (k || "") + " " + b);
                            d && CKEDITOR.plugins.link.emptyAnchorFix && (c.contenteditable = "false", c["data-cke-editable"] = 1)
                        } else if (CKEDITOR.plugins.link.fakeAnchor && d) return a.createFakeParserElement(b, "cke_anchor", "anchor");
                        return null
                    }
                }
            });
            CKEDITOR.plugins.link.emptyAnchorFix && d && d.addRules({
                elements: {
                    a: function(a) {
                        delete a.attributes.contenteditable
                    }
                }
            });
            c && c.push(function(b, c) {
                if ("a" == c && (CKEDITOR.plugins.link.tryRestoreFakeAnchor(a, b) || b.getAttribute("name") && (!b.getAttribute("href") || !b.getChildCount()))) return "anchor"
            })
        }
    }), CKEDITOR.plugins.link = {
        getSelectedLink: function(a) {
            var d = a.getSelection(),
            b = d.getSelectedElement();
            return b && b.is("a") ? b: (d = d.getRanges(!0)[0]) ? (d.shrink(CKEDITOR.SHRINK_TEXT), a.elementPath(d.getCommonAncestor()).contains("a", 1)) : null
        },
        fakeAnchor: CKEDITOR.env.opera || CKEDITOR.env.webkit,
        synAnchorSelector: CKEDITOR.env.ie,
        emptyAnchorFix: CKEDITOR.env.ie && 8 > CKEDITOR.env.version,
        tryRestoreFakeAnchor: function(a, d) {
            if (d && d.data("cke-real-element-type") && "anchor" == d.data("cke-real-element-type")) {
                var b = a.restoreRealElement(d);
                if (b.data("cke-saved-name")) return b
            }
        }
    },
    CKEDITOR.unlinkCommand = function() {},
    CKEDITOR.unlinkCommand.prototype = {
        exec: function(a) {
            var d = new CKEDITOR.style({
                element: "a",
                type: CKEDITOR.STYLE_INLINE,
                alwaysRemoveElement: 1
            });
            a.removeStyle(d)
        },
        refresh: function(a, d) {
            var b = d.lastElement && d.lastElement.getAscendant("a", !0);
            b && "a" == b.getName() && b.getAttribute("href") && b.getChildCount() ? this.setState(CKEDITOR.TRISTATE_OFF) : this.setState(CKEDITOR.TRISTATE_DISABLED)
        },
        contextSensitive: 1,
        startDisabled: 1,
        requiredContent: "a[href]"
    },
    CKEDITOR.removeAnchorCommand = function() {},
    CKEDITOR.removeAnchorCommand.prototype = {
        exec: function(a) {
            var d = a.getSelection(),
            b = d.createBookmarks(),
            c;
            if (d && (c = d.getSelectedElement()) && (CKEDITOR.plugins.link.fakeAnchor && !c.getChildCount() ? CKEDITOR.plugins.link.tryRestoreFakeAnchor(a, c) : c.is("a"))) c.remove(1);
            else if (c = CKEDITOR.plugins.link.getSelectedLink(a)) c.hasAttribute("href") ? (c.removeAttributes({
                name: 1,
                "data-cke-saved-name": 1
            }), c.removeClass("cke_anchor")) : c.remove(1);
            d.selectBookmarks(b)
        },
        requiredContent: "a[name]"
    },
    CKEDITOR.tools.extend(CKEDITOR.config, {
        linkShowAdvancedTab: !0,
        linkShowTargetTab: !0
    }),
    function() {
        function a(a, b, c) {
            function d(c) {
                if ((l = k[c ? "getFirst": "getLast"]()) && !(l.is && l.isBlockBoundary() || !(n = b.root[c ? "getPrevious": "getNext"](CKEDITOR.dom.walker.invisible(!0))) || n.is && n.isBlockBoundary({
                    br: 1
                }))) a.document.createElement("br")[c ? "insertBefore": "insertAfter"](l)
            }
            for (var e = CKEDITOR.plugins.list.listToArray(b.root, c), f = [], g = 0; g < b.contents.length; g++) {
                var h = b.contents[g]; (h = h.getAscendant("li", !0)) && !h.getCustomData("list_item_processed") && (f.push(h), CKEDITOR.dom.element.setMarker(c, h, "list_item_processed", !0))
            }
            h = null;
            for (g = 0; g < f.length; g++) h = f[g].getCustomData("listarray_index"),
            e[h].indent = -1;
            for (g = h + 1; g < e.length; g++) if (e[g].indent > e[g - 1].indent + 1) {
                f = e[g - 1].indent + 1 - e[g].indent;
                for (h = e[g].indent; e[g] && e[g].indent >= h;) e[g].indent += f,
                g++;
                g--
            }
            var k = CKEDITOR.plugins.list.arrayToList(e, c, null, a.config.enterMode, b.root.getAttribute("dir")).listNode,
            l,
            n;
            d(!0);
            d();
            k.replace(b.root)
        }
        function d(a, b) {
            this.name = a;
            this.context = this.type = b;
            this.allowedContent = b + " li";
            this.requiredContent = b
        }
        function b(a, b, c, d) {
            for (var e, f; e = a[d ? "getLast": "getFirst"](r);)(f = e.getDirection(1)) !== b.getDirection(1) && e.setAttribute("dir", f),
            e.remove(),
            c ? e[d ? "insertBefore": "insertAfter"](c) : b.append(e, d)
        }
        function c(a) {
            var c; (c = function(c) {
                var d = a[c ? "getPrevious": "getNext"](n);
                d && d.type == CKEDITOR.NODE_ELEMENT && d.is(a.getName()) && (b(a, d, null, !c), a.remove(), a = d)
            })();
            c(1)
        }
        function e(a) {
            return a.type == CKEDITOR.NODE_ELEMENT && (a.getName() in CKEDITOR.dtd.$block || a.getName() in CKEDITOR.dtd.$listItem) && CKEDITOR.dtd[a.getName()]["#"]
        }
        function g(a, d, e) {
            a.fire("saveSnapshot");
            e.enlarge(CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS);
            var g = e.extractContents();
            d.trim(!1, !0);
            var h = d.createBookmark(),
            k = new CKEDITOR.dom.elementPath(d.startContainer),
            l = k.block,
            k = k.lastElement.getAscendant("li", 1) || l,
            r = new CKEDITOR.dom.elementPath(e.startContainer),
            s = r.contains(CKEDITOR.dtd.$listItem),
            r = r.contains(CKEDITOR.dtd.$list);
            l ? (l = l.getBogus()) && l.remove() : r && (l = r.getPrevious(n)) && p(l) && l.remove(); (l = g.getLast()) && l.type == CKEDITOR.NODE_ELEMENT && l.is("br") && l.remove(); (l = d.startContainer.getChild(d.startOffset)) ? g.insertBefore(l) : d.startContainer.append(g);
            s && (g = f(s)) && (k.contains(s) ? (b(g, s.getParent(), s), g.remove()) : k.append(g));
            for (; e.checkStartOfBlock() && e.checkEndOfBlock();) r = e.startPath(),
            g = r.block,
            g.is("li") && (k = g.getParent(), g.equals(k.getLast(n)) && g.equals(k.getFirst(n)) && (g = k)),
            e.moveToPosition(g, CKEDITOR.POSITION_BEFORE_START),
            g.remove();
            e = e.clone();
            g = a.editable();
            e.setEndAt(g, CKEDITOR.POSITION_BEFORE_END);
            e = new CKEDITOR.dom.walker(e);
            e.evaluator = function(a) {
                return n(a) && !p(a)
            }; (e = e.next()) && e.type == CKEDITOR.NODE_ELEMENT && e.getName() in CKEDITOR.dtd.$list && c(e);
            d.moveToBookmark(h);
            d.select();
            a.fire("saveSnapshot")
        }
        function f(a) {
            return (a = a.getLast(n)) && a.type == CKEDITOR.NODE_ELEMENT && a.getName() in k ? a: null
        }
        var k = {
            ol: 1,
            ul: 1
        },
        h = CKEDITOR.dom.walker.whitespaces(),
        l = CKEDITOR.dom.walker.bookmark(),
        n = function(a) {
            return ! (h(a) || l(a))
        },
        p = CKEDITOR.dom.walker.bogus();
        CKEDITOR.plugins.list = {
            listToArray: function(a, b, c, d, e) {
                if (!k[a.getName()]) return [];
                d || (d = 0);
                c || (c = []);
                for (var f = 0,
                g = a.getChildCount(); f < g; f++) {
                    var h = a.getChild(f);
                    h.type == CKEDITOR.NODE_ELEMENT && h.getName() in CKEDITOR.dtd.$list && CKEDITOR.plugins.list.listToArray(h, b, c, d + 1);
                    if ("li" == h.$.nodeName.toLowerCase()) {
                        var l = {
                            parent: a,
                            indent: d,
                            element: h,
                            contents: []
                        };
                        e ? l.grandparent = e: (l.grandparent = a.getParent(), l.grandparent && "li" == l.grandparent.$.nodeName.toLowerCase() && (l.grandparent = l.grandparent.getParent()));
                        b && CKEDITOR.dom.element.setMarker(b, h, "listarray_index", c.length);
                        c.push(l);
                        for (var n = 0,
                        p = h.getChildCount(), r; n < p; n++) r = h.getChild(n),
                        r.type == CKEDITOR.NODE_ELEMENT && k[r.getName()] ? CKEDITOR.plugins.list.listToArray(r, b, c, d + 1, l.grandparent) : l.contents.push(r)
                    }
                }
                return c
            },
            arrayToList: function(a, b, c, d, e) {
                c || (c = 0);
                if (!a || a.length < c + 1) return null;
                for (var f, g = a[c].parent.getDocument(), h = new CKEDITOR.dom.documentFragment(g), l = null, p = c, r = Math.max(a[c].indent, 0), s = null, C, F, J = d == CKEDITOR.ENTER_P ? "p": "div";;) {
                    var m = a[p];
                    f = m.grandparent;
                    C = m.element.getDirection(1);
                    if (m.indent == r) {
                        l && a[p].parent.getName() == l.getName() || (l = a[p].parent.clone(!1, 1), e && l.setAttribute("dir", e), h.append(l));
                        s = l.append(m.element.clone(0, 1));
                        C != l.getDirection(1) && s.setAttribute("dir", C);
                        for (f = 0; f < m.contents.length; f++) s.append(m.contents[f].clone(1, 1));
                        p++
                    } else if (m.indent == Math.max(r, 0) + 1) F = a[p - 1].element.getDirection(1),
                    p = CKEDITOR.plugins.list.arrayToList(a, null, p, d, F != C ? C: null),
                    s.getChildCount() || !CKEDITOR.env.ie || 7 < g.$.documentMode || s.append(g.createText("\u00a0")),
                    s.append(p.listNode),
                    p = p.nextIndex;
                    else if ( - 1 == m.indent && !c && f) {
                        k[f.getName()] ? (s = m.element.clone(!1, !0), C != f.getDirection(1) && s.setAttribute("dir", C)) : s = new CKEDITOR.dom.documentFragment(g);
                        var l = f.getDirection(1) != C,
                        L = m.element,
                        K = L.getAttribute("class"),
                        O = L.getAttribute("style"),
                        P = s.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT && (d != CKEDITOR.ENTER_BR || l || O || K),
                        M,
                        N = m.contents.length;
                        for (f = 0; f < N; f++) {
                            M = m.contents[f];
                            if (M.type == CKEDITOR.NODE_ELEMENT && M.isBlockBoundary()) {
                                l && !M.getDirection() && M.setAttribute("dir", C);
                                var R = M,
                                Q = L.getAttribute("style");
                                Q && R.setAttribute("style", Q.replace(/([^;])$/, "$1;") + (R.getAttribute("style") || ""));
                                K && M.addClass(K)
                            } else P && (F || (F = g.createElement(J), l && F.setAttribute("dir", C)), O && F.setAttribute("style", O), K && F.setAttribute("class", K), F.append(M.clone(1, 1)));
                            s.append(F || M.clone(1, 1))
                        }
                        s.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT && p != a.length - 1 && ((C = s.getLast()) && C.type == CKEDITOR.NODE_ELEMENT && "_moz" == C.getAttribute("type") && C.remove(), s.getLast(n) && C.type == CKEDITOR.NODE_ELEMENT && C.getName() in CKEDITOR.dtd.$block || s.append(g.createElement("br")));
                        C = s.$.nodeName.toLowerCase();
                        CKEDITOR.env.ie || "div" != C && "p" != C || s.appendBogus();
                        h.append(s);
                        l = null;
                        p++
                    } else return null;
                    F = null;
                    if (a.length <= p || Math.max(a[p].indent, 0) < r) break
                }
                if (b) for (a = h.getFirst(); a;) {
                    if (a.type == CKEDITOR.NODE_ELEMENT && (CKEDITOR.dom.element.clearMarkers(b, a), a.getName() in CKEDITOR.dtd.$listItem && (c = a, g = void 0, d = c.getDirection()))) {
                        for (e = c.getParent(); e && !(g = e.getDirection());) e = e.getParent();
                        d == g && c.removeAttribute("dir")
                    }
                    a = a.getNextSourceNode()
                }
                return {
                    listNode: h,
                    nextIndex: p
                }
            }
        };
        var s = /^h[1-6]$/,
        r = CKEDITOR.dom.walker.nodeType(CKEDITOR.NODE_ELEMENT);
        d.prototype = {
            exec: function(b) {
                this.refresh(b, b.elementPath());
                var d = b.config,
                e = b.getSelection(),
                f = e && e.getRanges(!0);
                if (this.state == CKEDITOR.TRISTATE_OFF) {
                    var g = b.editable();
                    if (g.getFirst(n)) {
                        var h = 1 == f.length && f[0]; (d = h && h.getEnclosedNode()) && d.is && this.type == d.getName() && this.setState(CKEDITOR.TRISTATE_ON)
                    } else d.enterMode == CKEDITOR.ENTER_BR ? g.appendBogus() : f[0].fixBlock(1, d.enterMode == CKEDITOR.ENTER_P ? "p": "div"),
                    e.selectRanges(f)
                }
                for (var d = e.createBookmarks(!0), g = [], l = {},
                f = f.createIterator(), p = 0; (h = f.getNextRange()) && ++p;) {
                    var r = h.getBoundaryNodes(),
                    x = r.startNode,
                    D = r.endNode;
                    x.type == CKEDITOR.NODE_ELEMENT && "td" == x.getName() && h.setStartAt(r.startNode, CKEDITOR.POSITION_AFTER_START);
                    D.type == CKEDITOR.NODE_ELEMENT && "td" == D.getName() && h.setEndAt(r.endNode, CKEDITOR.POSITION_BEFORE_END);
                    h = h.createIterator();
                    for (h.forceBrBreak = this.state == CKEDITOR.TRISTATE_OFF; r = h.getNextParagraph();) if (!r.getCustomData("list_block")) {
                        CKEDITOR.dom.element.setMarker(l, r, "list_block", 1);
                        for (var I = b.elementPath(r), x = I.elements, D = 0, I = I.blockLimit, C, F = x.length - 1; 0 <= F && (C = x[F]); F--) if (k[C.getName()] && I.contains(C)) {
                            I.removeCustomData("list_group_object_" + p); (x = C.getCustomData("list_group_object")) ? x.contents.push(r) : (x = {
                                root: C,
                                contents: [r]
                            },
                            g.push(x), CKEDITOR.dom.element.setMarker(l, C, "list_group_object", x));
                            D = 1;
                            break
                        }
                        D || (D = I, D.getCustomData("list_group_object_" + p) ? D.getCustomData("list_group_object_" + p).contents.push(r) : (x = {
                            root: D,
                            contents: [r]
                        },
                        CKEDITOR.dom.element.setMarker(l, D, "list_group_object_" + p, x), g.push(x)))
                    }
                }
                for (C = []; 0 < g.length;) if (x = g.shift(), this.state == CKEDITOR.TRISTATE_OFF) if (k[x.root.getName()]) {
                    r = b;
                    f = x;
                    x = l;
                    p = C;
                    D = CKEDITOR.plugins.list.listToArray(f.root, x);
                    I = [];
                    for (h = 0; h < f.contents.length; h++) F = f.contents[h],
                    (F = F.getAscendant("li", !0)) && !F.getCustomData("list_item_processed") && (I.push(F), CKEDITOR.dom.element.setMarker(x, F, "list_item_processed", !0));
                    for (var F = f.root.getDocument(), J = void 0, m = void 0, h = 0; h < I.length; h++) {
                        var L = I[h].getCustomData("listarray_index"),
                        J = D[L].parent;
                        J.is(this.type) || (m = F.createElement(this.type), J.copyAttributes(m, {
                            start: 1,
                            type: 1
                        }), m.removeStyle("list-style-type"), D[L].parent = m)
                    }
                    r = CKEDITOR.plugins.list.arrayToList(D, x, null, r.config.enterMode);
                    x = void 0;
                    D = r.listNode.getChildCount();
                    for (h = 0; h < D && (x = r.listNode.getChild(h)); h++) x.getName() == this.type && p.push(x);
                    r.listNode.replace(f.root)
                } else {
                    D = b;
                    r = x;
                    h = C;
                    I = r.contents;
                    f = r.root.getDocument();
                    p = [];
                    1 == I.length && I[0].equals(r.root) && (x = f.createElement("div"), I[0].moveChildren && I[0].moveChildren(x), I[0].append(x), I[0] = x);
                    r = r.contents[0].getParent();
                    for (F = 0; F < I.length; F++) r = r.getCommonAncestor(I[F].getParent());
                    J = D.config.useComputedState;
                    D = x = void 0;
                    J = void 0 === J || J;
                    for (F = 0; F < I.length; F++) for (m = I[F]; L = m.getParent();) {
                        if (L.equals(r)) {
                            p.push(m); ! D && m.getDirection() && (D = 1);
                            m = m.getDirection(J);
                            null !== x && (x = x && x != m ? null: m);
                            break
                        }
                        m = L
                    }
                    if (! (1 > p.length)) {
                        I = p[p.length - 1].getNext();
                        F = f.createElement(this.type);
                        for (h.push(F); p.length;) h = p.shift(),
                        J = f.createElement("li"),
                        h.is("pre") || s.test(h.getName()) ? h.appendTo(J) : (h.copyAttributes(J), x && h.getDirection() && (J.removeStyle("direction"), J.removeAttribute("dir")), h.moveChildren(J), h.remove()),
                        J.appendTo(F);
                        x && D && F.setAttribute("dir", x);
                        I ? F.insertBefore(I) : F.appendTo(r)
                    }
                } else this.state == CKEDITOR.TRISTATE_ON && k[x.root.getName()] && a.call(this, b, x, l);
                for (F = 0; F < C.length; F++) c(C[F]);
                CKEDITOR.dom.element.clearAllMarkers(l);
                e.selectBookmarks(d);
                b.focus()
            },
            refresh: function(a, b) {
                var c = b.contains(k, 1),
                d = b.blockLimit || b.root;
                c && d.contains(c) ? this.setState(c.is(this.type) ? CKEDITOR.TRISTATE_ON: CKEDITOR.TRISTATE_OFF) : this.setState(CKEDITOR.TRISTATE_OFF)
            }
        };
        CKEDITOR.plugins.add("list", {
            requires: "indentlist",
            init: function(a) {
                a.blockless || (a.addCommand("numberedlist", new d("numberedlist", "ol")), a.addCommand("bulletedlist", new d("bulletedlist", "ul")), a.ui.addButton && (a.ui.addButton("NumberedList", {
                    label: a.lang.list.numberedlist,
                    command: "numberedlist",
                    directional: !0,
                    toolbar: "list,10"
                }), a.ui.addButton("BulletedList", {
                    label: a.lang.list.bulletedlist,
                    command: "bulletedlist",
                    directional: !0,
                    toolbar: "list,20"
                })), a.on("key",
                function(b) {
                    var c = b.data.keyCode;
                    if ("wysiwyg" == a.mode && c in {
                        8 : 1,
                        46 : 1
                    }) {
                        var d = a.getSelection().getRanges()[0],
                        h = d.startPath();
                        if (d.collapsed) {
                            var h = new CKEDITOR.dom.elementPath(d.startContainer),
                            l = 8 == c,
                            r = a.editable(),
                            s = new CKEDITOR.dom.walker(d.clone());
                            s.evaluator = function(a) {
                                return n(a) && !p(a)
                            };
                            s.guard = function(a, b) {
                                return ! (b && a.type == CKEDITOR.NODE_ELEMENT && a.is("table"))
                            };
                            c = d.clone();
                            if (l) {
                                var B, x; (B = h.contains(k)) && d.checkBoundaryOfElement(B, CKEDITOR.START) && (B = B.getParent()) && B.is("li") && (B = f(B)) ? (x = B, B = B.getPrevious(n), c.moveToPosition(B && p(B) ? B: x, CKEDITOR.POSITION_BEFORE_START)) : (s.range.setStartAt(r, CKEDITOR.POSITION_AFTER_START), s.range.setEnd(d.startContainer, d.startOffset), (B = s.previous()) && B.type == CKEDITOR.NODE_ELEMENT && (B.getName() in k || B.is("li")) && (B.is("li") || (s.range.selectNodeContents(B), s.reset(), s.evaluator = e, B = s.previous()), x = B, c.moveToElementEditEnd(x)));
                                x ? (g(a, c, d), b.cancel()) : (c = h.contains(k)) && d.checkBoundaryOfElement(c, CKEDITOR.START) && (x = c.getFirst(n), d.checkBoundaryOfElement(x, CKEDITOR.START) && (B = c.getPrevious(n), f(x) ? B && (d.moveToElementEditEnd(B), d.select()) : a.execCommand("outdent"), b.cancel()))
                            } else(x = h.contains("li")) ? (s.range.setEndAt(r, CKEDITOR.POSITION_BEFORE_END), r = (h = x.getLast(n)) && e(h) ? h: x, x = 0, (B = s.next()) && B.type == CKEDITOR.NODE_ELEMENT && B.getName() in k && B.equals(h) ? (x = 1, B = s.next()) : d.checkBoundaryOfElement(r, CKEDITOR.END) && (x = 1), x && B && (d = d.clone(), d.moveToElementEditStart(B), g(a, c, d), b.cancel())) : (s.range.setEndAt(r, CKEDITOR.POSITION_BEFORE_END), (B = s.next()) && B.type == CKEDITOR.NODE_ELEMENT && B.is(k) && (B = B.getFirst(n), h.block && d.checkStartOfBlock() && d.checkEndOfBlock() ? (h.block.remove(), d.moveToElementEditStart(B), d.select()) : f(B) ? (d.moveToElementEditStart(B), d.select()) : (d = d.clone(), d.moveToElementEditStart(B), g(a, c, d)), b.cancel()));
                            setTimeout(function() {
                                a.selectionChange(1)
                            })
                        }
                    }
                }))
            }
        })
    } (),
    function() {
        CKEDITOR.plugins.liststyle = {
            requires: "dialog,contextmenu",
            init: function(a) {
                if (!a.blockless) {
                    var d;
                    d = new CKEDITOR.dialogCommand("numberedListStyle", {
                        requiredContent: "ol",
                        allowedContent: "ol{list-style-type}[start]"
                    });
                    d = a.addCommand("numberedListStyle", d);
                    a.addFeature(d);
                    CKEDITOR.dialog.add("numberedListStyle", this.path + "dialogs/liststyle.js");
                    d = new CKEDITOR.dialogCommand("bulletedListStyle", {
                        requiredContent: "ul",
                        allowedContent: "ul{list-style-type}"
                    });
                    d = a.addCommand("bulletedListStyle", d);
                    a.addFeature(d);
                    CKEDITOR.dialog.add("bulletedListStyle", this.path + "dialogs/liststyle.js");
                    a.addMenuGroup("list", 108);
                    a.addMenuItems({
                        numberedlist: {
                            label: a.lang.liststyle.numberedTitle,
                            group: "list",
                            command: "numberedListStyle"
                        },
                        bulletedlist: {
                            label: a.lang.liststyle.bulletedTitle,
                            group: "list",
                            command: "bulletedListStyle"
                        }
                    });
                    a.contextMenu.addListener(function(a) {
                        if (!a || a.isReadOnly()) return null;
                        for (; a;) {
                            var c = a.getName();
                            if ("ol" == c) return {
                                numberedlist: CKEDITOR.TRISTATE_OFF
                            };
                            if ("ul" == c) return {
                                bulletedlist: CKEDITOR.TRISTATE_OFF
                            };
                            a = a.getParent()
                        }
                        return null
                    })
                }
            }
        };
        CKEDITOR.plugins.add("liststyle", CKEDITOR.plugins.liststyle)
    } (), "use strict",
    function() {
        function a(a, b, c) {
            return l(b) && l(c) && c.equals(b.getNext(function(a) {
                return ! (Y(a) || aa(a) || n(a))
            }))
        }
        function d(a) {
            this.upper = a[0];
            this.lower = a[1];
            this.set.apply(this, a.slice(2))
        }
        function b(a) {
            var b = a.element,
            c;
            return b && l(b) ? !(c = b.getAscendant(a.triggers, !0)) || c.contains(a.editable) || c.equals(a.editable) ? null: c: null
        }
        function c(a, b, c) {
            u(a, b);
            u(a, c);
            a = b.size.bottom;
            c = c.size.top;
            return a && c ? 0 | (a + c) / 2 : a || c
        }
        function e(a, b, c) {
            return b = b[c ? "getPrevious": "getNext"](function(b) {
                return b && b.type == CKEDITOR.NODE_TEXT && !Y(b) || l(b) && !n(b) && !h(a, b)
            })
        }
        function g(a) {
            var b = a.doc,
            c = B('<span contenteditable="false" style="' + G + "position:absolute;border-top:1px dashed " + a.boxColor + '"></span>', b),
            d = this.path + "images/" + (x.hidpi ? "hidpi/": "") + "icon.png";
            E(c, {
                attach: function() {
                    this.wrap.getParent() || this.wrap.appendTo(a.editable, !0);
                    return this
                },
                lineChildren: [E(B('<span title="' + a.editor.lang.magicline.title + '" contenteditable="false">&#8629;</span>', b), {
                    base: G + "height:17px;width:17px;" + (a.rtl ? "left": "right") + ":17px;background:url(" + d + ") center no-repeat " + a.boxColor + ";cursor:pointer;" + (x.hc ? "font-size: 15px;line-height:14px;border:1px solid #fff;text-align:center;": "") + (x.hidpi ? "background-size: 9px 10px;": ""),
                    looks: ["top:-8px;" + CKEDITOR.tools.cssVendorPrefix("border-radius", "2px", 1), "top:-17px;" + CKEDITOR.tools.cssVendorPrefix("border-radius", "2px 2px 0px 0px", 1), "top:-1px;" + CKEDITOR.tools.cssVendorPrefix("border-radius", "0px 0px 2px 2px", 1)]
                }), E(B(U, b), {
                    base: H + "left:0px;border-left-color:" + a.boxColor + ";",
                    looks: ["border-width:8px 0 8px 8px;top:-8px", "border-width:8px 0 0 8px;top:-8px", "border-width:0 0 8px 8px;top:0px"]
                }), E(B(U, b), {
                    base: H + "right:0px;border-right-color:" + a.boxColor + ";",
                    looks: ["border-width:8px 8px 8px 0;top:-8px", "border-width:8px 8px 0 0;top:-8px", "border-width:0 8px 8px 0;top:0px"]
                })],
                detach: function() {
                    this.wrap.getParent() && this.wrap.remove();
                    return this
                },
                mouseNear: function() {
                    u(a, this);
                    var b = a.holdDistance,
                    c = this.size;
                    return c && a.mouse.y > c.top - b && a.mouse.y < c.bottom + b && a.mouse.x > c.left - b && a.mouse.x < c.right + b ? !0 : !1
                },
                place: function() {
                    var b = a.view,
                    c = a.editable,
                    d = a.trigger,
                    e = d.upper,
                    f = d.lower,
                    g = e || f,
                    h = g.getParent(),
                    k = {};
                    this.trigger = d;
                    e && u(a, e, !0);
                    f && u(a, f, !0);
                    u(a, h, !0);
                    a.inInlineMode && w(a, !0);
                    h.equals(c) ? (k.left = b.scroll.x, k.right = -b.scroll.x, k.width = "") : (k.left = g.size.left - g.size.margin.left + b.scroll.x - (a.inInlineMode ? b.editable.left + b.editable.border.left: 0), k.width = g.size.outerWidth + g.size.margin.left + g.size.margin.right + b.scroll.x, k.right = "");
                    e && f ? k.top = e.size.margin.bottom === f.size.margin.top ? 0 | e.size.bottom + e.size.margin.bottom / 2 : e.size.margin.bottom < f.size.margin.top ? e.size.bottom + e.size.margin.bottom: e.size.bottom + e.size.margin.bottom - f.size.margin.top: e ? f || (k.top = e.size.bottom + e.size.margin.bottom) : k.top = f.size.top - f.size.margin.top;
                    d.is(L) || k.top > b.scroll.y - 15 && k.top < b.scroll.y + 5 ? (k.top = a.inInlineMode ? 0 : b.scroll.y, this.look(L)) : d.is(K) || k.top > b.pane.bottom - 5 && k.top < b.pane.bottom + 15 ? (k.top = a.inInlineMode ? b.editable.height + b.editable.padding.top + b.editable.padding.bottom: b.pane.bottom - 1, this.look(K)) : (a.inInlineMode && (k.top -= b.editable.top + b.editable.border.top), this.look(O));
                    a.inInlineMode && (k.top--, k.top += b.editable.scroll.top, k.left += b.editable.scroll.left);
                    for (var l in k) k[l] = CKEDITOR.tools.cssLength(k[l]);
                    this.setStyles(k)
                },
                look: function(a) {
                    if (this.oldLook != a) {
                        for (var b = this.lineChildren.length,
                        c; b--;)(c = this.lineChildren[b]).setAttribute("style", c.base + c.looks[0 | a / 2]);
                        this.oldLook = a
                    }
                },
                wrap: new z("span", a.doc)
            });
            for (b = c.lineChildren.length; b--;) c.lineChildren[b].appendTo(c);
            c.look(O);
            c.appendTo(c.wrap);
            c.unselectable();
            c.lineChildren[0].on("mouseup",
            function(b) {
                c.detach();
                f(a,
                function(b) {
                    var c = a.line.trigger;
                    b[c.is(I) ? "insertBefore": "insertAfter"](c.is(I) ? c.lower: c.upper)
                },
                !0);
                a.editor.focus(); ! x.ie && a.enterMode != CKEDITOR.ENTER_BR && a.hotNode.scrollIntoView();
                b.data.preventDefault(!0)
            });
            c.on("mousedown",
            function(a) {
                a.data.preventDefault(!0)
            });
            a.line = c
        }
        function f(a, b, c) {
            var d = new CKEDITOR.dom.range(a.doc),
            e = a.editor,
            f;
            x.ie && a.enterMode == CKEDITOR.ENTER_BR ? f = a.doc.createText(P) : (f = new z(a.enterBehavior, a.doc), a.enterMode != CKEDITOR.ENTER_BR && a.doc.createText(P).appendTo(f));
            c && e.fire("saveSnapshot");
            b(f);
            d.moveToPosition(f, CKEDITOR.POSITION_AFTER_START);
            e.getSelection().selectRanges([d]);
            a.hotNode = f;
            c && e.fire("saveSnapshot")
        }
        function k(a, c) {
            return {
                canUndo: !0,
                modes: {
                    wysiwyg: 1
                },
                exec: function() {
                    function d(b) {
                        var e = x.ie && 9 > x.version ? " ": P,
                        g = a.hotNode && a.hotNode.getText() == e && a.element.equals(a.hotNode) && a.lastCmdDirection === !!c;
                        f(a,
                        function(d) {
                            g && a.hotNode && a.hotNode.remove();
                            d[c ? "insertAfter": "insertBefore"](b);
                            d.setAttributes({
                                "data-cke-magicline-hot": 1,
                                "data-cke-magicline-dir": !!c
                            });
                            a.lastCmdDirection = !!c
                        }); ! x.ie && a.enterMode != CKEDITOR.ENTER_BR && a.hotNode.scrollIntoView();
                        a.line.detach()
                    }
                    return function(f) {
                        f = f.getSelection().getStartElement();
                        if ((f = f.getAscendant(Q, 1)) && !f.equals(a.editable) && !f.contains(a.editable)) {
                            a.element = f;
                            var g = e(a, f, !c),
                            h;
                            l(g) && g.is(a.triggers) && g.is(R) && (!e(a, g, !c) || (h = e(a, g, !c)) && l(h) && h.is(a.triggers)) ? d(g) : (h = b(a, f), l(h) && (e(a, h, !c) ? (f = e(a, h, !c)) && l(f) && f.is(a.triggers) && d(h) : d(h)))
                        }
                    }
                } ()
            }
        }
        function h(a, b) {
            if (!b || b.type != CKEDITOR.NODE_ELEMENT || !b.$) return ! 1;
            var c = a.line;
            return c.wrap.equals(b) || c.wrap.contains(b)
        }
        function l(a) {
            return a && a.type == CKEDITOR.NODE_ELEMENT && a.$
        }
        function n(a) {
            if (!l(a)) return ! 1;
            var b; (b = p(a)) || (l(a) ? (b = {
                left: 1,
                right: 1,
                center: 1
            },
            b = !(!b[a.getComputedStyle("float")] && !b[a.getAttribute("align")])) : b = !1);
            return b
        }
        function p(a) {
            return !! {
                absolute: 1,
                fixed: 1,
                relative: 1
            } [a.getComputedStyle("position")]
        }
        function s(a, b, c) {
            b = b[c ? "getLast": "getFirst"](function(b) {
                return a.isRelevant(b) && !b.is(N)
            });
            if (!b) return ! 1;
            u(a, b);
            return c ? b.size.top > a.mouse.y: b.size.bottom < a.mouse.y
        }
        function r(a) {
            var b = a.editable,
            c = a.mouse,
            e = a.view,
            f = a.triggerOffset;
            w(a);
            var g = c.y > (a.inInlineMode ? e.editable.top + e.editable.height / 2 : Math.min(e.editable.height, e.pane.height) / 2),
            b = b[g ? "getLast": "getFirst"](function(a) {
                return ! (Y(a) || aa(a))
            });
            if (!b) return null;
            h(a, b) && (b = a.line.wrap[g ? "getPrevious": "getNext"](function(a) {
                return ! (Y(a) || aa(a))
            }));
            if (!l(b) || n(b) || !l(b) || !b.is(a.triggers)) return null;
            u(a, b);
            return ! g && 0 <= b.size.top && 0 < c.y && c.y < b.size.top + f ? (a = a.inInlineMode || 0 === e.scroll.y ? L: O, new d([null, b, I, J, a])) : g && b.size.bottom <= e.pane.height && c.y > b.size.bottom - f && c.y < e.pane.height ? (a = a.inInlineMode || b.size.bottom > e.pane.height - f && b.size.bottom < e.pane.height ? K: O, new d([b, null, C, J, a])) : null
        }
        function q(a) {
            var c = a.mouse,
            f = a.view,
            g = a.triggerOffset,
            h = b(a);
            if (!h) return null;
            u(a, h);
            var g = Math.min(g, 0 | h.size.outerHeight / 2),
            k = [],
            m,
            q;
            if (c.y > h.size.top - 1 && c.y < h.size.top + g) q = !1;
            else if (c.y > h.size.bottom - g && c.y < h.size.bottom + 1) q = !0;
            else return null;
            if (n(h) || s(a, h, q) || h.getParent().is(M)) return null;
            var p = e(a, h, !q);
            if (p) {
                if (p && p.type == CKEDITOR.NODE_TEXT) return null;
                if (l(p)) {
                    if (n(p) || !l(p) || !p.is(a.triggers) || p.getParent().is(M)) return null;
                    k = [p, h][q ? "reverse": "concat"]().concat([F, J])
                }
            } else h.equals(a.editable[q ? "getLast": "getFirst"](a.isRelevant)) ? (w(a), q && c.y > h.size.bottom - g && c.y < f.pane.height && h.size.bottom > f.pane.height - g && h.size.bottom < f.pane.height ? m = K: 0 < c.y && c.y < h.size.top + g && (m = L)) : m = O,
            k = [null, h][q ? "reverse": "concat"]().concat([q ? C: I, J, m, h.equals(a.editable[q ? "getLast": "getFirst"](a.isRelevant)) ? q ? K: L: O]);
            return 0 in k ? new d(k) : null
        }
        function t(a, b, c, d) {
            for (var e = function() {
                var c = x.ie ? b.$.currentStyle: a.win.$.getComputedStyle(b.$, "");
                return x.ie ?
                function(a) {
                    return c[CKEDITOR.tools.cssStyleToDomStyle(a)]
                }: function(a) {
                    return c.getPropertyValue(a)
                }
            } (), f = b.getDocumentPosition(), g = {},
            h = {},
            k = {},
            l = {},
            m = W.length; m--;) g[W[m]] = parseInt(e("border-" + W[m] + "-width"), 10) || 0,
            k[W[m]] = parseInt(e("padding-" + W[m]), 10) || 0,
            h[W[m]] = parseInt(e("margin-" + W[m]), 10) || 0;
            c && !d || v(a, d);
            l.top = f.y - (c ? 0 : a.view.scroll.y);
            l.left = f.x - (c ? 0 : a.view.scroll.x);
            l.outerWidth = b.$.offsetWidth;
            l.outerHeight = b.$.offsetHeight;
            l.height = l.outerHeight - (k.top + k.bottom + g.top + g.bottom);
            l.width = l.outerWidth - (k.left + k.right + g.left + g.right);
            l.bottom = l.top + l.outerHeight;
            l.right = l.left + l.outerWidth;
            a.inInlineMode && (l.scroll = {
                top: b.$.scrollTop,
                left: b.$.scrollLeft
            });
            return E({
                border: g,
                padding: k,
                margin: h,
                ignoreScroll: c
            },
            l, !0)
        }
        function u(a, b, c) {
            if (!l(b)) return b.size = null;
            if (b.size) {
                if (b.size.ignoreScroll == c && b.size.date > new Date - V) return null
            } else b.size = {};
            return E(b.size, t(a, b, c), {
                date: +new Date
            },
            !0)
        }
        function w(a, b) {
            a.view.editable = t(a, a.editable, b, !0)
        }
        function v(a, b) {
            a.view || (a.view = {});
            var c = a.view;
            if (b || !(c && c.date > new Date - V)) {
                var d = a.win,
                c = d.getScrollPosition(),
                d = d.getViewPaneSize();
                E(a.view, {
                    scroll: {
                        x: c.x,
                        y: c.y,
                        width: a.doc.$.documentElement.scrollWidth - d.width,
                        height: a.doc.$.documentElement.scrollHeight - d.height
                    },
                    pane: {
                        width: d.width,
                        height: d.height,
                        bottom: d.height + c.y
                    },
                    date: +new Date
                },
                !0)
            }
        }
        function A(a, b, c, e) {
            for (var f = e,
            g = e,
            h = 0,
            k = !1,
            l = !1,
            m = a.view.pane.height,
            q = a.mouse; q.y + h < m && 0 < q.y - h;) {
                k || (k = b(f, e));
                l || (l = b(g, e)); ! k && 0 < q.y - h && (f = c(a, {
                    x: q.x,
                    y: q.y - h
                })); ! l && q.y + h < m && (g = c(a, {
                    x: q.x,
                    y: q.y + h
                }));
                if (k && l) break;
                h += 2
            }
            return new d([f, g, null, null])
        }
        CKEDITOR.plugins.add("magicline", {
            init: function(a) {
                var c = {};
                c[CKEDITOR.ENTER_BR] = "br";
                c[CKEDITOR.ENTER_P] = "p";
                c[CKEDITOR.ENTER_DIV] = "div";
                var m = a.config,
                u = m.magicline_triggerOffset || 30,
                s = m.enterMode,
                H = {
                    editor: a,
                    enterBehavior: c[s],
                    enterMode: s,
                    triggerOffset: u,
                    holdDistance: 0 | u * (m.magicline_holdDistance || 0.5),
                    boxColor: m.magicline_color || "#ff0000",
                    rtl: "rtl" == m.contentsLangDirection,
                    triggers: m.magicline_everywhere ? Q: {
                        table: 1,
                        hr: 1,
                        div: 1,
                        ul: 1,
                        ol: 1,
                        dl: 1,
                        form: 1,
                        blockquote: 1
                    }
                },
                A,
                U,
                z;
                H.isRelevant = function(a) {
                    return l(a) && !h(H, a) && !n(a)
                };
                a.on("contentDom",
                function() {
                    var c = a.editable(),
                    l = a.document,
                    n = a.window;
                    E(H, {
                        editable: c,
                        inInlineMode: c.isInline(),
                        doc: l,
                        win: n
                    },
                    !0);
                    H.boundary = H.inInlineMode ? H.editable: H.doc.getDocumentElement();
                    c.is(D.$inline) || (H.inInlineMode && !p(c) && c.setStyles({
                        position: "relative",
                        top: null,
                        left: null
                    }), g.call(this, H), v(H), c.attachListener(a, "beforeUndoImage",
                    function() {
                        H.line.detach()
                    }), c.attachListener(a, "beforeGetData",
                    function() {
                        H.line.wrap.getParent() && (H.line.detach(), a.once("getData",
                        function() {
                            H.line.attach()
                        },
                        null, null, 1E3))
                    },
                    null, null, 0), c.attachListener(H.inInlineMode ? l: l.getWindow().getFrame(), "mouseout",
                    function(b) {
                        if ("wysiwyg" == a.mode) if (H.inInlineMode) {
                            var c = b.data.$.clientX;
                            b = b.data.$.clientY;
                            v(H);
                            w(H, !0);
                            var d = H.view.editable,
                            e = H.view.scroll;
                            c > d.left - e.x && c < d.right - e.x && b > d.top - e.y && b < d.bottom - e.y || (clearTimeout(z), z = null, H.line.detach())
                        } else clearTimeout(z),
                        z = null,
                        H.line.detach()
                    }), c.attachListener(c, "keyup",
                    function() {
                        H.hiddenMode = 0
                    }), c.attachListener(c, "keydown",
                    function(b) {
                        if ("wysiwyg" == a.mode) switch (b = b.data.getKeystroke(), a.getSelection().getStartElement(), b) {
                        case 2228240:
                        case 16:
                            H.hiddenMode = 1,
                            H.line.detach()
                        }
                    }), c.attachListener(H.inInlineMode ? c: l, "mousemove",
                    function(b) {
                        U = !0;
                        if ("wysiwyg" == a.mode && !a.readOnly && !z) {
                            var c = {
                                x: b.data.$.clientX,
                                y: b.data.$.clientY
                            };
                            z = setTimeout(function() {
                                H.mouse = c;
                                z = H.trigger = null;
                                v(H);
                                U && !H.hiddenMode && a.focusManager.hasFocus && !H.line.mouseNear() && (H.element = S(H, !0)) && ((H.trigger = r(H) || q(H) || ca(H)) ? H.line.attach().place() : (H.trigger = null, H.line.detach()), U = !1)
                            },
                            30)
                        }
                    }), c.attachListener(n, "scroll",
                    function() {
                        "wysiwyg" == a.mode && (H.line.detach(), x.webkit && (H.hiddenMode = 1, clearTimeout(A), A = setTimeout(function() {
                            H.hiddenMode = 0
                        },
                        50)))
                    }), c.attachListener(n, "mousedown",
                    function() {
                        "wysiwyg" == a.mode && (H.line.detach(), H.hiddenMode = 1)
                    }), c.attachListener(n, "mouseup",
                    function() {
                        H.hiddenMode = 0
                    }), a.addCommand("accessPreviousSpace", k(H)), a.addCommand("accessNextSpace", k(H, !0)), a.setKeystroke([[m.magicline_keystrokePrevious, "accessPreviousSpace"], [m.magicline_keystrokeNext, "accessNextSpace"]]), a.on("loadSnapshot",
                    function() {
                        for (var b = a.document.getElementsByTag(H.enterBehavior), c, d = b.count(); d--;) if ((c = b.getItem(d)).hasAttribute("data-cke-magicline-hot")) {
                            H.hotNode = c;
                            H.lastCmdDirection = "true" === c.getAttribute("data-cke-magicline-dir") ? !0 : !1;
                            break
                        }
                    }), this.backdoor = {
                        accessFocusSpace: f,
                        boxTrigger: d,
                        isLine: h,
                        getAscendantTrigger: b,
                        getNonEmptyNeighbour: e,
                        getSize: t,
                        that: H,
                        triggerEdge: q,
                        triggerEditable: r,
                        triggerExpand: ca
                    })
                },
                this)
            }
        });
        var E = CKEDITOR.tools.extend,
        z = CKEDITOR.dom.element,
        B = z.createFromHtml,
        x = CKEDITOR.env,
        D = CKEDITOR.dtd,
        I = 128,
        C = 64,
        F = 32,
        J = 16,
        m = 8,
        L = 4,
        K = 2,
        O = 1,
        P = "\u00a0",
        M = D.$listItem,
        N = D.$tableContent,
        R = E({},
        D.$nonEditable, D.$empty),
        Q = D.$block,
        V = 100,
        G = "width:0px;height:0px;padding:0px;margin:0px;display:block;z-index:9999;color:#fff;position:absolute;font-size: 0px;line-height:0px;",
        H = G + "border-color:transparent;display:block;border-style:solid;",
        U = "<span>" + P + "</span>";
        d.prototype = {
            set: function(a, b, c) {
                this.properties = a + b + (c || O);
                return this
            },
            is: function(a) {
                return (this.properties & a) == a
            }
        };
        var S = function() {
            return function(a, b, c) {
                if (!a.mouse) return null;
                var d = a.doc,
                e = a.line.wrap;
                c = c || a.mouse;
                var f = new CKEDITOR.dom.element(d.$.elementFromPoint(c.x, c.y));
                b && h(a, f) && (e.hide(), f = new CKEDITOR.dom.element(d.$.elementFromPoint(c.x, c.y)), e.show());
                return ! f || f.type != CKEDITOR.NODE_ELEMENT || !f.$ || x.ie && 9 > x.version && !a.boundary.equals(f) && !a.boundary.contains(f) ? null: f
            }
        } (),
        Y = CKEDITOR.dom.walker.whitespaces(),
        aa = CKEDITOR.dom.walker.nodeType(CKEDITOR.NODE_COMMENT),
        ca = function() {
            function b(e) {
                var f = e.element,
                g, h, k;
                if (!l(f) || f.contains(e.editable)) return null;
                k = A(e,
                function(a, b) {
                    return ! b.equals(a)
                },
                function(a, b) {
                    return S(a, !0, b)
                },
                f);
                g = k.upper;
                h = k.lower;
                if (a(e, g, h)) return k.set(F, m);
                if (g && f.contains(g)) for (; ! g.getParent().equals(f);) g = g.getParent();
                else g = f.getFirst(function(a) {
                    return d(e, a)
                });
                if (h && f.contains(h)) for (; ! h.getParent().equals(f);) h = h.getParent();
                else h = f.getLast(function(a) {
                    return d(e, a)
                });
                if (!g || !h) return null;
                u(e, g);
                u(e, h);
                if (! (e.mouse.y > g.size.top && e.mouse.y < h.size.bottom)) return null;
                for (var f = Number.MAX_VALUE,
                q, n, p, r; h && !h.equals(g) && (n = g.getNext(e.isRelevant));) q = Math.abs(c(e, g, n) - e.mouse.y),
                q < f && (f = q, p = g, r = n),
                g = n,
                u(e, g);
                if (! (p && r && e.mouse.y > p.size.top && e.mouse.y < r.size.bottom)) return null;
                k.upper = p;
                k.lower = r;
                return k.set(F, m)
            }
            function d(a, b) {
                return ! (b && b.type == CKEDITOR.NODE_TEXT || aa(b) || n(b) || h(a, b) || b.type == CKEDITOR.NODE_ELEMENT && b.$ && b.is("br"))
            }
            return function(c) {
                var d = b(c),
                e;
                if (e = d) {
                    e = d.upper;
                    var f = d.lower;
                    e = !e || !f || n(f) || n(e) || f.equals(e) || e.equals(f) || f.contains(e) || e.contains(f) ? !1 : l(e) && e.is(c.triggers) && l(f) && f.is(c.triggers) && a(c, e, f) ? !0 : !1
                }
                return e ? d: null
            }
        } (),
        W = ["top", "left", "right", "bottom"]
    } (), CKEDITOR.config.magicline_keystrokePrevious = CKEDITOR.CTRL + CKEDITOR.SHIFT + 219, CKEDITOR.config.magicline_keystrokeNext = CKEDITOR.CTRL + CKEDITOR.SHIFT + 221,
    function() {
        function a(a) {
            if (!a || a.type != CKEDITOR.NODE_ELEMENT || "form" != a.getName()) return [];
            for (var b = [], c = ["style", "className"], d = 0; d < c.length; d++) {
                var e = a.$.elements.namedItem(c[d]);
                e && (e = new CKEDITOR.dom.element(e), b.push([e, e.nextSibling]), e.remove())
            }
            return b
        }
        function d(a, b) {
            if (a && a.type == CKEDITOR.NODE_ELEMENT && "form" == a.getName() && 0 < b.length) for (var c = b.length - 1; 0 <= c; c--) {
                var d = b[c][0],
                e = b[c][1];
                e ? d.insertBefore(e) : d.appendTo(a)
            }
        }
        function b(b, c) {
            var e = a(b),
            h = {},
            l = b.$;
            c || (h["class"] = l.className || "", l.className = "");
            h.inline = l.style.cssText || "";
            c || (l.style.cssText = "position: static; overflow: visible");
            d(e);
            return h
        }
        function c(b, c) {
            var e = a(b),
            h = b.$;
            "class" in c && (h.className = c["class"]);
            "inline" in c && (h.style.cssText = c.inline);
            d(e)
        }
        function e(a) {
            if (!a.editable().isInline()) {
                var b = CKEDITOR.instances,
                c;
                for (c in b) {
                    var d = b[c];
                    "wysiwyg" != d.mode || d.readOnly || (d = d.document.getBody(), d.setAttribute("contentEditable", !1), d.setAttribute("contentEditable", !0))
                }
                a.editable().hasFocus && (a.toolbox.focus(), a.focus())
            }
        }
        CKEDITOR.plugins.add("maximize", {
            init: function(a) {
                function d() {
                    var b = l.getViewPaneSize();
                    a.resize(b.width, b.height, null, !0)
                }
                if (a.elementMode != CKEDITOR.ELEMENT_MODE_INLINE) {
                    var k = a.lang,
                    h = CKEDITOR.document,
                    l = h.getWindow(),
                    n,
                    p,
                    s,
                    r = CKEDITOR.TRISTATE_OFF;
                    a.addCommand("maximize", {
                        modes: {
                            wysiwyg: !CKEDITOR.env.iOS,
                            source: !CKEDITOR.env.iOS
                        },
                        readOnly: 1,
                        editorFocus: !1,
                        exec: function() {
                            var q = a.container.getChild(1),
                            t = a.ui.space("contents");
                            if ("wysiwyg" == a.mode) {
                                var u = a.getSelection();
                                n = u && u.getRanges();
                                p = l.getScrollPosition()
                            } else {
                                var w = a.editable().$;
                                n = !CKEDITOR.env.ie && [w.selectionStart, w.selectionEnd];
                                p = [w.scrollLeft, w.scrollTop]
                            }
                            if (this.state == CKEDITOR.TRISTATE_OFF) {
                                l.on("resize", d);
                                s = l.getScrollPosition();
                                for (u = a.container; u = u.getParent();) u.setCustomData("maximize_saved_styles", b(u)),
                                u.setStyle("z-index", a.config.baseFloatZIndex - 5);
                                t.setCustomData("maximize_saved_styles", b(t, !0));
                                q.setCustomData("maximize_saved_styles", b(q, !0));
                                t = {
                                    overflow: CKEDITOR.env.webkit ? "": "hidden",
                                    width: 0,
                                    height: 0
                                };
                                h.getDocumentElement().setStyles(t); ! CKEDITOR.env.gecko && h.getDocumentElement().setStyle("position", "fixed");
                                CKEDITOR.env.gecko && CKEDITOR.env.quirks || h.getBody().setStyles(t);
                                CKEDITOR.env.ie ? setTimeout(function() {
                                    l.$.scrollTo(0, 0)
                                },
                                0) : l.$.scrollTo(0, 0);
                                q.setStyle("position", CKEDITOR.env.gecko && CKEDITOR.env.quirks ? "fixed": "absolute");
                                q.$.offsetLeft;
                                q.setStyles({
                                    "z-index": a.config.baseFloatZIndex - 5,
                                    left: "0px",
                                    top: "0px"
                                });
                                q.addClass("cke_maximized");
                                d();
                                t = q.getDocumentPosition();
                                q.setStyles({
                                    left: -1 * t.x + "px",
                                    top: -1 * t.y + "px"
                                });
                                CKEDITOR.env.gecko && e(a)
                            } else if (this.state == CKEDITOR.TRISTATE_ON) {
                                l.removeListener("resize", d);
                                t = [t, q];
                                for (u = 0; u < t.length; u++) c(t[u], t[u].getCustomData("maximize_saved_styles")),
                                t[u].removeCustomData("maximize_saved_styles");
                                for (u = a.container; u = u.getParent();) c(u, u.getCustomData("maximize_saved_styles")),
                                u.removeCustomData("maximize_saved_styles");
                                CKEDITOR.env.ie ? setTimeout(function() {
                                    l.$.scrollTo(s.x, s.y)
                                },
                                0) : l.$.scrollTo(s.x, s.y);
                                q.removeClass("cke_maximized");
                                CKEDITOR.env.webkit && (q.setStyle("display", "inline"), setTimeout(function() {
                                    q.setStyle("display", "block")
                                },
                                0));
                                a.fire("resize")
                            }
                            this.toggleState();
                            if (u = this.uiItems[0]) t = this.state == CKEDITOR.TRISTATE_OFF ? k.maximize.maximize: k.maximize.minimize,
                            u = CKEDITOR.document.getById(u._.id),
                            u.getChild(1).setHtml(t),
                            u.setAttribute("title", t),
                            u.setAttribute("href", 'javascript:void("' + t + '");');
                            "wysiwyg" == a.mode ? n ? (CKEDITOR.env.gecko && e(a), a.getSelection().selectRanges(n), (w = a.getSelection().getStartElement()) && w.scrollIntoView(!0)) : l.$.scrollTo(p.x, p.y) : (n && (w.selectionStart = n[0], w.selectionEnd = n[1]), w.scrollLeft = p[0], w.scrollTop = p[1]);
                            n = p = null;
                            r = this.state;
                            a.fire("maximize", this.state)
                        },
                        canUndo: !1
                    });
                    a.ui.addButton && a.ui.addButton("Maximize", {
                        label: k.maximize.maximize,
                        command: "maximize",
                        toolbar: "tools,10"
                    });
                    a.on("mode",
                    function() {
                        var b = a.getCommand("maximize");
                        b.setState(b.state == CKEDITOR.TRISTATE_DISABLED ? CKEDITOR.TRISTATE_DISABLED: r)
                    },
                    null, null, 100)
                }
            }
        })
    } (), CKEDITOR.plugins.add("newpage", {
        init: function(a) {
            a.addCommand("newpage", {
                modes: {
                    wysiwyg: 1,
                    source: 1
                },
                exec: function(a) {
                    var b = this;
                    a.setData(a.config.newpage_html || "",
                    function() {
                        a.focus();
                        setTimeout(function() {
                            a.fire("afterCommandExec", {
                                name: "newpage",
                                command: b
                            });
                            a.selectionChange()
                        },
                        200)
                    })
                },
                async: !0
            });
            a.ui.addButton && a.ui.addButton("NewPage", {
                label: a.lang.newpage.toolbar,
                command: "newpage",
                toolbar: "document,20"
            })
        }
    }), CKEDITOR.plugins.add("pagebreak", {
        requires: "fakeobjects",
        onLoad: function() {
            var a = ["{", "background: url(" + CKEDITOR.getUrl(this.path + "images/pagebreak.gif") + ") no-repeat center center;", "clear: both;width:100%; _width:99.9%;border-top: #999999 1px dotted;border-bottom: #999999 1px dotted;padding:0;height: 5px;cursor: default;}"].join("").replace(/;/g, " !important;");
            CKEDITOR.addCss("div.cke_pagebreak" + a)
        },
        init: function(a) {
            a.blockless || (a.addCommand("pagebreak", CKEDITOR.plugins.pagebreakCmd), a.ui.addButton && a.ui.addButton("PageBreak", {
                label: a.lang.pagebreak.toolbar,
                command: "pagebreak",
                toolbar: "insert,70"
            }), CKEDITOR.env.opera && a.on("contentDom",
            function() {
                a.document.on("click",
                function(d) {
                    d = d.data.getTarget();
                    d.is("div") && d.hasClass("cke_pagebreak") && a.getSelection().selectElement(d)
                })
            }))
        },
        afterInit: function(a) {
            var d = a.lang.pagebreak.alt,
            b = a.dataProcessor;
            a = b && b.dataFilter; (b = b && b.htmlFilter) && b.addRules({
                attributes: {
                    "class": function(a, b) {
                        var d = a.replace("cke_pagebreak", "");
                        if (d != a) {
                            var f = CKEDITOR.htmlParser.fragment.fromHtml('<span style="display: none;">&nbsp;</span>').children[0];
                            b.children.length = 0;
                            b.add(f);
                            f = b.attributes;
                            delete f["aria-label"];
                            delete f.contenteditable;
                            delete f.title
                        }
                        return d
                    }
                }
            },
            5);
            a && a.addRules({
                elements: {
                    div: function(a) {
                        var b = a.attributes,
                        g = b && b.style,
                        f = g && 1 == a.children.length && a.children[0]; (f = f && "span" == f.name && f.attributes.style) && /page-break-after\s*:\s*always/i.test(g) && /display\s*:\s*none/i.test(f) && (b.contenteditable = "false", b["class"] = "cke_pagebreak", b["data-cke-display-name"] = "pagebreak", b["aria-label"] = d, b.title = d, a.children.length = 0)
                    }
                }
            })
        }
    }), CKEDITOR.plugins.pagebreakCmd = {
        exec: function(a) {
            var d = a.lang.pagebreak.alt,
            d = CKEDITOR.dom.element.createFromHtml('<div style="page-break-after: always;"contenteditable="false" title="' + d + '" aria-label="' + d + '" data-cke-display-name="pagebreak" class="cke_pagebreak"></div>', a.document);
            a.insertElement(d)
        },
        context: "div",
        allowedContent: {
            div: {
                styles: "!page-break-after"
            },
            span: {
                match: function(a) {
                    return (a = a.parent) && "div" == a.name && a.styles["page-break-after"]
                },
                styles: "display"
            }
        },
        requiredContent: "div{page-break-after}"
    },
    function() {
        function a(a, c, d) {
            var g = CKEDITOR.cleanWord;
            g ? d() : (a = CKEDITOR.getUrl(a.config.pasteFromWordCleanupFile || c + "filter/default.js"), CKEDITOR.scriptLoader.load(a, d, null, !0));
            return ! g
        }
        function d(a) {
            a.data.type = "html"
        }
        CKEDITOR.plugins.add("pastefromword", {
            requires: "clipboard",
            init: function(b) {
                var c = 0,
                e = this.path;
                b.addCommand("pastefromword", {
                    canUndo: !1,
                    async: !0,
                    exec: function(a) {
                        var b = this;
                        c = 1;
                        a.once("beforePaste", d);
                        a.getClipboardData({
                            title: a.lang.pastefromword.title
                        },
                        function(c) {
                            c && a.fire("paste", {
                                type: "html",
                                dataValue: c.dataValue
                            });
                            a.fire("afterCommandExec", {
                                name: "pastefromword",
                                command: b,
                                returnValue: !!c
                            })
                        })
                    }
                });
                b.ui.addButton && b.ui.addButton("PasteFromWord", {
                    label: b.lang.pastefromword.toolbar,
                    command: "pastefromword",
                    toolbar: "clipboard,50"
                });
                b.on("pasteState",
                function(a) {
                    b.getCommand("pastefromword").setState(a.data)
                });
                b.on("paste",
                function(d) {
                    var f = d.data,
                    k = f.dataValue;
                    if (k && (c || /(class=\"?Mso|style=\"[^\"]*\bmso\-|w:WordDocument)/.test(k))) {
                        var h = a(b, e,
                        function() {
                            if (h) b.fire("paste", f);
                            else if (!b.config.pasteFromWordPromptCleanup || c || confirm(b.lang.pastefromword.confirmCleanup)) f.dataValue = CKEDITOR.cleanWord(k, b)
                        });
                        h && d.cancel()
                    }
                },
                null, null, 3)
            }
        })
    } (),
    function() {
        var a = {
            canUndo: !1,
            async: !0,
            exec: function(d) {
                d.getClipboardData({
                    title: d.lang.pastetext.title
                },
                function(b) {
                    b && d.fire("paste", {
                        type: "text",
                        dataValue: b.dataValue
                    });
                    d.fire("afterCommandExec", {
                        name: "pastetext",
                        command: a,
                        returnValue: !!b
                    })
                })
            }
        };
        CKEDITOR.plugins.add("pastetext", {
            requires: "clipboard",
            init: function(d) {
                d.addCommand("pastetext", a);
                d.ui.addButton && d.ui.addButton("PasteText", {
                    label: d.lang.pastetext.button,
                    command: "pastetext",
                    toolbar: "clipboard,40"
                });
                if (d.config.forcePasteAsPlainText) d.on("beforePaste",
                function(a) {
                    "html" != a.data.type && (a.data.type = "text")
                });
                d.on("pasteState",
                function(a) {
                    d.getCommand("pastetext").setState(a.data)
                })
            }
        })
    } (),
    function() {
        var a, d = {
            modes: {
                wysiwyg: 1,
                source: 1
            },
            canUndo: !1,
            readOnly: 1,
            exec: function(b) {
                var c, d = b.config,
                g = d.baseHref ? '<base href="' + d.baseHref + '"/>': "";
                if (d.fullPage) c = b.getData().replace(/<head>/, "$&" + g).replace(/[^>]*(?=<\/title>)/, "$& &mdash; " + b.lang.preview.preview);
                else {
                    var d = "<body ",
                    f = b.document && b.document.getBody();
                    f && (f.getAttribute("id") && (d += 'id="' + f.getAttribute("id") + '" '), f.getAttribute("class") && (d += 'class="' + f.getAttribute("class") + '" '));
                    c = b.config.docType + '<html dir="' + b.config.contentsLangDirection + '"><head>' + g + "<title>" + b.lang.preview.preview + "</title>" + CKEDITOR.tools.buildStyleHtml(b.config.contentsCss) + "</head>" + (d + ">") + b.getData() + "</body></html>"
                }
                g = 640;
                d = 420;
                f = 80;
                try {
                    var k = window.screen,
                    g = Math.round(0.8 * k.width),
                    d = Math.round(0.7 * k.height),
                    f = Math.round(0.1 * k.width)
                } catch(h) {}
                if (!b.fire("contentPreview", b = {
                    dataValue: c
                })) return ! 1;
                k = "";
                CKEDITOR.env.ie && (window._cke_htmlToLoad = b.dataValue, k = "javascript:void( (function(){document.open();" + ("(" + CKEDITOR.tools.fixDomain + ")();").replace(/\/\/.*?\n/g, "").replace(/parent\./g, "window.opener.") + "document.write( window.opener._cke_htmlToLoad );document.close();window.opener._cke_htmlToLoad = null;})() )");
                CKEDITOR.env.gecko && (window._cke_htmlToLoad = b.dataValue, k = a + "preview.html");
                k = window.open(k, null, "toolbar=yes,location=no,status=yes,menubar=yes,scrollbars=yes,resizable=yes,width=" + g + ",height=" + d + ",left=" + f);
                if (!CKEDITOR.env.ie && !CKEDITOR.env.gecko) {
                    var l = k.document;
                    l.open();
                    l.write(b.dataValue);
                    l.close();
                    CKEDITOR.env.webkit && setTimeout(function() {
                        l.body.innerHTML += ""
                    },
                    0)
                }
                return ! 0
            }
        };
        CKEDITOR.plugins.add("preview", {
            init: function(b) {
                b.elementMode != CKEDITOR.ELEMENT_MODE_INLINE && (a = this.path, b.addCommand("preview", d), b.ui.addButton && b.ui.addButton("Preview", {
                    label: b.lang.preview.preview,
                    command: "preview",
                    toolbar: "document,40"
                }))
            }
        })
    } (), CKEDITOR.plugins.add("print", {
        init: function(a) {
            a.elementMode != CKEDITOR.ELEMENT_MODE_INLINE && (a.addCommand("print", CKEDITOR.plugins.print), a.ui.addButton && a.ui.addButton("Print", {
                label: a.lang.print.toolbar,
                command: "print",
                toolbar: "document,50"
            }))
        }
    }), CKEDITOR.plugins.print = {
        exec: function(a) {
            CKEDITOR.env.opera || (CKEDITOR.env.gecko ? a.window.$.print() : a.document.$.execCommand("Print"))
        },
        canUndo: !1,
        readOnly: 1,
        modes: {
            wysiwyg: !CKEDITOR.env.opera
        }
    },
    CKEDITOR.plugins.add("removeformat", {
        init: function(a) {
            a.addCommand("removeFormat", CKEDITOR.plugins.removeformat.commands.removeformat);
            a.ui.addButton && a.ui.addButton("RemoveFormat", {
                label: a.lang.removeformat.toolbar,
                command: "removeFormat",
                toolbar: "cleanup,10"
            })
        }
    }), CKEDITOR.plugins.removeformat = {
        commands: {
            removeformat: {
                exec: function(a) {
                    for (var d = a._.removeFormatRegex || (a._.removeFormatRegex = RegExp("^(?:" + a.config.removeFormatTags.replace(/,/g, "|") + ")$", "i")), b = a._.removeAttributes || (a._.removeAttributes = a.config.removeFormatAttributes.split(",")), c = CKEDITOR.plugins.removeformat.filter, e = a.getSelection().getRanges(1), g = e.createIterator(), f; f = g.getNextRange();) {
                        f.collapsed || f.enlarge(CKEDITOR.ENLARGE_ELEMENT);
                        var k = f.createBookmark(),
                        h = k.startNode,
                        l = k.endNode,
                        n = function(b) {
                            for (var e = a.elementPath(b), f = e.elements, g = 1, h; (h = f[g]) && !h.equals(e.block) && !h.equals(e.blockLimit); g++) d.test(h.getName()) && c(a, h) && b.breakParent(h)
                        };
                        n(h);
                        if (l) for (n(l), h = h.getNextSourceNode(!0, CKEDITOR.NODE_ELEMENT); h && !h.equals(l);) n = h.getNextSourceNode(!1, CKEDITOR.NODE_ELEMENT),
                        "img" == h.getName() && h.data("cke-realelement") || !c(a, h) || (d.test(h.getName()) ? h.remove(1) : (h.removeAttributes(b), a.fire("removeFormatCleanup", h))),
                        h = n;
                        f.moveToBookmark(k)
                    }
                    a.forceNextSelectionCheck();
                    a.getSelection().selectRanges(e)
                }
            }
        },
        filter: function(a, d) {
            for (var b = a._.removeFormatFilters || [], c = 0; c < b.length; c++) if (!1 === b[c](d)) return ! 1;
            return ! 0
        }
    },
    CKEDITOR.editor.prototype.addRemoveFormatFilter = function(a) {
        this._.removeFormatFilters || (this._.removeFormatFilters = []);
        this._.removeFormatFilters.push(a)
    },
    CKEDITOR.config.removeFormatTags = "b,big,code,del,dfn,em,font,i,ins,kbd,q,s,samp,small,span,strike,strong,sub,sup,tt,u,var", CKEDITOR.config.removeFormatAttributes = "class,style,lang,width,height,align,hspace,valign", CKEDITOR.plugins.add("resize", {
        init: function(a) {
            var d, b, c, e, g = a.config,
            f = a.ui.spaceId("resizer"),
            k = a.element ? a.element.getDirection(1) : "ltr"; ! g.resize_dir && (g.resize_dir = "vertical");
            void 0 == g.resize_maxWidth && (g.resize_maxWidth = 3E3);
            void 0 == g.resize_maxHeight && (g.resize_maxHeight = 3E3);
            void 0 == g.resize_minWidth && (g.resize_minWidth = 750);
            void 0 == g.resize_minHeight && (g.resize_minHeight = 250);
            if (!1 !== g.resize_enabled) {
                var h = null,
                l = ("both" == g.resize_dir || "horizontal" == g.resize_dir) && g.resize_minWidth != g.resize_maxWidth,
                n = ("both" == g.resize_dir || "vertical" == g.resize_dir) && g.resize_minHeight != g.resize_maxHeight,
                p = function(f) {
                    var h = d,
                    p = b,
                    r = h + (f.data.$.screenX - c) * ("rtl" == k ? -1 : 1);
                    f = p + (f.data.$.screenY - e);
                    l && (h = Math.max(g.resize_minWidth, Math.min(r, g.resize_maxWidth)));
                    n && (p = Math.max(g.resize_minHeight, Math.min(f, g.resize_maxHeight)));
                    a.resize(l ? h: null, p)
                },
                s = function() {
                    CKEDITOR.document.removeListener("mousemove", p);
                    CKEDITOR.document.removeListener("mouseup", s);
                    a.document && (a.document.removeListener("mousemove", p), a.document.removeListener("mouseup", s))
                },
                r = CKEDITOR.tools.addFunction(function(f) {
                    h || (h = a.getResizable());
                    d = h.$.offsetWidth || 0;
                    b = h.$.offsetHeight || 0;
                    c = f.screenX;
                    e = f.screenY;
                    g.resize_minWidth > d && (g.resize_minWidth = d);
                    g.resize_minHeight > b && (g.resize_minHeight = b);
                    CKEDITOR.document.on("mousemove", p);
                    CKEDITOR.document.on("mouseup", s);
                    a.document && (a.document.on("mousemove", p), a.document.on("mouseup", s));
                    f.preventDefault && f.preventDefault()
                });
                a.on("destroy",
                function() {
                    CKEDITOR.tools.removeFunction(r)
                });
                a.on("uiSpace",
                function(b) {
                    if ("bottom" == b.data.space) {
                        var c = "";
                        l && !n && (c = " cke_resizer_horizontal"); ! l && n && (c = " cke_resizer_vertical");
                        var d = '<span id="' + f + '" class="cke_resizer' + c + " cke_resizer_" + k + '" title="' + CKEDITOR.tools.htmlEncode(a.lang.common.resize) + '" onmousedown="CKEDITOR.tools.callFunction(' + r + ', event)">' + ("ltr" == k ? "\u25e2": "\u25e3") + "</span>";
                        "ltr" == k && "ltr" == c ? b.data.html += d: b.data.html = d + b.data.html
                    }
                },
                a, null, 100);
                a.on("maximize",
                function(b) {
                    a.ui.space("resizer")[b.data == CKEDITOR.TRISTATE_ON ? "hide": "show"]()
                })
            }
        }
    }),
    function() {
        var a = {
            readOnly: 1,
            exec: function(a) {
                if (a.fire("save") && (a = a.element.$.form)) try {
                    a.submit()
                } catch(b) {
                    a.submit.click && a.submit.click()
                }
            }
        };
        CKEDITOR.plugins.add("save", {
            init: function(d) {
                d.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE && (d.addCommand("save", a).modes = {
                    wysiwyg: !!d.element.$.form
                },
                d.ui.addButton && d.ui.addButton("Save", {
                    label: d.lang.save.toolbar,
                    command: "save",
                    toolbar: "document,10"
                }))
            }
        })
    } (), CKEDITOR.plugins.add("menubutton", {
        requires: "button,menu",
        onLoad: function() {
            var a = function(a) {
                var b = this._;
                if (b.state !== CKEDITOR.TRISTATE_DISABLED) {
                    b.previousState = b.state;
                    var c = b.menu;
                    c || (c = b.menu = new CKEDITOR.menu(a, {
                        panel: {
                            className: "cke_menu_panel",
                            attributes: {
                                "aria-label": a.lang.common.options
                            }
                        }
                    }), c.onHide = CKEDITOR.tools.bind(function() {
                        this.setState(this.modes && this.modes[a.mode] ? b.previousState: CKEDITOR.TRISTATE_DISABLED)
                    },
                    this), this.onMenu && c.addListener(this.onMenu));
                    b.on ? c.hide() : (this.setState(CKEDITOR.TRISTATE_ON), setTimeout(function() {
                        c.show(CKEDITOR.document.getById(b.id), 4)
                    },
                    0))
                }
            };
            CKEDITOR.ui.menuButton = CKEDITOR.tools.createClass({
                base: CKEDITOR.ui.button,
                $: function(d) {
                    delete d.panel;
                    this.base(d);
                    this.hasArrow = !0;
                    this.click = a
                },
                statics: {
                    handler: {
                        create: function(a) {
                            return new CKEDITOR.ui.menuButton(a)
                        }
                    }
                }
            })
        },
        beforeInit: function(a) {
            a.ui.addHandler(CKEDITOR.UI_MENUBUTTON, CKEDITOR.ui.menuButton.handler)
        }
    }), CKEDITOR.UI_MENUBUTTON = "menubutton",
    function() {
        function a(a, b) {
            var c = 0,
            d;
            for (d in b) if (b[d] == a) {
                c = 1;
                break
            }
            return c
        }
        var d = "",
        b = function() {
            function a() {
                e.once("focus", g);
                e.once("blur", b)
            }
            function b(d) {
                d = d.editor;
                var e = c.getScayt(d),
                g = d.elementMode == CKEDITOR.ELEMENT_MODE_INLINE;
                e && (c.setPaused(d, !e.disabled), c.setControlId(d, e.id), e.destroy(!0), delete c.instances[d.name], g && a())
            }
            var e = this,
            g = function() {
                if ("undefined" == typeof c.instances[e.name] && null == c.instances[e.name]) {
                    var a = e.config,
                    b = {};
                    b.srcNodeRef = "BODY" == e.editable().$.nodeName ? e.document.getWindow().$.frameElement: e.editable().$;
                    b.assocApp = "CKEDITOR." + CKEDITOR.version + "@" + CKEDITOR.revision;
                    b.customerid = a.scayt_customerid || "1:WvF0D4-UtPqN1-43nkD4-NKvUm2-daQqk3-LmNiI-z7Ysb4-mwry24-T8YrS3-Q2tpq2";
                    b.customDictionaryIds = a.scayt_customDictionaryIds || "";
                    b.userDictionaryName = a.scayt_userDictionaryName || "";
                    b.sLang = a.scayt_sLang || "en_US";
                    b.onLoad = function() {
                        CKEDITOR.env.ie && 8 > CKEDITOR.env.version || this.addStyle(this.selectorCss(), "padding-bottom: 2px !important;");
                        e.editable().hasFocus && !c.isControlRestored(e) && this.focus()
                    };
                    b.onBeforeChange = function() {
                        c.getScayt(e) && !e.checkDirty() && setTimeout(function() {
                            e.resetDirty()
                        },
                        0)
                    };
                    a = window.scayt_custom_params;
                    if ("object" == typeof a) for (var d in a) b[d] = a[d];
                    c.getControlId(e) && (b.id = c.getControlId(e));
                    var f = new window.scayt(b);
                    f.afterMarkupRemove.push(function(a) { (new CKEDITOR.dom.element(a, f.document)).mergeSiblings()
                    });
                    if (b = c.instances[e.name]) f.sLang = b.sLang,
                    f.option(b.option()),
                    f.paused = b.paused;
                    c.instances[e.name] = f;
                    try {
                        f.setDisabled(!1 === c.isPaused(e))
                    } catch(g) {}
                    e.fire("showScaytState")
                }
            };
            e.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? a() : e.on("contentDom", g);
            e.on("contentDomUnload",
            function() {
                for (var a = CKEDITOR.document.getElementsByTag("script"), b = /^dojoIoScript(\d+)$/i, c = /^https?:\/\/svc\.webspellchecker\.net\/spellcheck\/script\/ssrv\.cgi/i, d = 0; d < a.count(); d++) {
                    var e = a.getItem(d),
                    f = e.getId(),
                    g = e.getAttribute("src");
                    f && g && f.match(b) && g.match(c) && e.remove()
                }
            });
            e.on("beforeCommandExec",
            function(a) {
                "source" == a.data.name && "source" == e.mode && c.markControlRestore(e)
            });
            e.on("afterCommandExec",
            function(a) {
                c.isScaytEnabled(e) && "wysiwyg" == e.mode && ("undo" == a.data.name || "redo" == a.data.name) && window.setTimeout(function() {
                    c.getScayt(e).refresh()
                },
                10)
            });
            e.on("destroy", b);
            e.on("setData", b);
            e.on("insertElement",
            function() {
                var a = c.getScayt(e);
                c.isScaytEnabled(e) && (CKEDITOR.env.ie && e.getSelection().unlock(!0), window.setTimeout(function() {
                    a.focus();
                    a.refresh()
                },
                10))
            },
            this, null, 50);
            e.on("insertHtml",
            function() {
                var a = c.getScayt(e);
                c.isScaytEnabled(e) && (CKEDITOR.env.ie && e.getSelection().unlock(!0), window.setTimeout(function() {
                    a.focus();
                    a.refresh()
                },
                10))
            },
            this, null, 50);
            e.on("scaytDialog",
            function(a) {
                a.data.djConfig = window.djConfig;
                a.data.scayt_control = c.getScayt(e);
                a.data.tab = d;
                a.data.scayt = window.scayt
            });
            var n = e.dataProcessor; (n = n && n.htmlFilter) && n.addRules({
                elements: {
                    span: function(a) {
                        if (a.attributes["data-scayt_word"] && a.attributes["data-scaytid"]) return delete a.name,
                        a
                    }
                }
            });
            n = CKEDITOR.plugins.undo.Image.prototype;
            n = "function" == typeof n.equalsContent ? n.equalsContent: n.equals;
            n = CKEDITOR.tools.override(n,
            function(a) {
                return function(b) {
                    var d = this.contents,
                    e = b.contents,
                    f = c.getScayt(this.editor);
                    f && c.isScaytReady(this.editor) && (this.contents = f.reset(d) || "", b.contents = f.reset(e) || "");
                    f = a.apply(this, arguments);
                    this.contents = d;
                    b.contents = e;
                    return f
                }
            });
            e.document && (e.elementMode != CKEDITOR.ELEMENT_MODE_INLINE || e.focusManager.hasFocus) && g()
        };
        CKEDITOR.plugins.scayt = {
            engineLoaded: !1,
            instances: {},
            controlInfo: {},
            setControlInfo: function(a, b) {
                a && a.name && "object" != typeof this.controlInfo[a.name] && (this.controlInfo[a.name] = {});
                for (var c in b) this.controlInfo[a.name][c] = b[c]
            },
            isControlRestored: function(a) {
                return a && a.name && this.controlInfo[a.name] ? this.controlInfo[a.name].restored: !1
            },
            markControlRestore: function(a) {
                this.setControlInfo(a, {
                    restored: !0
                })
            },
            setControlId: function(a, b) {
                this.setControlInfo(a, {
                    id: b
                })
            },
            getControlId: function(a) {
                return a && a.name && this.controlInfo[a.name] && this.controlInfo[a.name].id ? this.controlInfo[a.name].id: null
            },
            setPaused: function(a, b) {
                this.setControlInfo(a, {
                    paused: b
                })
            },
            isPaused: function(a) {
                if (a && a.name && this.controlInfo[a.name]) return this.controlInfo[a.name].paused
            },
            getScayt: function(a) {
                return this.instances[a.name]
            },
            isScaytReady: function(a) {
                return ! 0 === this.engineLoaded && "undefined" !== typeof window.scayt && this.getScayt(a)
            },
            isScaytEnabled: function(a) {
                return (a = this.getScayt(a)) ? !1 === a.disabled: !1
            },
            getUiTabs: function(a) {
                var b = [],
                c = a.config.scayt_uiTabs || "1,1,1",
                c = c.split(",");
                c[3] = "1";
                for (var d = 0; 4 > d; d++) b[d] = "undefined" != typeof window.scayt && "undefined" != typeof window.scayt.uiTags ? parseInt(c[d], 10) && window.scayt.uiTags[d] : parseInt(c[d], 10);
                "object" == typeof a.plugins.wsc ? b.push(1) : b.push(0);
                return b
            },
            loadEngine: function(a) {
                if (CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version || CKEDITOR.env.opera || CKEDITOR.env.air) return a.fire("showScaytState");
                if (!0 === this.engineLoaded) return b.apply(a);
                if ( - 1 == this.engineLoaded) return CKEDITOR.on("scaytReady",
                function() {
                    b.apply(a)
                });
                CKEDITOR.on("scaytReady", b, a);
                CKEDITOR.on("scaytReady",
                function() {
                    this.engineLoaded = !0
                },
                this, null, 0);
                this.engineLoaded = -1;
                var d = document.location.protocol,
                d = -1 != d.search(/https?:/) ? d: "http:",
                d = a.config.scayt_srcUrl || d + "//svc.webspellchecker.net/scayt26/loader__base.js",
                e = c.parseUrl(d).path + "/";
                void 0 == window.scayt ? (CKEDITOR._djScaytConfig = {
                    baseUrl: e,
                    addOnLoad: [function() {
                        CKEDITOR.fireOnce("scaytReady")
                    }],
                    isDebug: !1
                },
                CKEDITOR.document.getHead().append(CKEDITOR.document.createElement("script", {
                    attributes: {
                        type: "text/javascript",
                        async: "true",
                        src: d
                    }
                }))) : CKEDITOR.fireOnce("scaytReady");
                return null
            },
            parseUrl: function(a) {
                var b;
                return a.match && (b = a.match(/(.*)[\/\\](.*?\.\w+)$/)) ? {
                    path: b[1],
                    file: b[2]
                }: a
            }
        };
        var c = CKEDITOR.plugins.scayt,
        e = function(a, b, c, d, e, g, s) {
            a.addCommand(d, e);
            a.addMenuItem(d, {
                label: c,
                command: d,
                group: g,
                order: s
            })
        },
        g = {
            preserveState: !0,
            editorFocus: !1,
            canUndo: !1,
            exec: function(a) {
                if (c.isScaytReady(a)) {
                    var b = c.isScaytEnabled(a);
                    this.setState(b ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_ON);
                    a = c.getScayt(a);
                    a.focus();
                    a.setDisabled(b)
                } else ! a.config.scayt_autoStartup && 0 <= c.engineLoaded && (a.focus(), this.setState(CKEDITOR.TRISTATE_DISABLED), c.loadEngine(a))
            }
        };
        CKEDITOR.plugins.add("scayt", {
            requires: "menubutton,dialog",
            beforeInit: function(a) {
                var b = a.config.scayt_contextMenuItemsOrder || "suggest|moresuggest|control",
                c = "";
                if ((b = b.split("|")) && b.length) for (var d = 0; d < b.length; d++) c += "scayt_" + b[d] + (b.length != parseInt(d, 10) + 1 ? ",": "");
                a.config.menu_groups = c + "," + a.config.menu_groups
            },
            checkEnvironment: function() {
                return CKEDITOR.env.opera || CKEDITOR.env.air ? 0 : 1
            },
            init: function(b) {
                var k = b.dataProcessor && b.dataProcessor.dataFilter,
                h = {
                    elements: {
                        span: function(a) {
                            var b = a.attributes;
                            b && b["data-scaytid"] && delete a.name
                        }
                    }
                };
                k && k.addRules(h);
                var l = {},
                n = {},
                p = b.addCommand("scaytcheck", g);
                CKEDITOR.dialog.add("scaytcheck", CKEDITOR.getUrl(this.path + "dialogs/options.js"));
                k = c.getUiTabs(b);
                b.addMenuGroup("scaytButton");
                b.addMenuGroup("scayt_suggest", -10);
                b.addMenuGroup("scayt_moresuggest", -9);
                b.addMenuGroup("scayt_control", -8);
                var h = {},
                s = b.lang.scayt;
                h.scaytToggle = {
                    label: s.enable,
                    command: "scaytcheck",
                    group: "scaytButton"
                };
                1 == k[0] && (h.scaytOptions = {
                    label: s.options,
                    group: "scaytButton",
                    onClick: function() {
                        d = "options";
                        b.openDialog("scaytcheck")
                    }
                });
                1 == k[1] && (h.scaytLangs = {
                    label: s.langs,
                    group: "scaytButton",
                    onClick: function() {
                        d = "langs";
                        b.openDialog("scaytcheck")
                    }
                });
                1 == k[2] && (h.scaytDict = {
                    label: s.dictionariesTab,
                    group: "scaytButton",
                    onClick: function() {
                        d = "dictionaries";
                        b.openDialog("scaytcheck")
                    }
                });
                h.scaytAbout = {
                    label: b.lang.scayt.about,
                    group: "scaytButton",
                    onClick: function() {
                        d = "about";
                        b.openDialog("scaytcheck")
                    }
                };
                1 == k[4] && (h.scaytWSC = {
                    label: b.lang.wsc.toolbar,
                    group: "scaytButton",
                    command: "checkspell"
                });
                b.addMenuItems(h);
                b.ui.add("Scayt", CKEDITOR.UI_MENUBUTTON, {
                    label: s.title,
                    title: CKEDITOR.env.opera ? s.opera_title: s.title,
                    modes: {
                        wysiwyg: this.checkEnvironment()
                    },
                    toolbar: "spellchecker,20",
                    onRender: function() {
                        p.on("state",
                        function() {
                            this.setState(p.state)
                        },
                        this)
                    },
                    onMenu: function() {
                        var a = c.isScaytEnabled(b);
                        b.getMenuItem("scaytToggle").label = s[a ? "disable": "enable"];
                        var d = c.getUiTabs(b);
                        return {
                            scaytToggle: CKEDITOR.TRISTATE_OFF,
                            scaytOptions: a && d[0] ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                            scaytLangs: a && d[1] ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                            scaytDict: a && d[2] ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                            scaytAbout: a && d[3] ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                            scaytWSC: d[4] ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED
                        }
                    }
                });
                b.contextMenu && b.addMenuItems && b.contextMenu.addListener(function(d, g) {
                    if (!c.isScaytEnabled(b) || g.getRanges()[0].checkReadOnly()) return null;
                    var h = c.getScayt(b),
                    k = h.getScaytNode();
                    if (!k) return null;
                    var p = h.getWord(k);
                    if (!p) return null;
                    var v = h.getLang(),
                    A = b.config.scayt_contextCommands || "all",
                    p = window.scayt.getSuggestion(p, v),
                    A = A.split("|"),
                    E;
                    for (E in l) delete b._.menuItems[E],
                    delete b.commands[E];
                    for (E in n) delete b._.menuItems[E],
                    delete b.commands[E];
                    if (p && p.length) {
                        l = {};
                        n = {};
                        E = b.config.scayt_moreSuggestions || "on";
                        var v = !1,
                        z = b.config.scayt_maxSuggestions;
                        "number" != typeof z && (z = 5); ! z && (z = p.length);
                        for (var B = 0,
                        x = p.length; B < x; B += 1) {
                            var D = "scayt_suggestion_" + p[B].replace(" ", "_"),
                            I = function(a, b) {
                                return {
                                    exec: function() {
                                        h.replace(a, b)
                                    }
                                }
                            } (k, p[B]);
                            B < z ? (e(b, "button_" + D, p[B], D, I, "scayt_suggest", B + 1), n[D] = CKEDITOR.TRISTATE_OFF) : "on" == E && (e(b, "button_" + D, p[B], D, I, "scayt_moresuggest", B + 1), l[D] = CKEDITOR.TRISTATE_OFF, v = !0)
                        }
                        v && (b.addMenuItem("scayt_moresuggest", {
                            label: s.moreSuggestions,
                            group: "scayt_moresuggest",
                            order: 10,
                            getItems: function() {
                                return l
                            }
                        }), n.scayt_moresuggest = CKEDITOR.TRISTATE_OFF)
                    } else e(b, "no_sugg", s.noSuggestions, "scayt_no_sugg", {
                        exec: function() {}
                    },
                    "scayt_control", 1, !0),
                    n.scayt_no_sugg = CKEDITOR.TRISTATE_OFF;
                    if (a("all", A) || a("ignore", A)) e(b, "ignore", s.ignore, "scayt_ignore", {
                        exec: function() {
                            h.ignore(k)
                        }
                    },
                    "scayt_control", 2),
                    n.scayt_ignore = CKEDITOR.TRISTATE_OFF;
                    if (a("all", A) || a("ignoreall", A)) e(b, "ignore_all", s.ignoreAll, "scayt_ignore_all", {
                        exec: function() {
                            h.ignoreAll(k)
                        }
                    },
                    "scayt_control", 3),
                    n.scayt_ignore_all = CKEDITOR.TRISTATE_OFF;
                    if (a("all", A) || a("add", A)) e(b, "add_word", s.addWord, "scayt_add_word", {
                        exec: function() {
                            window.scayt.addWordToUserDictionary(k)
                        }
                    },
                    "scayt_control", 4),
                    n.scayt_add_word = CKEDITOR.TRISTATE_OFF;
                    h.fireOnContextMenu && h.fireOnContextMenu(b);
                    return n
                });
                k = function(a) {
                    a.removeListener();
                    CKEDITOR.env.opera || CKEDITOR.env.air ? p.setState(CKEDITOR.TRISTATE_DISABLED) : p.setState(c.isScaytEnabled(b) ? CKEDITOR.TRISTATE_ON: CKEDITOR.TRISTATE_OFF)
                };
                b.on("showScaytState", k);
                b.on("instanceReady", k);
                if (b.config.scayt_autoStartup) b.on("instanceReady",
                function() {
                    c.loadEngine(b)
                })
            },
            afterInit: function(a) {
                var b, c = function(a) {
                    if (a.hasAttribute("data-scaytid")) return ! 1
                };
                a._.elementsPath && (b = a._.elementsPath.filters) && b.push(c);
                a.addRemoveFormatFilter && a.addRemoveFormatFilter(c)
            }
        })
    } (),
    function() {
        CKEDITOR.plugins.add("selectall", {
            init: function(a) {
                a.addCommand("selectAll", {
                    modes: {
                        wysiwyg: 1,
                        source: 1
                    },
                    exec: function(a) {
                        var b = a.editable();
                        if (b.is("textarea")) a = b.$,
                        CKEDITOR.env.ie ? a.createTextRange().execCommand("SelectAll") : (a.selectionStart = 0, a.selectionEnd = a.value.length),
                        a.focus();
                        else {
                            if (b.is("body")) a.document.$.execCommand("SelectAll", !1, null);
                            else {
                                var c = a.createRange();
                                c.selectNodeContents(b);
                                c.select()
                            }
                            a.forceNextSelectionCheck();
                            a.selectionChange()
                        }
                    },
                    canUndo: !1
                });
                a.ui.addButton && a.ui.addButton("SelectAll", {
                    label: a.lang.selectall.toolbar,
                    command: "selectAll",
                    toolbar: "selection,10"
                })
            }
        })
    } (),
    function() {
        var a = {
            readOnly: 1,
            preserveState: !0,
            editorFocus: !1,
            exec: function(a) {
                this.toggleState();
                this.refresh(a)
            },
            refresh: function(a) {
                if (a.document) {
                    var b = this.state != CKEDITOR.TRISTATE_ON || a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE && !a.focusManager.hasFocus ? "removeClass": "attachClass";
                    a.editable()[b]("cke_show_blocks")
                }
            }
        };
        CKEDITOR.plugins.add("showblocks", {
            onLoad: function() {
                function a(b) {
                    return ".%1.%2 p,.%1.%2 div,.%1.%2 pre,.%1.%2 address,.%1.%2 blockquote,.%1.%2 h1,.%1.%2 h2,.%1.%2 h3,.%1.%2 h4,.%1.%2 h5,.%1.%2 h6{background-position: top %3;padding-%3: 8px;}".replace(/%1/g, "cke_show_blocks").replace(/%2/g, "cke_contents_" + b).replace(/%3/g, "rtl" == b ? "right": "left")
                }
                CKEDITOR.addCss(".%2 p,.%2 div,.%2 pre,.%2 address,.%2 blockquote,.%2 h1,.%2 h2,.%2 h3,.%2 h4,.%2 h5,.%2 h6{background-repeat: no-repeat;border: 1px dotted gray;padding-top: 8px;}.%2 p{%1p.png);}.%2 div{%1div.png);}.%2 pre{%1pre.png);}.%2 address{%1address.png);}.%2 blockquote{%1blockquote.png);}.%2 h1{%1h1.png);}.%2 h2{%1h2.png);}.%2 h3{%1h3.png);}.%2 h4{%1h4.png);}.%2 h5{%1h5.png);}.%2 h6{%1h6.png);}".replace(/%1/g, "background-image: url(" + CKEDITOR.getUrl(this.path) + "images/block_").replace(/%2/g, "cke_show_blocks ") + a("ltr") + a("rtl"))
            },
            init: function(d) {
                if (!d.blockless) {
                    var b = d.addCommand("showblocks", a);
                    b.canUndo = !1;
                    d.config.startupOutlineBlocks && b.setState(CKEDITOR.TRISTATE_ON);
                    d.ui.addButton && d.ui.addButton("ShowBlocks", {
                        label: d.lang.showblocks.toolbar,
                        command: "showblocks",
                        toolbar: "tools,20"
                    });
                    d.on("mode",
                    function() {
                        b.state != CKEDITOR.TRISTATE_DISABLED && b.refresh(d)
                    });
                    if (d.elementMode == CKEDITOR.ELEMENT_MODE_INLINE) {
                        var c = function() {
                            b.refresh(d)
                        };
                        d.on("focus", c);
                        d.on("blur", c)
                    }
                    d.on("contentDom",
                    function() {
                        b.state != CKEDITOR.TRISTATE_DISABLED && b.refresh(d)
                    })
                }
            }
        })
    } (),
    function() {
        var a = {
            preserveState: !0,
            editorFocus: !1,
            readOnly: 1,
            exec: function(a) {
                this.toggleState();
                this.refresh(a)
            },
            refresh: function(a) {
                if (a.document) {
                    var b = this.state == CKEDITOR.TRISTATE_ON ? "attachClass": "removeClass";
                    a.editable()[b]("cke_show_borders")
                }
            }
        };
        CKEDITOR.plugins.add("showborders", {
            modes: {
                wysiwyg: 1
            },
            onLoad: function() {
                var a;
                a = (CKEDITOR.env.ie6Compat ? [".%1 table.%2,", ".%1 table.%2 td, .%1 table.%2 th", "{", "border : #d3d3d3 1px dotted", "}"] : ".%1 table.%2,;.%1 table.%2 > tr > td, .%1 table.%2 > tr > th,;.%1 table.%2 > tbody > tr > td, .%1 table.%2 > tbody > tr > th,;.%1 table.%2 > thead > tr > td, .%1 table.%2 > thead > tr > th,;.%1 table.%2 > tfoot > tr > td, .%1 table.%2 > tfoot > tr > th;{;border : #d3d3d3 1px dotted;}".split(";")).join("").replace(/%2/g, "cke_show_border").replace(/%1/g, "cke_show_borders ");
                CKEDITOR.addCss(a)
            },
            init: function(d) {
                var b = d.addCommand("showborders", a);
                b.canUndo = !1; ! 1 !== d.config.startupShowBorders && b.setState(CKEDITOR.TRISTATE_ON);
                d.on("mode",
                function() {
                    b.state != CKEDITOR.TRISTATE_DISABLED && b.refresh(d)
                },
                null, null, 100);
                d.on("contentDom",
                function() {
                    b.state != CKEDITOR.TRISTATE_DISABLED && b.refresh(d)
                });
                d.on("removeFormatCleanup",
                function(a) {
                    a = a.data;
                    d.getCommand("showborders").state == CKEDITOR.TRISTATE_ON && a.is("table") && (!a.hasAttribute("border") || 0 >= parseInt(a.getAttribute("border"), 10)) && a.addClass("cke_show_border")
                })
            },
            afterInit: function(a) {
                var b = a.dataProcessor;
                a = b && b.dataFilter;
                b = b && b.htmlFilter;
                a && a.addRules({
                    elements: {
                        table: function(a) {
                            a = a.attributes;
                            var b = a["class"],
                            d = parseInt(a.border, 10);
                            d && !(0 >= d) || b && -1 != b.indexOf("cke_show_border") || (a["class"] = (b || "") + " cke_show_border")
                        }
                    }
                });
                b && b.addRules({
                    elements: {
                        table: function(a) {
                            a = a.attributes;
                            var b = a["class"];
                            b && (a["class"] = b.replace("cke_show_border", "").replace(/\s{2}/, " ").replace(/^\s+|\s+$/, ""))
                        }
                    }
                })
            }
        });
        CKEDITOR.on("dialogDefinition",
        function(a) {
            var b = a.data.name;
            if ("table" == b || "tableProperties" == b) if (a = a.data.definition, b = a.getContents("info").get("txtBorder"), b.commit = CKEDITOR.tools.override(b.commit,
            function(a) {
                return function(b, d) {
                    a.apply(this, arguments);
                    var f = parseInt(this.getValue(), 10);
                    d[!f || 0 >= f ? "addClass": "removeClass"]("cke_show_border")
                }
            }), a = (a = a.getContents("advanced")) && a.get("advCSSClasses")) a.setup = CKEDITOR.tools.override(a.setup,
            function(a) {
                return function() {
                    a.apply(this, arguments);
                    this.setValue(this.getValue().replace(/cke_show_border/, ""))
                }
            }),
            a.commit = CKEDITOR.tools.override(a.commit,
            function(a) {
                return function(b, d) {
                    a.apply(this, arguments);
                    parseInt(d.getAttribute("border"), 10) || d.addClass("cke_show_border")
                }
            })
        })
    } (), CKEDITOR.plugins.add("smiley", {
        requires: "dialog",
        init: function(a) {
            a.config.smiley_path = a.config.smiley_path || this.path + "images/";
            a.addCommand("smiley", new CKEDITOR.dialogCommand("smiley", {
                allowedContent: "img[alt,height,!src,title,width]",
                requiredContent: "img"
            }));
            a.ui.addButton && a.ui.addButton("Smiley", {
                label: a.lang.smiley.toolbar,
                command: "smiley",
                toolbar: "insert,50"
            });
            CKEDITOR.dialog.add("smiley", this.path + "dialogs/smiley.js")
        }
    }), CKEDITOR.config.smiley_images = "regular_smile.gif sad_smile.gif wink_smile.gif teeth_smile.gif confused_smile.gif tongue_smile.gif embarrassed_smile.gif omg_smile.gif whatchutalkingabout_smile.gif angry_smile.gif angel_smile.gif shades_smile.gif devil_smile.gif cry_smile.gif lightbulb.gif thumbs_down.gif thumbs_up.gif heart.gif broken_heart.gif kiss.gif envelope.gif".split(" "), CKEDITOR.config.smiley_descriptions = "smiley;sad;wink;laugh;frown;cheeky;blush;surprise;indecision;angry;angel;cool;devil;crying;enlightened;no;yes;heart;broken heart;kiss;mail".split(";"),
    function() {
        CKEDITOR.plugins.add("sourcearea", {
            init: function(d) {
                function b() {
                    this.hide();
                    this.setStyle("height", this.getParent().$.clientHeight + "px");
                    this.setStyle("width", this.getParent().$.clientWidth + "px");
                    this.show()
                }
                if (d.elementMode != CKEDITOR.ELEMENT_MODE_INLINE) {
                    var c = CKEDITOR.plugins.sourcearea;
                    d.addMode("source",
                    function(c) {
                        var g = d.ui.space("contents").getDocument().createElement("textarea");
                        g.setStyles(CKEDITOR.tools.extend({
                            width: CKEDITOR.env.ie7Compat ? "99%": "100%",
                            height: "100%",
                            resize: "none",
                            outline: "none",
                            "text-align": "left"
                        },
                        CKEDITOR.tools.cssVendorPrefix("tab-size", d.config.sourceAreaTabSize || 4)));
                        g.setAttribute("dir", "ltr");
                        g.addClass("cke_source cke_reset cke_enable_context_menu");
                        d.ui.space("contents").append(g);
                        g = d.editable(new a(d, g));
                        g.setData(d.getData(1));
                        CKEDITOR.env.ie && (g.attachListener(d, "resize", b, g), g.attachListener(CKEDITOR.document.getWindow(), "resize", b, g), CKEDITOR.tools.setTimeout(b, 0, g));
                        d.fire("ariaWidget", this);
                        c()
                    });
                    d.addCommand("source", c.commands.source);
                    d.ui.addButton && d.ui.addButton("Source", {
                        label: d.lang.sourcearea.toolbar,
                        command: "source",
                        toolbar: "mode,10"
                    });
                    d.on("mode",
                    function() {
                        d.getCommand("source").setState("source" == d.mode ? CKEDITOR.TRISTATE_ON: CKEDITOR.TRISTATE_OFF)
                    })
                }
            }
        });
        var a = CKEDITOR.tools.createClass({
            base: CKEDITOR.editable,
            proto: {
                setData: function(a) {
                    this.setValue(a);
                    this.editor.fire("dataReady")
                },
                getData: function() {
                    return this.getValue()
                },
                insertHtml: function() {},
                insertElement: function() {},
                insertText: function() {},
                setReadOnly: function(a) {
                    this[(a ? "set": "remove") + "Attribute"]("readOnly", "readonly")
                },
                detach: function() {
                    a.baseProto.detach.call(this);
                    this.clearCustomData();
                    this.remove()
                }
            }
        })
    } (), CKEDITOR.plugins.sourcearea = {
        commands: {
            source: {
                modes: {
                    wysiwyg: 1,
                    source: 1
                },
                editorFocus: !1,
                readOnly: 1,
                exec: function(a) {
                    "wysiwyg" == a.mode && a.fire("saveSnapshot");
                    a.getCommand("source").setState(CKEDITOR.TRISTATE_DISABLED);
                    a.setMode("source" == a.mode ? "wysiwyg": "source")
                },
                canUndo: !1
            }
        }
    },
    CKEDITOR.plugins.add("specialchar", {
        availableLangs: {
            ar: 1,
            bg: 1,
            ca: 1,
            cs: 1,
            cy: 1,
            de: 1,
            el: 1,
            en: 1,
            eo: 1,
            es: 1,
            et: 1,
            fa: 1,
            fi: 1,
            fr: 1,
            "fr-ca": 1,
            gl: 1,
            he: 1,
            hr: 1,
            hu: 1,
            id: 1,
            it: 1,
            ja: 1,
            ku: 1,
            lv: 1,
            nb: 1,
            nl: 1,
            no: 1,
            pl: 1,
            pt: 1,
            "pt-br": 1,
            ru: 1,
            si: 1,
            sk: 1,
            sl: 1,
            sq: 1,
            sv: 1,
            th: 1,
            tr: 1,
            ug: 1,
            uk: 1,
            vi: 1,
            "zh-cn": 1,
            "zh-tw": 1
        },
        requires: "dialog",
        init: function(a) {
            var d = this;
            CKEDITOR.dialog.add("specialchar", this.path + "dialogs/specialchar.js");
            a.addCommand("specialchar", {
                exec: function() {
                    var b = a.langCode,
                    b = d.availableLangs[b] ? b: d.availableLangs[b.replace(/-.*/, "")] ? b.replace(/-.*/, "") : "en";
                    CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(d.path + "dialogs/lang/" + b + ".js"),
                    function() {
                        CKEDITOR.tools.extend(a.lang.specialchar, d.langEntries[b]);
                        a.openDialog("specialchar")
                    })
                },
                modes: {
                    wysiwyg: 1
                },
                canUndo: !1
            });
            a.ui.addButton && a.ui.addButton("SpecialChar", {
                label: a.lang.specialchar.toolbar,
                command: "specialchar",
                toolbar: "insert,50"
            })
        }
    }), CKEDITOR.config.specialChars = "! &quot; # $ % &amp; ' ( ) * + - . / 0 1 2 3 4 5 6 7 8 9 : ; &lt; = &gt; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ &euro; &lsquo; &rsquo; &ldquo; &rdquo; &ndash; &mdash; &iexcl; &cent; &pound; &curren; &yen; &brvbar; &sect; &uml; &copy; &ordf; &laquo; &not; &reg; &macr; &deg; &sup2; &sup3; &acute; &micro; &para; &middot; &cedil; &sup1; &ordm; &raquo; &frac14; &frac12; &frac34; &iquest; &Agrave; &Aacute; &Acirc; &Atilde; &Auml; &Aring; &AElig; &Ccedil; &Egrave; &Eacute; &Ecirc; &Euml; &Igrave; &Iacute; &Icirc; &Iuml; &ETH; &Ntilde; &Ograve; &Oacute; &Ocirc; &Otilde; &Ouml; &times; &Oslash; &Ugrave; &Uacute; &Ucirc; &Uuml; &Yacute; &THORN; &szlig; &agrave; &aacute; &acirc; &atilde; &auml; &aring; &aelig; &ccedil; &egrave; &eacute; &ecirc; &euml; &igrave; &iacute; &icirc; &iuml; &eth; &ntilde; &ograve; &oacute; &ocirc; &otilde; &ouml; &divide; &oslash; &ugrave; &uacute; &ucirc; &uuml; &yacute; &thorn; &yuml; &OElig; &oelig; &#372; &#374 &#373 &#375; &sbquo; &#8219; &bdquo; &hellip; &trade; &#9658; &bull; &rarr; &rArr; &hArr; &diams; &asymp;".split(" "),
    function() {
        CKEDITOR.plugins.add("stylescombo", {
            requires: "richcombo",
            init: function(a) {
                var d = a.config,
                b = a.lang.stylescombo,
                c = {},
                e = [],
                g = [];
                a.on("stylesSet",
                function(b) {
                    if (b = b.data.styles) {
                        for (var k, h, l = 0,
                        n = b.length; l < n; l++)(k = b[l], a.blockless && k.element in CKEDITOR.dtd.$block || (h = k.name, k = new CKEDITOR.style(k), a.filter.customConfig && !a.filter.check(k))) || (k._name = h, k._.enterMode = d.enterMode, k._.weight = l + 1E3 * (k.type == CKEDITOR.STYLE_OBJECT ? 1 : k.type == CKEDITOR.STYLE_BLOCK ? 2 : 3), c[h] = k, e.push(k), g.push(k));
                        e.sort(function(a, b) {
                            return a._.weight - b._.weight
                        })
                    }
                });
                a.ui.addRichCombo("Styles", {
                    label: b.label,
                    title: b.panelTitle,
                    toolbar: "styles,10",
                    allowedContent: g,
                    panel: {
                        css: [CKEDITOR.skin.getPath("editor")].concat(d.contentsCss),
                        multiSelect: !0,
                        attributes: {
                            "aria-label": b.panelTitle
                        }
                    },
                    init: function() {
                        var a, c, d, g, n, p;
                        n = 0;
                        for (p = e.length; n < p; n++) a = e[n],
                        c = a._name,
                        g = a.type,
                        g != d && (this.startGroup(b["panelTitle" + g]), d = g),
                        this.add(c, a.type == CKEDITOR.STYLE_OBJECT ? c: a.buildPreview(), c);
                        this.commit()
                    },
                    onClick: function(b) {
                        a.focus();
                        a.fire("saveSnapshot");
                        b = c[b];
                        var d = a.elementPath();
                        a[b.checkActive(d) ? "removeStyle": "applyStyle"](b);
                        a.fire("saveSnapshot")
                    },
                    onRender: function() {
                        a.on("selectionChange",
                        function(a) {
                            var b = this.getValue();
                            a = a.data.path.elements;
                            for (var d = 0,
                            e = a.length,
                            g; d < e; d++) {
                                g = a[d];
                                for (var p in c) if (c[p].checkElementRemovable(g, !0)) {
                                    p != b && this.setValue(p);
                                    return
                                }
                            }
                            this.setValue("")
                        },
                        this)
                    },
                    onOpen: function() {
                        var d = a.getSelection().getSelectedElement(),
                        d = a.elementPath(d),
                        e = [0, 0, 0, 0];
                        this.showAll();
                        this.unmarkAll();
                        for (var g in c) {
                            var l = c[g],
                            n = l.type;
                            n != CKEDITOR.STYLE_BLOCK || d.isContextFor(l.element) ? (l.checkActive(d) ? this.mark(g) : n != CKEDITOR.STYLE_OBJECT || l.checkApplicable(d) || (this.hideItem(g), e[n]--), e[n]++) : this.hideItem(g)
                        }
                        e[CKEDITOR.STYLE_BLOCK] || this.hideGroup(b["panelTitle" + CKEDITOR.STYLE_BLOCK]);
                        e[CKEDITOR.STYLE_INLINE] || this.hideGroup(b["panelTitle" + CKEDITOR.STYLE_INLINE]);
                        e[CKEDITOR.STYLE_OBJECT] || this.hideGroup(b["panelTitle" + CKEDITOR.STYLE_OBJECT])
                    },
                    reset: function() {
                        c = {};
                        e = []
                    }
                })
            }
        })
    } (),
    function() {
        function a(a) {
            return {
                editorFocus: !1,
                canUndo: !1,
                modes: {
                    wysiwyg: 1
                },
                exec: function(b) {
                    if (b.editable().hasFocus) {
                        var c = b.getSelection(),
                        d;
                        if (d = (new CKEDITOR.dom.elementPath(c.getCommonAncestor(), c.root)).contains({
                            td: 1,
                            th: 1
                        },
                        1)) {
                            var c = b.createRange(),
                            h = CKEDITOR.tools.tryThese(function() {
                                var b = d.getParent().$.cells[d.$.cellIndex + (a ? -1 : 1)];
                                b.parentNode.parentNode;
                                return b
                            },
                            function() {
                                var b = d.getParent(),
                                b = b.getAscendant("table").$.rows[b.$.rowIndex + (a ? -1 : 1)];
                                return b.cells[a ? b.cells.length - 1 : 0]
                            });
                            if (h || a) if (h) h = new CKEDITOR.dom.element(h),
                            c.moveToElementEditStart(h),
                            c.checkStartOfBlock() && c.checkEndOfBlock() || c.selectNodeContents(h);
                            else return ! 0;
                            else {
                                for (var l = d.getAscendant("table").$, h = d.getParent().$.cells, l = new CKEDITOR.dom.element(l.insertRow( - 1), b.document), n = 0, p = h.length; n < p; n++) {
                                    var s = l.append((new CKEDITOR.dom.element(h[n], b.document)).clone(!1, !1)); ! CKEDITOR.env.ie && s.appendBogus()
                                }
                                c.moveToElementEditStart(l)
                            }
                            c.select(!0);
                            return ! 0
                        }
                    }
                    return ! 1
                }
            }
        }
        var d = {
            editorFocus: !1,
            modes: {
                wysiwyg: 1,
                source: 1
            }
        },
        b = {
            exec: function(a) {
                a.container.focusNext(!0, a.tabIndex)
            }
        },
        c = {
            exec: function(a) {
                a.container.focusPrevious(!0, a.tabIndex)
            }
        };
        CKEDITOR.plugins.add("tab", {
            init: function(e) {
                for (var g = !1 !== e.config.enableTabKeyTools,
                f = e.config.tabSpaces || 0,
                k = ""; f--;) k += "\u00a0";
                if (k) e.on("key",
                function(a) {
                    9 == a.data.keyCode && (e.insertHtml(k), a.cancel())
                });
                if (g) e.on("key",
                function(a) { (9 == a.data.keyCode && e.execCommand("selectNextCell") || a.data.keyCode == CKEDITOR.SHIFT + 9 && e.execCommand("selectPreviousCell")) && a.cancel()
                });
                e.addCommand("blur", CKEDITOR.tools.extend(b, d));
                e.addCommand("blurBack", CKEDITOR.tools.extend(c, d));
                e.addCommand("selectNextCell", a());
                e.addCommand("selectPreviousCell", a(!0))
            }
        })
    } (), CKEDITOR.dom.element.prototype.focusNext = function(a, d) {
        var b = void 0 === d ? this.getTabIndex() : d,
        c,
        e,
        g,
        f,
        k,
        h;
        if (0 >= b) for (k = this.getNextSourceNode(a, CKEDITOR.NODE_ELEMENT); k;) {
            if (k.isVisible() && 0 === k.getTabIndex()) {
                g = k;
                break
            }
            k = k.getNextSourceNode(!1, CKEDITOR.NODE_ELEMENT)
        } else for (k = this.getDocument().getBody().getFirst(); k = k.getNextSourceNode(!1, CKEDITOR.NODE_ELEMENT);) {
            if (!c) if (!e && k.equals(this)) {
                if (e = !0, a) {
                    if (! (k = k.getNextSourceNode(!0, CKEDITOR.NODE_ELEMENT))) break;
                    c = 1
                }
            } else e && !this.contains(k) && (c = 1);
            if (k.isVisible() && !(0 > (h = k.getTabIndex()))) {
                if (c && h == b) {
                    g = k;
                    break
                }
                h > b && (!g || !f || h < f) ? (g = k, f = h) : g || 0 !== h || (g = k, f = h)
            }
        }
        g && g.focus()
    },
    CKEDITOR.dom.element.prototype.focusPrevious = function(a, d) {
        for (var b = void 0 === d ? this.getTabIndex() : d, c, e, g, f = 0, k, h = this.getDocument().getBody().getLast(); h = h.getPreviousSourceNode(!1, CKEDITOR.NODE_ELEMENT);) {
            if (!c) if (!e && h.equals(this)) {
                if (e = !0, a) {
                    if (! (h = h.getPreviousSourceNode(!0, CKEDITOR.NODE_ELEMENT))) break;
                    c = 1
                }
            } else e && !this.contains(h) && (c = 1);
            if (h.isVisible() && !(0 > (k = h.getTabIndex()))) if (0 >= b) {
                if (c && 0 === k) {
                    g = h;
                    break
                }
                k > f && (g = h, f = k)
            } else {
                if (c && k == b) {
                    g = h;
                    break
                }
                k < b && (!g || k > f) && (g = h, f = k)
            }
        }
        g && g.focus()
    },
    CKEDITOR.plugins.add("table", {
        requires: "dialog",
        init: function(a) {
            function d(a) {
                return CKEDITOR.tools.extend(a || {},
                {
                    contextSensitive: 1,
                    refresh: function(a, b) {
                        this.setState(b.contains("table", 1) ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED)
                    }
                })
            }
            if (!a.blockless) {
                var b = a.lang.table;
                a.addCommand("table", new CKEDITOR.dialogCommand("table", {
                    context: "table",
                    allowedContent: "table{width,height}[align,border,cellpadding,cellspacing,summary];caption tbody thead tfoot;th td tr[scope];" + (a.plugins.dialogadvtab ? "table" + a.plugins.dialogadvtab.allowedContent() : ""),
                    requiredContent: "table",
                    contentTransformations: [["table{width}: sizeToStyle", "table[width]: sizeToAttribute"]]
                }));
                a.addCommand("tableProperties", new CKEDITOR.dialogCommand("tableProperties", d()));
                a.addCommand("tableDelete", d({
                    exec: function(a) {
                        var b = a.elementPath().contains("table", 1);
                        if (b) {
                            var d = b.getParent();
                            1 == d.getChildCount() && !d.is("body", "td", "th") && (b = d);
                            a = a.createRange();
                            a.moveToPosition(b, CKEDITOR.POSITION_BEFORE_START);
                            b.remove();
                            a.select()
                        }
                    }
                }));
                a.ui.addButton && a.ui.addButton("Table", {
                    label: b.toolbar,
                    command: "table",
                    toolbar: "insert,30"
                });
                CKEDITOR.dialog.add("table", this.path + "dialogs/table.js");
                CKEDITOR.dialog.add("tableProperties", this.path + "dialogs/table.js");
                a.addMenuItems && a.addMenuItems({
                    table: {
                        label: b.menu,
                        command: "tableProperties",
                        group: "table",
                        order: 5
                    },
                    tabledelete: {
                        label: b.deleteTable,
                        command: "tableDelete",
                        group: "table",
                        order: 1
                    }
                });
                a.on("doubleclick",
                function(a) {
                    a.data.element.is("table") && (a.data.dialog = "tableProperties")
                });
                a.contextMenu && a.contextMenu.addListener(function() {
                    return {
                        tabledelete: CKEDITOR.TRISTATE_OFF,
                        table: CKEDITOR.TRISTATE_OFF
                    }
                })
            }
        }
    }),
    function() {
        function a(a) {
            function b(a) {
                0 < c.length || a.type != CKEDITOR.NODE_ELEMENT || !s.test(a.getName()) || a.getCustomData("selected_cell") || (CKEDITOR.dom.element.setMarker(d, a, "selected_cell", !0), c.push(a))
            }
            a = a.getRanges();
            for (var c = [], d = {},
            e = 0; e < a.length; e++) {
                var f = a[e];
                if (f.collapsed) f = f.getCommonAncestor(),
                (f = f.getAscendant("td", !0) || f.getAscendant("th", !0)) && c.push(f);
                else {
                    var f = new CKEDITOR.dom.walker(f),
                    g;
                    for (f.guard = b; g = f.next();) g.type == CKEDITOR.NODE_ELEMENT && g.is(CKEDITOR.dtd.table) || !(g = g.getAscendant("td", !0) || g.getAscendant("th", !0)) || g.getCustomData("selected_cell") || (CKEDITOR.dom.element.setMarker(d, g, "selected_cell", !0), c.push(g))
                }
            }
            CKEDITOR.dom.element.clearAllMarkers(d);
            return c
        }
        function d(b, c) {
            for (var d = a(b), e = d[0], f = e.getAscendant("table"), e = e.getDocument(), g = d[0].getParent(), h = g.$.rowIndex, d = d[d.length - 1], k = d.getParent().$.rowIndex + d.$.rowSpan - 1, d = new CKEDITOR.dom.element(f.$.rows[k]), h = c ? h: k, g = c ? g: d, d = CKEDITOR.tools.buildTableMap(f), f = d[h], h = c ? d[h - 1] : d[h + 1], d = d[0].length, e = e.createElement("tr"), k = 0; f[k] && k < d; k++) {
                var l;
                1 < f[k].rowSpan && h && f[k] == h[k] ? (l = f[k], l.rowSpan += 1) : (l = (new CKEDITOR.dom.element(f[k])).clone(), l.removeAttribute("rowSpan"), !CKEDITOR.env.ie && l.appendBogus(), e.append(l), l = l.$);
                k += l.colSpan - 1
            }
            c ? e.insertBefore(g) : e.insertAfter(g)
        }
        function b(c) {
            if (c instanceof CKEDITOR.dom.selection) {
                var d = a(c),
                e = d[0].getAscendant("table"),
                f = CKEDITOR.tools.buildTableMap(e);
                c = d[0].getParent().$.rowIndex;
                for (var d = d[d.length - 1], g = d.getParent().$.rowIndex + d.$.rowSpan - 1, d = [], h = c; h <= g; h++) {
                    for (var k = f[h], l = new CKEDITOR.dom.element(e.$.rows[h]), n = 0; n < k.length; n++) {
                        var p = new CKEDITOR.dom.element(k[n]),
                        s = p.getParent().$.rowIndex;
                        1 == p.$.rowSpan ? p.remove() : (p.$.rowSpan -= 1, s == h && (s = f[h + 1], s[n - 1] ? p.insertAfter(new CKEDITOR.dom.element(s[n - 1])) : (new CKEDITOR.dom.element(e.$.rows[h + 1])).append(p, 1)));
                        n += p.$.colSpan - 1
                    }
                    d.push(l)
                }
                f = e.$.rows;
                e = new CKEDITOR.dom.element(f[g + 1] || (0 < c ? f[c - 1] : null) || e.$.parentNode);
                for (h = d.length; 0 <= h; h--) b(d[h]);
                return e
            }
            c instanceof CKEDITOR.dom.element && (e = c.getAscendant("table"), 1 == e.$.rows.length ? e.remove() : c.remove());
            return null
        }
        function c(a, b) {
            for (var c = b ? Infinity: 0, d = 0; d < a.length; d++) {
                var e;
                e = a[d];
                for (var f = b,
                g = e.getParent().$.cells, h = 0, k = 0; k < g.length; k++) {
                    var l = g[k],
                    h = h + (f ? 1 : l.colSpan);
                    if (l == e.$) break
                }
                e = h - 1;
                if (b ? e < c: e > c) c = e
            }
            return c
        }
        function e(b, d) {
            for (var e = a(b), f = e[0].getAscendant("table"), g = c(e, 1), e = c(e), g = d ? g: e, h = CKEDITOR.tools.buildTableMap(f), f = [], e = [], k = h.length, l = 0; l < k; l++) f.push(h[l][g]),
            e.push(d ? h[l][g - 1] : h[l][g + 1]);
            for (l = 0; l < k; l++) f[l] && (1 < f[l].colSpan && e[l] == f[l] ? (g = f[l], g.colSpan += 1) : (g = (new CKEDITOR.dom.element(f[l])).clone(), g.removeAttribute("colSpan"), !CKEDITOR.env.ie && g.appendBogus(), g[d ? "insertBefore": "insertAfter"].call(g, new CKEDITOR.dom.element(f[l])), g = g.$), l += g.rowSpan - 1)
        }
        function g(a, b) {
            var c = a.getStartElement();
            if (c = c.getAscendant("td", 1) || c.getAscendant("th", 1)) {
                var d = c.clone();
                CKEDITOR.env.ie || d.appendBogus();
                b ? d.insertBefore(c) : d.insertAfter(c)
            }
        }
        function f(b) {
            if (b instanceof CKEDITOR.dom.selection) {
                b = a(b);
                var c = b[0] && b[0].getAscendant("table"),
                d;
                a: {
                    var e = 0;
                    d = b.length - 1;
                    for (var g = {},
                    h, l; h = b[e++];) CKEDITOR.dom.element.setMarker(g, h, "delete_cell", !0);
                    for (e = 0; h = b[e++];) if ((l = h.getPrevious()) && !l.getCustomData("delete_cell") || (l = h.getNext()) && !l.getCustomData("delete_cell")) {
                        CKEDITOR.dom.element.clearAllMarkers(g);
                        d = l;
                        break a
                    }
                    CKEDITOR.dom.element.clearAllMarkers(g);
                    l = b[0].getParent(); (l = l.getPrevious()) ? d = l.getLast() : (l = b[d].getParent(), d = (l = l.getNext()) ? l.getChild(0) : null)
                }
                for (l = b.length - 1; 0 <= l; l--) f(b[l]);
                d ? k(d, !0) : c && c.remove()
            } else b instanceof CKEDITOR.dom.element && (c = b.getParent(), 1 == c.getChildCount() ? c.remove() : b.remove())
        }
        function k(a, b) {
            var c = new CKEDITOR.dom.range(a.getDocument());
            c["moveToElementEdit" + (b ? "End": "Start")](a) || (c.selectNodeContents(a), c.collapse(b ? !1 : !0));
            c.select(!0)
        }
        function h(a, b, c) {
            a = a[b];
            if ("undefined" == typeof c) return a;
            for (b = 0; a && b < a.length; b++) {
                if (c.is && a[b] == c.$) return b;
                if (b == c) return new CKEDITOR.dom.element(a[b])
            }
            return c.is ? -1 : null
        }
        function l(b, c, d) {
            var e = a(b),
            f;
            if ((c ? 1 != e.length: 2 > e.length) || (f = b.getCommonAncestor()) && f.type == CKEDITOR.NODE_ELEMENT && f.is("table")) return ! 1;
            var g;
            b = e[0];
            f = b.getAscendant("table");
            var k = CKEDITOR.tools.buildTableMap(f),
            l = k.length,
            n = k[0].length,
            p = b.getParent().$.rowIndex,
            s = h(k, p, b);
            if (c) {
                var D;
                try {
                    var I = parseInt(b.getAttribute("rowspan"), 10) || 1;
                    g = parseInt(b.getAttribute("colspan"), 10) || 1;
                    D = k["up" == c ? p - I: "down" == c ? p + I: p]["left" == c ? s - g: "right" == c ? s + g: s]
                } catch(C) {
                    return ! 1
                }
                if (!D || b.$ == D) return ! 1;
                e["up" == c || "left" == c ? "unshift": "push"](new CKEDITOR.dom.element(D))
            }
            c = b.getDocument();
            var F = p,
            I = D = 0,
            J = !d && new CKEDITOR.dom.documentFragment(c),
            m = 0;
            for (c = 0; c < e.length; c++) {
                g = e[c];
                var L = g.getParent(),
                K = g.getFirst(),
                O = g.$.colSpan,
                P = g.$.rowSpan,
                L = L.$.rowIndex,
                M = h(k, L, g),
                m = m + O * P,
                I = Math.max(I, M - s + O);
                D = Math.max(D, L - p + P);
                d || (O = g, (P = O.getBogus()) && P.remove(), O.trim(), g.getChildren().count() && (L == F || !K || K.isBlockBoundary && K.isBlockBoundary({
                    br: 1
                }) || !(F = J.getLast(CKEDITOR.dom.walker.whitespaces(!0))) || F.is && F.is("br") || J.append("br"), g.moveChildren(J)), c ? g.remove() : g.setHtml(""));
                F = L
            }
            if (d) return D * I == m;
            J.moveChildren(b);
            CKEDITOR.env.ie || b.appendBogus();
            I >= n ? b.removeAttribute("rowSpan") : b.$.rowSpan = D;
            D >= l ? b.removeAttribute("colSpan") : b.$.colSpan = I;
            d = new CKEDITOR.dom.nodeList(f.$.rows);
            e = d.count();
            for (c = e - 1; 0 <= c; c--) f = d.getItem(c),
            f.$.cells.length || (f.remove(), e++);
            return b
        }
        function n(b, c) {
            var d = a(b);
            if (1 < d.length) return ! 1;
            if (c) return ! 0;
            var d = d[0],
            e = d.getParent(),
            f = e.getAscendant("table"),
            g = CKEDITOR.tools.buildTableMap(f),
            k = e.$.rowIndex,
            l = h(g, k, d),
            n = d.$.rowSpan,
            p;
            if (1 < n) {
                p = Math.ceil(n / 2);
                for (var n = Math.floor(n / 2), e = k + p, f = new CKEDITOR.dom.element(f.$.rows[e]), g = h(g, e), s, e = d.clone(), k = 0; k < g.length; k++) if (s = g[k], s.parentNode == f.$ && k > l) {
                    e.insertBefore(new CKEDITOR.dom.element(s));
                    break
                } else s = null;
                s || f.append(e, !0)
            } else for (n = p = 1, f = e.clone(), f.insertAfter(e), f.append(e = d.clone()), s = h(g, k), l = 0; l < s.length; l++) s[l].rowSpan++;
            CKEDITOR.env.ie || e.appendBogus();
            d.$.rowSpan = p;
            e.$.rowSpan = n;
            1 == p && d.removeAttribute("rowSpan");
            1 == n && e.removeAttribute("rowSpan");
            return e
        }
        function p(b, c) {
            var d = a(b);
            if (1 < d.length) return ! 1;
            if (c) return ! 0;
            var d = d[0],
            e = d.getParent(),
            f = e.getAscendant("table"),
            f = CKEDITOR.tools.buildTableMap(f),
            g = h(f, e.$.rowIndex, d),
            k = d.$.colSpan;
            if (1 < k) e = Math.ceil(k / 2),
            k = Math.floor(k / 2);
            else {
                for (var k = e = 1,
                l = [], n = 0; n < f.length; n++) {
                    var p = f[n];
                    l.push(p[g]);
                    1 < p[g].rowSpan && (n += p[g].rowSpan - 1)
                }
                for (f = 0; f < l.length; f++) l[f].colSpan++
            }
            f = d.clone();
            f.insertAfter(d);
            CKEDITOR.env.ie || f.appendBogus();
            d.$.colSpan = e;
            f.$.colSpan = k;
            1 == e && d.removeAttribute("colSpan");
            1 == k && f.removeAttribute("colSpan");
            return f
        }
        var s = /^(?:td|th)$/;
        CKEDITOR.plugins.tabletools = {
            requires: "table,dialog,contextmenu",
            init: function(c) {
                function h(a) {
                    return CKEDITOR.tools.extend(a || {},
                    {
                        contextSensitive: 1,
                        refresh: function(a, b) {
                            this.setState(b.contains({
                                td: 1,
                                th: 1
                            },
                            1) ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED)
                        }
                    })
                }
                function s(a, b) {
                    var d = c.addCommand(a, b);
                    c.addFeature(d)
                }
                var u = c.lang.table;
                s("cellProperties", new CKEDITOR.dialogCommand("cellProperties", h({
                    allowedContent: "td th{width,height,border-color,background-color,white-space,vertical-align,text-align}[colspan,rowspan]",
                    requiredContent: "table"
                })));
                CKEDITOR.dialog.add("cellProperties", this.path + "dialogs/tableCell.js");
                s("rowDelete", h({
                    requiredContent: "table",
                    exec: function(a) {
                        a = a.getSelection();
                        k(b(a))
                    }
                }));
                s("rowInsertBefore", h({
                    requiredContent: "table",
                    exec: function(a) {
                        a = a.getSelection();
                        d(a, !0)
                    }
                }));
                s("rowInsertAfter", h({
                    requiredContent: "table",
                    exec: function(a) {
                        a = a.getSelection();
                        d(a)
                    }
                }));
                s("columnDelete", h({
                    requiredContent: "table",
                    exec: function(b) {
                        b = b.getSelection();
                        b = a(b);
                        var c = b[0],
                        d = b[b.length - 1];
                        b = c.getAscendant("table");
                        for (var e = CKEDITOR.tools.buildTableMap(b), f, g, h = [], l = 0, n = e.length; l < n; l++) for (var q = 0,
                        p = e[l].length; q < p; q++) e[l][q] == c.$ && (f = q),
                        e[l][q] == d.$ && (g = q);
                        for (l = f; l <= g; l++) for (q = 0; q < e.length; q++) d = e[q],
                        c = new CKEDITOR.dom.element(b.$.rows[q]),
                        d = new CKEDITOR.dom.element(d[l]),
                        d.$ && (1 == d.$.colSpan ? d.remove() : d.$.colSpan -= 1, q += d.$.rowSpan - 1, c.$.cells.length || h.push(c));
                        g = b.$.rows[0] && b.$.rows[0].cells;
                        f = new CKEDITOR.dom.element(g[f] || (f ? g[f - 1] : b.$.parentNode));
                        h.length == n && b.remove();
                        f && k(f, !0)
                    }
                }));
                s("columnInsertBefore", h({
                    requiredContent: "table",
                    exec: function(a) {
                        a = a.getSelection();
                        e(a, !0)
                    }
                }));
                s("columnInsertAfter", h({
                    requiredContent: "table",
                    exec: function(a) {
                        a = a.getSelection();
                        e(a)
                    }
                }));
                s("cellDelete", h({
                    requiredContent: "table",
                    exec: function(a) {
                        a = a.getSelection();
                        f(a)
                    }
                }));
                s("cellMerge", h({
                    allowedContent: "td[colspan,rowspan]",
                    requiredContent: "td[colspan,rowspan]",
                    exec: function(a) {
                        k(l(a.getSelection()), !0)
                    }
                }));
                s("cellMergeRight", h({
                    allowedContent: "td[colspan]",
                    requiredContent: "td[colspan]",
                    exec: function(a) {
                        k(l(a.getSelection(), "right"), !0)
                    }
                }));
                s("cellMergeDown", h({
                    allowedContent: "td[rowspan]",
                    requiredContent: "td[rowspan]",
                    exec: function(a) {
                        k(l(a.getSelection(), "down"), !0)
                    }
                }));
                s("cellVerticalSplit", h({
                    allowedContent: "td[rowspan]",
                    requiredContent: "td[rowspan]",
                    exec: function(a) {
                        k(n(a.getSelection()))
                    }
                }));
                s("cellHorizontalSplit", h({
                    allowedContent: "td[colspan]",
                    requiredContent: "td[colspan]",
                    exec: function(a) {
                        k(p(a.getSelection()))
                    }
                }));
                s("cellInsertBefore", h({
                    requiredContent: "table",
                    exec: function(a) {
                        a = a.getSelection();
                        g(a, !0)
                    }
                }));
                s("cellInsertAfter", h({
                    requiredContent: "table",
                    exec: function(a) {
                        a = a.getSelection();
                        g(a)
                    }
                }));
                c.addMenuItems && c.addMenuItems({
                    tablecell: {
                        label: u.cell.menu,
                        group: "tablecell",
                        order: 1,
                        getItems: function() {
                            var b = c.getSelection(),
                            d = a(b);
                            return {
                                tablecell_insertBefore: CKEDITOR.TRISTATE_OFF,
                                tablecell_insertAfter: CKEDITOR.TRISTATE_OFF,
                                tablecell_delete: CKEDITOR.TRISTATE_OFF,
                                tablecell_merge: l(b, null, !0) ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                                tablecell_merge_right: l(b, "right", !0) ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                                tablecell_merge_down: l(b, "down", !0) ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                                tablecell_split_vertical: n(b, !0) ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                                tablecell_split_horizontal: p(b, !0) ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED,
                                tablecell_properties: 0 < d.length ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED
                            }
                        }
                    },
                    tablecell_insertBefore: {
                        label: u.cell.insertBefore,
                        group: "tablecell",
                        command: "cellInsertBefore",
                        order: 5
                    },
                    tablecell_insertAfter: {
                        label: u.cell.insertAfter,
                        group: "tablecell",
                        command: "cellInsertAfter",
                        order: 10
                    },
                    tablecell_delete: {
                        label: u.cell.deleteCell,
                        group: "tablecell",
                        command: "cellDelete",
                        order: 15
                    },
                    tablecell_merge: {
                        label: u.cell.merge,
                        group: "tablecell",
                        command: "cellMerge",
                        order: 16
                    },
                    tablecell_merge_right: {
                        label: u.cell.mergeRight,
                        group: "tablecell",
                        command: "cellMergeRight",
                        order: 17
                    },
                    tablecell_merge_down: {
                        label: u.cell.mergeDown,
                        group: "tablecell",
                        command: "cellMergeDown",
                        order: 18
                    },
                    tablecell_split_horizontal: {
                        label: u.cell.splitHorizontal,
                        group: "tablecell",
                        command: "cellHorizontalSplit",
                        order: 19
                    },
                    tablecell_split_vertical: {
                        label: u.cell.splitVertical,
                        group: "tablecell",
                        command: "cellVerticalSplit",
                        order: 20
                    },
                    tablecell_properties: {
                        label: u.cell.title,
                        group: "tablecellproperties",
                        command: "cellProperties",
                        order: 21
                    },
                    tablerow: {
                        label: u.row.menu,
                        group: "tablerow",
                        order: 1,
                        getItems: function() {
                            return {
                                tablerow_insertBefore: CKEDITOR.TRISTATE_OFF,
                                tablerow_insertAfter: CKEDITOR.TRISTATE_OFF,
                                tablerow_delete: CKEDITOR.TRISTATE_OFF
                            }
                        }
                    },
                    tablerow_insertBefore: {
                        label: u.row.insertBefore,
                        group: "tablerow",
                        command: "rowInsertBefore",
                        order: 5
                    },
                    tablerow_insertAfter: {
                        label: u.row.insertAfter,
                        group: "tablerow",
                        command: "rowInsertAfter",
                        order: 10
                    },
                    tablerow_delete: {
                        label: u.row.deleteRow,
                        group: "tablerow",
                        command: "rowDelete",
                        order: 15
                    },
                    tablecolumn: {
                        label: u.column.menu,
                        group: "tablecolumn",
                        order: 1,
                        getItems: function() {
                            return {
                                tablecolumn_insertBefore: CKEDITOR.TRISTATE_OFF,
                                tablecolumn_insertAfter: CKEDITOR.TRISTATE_OFF,
                                tablecolumn_delete: CKEDITOR.TRISTATE_OFF
                            }
                        }
                    },
                    tablecolumn_insertBefore: {
                        label: u.column.insertBefore,
                        group: "tablecolumn",
                        command: "columnInsertBefore",
                        order: 5
                    },
                    tablecolumn_insertAfter: {
                        label: u.column.insertAfter,
                        group: "tablecolumn",
                        command: "columnInsertAfter",
                        order: 10
                    },
                    tablecolumn_delete: {
                        label: u.column.deleteColumn,
                        group: "tablecolumn",
                        command: "columnDelete",
                        order: 15
                    }
                });
                c.contextMenu && c.contextMenu.addListener(function(a, b, c) {
                    return (a = c.contains({
                        td: 1,
                        th: 1
                    },
                    1)) && !a.isReadOnly() ? {
                        tablecell: CKEDITOR.TRISTATE_OFF,
                        tablerow: CKEDITOR.TRISTATE_OFF,
                        tablecolumn: CKEDITOR.TRISTATE_OFF
                    }: null
                })
            },
            getSelectedCells: a
        };
        CKEDITOR.plugins.add("tabletools", CKEDITOR.plugins.tabletools)
    } (), CKEDITOR.tools.buildTableMap = function(a) {
        a = a.$.rows;
        for (var d = -1,
        b = [], c = 0; c < a.length; c++) {
            d++; ! b[d] && (b[d] = []);
            for (var e = -1,
            g = 0; g < a[c].cells.length; g++) {
                var f = a[c].cells[g];
                for (e++; b[d][e];) e++;
                for (var k = isNaN(f.colSpan) ? 1 : f.colSpan, f = isNaN(f.rowSpan) ? 1 : f.rowSpan, h = 0; h < f; h++) {
                    b[d + h] || (b[d + h] = []);
                    for (var l = 0; l < k; l++) b[d + h][e + l] = a[c].cells[g]
                }
                e += k - 1
            }
        }
        return b
    },
    function() {
        CKEDITOR.plugins.add("templates", {
            requires: "dialog",
            init: function(a) {
                CKEDITOR.dialog.add("templates", CKEDITOR.getUrl(this.path + "dialogs/templates.js"));
                a.addCommand("templates", new CKEDITOR.dialogCommand("templates"));
                a.ui.addButton && a.ui.addButton("Templates", {
                    label: a.lang.templates.button,
                    command: "templates",
                    toolbar: "doctools,10"
                })
            }
        });
        var a = {},
        d = {};
        CKEDITOR.addTemplates = function(b, c) {
            a[b] = c
        };
        CKEDITOR.getTemplates = function(b) {
            return a[b]
        };
        CKEDITOR.loadTemplates = function(a, c) {
            for (var e = [], g = 0, f = a.length; g < f; g++) d[a[g]] || (e.push(a[g]), d[a[g]] = 1);
            e.length ? CKEDITOR.scriptLoader.load(e, c) : setTimeout(c, 0)
        }
    } (), CKEDITOR.config.templates_files = [CKEDITOR.getUrl("plugins/templates/templates/default.js")], CKEDITOR.config.templates_replaceContent = !0,
    function() {
        function a(a) {
            function b() {
                for (var g = c(), h = CKEDITOR.tools.clone(a.config.toolbarGroups) || d(a), l = 0; l < h.length; l++) {
                    var n = h[l];
                    if ("/" != n) {
                        "string" == typeof n && (n = h[l] = {
                            name: n
                        });
                        var t, u = n.groups;
                        if (u) for (var w = 0; w < u.length; w++) t = u[w],
                        (t = g[t]) && k(n, t); (t = g[n.name]) && k(n, t)
                    }
                }
                return h
            }
            function c() {
                var b = {},
                d, f, g;
                for (d in a.ui.items) f = a.ui.items[d],
                g = f.toolbar || "others",
                g = g.split(","),
                f = g[0],
                g = parseInt(g[1] || -1, 10),
                b[f] || (b[f] = []),
                b[f].push({
                    name: d,
                    order: g
                });
                for (f in b) b[f] = b[f].sort(function(a, b) {
                    return a.order == b.order ? 0 : 0 > b.order ? -1 : 0 > a.order ? 1 : a.order < b.order ? -1 : 1
                });
                return b
            }
            function k(b, c) {
                if (c.length) {
                    b.items ? b.items.push(a.ui.create("-")) : b.items = [];
                    for (var d; d = c.shift();) d = "string" == typeof d ? d: d.name,
                    l && -1 != CKEDITOR.tools.indexOf(l, d) || (d = a.ui.create(d)) && a.addFeature(d) && b.items.push(d)
                }
            }
            function h(a) {
                var b = [],
                c,
                d,
                e;
                for (c = 0; c < a.length; ++c) d = a[c],
                e = {},
                "/" == d ? b.push(d) : CKEDITOR.tools.isArray(d) ? (k(e, CKEDITOR.tools.clone(d)), b.push(e)) : d.items && (k(e, CKEDITOR.tools.clone(d.items)), e.name = d.name, b.push(e));
                return b
            }
            var l = a.config.removeButtons,
            l = l && l.split(","),
            n = a.config.toolbar;
            "string" == typeof n && (n = a.config["toolbar_" + n]);
            return a.toolbar = n ? h(n) : b()
        }
        function d(a) {
            return a._.toolbarGroups || (a._.toolbarGroups = [{
                name: "document",
                groups: ["mode", "document", "doctools"]
            },
            {
                name: "clipboard",
                groups: ["clipboard", "undo"]
            },
            {
                name: "editing",
                groups: ["find", "selection", "spellchecker"]
            },
            {
                name: "forms"
            },
            "/", {
                name: "basicstyles",
                groups: ["basicstyles", "cleanup"]
            },
            {
                name: "paragraph",
                groups: ["list", "indent", "blocks", "align"]
            },
            {
                name: "links"
            },
            {
                name: "insert"
            },
            "/", {
                name: "styles"
            },
            {
                name: "colors"
            },
            {
                name: "tools"
            },
            {
                name: "others"
            },
            {
                name: "about"
            }])
        }
        var b = function() {
            this.toolbars = [];
            this.focusCommandExecuted = !1
        };
        b.prototype.focus = function() {
            for (var a = 0,
            b; b = this.toolbars[a++];) for (var c = 0,
            d; d = b.items[c++];) if (d.focus) {
                d.focus();
                return
            }
        };
        var c = {
            modes: {
                wysiwyg: 1,
                source: 1
            },
            readOnly: 1,
            exec: function(a) {
                a.toolbox && (a.toolbox.focusCommandExecuted = !0, CKEDITOR.env.ie || CKEDITOR.env.air ? setTimeout(function() {
                    a.toolbox.focus()
                },
                100) : a.toolbox.focus())
            }
        };
        CKEDITOR.plugins.add("toolbar", {
            requires: "button",
            init: function(d) {
                var g, f = function(a, b) {
                    var c, n = "rtl" == d.lang.dir,
                    p = d.config.toolbarGroupCycling,
                    p = void 0 === p || p;
                    switch (b) {
                    case 9:
                    case CKEDITOR.SHIFT + 9 : for (; ! c || !c.items.length;) if (c = 9 == b ? (c ? c.next: a.toolbar.next) || d.toolbox.toolbars[0] : (c ? c.previous: a.toolbar.previous) || d.toolbox.toolbars[d.toolbox.toolbars.length - 1], c.items.length) for (a = c.items[g ? c.items.length - 1 : 0]; a && !a.focus;)(a = g ? a.previous: a.next) || (c = 0);
                        a && a.focus();
                        return ! 1;
                    case n ? 37 : 39 : case 40:
                        c = a;
                        do c = c.next,
                        !c && p && (c = a.toolbar.items[0]);
                        while (c && !c.focus);
                        c ? c.focus() : f(a, 9);
                        return ! 1;
                    case n ? 39 : 37 : case 38:
                        c = a;
                        do c = c.previous,
                        !c && p && (c = a.toolbar.items[a.toolbar.items.length - 1]);
                        while (c && !c.focus);
                        c ? c.focus() : (g = 1, f(a, CKEDITOR.SHIFT + 9), g = 0);
                        return ! 1;
                    case 27:
                        return d.focus(),
                        !1;
                    case 13:
                    case 32:
                        return a.execute(),
                        !1
                    }
                    return ! 0
                };
                d.on("uiSpace",
                function(c) {
                    if (c.data.space == d.config.toolbarLocation) {
                        c.removeListener();
                        d.toolbox = new b;
                        var g = CKEDITOR.tools.getNextId(),
                        l = ['<span id="', g, '" class="cke_voice_label">', d.lang.toolbar.toolbars, "</span>", '<span id="' + d.ui.spaceId("toolbox") + '" class="cke_toolbox" role="group" aria-labelledby="', g, '" onmousedown="return false;">'],
                        g = !1 !== d.config.toolbarStartupExpanded,
                        n,
                        p;
                        d.config.toolbarCanCollapse && d.elementMode != CKEDITOR.ELEMENT_MODE_INLINE && l.push('<span class="cke_toolbox_main"' + (g ? ">": ' style="display:none">'));
                        for (var s = d.toolbox.toolbars,
                        r = a(d), q = 0; q < r.length; q++) {
                            var t, u = 0,
                            w, v = r[q],
                            A;
                            if (v) if (n && (l.push("</span>"), p = n = 0), "/" === v) l.push('<span class="cke_toolbar_break"></span>');
                            else {
                                A = v.items || v;
                                for (var E = 0; E < A.length; E++) {
                                    var z = A[E],
                                    B;
                                    if (z) if (z.type == CKEDITOR.UI_SEPARATOR) p = n && z;
                                    else {
                                        B = !1 !== z.canGroup;
                                        if (!u) {
                                            t = CKEDITOR.tools.getNextId();
                                            u = {
                                                id: t,
                                                items: []
                                            };
                                            w = v.name && (d.lang.toolbar.toolbarGroups[v.name] || v.name);
                                            l.push('<span id="', t, '" class="cke_toolbar"', w ? ' aria-labelledby="' + t + '_label"': "", ' role="toolbar">');
                                            w && l.push('<span id="', t, '_label" class="cke_voice_label">', w, "</span>");
                                            l.push('<span class="cke_toolbar_start"></span>');
                                            var x = s.push(u) - 1;
                                            0 < x && (u.previous = s[x - 1], u.previous.next = u)
                                        }
                                        B ? n || (l.push('<span class="cke_toolgroup" role="presentation">'), n = 1) : n && (l.push("</span>"), n = 0);
                                        t = function(a) {
                                            a = a.render(d, l);
                                            x = u.items.push(a) - 1;
                                            0 < x && (a.previous = u.items[x - 1], a.previous.next = a);
                                            a.toolbar = u;
                                            a.onkey = f;
                                            a.onfocus = function() {
                                                d.toolbox.focusCommandExecuted || d.focus()
                                            }
                                        };
                                        p && (t(p), p = 0);
                                        t(z)
                                    }
                                }
                                n && (l.push("</span>"), p = n = 0);
                                u && l.push('<span class="cke_toolbar_end"></span></span>')
                            }
                        }
                        d.config.toolbarCanCollapse && l.push("</span>");
                        if (d.config.toolbarCanCollapse && d.elementMode != CKEDITOR.ELEMENT_MODE_INLINE) {
                            var D = CKEDITOR.tools.addFunction(function() {
                                d.execCommand("toolbarCollapse")
                            });
                            d.on("destroy",
                            function() {
                                CKEDITOR.tools.removeFunction(D)
                            });
                            d.addCommand("toolbarCollapse", {
                                readOnly: 1,
                                exec: function(a) {
                                    var b = a.ui.space("toolbar_collapser"),
                                    c = b.getPrevious(),
                                    d = a.ui.space("contents"),
                                    e = c.getParent(),
                                    f = parseInt(d.$.style.height, 10),
                                    g = e.$.offsetHeight,
                                    h = b.hasClass("cke_toolbox_collapser_min");
                                    h ? (c.show(), b.removeClass("cke_toolbox_collapser_min"), b.setAttribute("title", a.lang.toolbar.toolbarCollapse)) : (c.hide(), b.addClass("cke_toolbox_collapser_min"), b.setAttribute("title", a.lang.toolbar.toolbarExpand));
                                    b.getFirst().setText(h ? "\u25b2": "\u25c0");
                                    d.setStyle("height", f - (e.$.offsetHeight - g) + "px");
                                    a.fire("resize")
                                },
                                modes: {
                                    wysiwyg: 1,
                                    source: 1
                                }
                            });
                            d.setKeystroke(CKEDITOR.ALT + (CKEDITOR.env.ie || CKEDITOR.env.webkit ? 189 : 109), "toolbarCollapse");
                            l.push('<a title="' + (g ? d.lang.toolbar.toolbarCollapse: d.lang.toolbar.toolbarExpand) + '" id="' + d.ui.spaceId("toolbar_collapser") + '" tabIndex="-1" class="cke_toolbox_collapser');
                            g || l.push(" cke_toolbox_collapser_min");
                            l.push('" onclick="CKEDITOR.tools.callFunction(' + D + ')">', '<span class="cke_arrow">&#9650;</span>', "</a>")
                        }
                        l.push("</span>");
                        c.data.html += l.join("")
                    }
                });
                d.on("destroy",
                function() {
                    if (this.toolbox) {
                        var a, b = 0,
                        c, d, e;
                        for (a = this.toolbox.toolbars; b < a.length; b++) for (d = a[b].items, c = 0; c < d.length; c++) e = d[c],
                        e.clickFn && CKEDITOR.tools.removeFunction(e.clickFn),
                        e.keyDownFn && CKEDITOR.tools.removeFunction(e.keyDownFn)
                    }
                });
                d.on("uiReady",
                function() {
                    var a = d.ui.space("toolbox");
                    a && d.focusManager.add(a, 1)
                });
                d.addCommand("toolbarFocus", c);
                d.setKeystroke(CKEDITOR.ALT + 121, "toolbarFocus");
                d.ui.add("-", CKEDITOR.UI_SEPARATOR, {});
                d.ui.addHandler(CKEDITOR.UI_SEPARATOR, {
                    create: function() {
                        return {
                            render: function(a, b) {
                                b.push('<span class="cke_toolbar_separator" role="separator"></span>');
                                return {}
                            }
                        }
                    }
                })
            }
        });
        CKEDITOR.ui.prototype.addToolbarGroup = function(a, b, c) {
            var k = d(this.editor),
            h = 0 === b,
            l = {
                name: a
            };
            if (c) {
                if (c = CKEDITOR.tools.search(k,
                function(a) {
                    return a.name == c
                })) { ! c.groups && (c.groups = []);
                    if (b && (b = CKEDITOR.tools.indexOf(c.groups, b), 0 <= b)) {
                        c.groups.splice(b + 1, 0, a);
                        return
                    }
                    h ? c.groups.splice(0, 0, a) : c.groups.push(a);
                    return
                }
                b = null
            }
            b && (b = CKEDITOR.tools.indexOf(k,
            function(a) {
                return a.name == b
            }));
            h ? k.splice(0, 0, a) : "number" == typeof b ? k.splice(b + 1, 0, l) : k.push(a)
        }
    } (), CKEDITOR.UI_SEPARATOR = "separator", CKEDITOR.config.toolbarLocation = "top",
    function() {
        function a(a) {
            this.editor = a;
            this.reset()
        }
        CKEDITOR.plugins.add("undo", {
            init: function(b) {
                function d(a) {
                    f.enabled && !1 !== a.data.command.canUndo && f.save()
                }
                function g() {
                    f.enabled = b.readOnly ? !1 : "wysiwyg" == b.mode;
                    f.onChange()
                }
                var f = new a(b),
                k = b.addCommand("undo", {
                    exec: function() {
                        f.undo() && (b.selectionChange(), this.fire("afterUndo"))
                    },
                    state: CKEDITOR.TRISTATE_DISABLED,
                    canUndo: !1
                }),
                h = b.addCommand("redo", {
                    exec: function() {
                        f.redo() && (b.selectionChange(), this.fire("afterRedo"))
                    },
                    state: CKEDITOR.TRISTATE_DISABLED,
                    canUndo: !1
                });
                b.setKeystroke([[CKEDITOR.CTRL + 90, "undo"], [CKEDITOR.CTRL + 89, "redo"], [CKEDITOR.CTRL + CKEDITOR.SHIFT + 90, "redo"]]);
                f.onChange = function() {
                    k.setState(f.undoable() ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED);
                    h.setState(f.redoable() ? CKEDITOR.TRISTATE_OFF: CKEDITOR.TRISTATE_DISABLED)
                };
                b.on("beforeCommandExec", d);
                b.on("afterCommandExec", d);
                b.on("saveSnapshot",
                function(a) {
                    f.save(a.data && a.data.contentOnly)
                });
                b.on("contentDom",
                function() {
                    b.editable().on("keydown",
                    function(a) {
                        a = a.data.getKey();
                        8 != a && 46 != a || f.type(a, 0)
                    });
                    b.editable().on("keypress",
                    function(a) {
                        f.type(a.data.getKey(), 1)
                    })
                });
                b.on("beforeModeUnload",
                function() {
                    "wysiwyg" == b.mode && f.save(!0)
                });
                b.on("mode", g);
                b.on("readOnly", g);
                b.ui.addButton && (b.ui.addButton("Undo", {
                    label: b.lang.undo.undo,
                    command: "undo",
                    toolbar: "undo,10"
                }), b.ui.addButton("Redo", {
                    label: b.lang.undo.redo,
                    command: "redo",
                    toolbar: "undo,20"
                }));
                b.resetUndo = function() {
                    f.reset();
                    b.fire("saveSnapshot")
                };
                b.on("updateSnapshot",
                function() {
                    f.currentImage && f.update()
                });
                b.on("lockSnapshot", f.lock, f);
                b.on("unlockSnapshot", f.unlock, f)
            }
        });
        CKEDITOR.plugins.undo = {};
        var d = CKEDITOR.plugins.undo.Image = function(a) {
            this.editor = a;
            a.fire("beforeUndoImage");
            var b = a.getSnapshot(),
            d = b && a.getSelection();
            CKEDITOR.env.ie && b && (b = b.replace(/\s+data-cke-expando=".*?"/g, ""));
            this.contents = b;
            this.bookmarks = d && d.createBookmarks2(!0);
            a.fire("afterUndoImage")
        },
        b = /\b(?:href|src|name)="[^"]*?"/gi;
        d.prototype = {
            equalsContent: function(a) {
                var d = this.contents;
                a = a.contents;
                CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) && (d = d.replace(b, ""), a = a.replace(b, ""));
                return d != a ? !1 : !0
            },
            equalsSelection: function(a) {
                var b = this.bookmarks;
                a = a.bookmarks;
                if (b || a) {
                    if (!b || !a || b.length != a.length) return ! 1;
                    for (var d = 0; d < b.length; d++) {
                        var f = b[d],
                        k = a[d];
                        if (f.startOffset != k.startOffset || f.endOffset != k.endOffset || !CKEDITOR.tools.arrayCompare(f.start, k.start) || !CKEDITOR.tools.arrayCompare(f.end, k.end)) return ! 1
                    }
                }
                return ! 0
            }
        };
        a.prototype = {
            type: function(a, b) {
                var g = !b && a != this.lastKeystroke,
                f = this.editor;
                if (!this.typing || b && !this.wasCharacter || g) {
                    var k = new d(f),
                    h = this.snapshots.length;
                    CKEDITOR.tools.setTimeout(function() {
                        var a = f.getSnapshot();
                        CKEDITOR.env.ie && (a = a.replace(/\s+data-cke-expando=".*?"/g, ""));
                        k.contents != a && h == this.snapshots.length && (this.typing = !0, this.save(!1, k, !1) || this.snapshots.splice(this.index + 1, this.snapshots.length - this.index - 1), this.hasUndo = !0, this.hasRedo = !1, this.modifiersCount = this.typesCount = 1, this.onChange())
                    },
                    0, this)
                }
                this.lastKeystroke = a; (this.wasCharacter = b) ? (this.modifiersCount = 0, this.typesCount++, 25 < this.typesCount ? (this.save(!1, null, !1), this.typesCount = 1) : setTimeout(function() {
                    f.fire("change")
                },
                0)) : (this.typesCount = 0, this.modifiersCount++, 25 < this.modifiersCount ? (this.save(!1, null, !1), this.modifiersCount = 1) : setTimeout(function() {
                    f.fire("change")
                },
                0))
            },
            reset: function() {
                this.lastKeystroke = 0;
                this.snapshots = [];
                this.index = -1;
                this.limit = this.editor.config.undoStackSize || 20;
                this.currentImage = null;
                this.hasRedo = this.hasUndo = !1;
                this.locked = null;
                this.resetType()
            },
            resetType: function() {
                this.typing = !1;
                delete this.lastKeystroke;
                this.modifiersCount = this.typesCount = 0
            },
            fireChange: function() {
                this.hasUndo = !!this.getNextImage(!0);
                this.hasRedo = !!this.getNextImage(!1);
                this.resetType();
                this.onChange()
            },
            save: function(a, b, g) {
                if (this.locked) return ! 1;
                var f = this.snapshots;
                b || (b = new d(this.editor));
                if (!1 === b.contents) return ! 1;
                if (this.currentImage) if (b.equalsContent(this.currentImage)) {
                    if (a || b.equalsSelection(this.currentImage)) return ! 1
                } else this.editor.fire("change");
                f.splice(this.index + 1, f.length - this.index - 1);
                f.length == this.limit && f.shift();
                this.index = f.push(b) - 1;
                this.currentImage = b; ! 1 !== g && this.fireChange();
                return ! 0
            },
            restoreImage: function(a) {
                var b = this.editor,
                d;
                a.bookmarks && (b.focus(), d = b.getSelection());
                this.locked = 1;
                this.editor.loadSnapshot(a.contents);
                a.bookmarks ? d.selectBookmarks(a.bookmarks) : CKEDITOR.env.ie && (d = this.editor.document.getBody().$.createTextRange(), d.collapse(!0), d.select());
                this.locked = 0;
                this.index = a.index;
                this.update();
                this.fireChange();
                b.fire("change")
            },
            getNextImage: function(a) {
                var b = this.snapshots,
                d = this.currentImage,
                f;
                if (d) if (a) for (f = this.index - 1; 0 <= f; f--) {
                    if (a = b[f], !d.equalsContent(a)) return a.index = f,
                    a
                } else for (f = this.index + 1; f < b.length; f++) if (a = b[f], !d.equalsContent(a)) return a.index = f,
                a;
                return null
            },
            redoable: function() {
                return this.enabled && this.hasRedo
            },
            undoable: function() {
                return this.enabled && this.hasUndo
            },
            undo: function() {
                if (this.undoable()) {
                    this.save(!0);
                    var a = this.getNextImage(!0);
                    if (a) return this.restoreImage(a),
                    !0
                }
                return ! 1
            },
            redo: function() {
                if (this.redoable() && (this.save(!0), this.redoable())) {
                    var a = this.getNextImage(!1);
                    if (a) return this.restoreImage(a),
                    !0
                }
                return ! 1
            },
            update: function() {
                this.locked || this.snapshots.splice(this.index, 1, this.currentImage = new d(this.editor))
            },
            lock: function() {
                if (this.locked) this.locked.level++;
                else {
                    var a = new d(this.editor);
                    this.locked = {
                        update: this.currentImage && this.currentImage.equalsContent(a) ? a: null,
                        level: 1
                    }
                }
            },
            unlock: function() {
                if (this.locked && !--this.locked.level) {
                    var a = this.locked.update;
                    this.locked = null;
                    a && !a.equalsContent(new d(this.editor)) && this.update()
                }
            }
        }
    } (), CKEDITOR.config.wsc_removeGlobalVariable = !0, CKEDITOR.plugins.add("wsc", {
        requires: "dialog",
        parseApi: function(a) {
            a.config.wsc_onFinish = "function" === typeof a.config.wsc_onFinish ? a.config.wsc_onFinish: function() {};
            a.config.wsc_onClose = "function" === typeof a.config.wsc_onClose ? a.config.wsc_onClose: function() {}
        },
        parseConfig: function(a) {
            a.config.wsc_customerId = a.config.wsc_customerId || CKEDITOR.config.wsc_customerId || "1:ua3xw1-2XyGJ3-GWruD3-6OFNT1-oXcuB1-nR6Bp4-hgQHc-EcYng3-sdRXG3-NOfFk";
            a.config.wsc_customDictionaryIds = a.config.wsc_customDictionaryIds || CKEDITOR.config.wsc_customDictionaryIds || "";
            a.config.wsc_userDictionaryName = a.config.wsc_userDictionaryName || CKEDITOR.config.wsc_userDictionaryName || "";
            a.config.wsc_customLoaderScript = a.config.wsc_customLoaderScript || CKEDITOR.config.wsc_customLoaderScript;
            CKEDITOR.config.wsc_cmd = a.config.wsc_cmd || CKEDITOR.config.wsc_cmd || "spell";
            CKEDITOR.config.wsc_version = CKEDITOR.version + " | %Rev%"
        },
        init: function(a) {
            this.parseConfig(a);
            this.parseApi(a);
            a.addCommand("checkspell", new CKEDITOR.dialogCommand("checkspell")).modes = {
                wysiwyg: !CKEDITOR.env.opera && !CKEDITOR.env.air && document.domain == window.location.hostname
            };
            "undefined" == typeof a.plugins.scayt && a.ui.addButton && a.ui.addButton("SpellChecker", {
                label: a.lang.wsc.toolbar,
                command: "checkspell",
                toolbar: "spellchecker,10"
            });
            CKEDITOR.dialog.add("checkspell", this.path + (CKEDITOR.env.ie && 8 >= CKEDITOR.env.version ? "dialogs/wsc_ie.js": window.postMessage ? "dialogs/wsc.js": "dialogs/wsc_ie.js"))
        }
    }),
    function() {
        function a(a) {
            var b = this.editor,
            d = a.document,
            f = d.body; (a = d.getElementById("cke_actscrpt")) && a.parentNode.removeChild(a); (a = d.getElementById("cke_shimscrpt")) && a.parentNode.removeChild(a);
            CKEDITOR.env.gecko && (f.contentEditable = !1, 2E4 > CKEDITOR.env.version && (f.innerHTML = f.innerHTML.replace(/^.*<\!-- cke-content-start --\>/, ""), setTimeout(function() {
                var a = new CKEDITOR.dom.range(new CKEDITOR.dom.document(d));
                a.setStart(new CKEDITOR.dom.node(f), 0);
                b.getSelection().selectRanges([a])
            },
            0)));
            f.contentEditable = !0;
            CKEDITOR.env.ie && (f.hideFocus = !0, f.disabled = !0, f.removeAttribute("disabled"));
            delete this._.isLoadingData;
            this.$ = f;
            d = new CKEDITOR.dom.document(d);
            this.setup();
            CKEDITOR.env.ie && (d.getDocumentElement().addClass(d.$.compatMode), b.config.enterMode != CKEDITOR.ENTER_P && d.on("selectionchange",
            function() {
                var a = d.getBody(),
                c = b.getSelection(),
                f = c && c.getRanges()[0];
                f && a.getHtml().match(/^<p>&nbsp;<\/p>$/i) && f.startContainer.equals(a) && setTimeout(function() {
                    f = b.getSelection().getRanges()[0];
                    f.startContainer.equals("body") || (a.getFirst().remove(1), f.moveToElementEditEnd(a), f.select())
                },
                0)
            }));
            try {
                b.document.$.execCommand("2D-position", !1, !0)
            } catch(k) {}
            try {
                b.document.$.execCommand("enableInlineTableEditing", !1, !b.config.disableNativeTableHandles)
            } catch(h) {}
            if (b.config.disableObjectResizing) try {
                this.getDocument().$.execCommand("enableObjectResizing", !1, !1)
            } catch(l) {
                this.attachListener(this, CKEDITOR.env.ie ? "resizestart": "resize",
                function(a) {
                    a.data.preventDefault()
                })
            } (CKEDITOR.env.gecko || CKEDITOR.env.ie && "CSS1Compat" == b.document.$.compatMode) && this.attachListener(this, "keydown",
            function(a) {
                var c = a.data.getKeystroke();
                if (33 == c || 34 == c) if (CKEDITOR.env.ie) setTimeout(function() {
                    b.getSelection().scrollIntoView()
                },
                0);
                else if (b.window.$.innerHeight > this.$.offsetHeight) {
                    var d = b.createRange();
                    d[33 == c ? "moveToElementEditStart": "moveToElementEditEnd"](this);
                    d.select();
                    a.data.preventDefault()
                }
            });
            CKEDITOR.env.ie && this.attachListener(d, "blur",
            function() {
                try {
                    d.$.selection.empty()
                } catch(a) {}
            });
            b.document.getElementsByTag("title").getItem(0).data("cke-title", b.document.$.title);
            CKEDITOR.env.ie && (b.document.$.title = this._.docTitle);
            CKEDITOR.tools.setTimeout(function() {
                b.fire("contentDom");
                this._.isPendingFocus && (b.focus(), this._.isPendingFocus = !1);
                setTimeout(function() {
                    b.fire("dataReady")
                },
                0);
                CKEDITOR.env.ie && setTimeout(function() {
                    if (b.document) {
                        var a = b.document.$.body;
                        a.runtimeStyle.marginBottom = "0px";
                        a.runtimeStyle.marginBottom = ""
                    }
                },
                1E3)
            },
            0, this)
        }
        function d() {
            var a = [];
            if (8 <= CKEDITOR.document.$.documentMode) {
                a.push("html.CSS1Compat [contenteditable=false]{min-height:0 !important}");
                var b = [],
                d;
                for (d in CKEDITOR.dtd.$removeEmpty) b.push("html.CSS1Compat " + d + "[contenteditable=false]");
                a.push(b.join(",") + "{display:inline-block}")
            } else CKEDITOR.env.gecko && (a.push("html{height:100% !important}"), a.push("img:-moz-broken{-moz-force-broken-image-icon:1;min-width:24px;min-height:24px}"));
            a.push("html{cursor:text;*cursor:auto}");
            a.push("img,input,textarea{cursor:default}");
            return a.join("\n")
        }
        CKEDITOR.plugins.add("wysiwygarea", {
            init: function(a) {
                a.config.fullPage && a.addFeature({
                    allowedContent: "html head title; style [media,type]; body (*)[id]; meta link [*]",
                    requiredContent: "body"
                });
                a.addMode("wysiwyg",
                function(d) {
                    function g(f) {
                        f && f.removeListener();
                        a.editable(new b(a, k.$.contentWindow.document.body));
                        a.setData(a.getData(1), d)
                    }
                    var f = "document.open();" + (CKEDITOR.env.ie ? "(" + CKEDITOR.tools.fixDomain + ")();": "") + "document.close();",
                    f = CKEDITOR.env.air ? "javascript:void(0)": CKEDITOR.env.ie ? "javascript:void(function(){" + encodeURIComponent(f) + "}())": "",
                    k = CKEDITOR.dom.element.createFromHtml('<iframe src="' + f + '" frameBorder="0"></iframe>');
                    k.setStyles({
                        width: "100%",
                        height: "100%"
                    });
                    k.addClass("cke_wysiwyg_frame cke_reset");
                    var h = a.ui.space("contents");
                    h.append(k);
                    if (f = CKEDITOR.env.ie || CKEDITOR.env.gecko) k.on("load", g);
                    var l = a.title,
                    n = a.lang.common.editorHelp;
                    l && (CKEDITOR.env.ie && (l += ", " + n), k.setAttribute("title", l));
                    var l = CKEDITOR.tools.getNextId(),
                    p = CKEDITOR.dom.element.createFromHtml('<span id="' + l + '" class="cke_voice_label">' + n + "</span>");
                    h.append(p, 1);
                    a.on("beforeModeUnload",
                    function(a) {
                        a.removeListener();
                        p.remove()
                    });
                    k.setAttributes({
                        "aria-describedby": l,
                        tabIndex: a.tabIndex,
                        allowTransparency: "true"
                    }); ! f && g();
                    CKEDITOR.env.webkit && (f = function() {
                        h.setStyle("width", "100%");
                        k.hide();
                        k.setSize("width", h.getSize("width"));
                        h.removeStyle("width");
                        k.show()
                    },
                    k.setCustomData("onResize", f), CKEDITOR.document.getWindow().on("resize", f));
                    a.fire("ariaWidget", k)
                })
            }
        });
        var b = CKEDITOR.tools.createClass({
            $: function(b) {
                this.base.apply(this, arguments);
                this._.frameLoadedHandler = CKEDITOR.tools.addFunction(function(b) {
                    CKEDITOR.tools.setTimeout(a, 0, this, b)
                },
                this);
                this._.docTitle = this.getWindow().getFrame().getAttribute("title")
            },
            base: CKEDITOR.editable,
            proto: {
                setData: function(a, b) {
                    var g = this.editor;
                    if (b) this.setHtml(a),
                    g.fire("dataReady");
                    else {
                        this._.isLoadingData = !0;
                        g._.dataStore = {
                            id: 1
                        };
                        var f = g.config,
                        k = f.fullPage,
                        h = f.docType,
                        l = CKEDITOR.tools.buildStyleHtml(d()).replace(/<style>/, '<style data-cke-temp="1">');
                        k || (l += CKEDITOR.tools.buildStyleHtml(g.config.contentsCss));
                        var n = f.baseHref ? '<base href="' + f.baseHref + '" data-cke-temp="1" />': "";
                        k && (a = a.replace(/<!DOCTYPE[^>]*>/i,
                        function(a) {
                            g.docType = h = a;
                            return ""
                        }).replace(/<\?xml\s[^\?]*\?>/i,
                        function(a) {
                            g.xmlDeclaration = a;
                            return ""
                        }));
                        g.dataProcessor && (a = g.dataProcessor.toHtml(a));
                        k ? (/<body[\s|>]/.test(a) || (a = "<body>" + a), /<html[\s|>]/.test(a) || (a = "<html>" + a + "</html>"), /<head[\s|>]/.test(a) ? /<title[\s|>]/.test(a) || (a = a.replace(/<head[^>]*>/, "$&<title></title>")) : a = a.replace(/<html[^>]*>/, "$&<head><title></title></head>"), n && (a = a.replace(/<head>/, "$&" + n)), a = a.replace(/<\/head\s*>/, l + "$&"), a = h + a) : a = f.docType + '<html dir="' + f.contentsLangDirection + '" lang="' + (f.contentsLanguage || g.langCode) + '"><head><title>' + this._.docTitle + "</title>" + n + l + "</head><body" + (f.bodyId ? ' id="' + f.bodyId + '"': "") + (f.bodyClass ? ' class="' + f.bodyClass + '"': "") + ">" + a + "</body></html>";
                        CKEDITOR.env.gecko && (a = a.replace(/<body/, '<body contenteditable="true" '), 2E4 > CKEDITOR.env.version && (a = a.replace(/<body[^>]*>/, "$&\x3c!-- cke-content-start --\x3e")));
                        f = '<script id="cke_actscrpt" type="text/javascript"' + (CKEDITOR.env.ie ? ' defer="defer" ': "") + ">var wasLoaded=0;function onload(){if(!wasLoaded)window.parent.CKEDITOR.tools.callFunction(" + this._.frameLoadedHandler + ",window);wasLoaded=1;}" + (CKEDITOR.env.ie ? "onload();": 'document.addEventListener("DOMContentLoaded", onload, false );') + "\x3c/script>";
                        CKEDITOR.env.ie && 9 > CKEDITOR.env.version && (f += '<script id="cke_shimscrpt">(function(){var e="abbr,article,aside,audio,bdi,canvas,data,datalist,details,figcaption,figure,footer,header,hgroup,mark,meter,nav,output,progress,section,summary,time,video".split(","),i=e.length;while(i--){document.createElement(e[i])}})()\x3c/script>');
                        a = a.replace(/(?=\s*<\/(:?head)>)/, f);
                        this.clearCustomData();
                        this.clearListeners();
                        g.fire("contentDomUnload");
                        var p = this.getDocument();
                        try {
                            p.write(a)
                        } catch(s) {
                            setTimeout(function() {
                                p.write(a)
                            },
                            0)
                        }
                    }
                },
                getData: function(a) {
                    if (a) return this.getHtml();
                    a = this.editor;
                    var b = a.config,
                    d = b.fullPage,
                    f = d && a.docType,
                    k = d && a.xmlDeclaration,
                    h = this.getDocument(),
                    d = d ? h.getDocumentElement().getOuterHtml() : h.getBody().getHtml();
                    CKEDITOR.env.gecko && b.enterMode != CKEDITOR.ENTER_BR && (d = d.replace(/<br>(?=\s*(:?$|<\/body>))/, ""));
                    a.dataProcessor && (d = a.dataProcessor.toDataFormat(d));
                    k && (d = k + "\n" + d);
                    f && (d = f + "\n" + d);
                    return d
                },
                focus: function() {
                    this._.isLoadingData ? this._.isPendingFocus = !0 : b.baseProto.focus.call(this)
                },
                detach: function() {
                    var a = this.editor,
                    d = a.document,
                    g = a.window.getFrame();
                    b.baseProto.detach.call(this);
                    this.clearCustomData();
                    d.getDocumentElement().clearCustomData();
                    g.clearCustomData();
                    CKEDITOR.tools.removeFunction(this._.frameLoadedHandler); (d = g.removeCustomData("onResize")) && d.removeListener();
                    a.fire("contentDomUnload");
                    g.remove()
                }
            }
        })
    } (), CKEDITOR.config.disableObjectResizing = !1, CKEDITOR.config.disableNativeTableHandles = !0, CKEDITOR.config.disableNativeSpellChecker = !0, CKEDITOR.config.contentsCss = CKEDITOR.basePath + "contents.css", CKEDITOR.config.plugins = "dialogui,dialog,a11yhelp,about,basicstyles,bidi,blockquote,clipboard,button,panelbutton,panel,floatpanel,colorbutton,colordialog,menu,contextmenu,dialogadvtab,div,elementspath,enterkey,entities,popup,filebrowser,find,fakeobjects,flash,floatingspace,listblock,richcombo,font,format,forms,horizontalrule,htmlwriter,iframe,image,indent,indentblock,indentlist,justify,link,list,liststyle,magicline,maximize,newpage,pagebreak,pastefromword,pastetext,preview,print,removeformat,resize,save,menubutton,scayt,selectall,showblocks,showborders,smiley,sourcearea,specialchar,stylescombo,tab,table,tabletools,templates,toolbar,undo,wsc,wysiwygarea", CKEDITOR.config.skin = "moono",
    function() {
        var a = function(a, b) {
            var c = CKEDITOR.getUrl("plugins/" + b);
            a = a.split(",");
            for (var e = 0; e < a.length; e++) CKEDITOR.skin.icons[a[e]] = {
                path: c,
                offset: -a[++e],
                bgsize: a[++e]
            }
        };
        CKEDITOR.env.hidpi ? a("about,0,,bold,24,,italic,48,,strike,72,,subscript,96,,superscript,120,,underline,144,,bidiltr,168,,bidirtl,192,,blockquote,216,,copy-rtl,240,,copy,264,,cut-rtl,288,,cut,312,,paste-rtl,336,,paste,360,,bgcolor,384,,textcolor,408,,creatediv,432,,find-rtl,456,,find,480,,replace,504,,flash,528,,button,552,,checkbox,576,,form,600,,hiddenfield,624,,imagebutton,648,,radio,672,,select-rtl,696,,select,720,,textarea-rtl,744,,textarea,768,,textfield-rtl,792,,textfield,816,,horizontalrule,840,,iframe,864,,image,888,,indent-rtl,912,,indent,936,,outdent-rtl,960,,outdent,984,,justifyblock,1008,,justifycenter,1032,,justifyleft,1056,,justifyright,1080,,anchor-rtl,1104,,anchor,1128,,link,1152,,unlink,1176,,bulletedlist-rtl,1200,,bulletedlist,1224,,numberedlist-rtl,1248,,numberedlist,1272,,maximize,1296,,newpage-rtl,1320,,newpage,1344,,pagebreak-rtl,1368,,pagebreak,1392,,pastefromword-rtl,1416,,pastefromword,1440,,pastetext-rtl,1464,,pastetext,1488,,preview-rtl,1512,,preview,1536,,print,1560,,removeformat,1584,,save,1608,,scayt,1632,,selectall,1656,,showblocks-rtl,1680,,showblocks,1704,,smiley,1728,,source-rtl,1752,,source,1776,,specialchar,1800,,table,1824,,templates-rtl,1848,,templates,1872,,redo-rtl,1896,,redo,1920,,undo-rtl,1944,,undo,1968,,spellchecker,1992,", "icons_hidpi.png") : a("about,0,auto,bold,24,auto,italic,48,auto,strike,72,auto,subscript,96,auto,superscript,120,auto,underline,144,auto,bidiltr,168,auto,bidirtl,192,auto,blockquote,216,auto,copy-rtl,240,auto,copy,264,auto,cut-rtl,288,auto,cut,312,auto,paste-rtl,336,auto,paste,360,auto,bgcolor,384,auto,textcolor,408,auto,creatediv,432,auto,find-rtl,456,auto,find,480,auto,replace,504,auto,flash,528,auto,button,552,auto,checkbox,576,auto,form,600,auto,hiddenfield,624,auto,imagebutton,648,auto,radio,672,auto,select-rtl,696,auto,select,720,auto,textarea-rtl,744,auto,textarea,768,auto,textfield-rtl,792,auto,textfield,816,auto,horizontalrule,840,auto,iframe,864,auto,image,888,auto,indent-rtl,912,auto,indent,936,auto,outdent-rtl,960,auto,outdent,984,auto,justifyblock,1008,auto,justifycenter,1032,auto,justifyleft,1056,auto,justifyright,1080,auto,anchor-rtl,1104,auto,anchor,1128,auto,link,1152,auto,unlink,1176,auto,bulletedlist-rtl,1200,auto,bulletedlist,1224,auto,numberedlist-rtl,1248,auto,numberedlist,1272,auto,maximize,1296,auto,newpage-rtl,1320,auto,newpage,1344,auto,pagebreak-rtl,1368,auto,pagebreak,1392,auto,pastefromword-rtl,1416,auto,pastefromword,1440,auto,pastetext-rtl,1464,auto,pastetext,1488,auto,preview-rtl,1512,auto,preview,1536,auto,print,1560,auto,removeformat,1584,auto,save,1608,auto,scayt,1632,auto,selectall,1656,auto,showblocks-rtl,1680,auto,showblocks,1704,auto,smiley,1728,auto,source-rtl,1752,auto,source,1776,auto,specialchar,1800,auto,table,1824,auto,templates-rtl,1848,auto,templates,1872,auto,redo-rtl,1896,auto,redo,1920,auto,undo-rtl,1944,auto,undo,1968,auto,spellchecker,1992,auto", "icons.png")
    } ())
})();
var SWFUpload, swfobject;
void 0 == SWFUpload && (SWFUpload = function(a) {
    this.initSWFUpload(a)
});
SWFUpload.prototype.initSWFUpload = function(a) {
    try {
        this.customSettings = {},
        this.settings = {},
        this.eventQueue = [],
        this.movieName = "SWFUpload_" + SWFUpload.movieCount++,
        this.movieElement = null,
        SWFUpload.instances[this.movieName] = this,
        this.initSettings(a),
        this.loadSupport(),
        this.swfuploadPreload() && this.loadFlash(),
        this.displayDebugInfo()
    } catch(d) {
        throw delete SWFUpload.instances[this.movieName],
        d;
    }
};
SWFUpload.instances = {};
SWFUpload.movieCount = 0;
SWFUpload.version = "2.5.0 2010-01-15 Beta 2";
SWFUpload.QUEUE_ERROR = {
    QUEUE_LIMIT_EXCEEDED: -100,
    FILE_EXCEEDS_SIZE_LIMIT: -110,
    ZERO_BYTE_FILE: -120,
    INVALID_FILETYPE: -130
};
SWFUpload.UPLOAD_ERROR = {
    HTTP_ERROR: -200,
    MISSING_UPLOAD_URL: -210,
    IO_ERROR: -220,
    SECURITY_ERROR: -230,
    UPLOAD_LIMIT_EXCEEDED: -240,
    UPLOAD_FAILED: -250,
    SPECIFIED_FILE_ID_NOT_FOUND: -260,
    FILE_VALIDATION_FAILED: -270,
    FILE_CANCELLED: -280,
    UPLOAD_STOPPED: -290,
    RESIZE: -300
};
SWFUpload.FILE_STATUS = {
    QUEUED: -1,
    IN_PROGRESS: -2,
    ERROR: -3,
    COMPLETE: -4,
    CANCELLED: -5
};
SWFUpload.UPLOAD_TYPE = {
    NORMAL: -1,
    RESIZED: -2
};
SWFUpload.BUTTON_ACTION = {
    SELECT_FILE: -100,
    SELECT_FILES: -110,
    START_UPLOAD: -120,
    JAVASCRIPT: -130,
    NONE: -130
};
SWFUpload.CURSOR = {
    ARROW: -1,
    HAND: -2
};
SWFUpload.WINDOW_MODE = {
    WINDOW: "window",
    TRANSPARENT: "transparent",
    OPAQUE: "opaque"
};
SWFUpload.RESIZE_ENCODING = {
    JPEG: -1,
    PNG: -2
};
SWFUpload.completeURL = function(a) {
    try {
        var d = "",
        b = -1;
        if ("string" !== typeof a || a.match(/^https?:\/\//i) || a.match(/^\//) || "" === a) return a;
        b = window.location.pathname.lastIndexOf("/");
        d = 0 >= b ? "/": window.location.pathname.substr(0, b) + "/";
        return d + a
    } catch(c) {
        return a
    }
};
SWFUpload.onload = function() {};
SWFUpload.prototype.initSettings = function(a) {
    this.ensureDefault = function(d, b) {
        var c = a[d];
        this.settings[d] = void 0 != c ? c: b
    };
    this.ensureDefault("upload_url", "");
    this.ensureDefault("preserve_relative_urls", !1);
    this.ensureDefault("file_post_name", "Filedata");
    this.ensureDefault("post_params", {});
    this.ensureDefault("use_query_string", !1);
    this.ensureDefault("requeue_on_error", !1);
    this.ensureDefault("http_success", []);
    this.ensureDefault("assume_success_timeout", 0);
    this.ensureDefault("file_types", "*.*");
    this.ensureDefault("file_types_description", "All Files");
    this.ensureDefault("file_size_limit", 0);
    this.ensureDefault("file_upload_limit", 0);
    this.ensureDefault("file_queue_limit", 0);
    this.ensureDefault("flash_url", "swfupload.swf");
    this.ensureDefault("flash9_url", "swfupload_fp9.swf");
    this.ensureDefault("prevent_swf_caching", !0);
    this.ensureDefault("button_image_url", "");
    this.ensureDefault("button_width", 1);
    this.ensureDefault("button_height", 1);
    this.ensureDefault("button_text", "");
    this.ensureDefault("button_text_style", "color: #000000; font-size: 16pt;");
    this.ensureDefault("button_text_top_padding", 0);
    this.ensureDefault("button_text_left_padding", 0);
    this.ensureDefault("button_action", SWFUpload.BUTTON_ACTION.SELECT_FILES);
    this.ensureDefault("button_disabled", !1);
    this.ensureDefault("button_placeholder_id", "");
    this.ensureDefault("button_placeholder", null);
    this.ensureDefault("button_cursor", SWFUpload.CURSOR.ARROW);
    this.ensureDefault("button_window_mode", SWFUpload.WINDOW_MODE.WINDOW);
    this.ensureDefault("debug", !1);
    this.settings.debug_enabled = this.settings.debug;
    this.settings.return_upload_start_handler = this.returnUploadStart;
    this.ensureDefault("swfupload_preload_handler", null);
    this.ensureDefault("swfupload_load_failed_handler", null);
    this.ensureDefault("swfupload_loaded_handler", null);
    this.ensureDefault("file_dialog_start_handler", null);
    this.ensureDefault("file_queued_handler", null);
    this.ensureDefault("file_queue_error_handler", null);
    this.ensureDefault("file_dialog_complete_handler", null);
    this.ensureDefault("upload_resize_start_handler", null);
    this.ensureDefault("upload_start_handler", null);
    this.ensureDefault("upload_progress_handler", null);
    this.ensureDefault("upload_error_handler", null);
    this.ensureDefault("upload_success_handler", null);
    this.ensureDefault("upload_complete_handler", null);
    this.ensureDefault("mouse_click_handler", null);
    this.ensureDefault("mouse_out_handler", null);
    this.ensureDefault("mouse_over_handler", null);
    this.ensureDefault("debug_handler", this.debugMessage);
    this.ensureDefault("custom_settings", {});
    this.customSettings = this.settings.custom_settings;
    this.settings.prevent_swf_caching && (this.settings.flash_url = this.settings.flash_url + (0 > this.settings.flash_url.indexOf("?") ? "?": "&") + "preventswfcaching=" + (new Date).getTime(), this.settings.flash9_url = this.settings.flash9_url + (0 > this.settings.flash9_url.indexOf("?") ? "?": "&") + "preventswfcaching=" + (new Date).getTime());
    this.settings.preserve_relative_urls || (this.settings.upload_url = SWFUpload.completeURL(this.settings.upload_url), this.settings.button_image_url = SWFUpload.completeURL(this.settings.button_image_url));
    delete this.ensureDefault
};
SWFUpload.prototype.loadSupport = function() {
    this.support = {
        loading: swfobject.hasFlashPlayerVersion("9.0.28"),
        imageResize: swfobject.hasFlashPlayerVersion("10.0.0")
    }
};
SWFUpload.prototype.loadFlash = function() {
    var a, d, b;
    if (this.support.loading) if (null !== document.getElementById(this.movieName)) this.support.loading = !1,
    this.queueEvent("swfupload_load_failed_handler", ["Element ID already in use"]);
    else if (a = document.getElementById(this.settings.button_placeholder_id) || this.settings.button_placeholder, void 0 == a) this.support.loading = !1,
    this.queueEvent("swfupload_load_failed_handler", ["button place holder not found"]);
    else {
        d = "block" !== (a.currentStyle && a.currentStyle.display || window.getComputedStyle && document.defaultView.getComputedStyle(a, null).getPropertyValue("display")) ? "span": "div";
        d = document.createElement(d);
        b = this.getFlashHTML();
        try {
            d.innerHTML = b
        } catch(c) {
            this.support.loading = !1;
            this.queueEvent("swfupload_load_failed_handler", ["Exception loading Flash HTML into placeholder"]);
            return
        }
        b = d.getElementsByTagName("object"); ! b || 1 < b.length || 0 === b.length ? (this.support.loading = !1, this.queueEvent("swfupload_load_failed_handler", ["Unable to find movie after adding to DOM"])) : (1 === b.length && (this.movieElement = b[0]), a.parentNode.replaceChild(d.firstChild, a), void 0 == window[this.movieName] && (window[this.movieName] = this.getMovieElement()))
    } else this.queueEvent("swfupload_load_failed_handler", ["Flash Player doesn't support SWFUpload"])
};
SWFUpload.prototype.getFlashHTML = function(a) {
    return ['<object id="', this.movieName, '" type="application/x-shockwave-flash" data="', this.support.imageResize ? this.settings.flash_url: this.settings.flash9_url, '" width="', this.settings.button_width, '" height="', this.settings.button_height, '" class="swfupload"><param name="wmode" value="', this.settings.button_window_mode, '" /><param name="movie" value="', this.support.imageResize ? this.settings.flash_url: this.settings.flash9_url, '" /><param name="quality" value="high" /><param name="allowScriptAccess" value="always" />', '<param name="flashvars" value="' + this.getFlashVars() + '" />', "</object>"].join("")
};
SWFUpload.prototype.getFlashVars = function() {
    var a, d;
    d = this.buildParamString();
    a = this.settings.http_success.join(",");
    return ["movieName=", encodeURIComponent(this.movieName), "&amp;uploadURL=", encodeURIComponent(this.settings.upload_url), "&amp;useQueryString=", encodeURIComponent(this.settings.use_query_string), "&amp;requeueOnError=", encodeURIComponent(this.settings.requeue_on_error), "&amp;httpSuccess=", encodeURIComponent(a), "&amp;assumeSuccessTimeout=", encodeURIComponent(this.settings.assume_success_timeout), "&amp;params=", encodeURIComponent(d), "&amp;filePostName=", encodeURIComponent(this.settings.file_post_name), "&amp;fileTypes=", encodeURIComponent(this.settings.file_types), "&amp;fileTypesDescription=", encodeURIComponent(this.settings.file_types_description), "&amp;fileSizeLimit=", encodeURIComponent(this.settings.file_size_limit), "&amp;fileUploadLimit=", encodeURIComponent(this.settings.file_upload_limit), "&amp;fileQueueLimit=", encodeURIComponent(this.settings.file_queue_limit), "&amp;debugEnabled=", encodeURIComponent(this.settings.debug_enabled), "&amp;buttonImageURL=", encodeURIComponent(this.settings.button_image_url), "&amp;buttonWidth=", encodeURIComponent(this.settings.button_width), "&amp;buttonHeight=", encodeURIComponent(this.settings.button_height), "&amp;buttonText=", encodeURIComponent(this.settings.button_text), "&amp;buttonTextTopPadding=", encodeURIComponent(this.settings.button_text_top_padding), "&amp;buttonTextLeftPadding=", encodeURIComponent(this.settings.button_text_left_padding), "&amp;buttonTextStyle=", encodeURIComponent(this.settings.button_text_style), "&amp;buttonAction=", encodeURIComponent(this.settings.button_action), "&amp;buttonDisabled=", encodeURIComponent(this.settings.button_disabled), "&amp;buttonCursor=", encodeURIComponent(this.settings.button_cursor)].join("")
};
SWFUpload.prototype.getMovieElement = function() {
    void 0 == this.movieElement && (this.movieElement = document.getElementById(this.movieName));
    if (null === this.movieElement) throw "Could not find Flash element";
    return this.movieElement
};
SWFUpload.prototype.buildParamString = function() {
    var a, d, b = [];
    d = this.settings.post_params;
    if ("object" === typeof d) for (a in d) d.hasOwnProperty(a) && b.push(encodeURIComponent(a.toString()) + "=" + encodeURIComponent(d[a].toString()));
    return b.join("&amp;")
};
SWFUpload.prototype.destroy = function() {
    var a;
    try {
        this.cancelUpload(null, !1);
        if (a = this.cleanUp()) try {
            a.parentNode.removeChild(a)
        } catch(d) {}
        window[this.movieName] = null;
        SWFUpload.instances[this.movieName] = null;
        delete SWFUpload.instances[this.movieName];
        this.movieName = this.eventQueue = this.customSettings = this.settings = this.movieElement = null;
        return ! 0
    } catch(b) {
        return ! 1
    }
};
SWFUpload.prototype.displayDebugInfo = function() {
    this.debug(["---SWFUpload Instance Info---\nVersion: ", SWFUpload.version, "\nMovie Name: ", this.movieName, "\nSettings:\n\tupload_url:               ", this.settings.upload_url, "\n\tflash_url:                ", this.settings.flash_url, "\n\tflash9_url:                ", this.settings.flash9_url, "\n\tuse_query_string:         ", this.settings.use_query_string.toString(), "\n\trequeue_on_error:         ", this.settings.requeue_on_error.toString(), "\n\thttp_success:             ", this.settings.http_success.join(", "), "\n\tassume_success_timeout:   ", this.settings.assume_success_timeout, "\n\tfile_post_name:           ", this.settings.file_post_name, "\n\tpost_params:              ", this.settings.post_params.toString(), "\n\tfile_types:               ", this.settings.file_types, "\n\tfile_types_description:   ", this.settings.file_types_description, "\n\tfile_size_limit:          ", this.settings.file_size_limit, "\n\tfile_upload_limit:        ", this.settings.file_upload_limit, "\n\tfile_queue_limit:         ", this.settings.file_queue_limit, "\n\tdebug:                    ", this.settings.debug.toString(), "\n\tprevent_swf_caching:      ", this.settings.prevent_swf_caching.toString(), "\n\tbutton_placeholder_id:    ", this.settings.button_placeholder_id.toString(), "\n\tbutton_placeholder:       ", this.settings.button_placeholder ? "Set": "Not Set", "\n\tbutton_image_url:         ", this.settings.button_image_url.toString(), "\n\tbutton_width:             ", this.settings.button_width.toString(), "\n\tbutton_height:            ", this.settings.button_height.toString(), "\n\tbutton_text:              ", this.settings.button_text.toString(), "\n\tbutton_text_style:        ", this.settings.button_text_style.toString(), "\n\tbutton_text_top_padding:  ", this.settings.button_text_top_padding.toString(), "\n\tbutton_text_left_padding: ", this.settings.button_text_left_padding.toString(), "\n\tbutton_action:            ", this.settings.button_action.toString(), "\n\tbutton_cursor:            ", this.settings.button_cursor.toString(), "\n\tbutton_disabled:          ", this.settings.button_disabled.toString(), "\n\tcustom_settings:          ", this.settings.custom_settings.toString(), "\nEvent Handlers:\n\tswfupload_preload_handler assigned:  ", ("function" === typeof this.settings.swfupload_preload_handler).toString(), "\n\tswfupload_load_failed_handler assigned:  ", ("function" === typeof this.settings.swfupload_load_failed_handler).toString(), "\n\tswfupload_loaded_handler assigned:  ", ("function" === typeof this.settings.swfupload_loaded_handler).toString(), "\n\tmouse_click_handler assigned:       ", ("function" === typeof this.settings.mouse_click_handler).toString(), "\n\tmouse_over_handler assigned:        ", ("function" === typeof this.settings.mouse_over_handler).toString(), "\n\tmouse_out_handler assigned:         ", ("function" === typeof this.settings.mouse_out_handler).toString(), "\n\tfile_dialog_start_handler assigned: ", ("function" === typeof this.settings.file_dialog_start_handler).toString(), "\n\tfile_queued_handler assigned:       ", ("function" === typeof this.settings.file_queued_handler).toString(), "\n\tfile_queue_error_handler assigned:  ", ("function" === typeof this.settings.file_queue_error_handler).toString(), "\n\tupload_resize_start_handler assigned:      ", ("function" === typeof this.settings.upload_resize_start_handler).toString(), "\n\tupload_start_handler assigned:      ", ("function" === typeof this.settings.upload_start_handler).toString(), "\n\tupload_progress_handler assigned:   ", ("function" === typeof this.settings.upload_progress_handler).toString(), "\n\tupload_error_handler assigned:      ", ("function" === typeof this.settings.upload_error_handler).toString(), "\n\tupload_success_handler assigned:    ", ("function" === typeof this.settings.upload_success_handler).toString(), "\n\tupload_complete_handler assigned:   ", ("function" === typeof this.settings.upload_complete_handler).toString(), "\n\tdebug_handler assigned:             ", ("function" === typeof this.settings.debug_handler).toString(), "\nSupport:\n\tLoad:                     ", this.support.loading ? "Yes": "No", "\n\tImage Resize:             ", this.support.imageResize ? "Yes": "No", "\n"].join(""))
};
SWFUpload.prototype.addSetting = function(a, d, b) {
    return void 0 == d ? this.settings[a] = b: this.settings[a] = d
};
SWFUpload.prototype.getSetting = function(a) {
    return void 0 != this.settings[a] ? this.settings[a] : ""
};
SWFUpload.prototype.callFlash = function(a, d) {
    var b, c, e;
    d = d || [];
    b = this.getMovieElement();
    try {
        void 0 != b ? (e = b.CallFunction('<invoke name="' + a + '" returntype="javascript">' + __flash__argumentsToXML(d, 0) + "</invoke>"), c = eval(e)) : this.debug("Can't call flash because the movie wasn't found.")
    } catch(g) {
        this.debug("Exception calling flash function '" + a + "': " + g.message)
    }
    void 0 != c && "object" === typeof c.post && (c = this.unescapeFilePostParams(c));
    return c
};
SWFUpload.prototype.selectFile = function() {
    this.callFlash("SelectFile")
};
SWFUpload.prototype.selectFiles = function() {
    this.callFlash("SelectFiles")
};
SWFUpload.prototype.startUpload = function(a) {
    this.callFlash("StartUpload", [a])
};
SWFUpload.prototype.startResizedUpload = function(a, d, b, c, e, g) {
    this.callFlash("StartUpload", [a, {
        width: d,
        height: b,
        encoding: c,
        quality: e,
        allowEnlarging: g
    }])
};
SWFUpload.prototype.cancelUpload = function(a, d) { ! 1 !== d && (d = !0);
    this.callFlash("CancelUpload", [a, d])
};
SWFUpload.prototype.stopUpload = function() {
    this.callFlash("StopUpload")
};
SWFUpload.prototype.requeueUpload = function(a) {
    return this.callFlash("RequeueUpload", [a])
};
SWFUpload.prototype.getStats = function() {
    return this.callFlash("GetStats")
};
SWFUpload.prototype.setStats = function(a) {
    this.callFlash("SetStats", [a])
};
SWFUpload.prototype.getFile = function(a) {
    return "number" === typeof a ? this.callFlash("GetFileByIndex", [a]) : this.callFlash("GetFile", [a])
};
SWFUpload.prototype.getQueueFile = function(a) {
    return "number" === typeof a ? this.callFlash("GetFileByQueueIndex", [a]) : this.callFlash("GetFile", [a])
};
SWFUpload.prototype.addFileParam = function(a, d, b) {
    return this.callFlash("AddFileParam", [a, d, b])
};
SWFUpload.prototype.removeFileParam = function(a, d) {
    this.callFlash("RemoveFileParam", [a, d])
};
SWFUpload.prototype.setUploadURL = function(a) {
    this.settings.upload_url = a.toString();
    this.callFlash("SetUploadURL", [a])
};
SWFUpload.prototype.setPostParams = function(a) {
    this.settings.post_params = a;
    this.callFlash("SetPostParams", [a])
};
SWFUpload.prototype.addPostParam = function(a, d) {
    this.settings.post_params[a] = d;
    this.callFlash("SetPostParams", [this.settings.post_params])
};
SWFUpload.prototype.removePostParam = function(a) {
    delete this.settings.post_params[a];
    this.callFlash("SetPostParams", [this.settings.post_params])
};
SWFUpload.prototype.setFileTypes = function(a, d) {
    this.settings.file_types = a;
    this.settings.file_types_description = d;
    this.callFlash("SetFileTypes", [a, d])
};
SWFUpload.prototype.setFileSizeLimit = function(a) {
    this.settings.file_size_limit = a;
    this.callFlash("SetFileSizeLimit", [a])
};
SWFUpload.prototype.setFileUploadLimit = function(a) {
    this.settings.file_upload_limit = a;
    this.callFlash("SetFileUploadLimit", [a])
};
SWFUpload.prototype.setFileQueueLimit = function(a) {
    this.settings.file_queue_limit = a;
    this.callFlash("SetFileQueueLimit", [a])
};
SWFUpload.prototype.setFilePostName = function(a) {
    this.settings.file_post_name = a;
    this.callFlash("SetFilePostName", [a])
};
SWFUpload.prototype.setUseQueryString = function(a) {
    this.settings.use_query_string = a;
    this.callFlash("SetUseQueryString", [a])
};
SWFUpload.prototype.setRequeueOnError = function(a) {
    this.settings.requeue_on_error = a;
    this.callFlash("SetRequeueOnError", [a])
};
SWFUpload.prototype.setHTTPSuccess = function(a) {
    "string" === typeof a && (a = a.replace(" ", "").split(","));
    this.settings.http_success = a;
    this.callFlash("SetHTTPSuccess", [a])
};
SWFUpload.prototype.setAssumeSuccessTimeout = function(a) {
    this.settings.assume_success_timeout = a;
    this.callFlash("SetAssumeSuccessTimeout", [a])
};
SWFUpload.prototype.setDebugEnabled = function(a) {
    this.settings.debug_enabled = a;
    this.callFlash("SetDebugEnabled", [a])
};
SWFUpload.prototype.setButtonImageURL = function(a) {
    void 0 == a && (a = "");
    this.settings.button_image_url = a;
    this.callFlash("SetButtonImageURL", [a])
};
SWFUpload.prototype.setButtonDimensions = function(a, d) {
    this.settings.button_width = a;
    this.settings.button_height = d;
    var b = this.getMovieElement();
    void 0 != b && (b.style.width = a + "px", b.style.height = d + "px");
    this.callFlash("SetButtonDimensions", [a, d])
};
SWFUpload.prototype.setButtonText = function(a) {
    this.settings.button_text = a;
    this.callFlash("SetButtonText", [a])
};
SWFUpload.prototype.setButtonTextPadding = function(a, d) {
    this.settings.button_text_top_padding = d;
    this.settings.button_text_left_padding = a;
    this.callFlash("SetButtonTextPadding", [a, d])
};
SWFUpload.prototype.setButtonTextStyle = function(a) {
    this.settings.button_text_style = a;
    this.callFlash("SetButtonTextStyle", [a])
};
SWFUpload.prototype.setButtonDisabled = function(a) {
    this.settings.button_disabled = a;
    this.callFlash("SetButtonDisabled", [a])
};
SWFUpload.prototype.setButtonAction = function(a) {
    this.settings.button_action = a;
    this.callFlash("SetButtonAction", [a])
};
SWFUpload.prototype.setButtonCursor = function(a) {
    this.settings.button_cursor = a;
    this.callFlash("SetButtonCursor", [a])
};
SWFUpload.prototype.queueEvent = function(a, d) {
    var b = this;
    void 0 == d ? d = [] : d instanceof Array || (d = [d]);
    if ("function" === typeof this.settings[a]) this.eventQueue.push(function() {
        this.settings[a].apply(this, d)
    }),
    setTimeout(function() {
        b.executeNextEvent()
    },
    0);
    else if (null !== this.settings[a]) throw "Event handler " + a + " is unknown or is not a function";
};
SWFUpload.prototype.executeNextEvent = function() {
    var a = this.eventQueue ? this.eventQueue.shift() : null;
    "function" === typeof a && a.apply(this)
};
SWFUpload.prototype.unescapeFilePostParams = function(a) {
    var d = /[$]([0-9a-f]{4})/i,
    b = {},
    c, e, g;
    if (void 0 != a) {
        for (e in a.post) if (a.post.hasOwnProperty(e)) {
            for (c = e; null !== (g = d.exec(c));) c = c.replace(g[0], String.fromCharCode(parseInt("0x" + g[1], 16)));
            b[c] = a.post[e]
        }
        a.post = b
    }
    return a
};
SWFUpload.prototype.swfuploadPreload = function() {
    var a;
    if ("function" === typeof this.settings.swfupload_preload_handler) a = this.settings.swfupload_preload_handler.call(this);
    else if (void 0 != this.settings.swfupload_preload_handler) throw "upload_start_handler must be a function";
    void 0 === a && (a = !0);
    return !! a
};
SWFUpload.prototype.flashReady = function() {
    this.cleanUp() ? this.queueEvent("swfupload_loaded_handler") : this.debug("Flash called back ready but the flash movie can't be found.")
};
SWFUpload.prototype.cleanUp = function() {
    var a, d = this.getMovieElement();
    try {
        if (d && "unknown" === typeof d.CallFunction) for (a in this.debug("Removing Flash functions hooks (this should only run in IE and should prevent memory leaks)"), d) try {
            "function" === typeof d[a] && (d[a] = null)
        } catch(b) {}
    } catch(c) {}
    window.__flash__removeCallback = function(a, b) {
        try {
            a && (a[b] = null)
        } catch(c) {}
    };
    return d
};
SWFUpload.prototype.mouseClick = function() {
    this.queueEvent("mouse_click_handler")
};
SWFUpload.prototype.mouseOver = function() {
    this.queueEvent("mouse_over_handler")
};
SWFUpload.prototype.mouseOut = function() {
    this.queueEvent("mouse_out_handler")
};
SWFUpload.prototype.fileDialogStart = function() {
    this.queueEvent("file_dialog_start_handler")
};
SWFUpload.prototype.fileQueued = function(a) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("file_queued_handler", a)
};
SWFUpload.prototype.fileQueueError = function(a, d, b) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("file_queue_error_handler", [a, d, b])
};
SWFUpload.prototype.fileDialogComplete = function(a, d, b) {
    this.queueEvent("file_dialog_complete_handler", [a, d, b])
};
SWFUpload.prototype.uploadResizeStart = function(a, d) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("upload_resize_start_handler", [a, d.width, d.height, d.encoding, d.quality])
};
SWFUpload.prototype.uploadStart = function(a) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("return_upload_start_handler", a)
};
SWFUpload.prototype.returnUploadStart = function(a) {
    var d;
    if ("function" === typeof this.settings.upload_start_handler) a = this.unescapeFilePostParams(a),
    d = this.settings.upload_start_handler.call(this, a);
    else if (void 0 != this.settings.upload_start_handler) throw "upload_start_handler must be a function";
    void 0 === d && (d = !0);
    this.callFlash("ReturnUploadStart", [ !! d])
};
SWFUpload.prototype.uploadProgress = function(a, d, b) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("upload_progress_handler", [a, d, b])
};
SWFUpload.prototype.uploadError = function(a, d, b) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("upload_error_handler", [a, d, b])
};
SWFUpload.prototype.uploadSuccess = function(a, d, b) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("upload_success_handler", [a, d, b])
};
SWFUpload.prototype.uploadComplete = function(a) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("upload_complete_handler", a)
};
SWFUpload.prototype.debug = function(a) {
    this.queueEvent("debug_handler", a)
};
SWFUpload.prototype.debugMessage = function(a) {
    var d, b;
    if (this.settings.debug) {
        d = [];
        if ("object" === typeof a && "string" === typeof a.name && "string" === typeof a.message) {
            for (b in a) a.hasOwnProperty(b) && d.push(b + ": " + a[b]);
            a = d.join("\n") || "";
            d = a.split("\n");
            a = "EXCEPTION: " + d.join("\nEXCEPTION: ")
        }
        SWFUpload.Console.writeLine(a)
    }
};
SWFUpload.Console = {};
SWFUpload.Console.writeLine = function(a) {
    var d, b;
    try {
        d = document.getElementById("SWFUpload_Console"),
        d || (b = document.createElement("form"), document.getElementsByTagName("body")[0].appendChild(b), d = document.createElement("textarea"), d.id = "SWFUpload_Console", d.style.fontFamily = "monospace", d.setAttribute("wrap", "off"), d.wrap = "off", d.style.overflow = "auto", d.style.width = "700px", d.style.height = "350px", d.style.margin = "5px", b.appendChild(d)),
        d.value += a + "\n",
        d.scrollTop = d.scrollHeight - d.clientHeight
    } catch(c) {
        alert("Exception: " + c.name + " Message: " + c.message)
    }
};
swfobject = function() {
    function a() {
        if (!M) {
            try {
                var a = x.getElementsByTagName("body")[0].appendChild(x.createElement("span"));
                a.parentNode.removeChild(a)
            } catch(b) {
                return
            }
            M = !0;
            for (var a = C.length,
            c = 0; c < a; c++) C[c]()
        }
    }
    function d(a) {
        M ? a() : C[C.length] = a
    }
    function b(a) {
        if (typeof B.addEventListener != v) B.addEventListener("load", a, !1);
        else if (typeof x.addEventListener != v) x.addEventListener("load", a, !1);
        else if (typeof B.attachEvent != v) r(B, "onload", a);
        else if ("function" == typeof B.onload) {
            var b = B.onload;
            B.onload = function() {
                b();
                a()
            }
        } else B.onload = a
    }
    function c() {
        var a = x.getElementsByTagName("body")[0],
        b = x.createElement(A);
        b.setAttribute("type", E);
        var c = a.appendChild(b);
        if (c) {
            var d = 0; (function() {
                if (typeof c.GetVariable != v) {
                    var f = c.GetVariable("$version");
                    f && (f = f.split(" ")[1].split(","), G.pv = [parseInt(f[0], 10), parseInt(f[1], 10), parseInt(f[2], 10)])
                } else if (10 > d) {
                    d++;
                    setTimeout(arguments.callee, 10);
                    return
                }
                a.removeChild(b);
                c = null;
                e()
            })()
        } else e()
    }
    function e() {
        var a = F.length;
        if (0 < a) for (var b = 0; b < a; b++) {
            var c = F[b].id,
            d = F[b].callbackFn,
            e = {
                success: !1,
                id: c
            };
            if (0 < G.pv[0]) {
                var l = s(c);
                if (l) if (!q(F[b].swfVersion) || G.wk && 312 > G.wk) if (F[b].expressInstall && f()) {
                    e = {};
                    e.data = F[b].expressInstall;
                    e.width = l.getAttribute("width") || "0";
                    e.height = l.getAttribute("height") || "0";
                    l.getAttribute("class") && (e.styleclass = l.getAttribute("class"));
                    l.getAttribute("align") && (e.align = l.getAttribute("align"));
                    for (var m = {},
                    l = l.getElementsByTagName("param"), n = l.length, p = 0; p < n; p++)"movie" != l[p].getAttribute("name").toLowerCase() && (m[l[p].getAttribute("name")] = l[p].getAttribute("value"));
                    k(e, m, c, d)
                } else h(l),
                d && d(e);
                else u(c, !0),
                d && (e.success = !0, e.ref = g(c), d(e))
            } else u(c, !0),
            d && ((c = g(c)) && typeof c.SetVariable != v && (e.success = !0, e.ref = c), d(e))
        }
    }
    function g(a) {
        var b = null; (a = s(a)) && "OBJECT" == a.nodeName && (typeof a.SetVariable != v ? b = a: (a = a.getElementsByTagName(A)[0]) && (b = a));
        return b
    }
    function f() {
        return ! N && q("6.0.65") && (G.win || G.mac) && !(G.wk && 312 > G.wk)
    }
    function k(a, b, c, d) {
        N = !0;
        O = d || null;
        P = {
            success: !1,
            id: c
        };
        var e = s(c);
        if (e) {
            "OBJECT" == e.nodeName ? (L = l(e), K = null) : (L = e, K = c);
            a.id = z;
            if (typeof a.width == v || !/%$/.test(a.width) && 310 > parseInt(a.width, 10)) a.width = "310";
            if (typeof a.height == v || !/%$/.test(a.height) && 137 > parseInt(a.height, 10)) a.height = "137";
            x.title = x.title.slice(0, 47) + " - Flash Player Installation";
            d = G.ie && G.win ? "ActiveX": "PlugIn";
            d = "MMredirectURL=" + B.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + d + "&MMdoctitle=" + x.title;
            b.flashvars = typeof b.flashvars != v ? b.flashvars + ("&" + d) : d;
            G.ie && G.win && 4 != e.readyState && (d = x.createElement("div"), c += "SWFObjectNew", d.setAttribute("id", c), e.parentNode.insertBefore(d, e), e.style.display = "none",
            function() {
                4 == e.readyState ? e.parentNode.removeChild(e) : setTimeout(arguments.callee, 10)
            } ());
            n(a, b, c)
        }
    }
    function h(a) {
        if (G.ie && G.win && 4 != a.readyState) {
            var b = x.createElement("div");
            a.parentNode.insertBefore(b, a);
            b.parentNode.replaceChild(l(a), b);
            a.style.display = "none"; (function() {
                4 == a.readyState ? a.parentNode.removeChild(a) : setTimeout(arguments.callee, 10)
            })()
        } else a.parentNode.replaceChild(l(a), a)
    }
    function l(a) {
        var b = x.createElement("div");
        if (G.win && G.ie) b.innerHTML = a.innerHTML;
        else if (a = a.getElementsByTagName(A)[0]) if (a = a.childNodes) for (var c = a.length,
        d = 0; d < c; d++) 1 == a[d].nodeType && "PARAM" == a[d].nodeName || 8 == a[d].nodeType || b.appendChild(a[d].cloneNode(!0));
        return b
    }
    function n(a, b, c) {
        var d, e = s(c);
        if (G.wk && 312 > G.wk) return d;
        if (e) if (typeof a.id == v && (a.id = c), G.ie && G.win) {
            var f = "",
            g;
            for (g in a) a[g] != Object.prototype[g] && ("data" == g.toLowerCase() ? b.movie = a[g] : "styleclass" == g.toLowerCase() ? f += ' class="' + a[g] + '"': "classid" != g.toLowerCase() && (f += " " + g + '="' + a[g] + '"'));
            g = "";
            for (var h in b) b[h] != Object.prototype[h] && (g += '<param name="' + h + '" value="' + b[h] + '" />');
            e.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + f + ">" + g + "</object>";
            J[J.length] = a.id;
            d = s(a.id)
        } else {
            h = x.createElement(A);
            h.setAttribute("type", E);
            for (var k in a) a[k] != Object.prototype[k] && ("styleclass" == k.toLowerCase() ? h.setAttribute("class", a[k]) : "classid" != k.toLowerCase() && h.setAttribute(k, a[k]));
            for (f in b) b[f] != Object.prototype[f] && "movie" != f.toLowerCase() && (a = h, g = f, k = b[f], c = x.createElement("param"), c.setAttribute("name", g), c.setAttribute("value", k), a.appendChild(c));
            e.parentNode.replaceChild(h, e);
            d = h
        }
        return d
    }
    function p(a) {
        var b = s(a);
        b && "OBJECT" == b.nodeName && (G.ie && G.win ? (b.style.display = "none",
        function() {
            if (4 == b.readyState) {
                var c = s(a);
                if (c) {
                    for (var d in c)"function" == typeof c[d] && (c[d] = null);
                    c.parentNode.removeChild(c)
                }
            } else setTimeout(arguments.callee, 10)
        } ()) : b.parentNode.removeChild(b))
    }
    function s(a) {
        var b = null;
        try {
            b = x.getElementById(a)
        } catch(c) {}
        return b
    }
    function r(a, b, c) {
        a.attachEvent(b, c);
        m[m.length] = [a, b, c]
    }
    function q(a) {
        var b = G.pv;
        a = a.split(".");
        a[0] = parseInt(a[0], 10);
        a[1] = parseInt(a[1], 10) || 0;
        a[2] = parseInt(a[2], 10) || 0;
        return b[0] > a[0] || b[0] == a[0] && b[1] > a[1] || b[0] == a[0] && b[1] == a[1] && b[2] >= a[2] ? !0 : !1
    }
    function t(a, b, c, d) {
        if (!G.ie || !G.mac) {
            var e = x.getElementsByTagName("head")[0];
            e && (c = c && "string" == typeof c ? c: "screen", d && (Q = R = null), R && Q == c || (d = x.createElement("style"), d.setAttribute("type", "text/css"), d.setAttribute("media", c), R = e.appendChild(d), G.ie && G.win && typeof x.styleSheets != v && 0 < x.styleSheets.length && (R = x.styleSheets[x.styleSheets.length - 1]), Q = c), G.ie && G.win ? R && typeof R.addRule == A && R.addRule(a, b) : R && typeof x.createTextNode != v && R.appendChild(x.createTextNode(a + " {" + b + "}")))
        }
    }
    function u(a, b) {
        if (V) {
            var c = b ? "visible": "hidden";
            M && s(a) ? s(a).style.visibility = c: t("#" + a, "visibility:" + c)
        }
    }
    function w(a) {
        return null != /[\\\"<>\.;]/.exec(a) && typeof encodeURIComponent != v ? encodeURIComponent(a) : a
    }
    var v = "undefined",
    A = "object",
    E = "application/x-shockwave-flash",
    z = "SWFObjectExprInst",
    B = window,
    x = document,
    D = navigator,
    I = !1,
    C = [function() {
        I ? c() : e()
    }],
    F = [],
    J = [],
    m = [],
    L,
    K,
    O,
    P,
    M = !1,
    N = !1,
    R,
    Q,
    V = !0,
    G = function() {
        var a = typeof x.getElementById != v && typeof x.getElementsByTagName != v && typeof x.createElement != v,
        b = D.userAgent.toLowerCase(),
        c = D.platform.toLowerCase(),
        d = c ? /win/.test(c) : /win/.test(b),
        c = c ? /mac/.test(c) : /mac/.test(b),
        b = /webkit/.test(b) ? parseFloat(b.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : !1,
        e = !+"\v1",
        f = [0, 0, 0],
        g = null;
        if (typeof D.plugins != v && typeof D.plugins["Shockwave Flash"] == A) ! (g = D.plugins["Shockwave Flash"].description) || typeof D.mimeTypes != v && D.mimeTypes[E] && !D.mimeTypes[E].enabledPlugin || (I = !0, e = !1, g = g.replace(/^.*\s+(\S+\s+\S+$)/, "$1"), f[0] = parseInt(g.replace(/^(.*)\..*$/, "$1"), 10), f[1] = parseInt(g.replace(/^.*\.(.*)\s.*$/, "$1"), 10), f[2] = /[a-zA-Z]/.test(g) ? parseInt(g.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0);
        else if (typeof B.ActiveXObject != v) try {
            var h = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
            h && (g = h.GetVariable("$version")) && (e = !0, g = g.split(" ")[1].split(","), f = [parseInt(g[0], 10), parseInt(g[1], 10), parseInt(g[2], 10)])
        } catch(k) {}
        return {
            w3: a,
            pv: f,
            wk: b,
            ie: e,
            win: d,
            mac: c
        }
    } (); (function() {
        G.w3 && ((typeof x.readyState != v && "complete" == x.readyState || typeof x.readyState == v && (x.getElementsByTagName("body")[0] || x.body)) && a(), M || (typeof x.addEventListener != v && x.addEventListener("DOMContentLoaded", a, !1), G.ie && G.win && (x.attachEvent("onreadystatechange",
        function() {
            "complete" == x.readyState && (x.detachEvent("onreadystatechange", arguments.callee), a())
        }), B == top &&
        function() {
            if (!M) {
                try {
                    x.documentElement.doScroll("left")
                } catch(b) {
                    setTimeout(arguments.callee, 0);
                    return
                }
                a()
            }
        } ()), G.wk &&
        function() {
            M || (/loaded|complete/.test(x.readyState) ? a() : setTimeout(arguments.callee, 0))
        } (), b(a)))
    })(); (function() {
        G.ie && G.win && window.attachEvent("onunload",
        function() {
            for (var a = m.length,
            b = 0; b < a; b++) m[b][0].detachEvent(m[b][1], m[b][2]);
            a = J.length;
            for (b = 0; b < a; b++) p(J[b]);
            for (var c in G) G[c] = null;
            G = null;
            for (var d in swfobject) swfobject[d] = null;
            swfobject = null
        })
    })();
    return {
        registerObject: function(a, b, c, d) {
            if (G.w3 && a && b) {
                var e = {};
                e.id = a;
                e.swfVersion = b;
                e.expressInstall = c;
                e.callbackFn = d;
                F[F.length] = e;
                u(a, !1)
            } else d && d({
                success: !1,
                id: a
            })
        },
        getObjectById: function(a) {
            if (G.w3) return g(a)
        },
        embedSWF: function(a, b, c, e, g, h, l, m, p, r) {
            var s = {
                success: !1,
                id: b
            };
            G.w3 && !(G.wk && 312 > G.wk) && a && b && c && e && g ? (u(b, !1), d(function() {
                c += "";
                e += "";
                var d = {};
                if (p && typeof p === A) for (var t in p) d[t] = p[t];
                d.data = a;
                d.width = c;
                d.height = e;
                t = {};
                if (m && typeof m === A) for (var w in m) t[w] = m[w];
                if (l && typeof l === A) for (var x in l) t.flashvars = typeof t.flashvars != v ? t.flashvars + ("&" + x + "=" + l[x]) : x + "=" + l[x];
                if (q(g)) w = n(d, t, b),
                d.id == b && u(b, !0),
                s.success = !0,
                s.ref = w;
                else {
                    if (h && f()) {
                        d.data = h;
                        k(d, t, b, r);
                        return
                    }
                    u(b, !0)
                }
                r && r(s)
            })) : r && r(s)
        },
        switchOffAutoHideShow: function() {
            V = !1
        },
        ua: G,
        getFlashPlayerVersion: function() {
            return {
                major: G.pv[0],
                minor: G.pv[1],
                release: G.pv[2]
            }
        },
        hasFlashPlayerVersion: q,
        createSWF: function(a, b, c) {
            if (G.w3) return n(a, b, c)
        },
        showExpressInstall: function(a, b, c, d) {
            G.w3 && f() && k(a, b, c, d)
        },
        removeSWF: function(a) {
            G.w3 && p(a)
        },
        createCSS: function(a, b, c, d) {
            G.w3 && t(a, b, c, d)
        },
        addDomLoadEvent: d,
        addLoadEvent: b,
        getQueryParamValue: function(a) {
            var b = x.location.search || x.location.hash;
            if (b) { / \ ? /.test(b)&&(b=b.split("?")[1]);if(null==a)return w(b);for(var b=b.split("&"),c=0;c<b.length;c++)if(b[c].substring(0,b[c].indexOf("="))==a)return w(b[c].substring(b[c].indexOf("=")+1))}return""},expressInstallCallback:function(){if(N){var a=s(z);a&&L&&(a.parentNode.replaceChild(L,a),K&&(u(K,!0),G.ie&&G.win&&(L.style.display="block")),O&&O(P));N=!1}}}}();swfobject.addDomLoadEvent(function(){"function"===typeof SWFUpload.onload&&SWFUpload.onload.call(window)});
"function"===typeof SWFUpload&&(SWFUpload.queue={},SWFUpload.prototype.initSettings=function(a){return function(d){"function"===typeof a&&a.call(this,d);this.queueSettings={};this.queueSettings.queue_cancelled_flag=!1;this.queueSettings.queue_upload_count=0;this.queueSettings.user_upload_complete_handler=this.settings.upload_complete_handler;this.queueSettings.user_upload_start_handler=this.settings.upload_start_handler;this.settings.upload_complete_handler=SWFUpload.queue.uploadCompleteHandler;this.settings.upload_start_handler=
SWFUpload.queue.uploadStartHandler;this.settings.queue_complete_handler=d.queue_complete_handler||null}}(SWFUpload.prototype.initSettings),SWFUpload.prototype.startUpload=function(a){this.queueSettings.queue_cancelled_flag=!1;this.callFlash("StartUpload",[a])},SWFUpload.prototype.cancelQueue=function(){this.queueSettings.queue_cancelled_flag=!0;this.stopUpload();for(var a=this.getStats();0<a.files_queued;)this.cancelUpload(),a=this.getStats()},SWFUpload.queue.uploadStartHandler=function(a){var d;
"function"===typeof this.queueSettings.user_upload_start_handler&&(d=this.queueSettings.user_upload_start_handler.call(this,a));d=!1===d?!1:!0;this.queueSettings.queue_cancelled_flag=!d;return d},SWFUpload.queue.uploadCompleteHandler=function(a){var d=this.queueSettings.user_upload_complete_handler;a.filestatus===SWFUpload.FILE_STATUS.COMPLETE&&this.queueSettings.queue_upload_count++;if("function"===typeof d?!1!==d.call(this,a):a.filestatus!==SWFUpload.FILE_STATUS.QUEUED)0<this.getStats().files_queued&&
!1===this.queueSettings.queue_cancelled_flag?this.startUpload():(!1===this.queueSettings.queue_cancelled_flag?this.queueEvent("queue_complete_handler",[this.queueSettings.queue_upload_count]):this.queueSettings.queue_cancelled_flag=!1,this.queueSettings.queue_upload_count=0)});
function FileProgress(a,d){this.fileProgressID=a.id;this.opacity=100;this.height=0;if(this.fileProgressWrapper=document.getElementById(this.fileProgressID))this.fileProgressElement=this.fileProgressWrapper.firstChild,this.reset();else{this.fileProgressWrapper=document.createElement("div");this.fileProgressWrapper.className="progressWrapper";this.fileProgressWrapper.id=this.fileProgressID;this.fileProgressElement=document.createElement("div");this.fileProgressElement.className="progressContainer";
var b=document.createElement("a");b.className="progressCancel";b.href="#";b.style.visibility="hidden";b.appendChild(document.createTextNode(" "));var c=document.createElement("div");c.className="progressName";c.appendChild(document.createTextNode(a.name));var e=document.createElement("div");e.className="progressBarInProgress";var g=document.createElement("div");g.className="progressBarStatus";g.innerHTML="&nbsp;";this.fileProgressElement.appendChild(b);this.fileProgressElement.appendChild(c);this.fileProgressElement.appendChild(g);
this.fileProgressElement.appendChild(e);this.fileProgressWrapper.appendChild(this.fileProgressElement);document.getElementById(d).appendChild(this.fileProgressWrapper)}this.height=this.fileProgressWrapper.offsetHeight;this.setTimer(null)}FileProgress.prototype.setTimer=function(a){this.fileProgressElement.FP_TIMER=a};FileProgress.prototype.getTimer=function(a){return this.fileProgressElement.FP_TIMER||null};
FileProgress.prototype.reset=function(){this.fileProgressElement.className="progressContainer";this.fileProgressElement.childNodes[2].innerHTML="&nbsp;";this.fileProgressElement.childNodes[2].className="progressBarStatus";this.fileProgressElement.childNodes[3].className="progressBarInProgress";this.fileProgressElement.childNodes[3].style.width="0%";this.appear()};
FileProgress.prototype.setProgress=function(a){this.fileProgressElement.className="progressContainer green";this.fileProgressElement.childNodes[3].className="progressBarInProgress";this.fileProgressElement.childNodes[3].style.width=a+"%";this.appear()};
FileProgress.prototype.setComplete=function(){this.fileProgressElement.className="progressContainer blue";this.fileProgressElement.childNodes[3].className="progressBarComplete";this.fileProgressElement.childNodes[3].style.width="";var a=this;this.setTimer(setTimeout(function(){a.disappear()},1E3))};
FileProgress.prototype.setError=function(){this.fileProgressElement.className="progressContainer red";this.fileProgressElement.childNodes[3].className="progressBarError";this.fileProgressElement.childNodes[3].style.width="";var a=this;this.setTimer(setTimeout(function(){a.disappear()},5E3))};
FileProgress.prototype.setCancelled=function(){this.fileProgressElement.className="progressContainer";this.fileProgressElement.childNodes[3].className="progressBarError";this.fileProgressElement.childNodes[3].style.width="";var a=this;this.setTimer(setTimeout(function(){a.disappear()},2E3))};FileProgress.prototype.setStatus=function(a){this.fileProgressElement.childNodes[2].innerHTML=a};
FileProgress.prototype.toggleCancel=function(a,d){this.fileProgressElement.childNodes[0].style.visibility=a?"visible":"hidden";if(d){var b=this.fileProgressID;this.fileProgressElement.childNodes[0].onclick=function(){d.cancelUpload(b);return!1}}};
FileProgress.prototype.appear=function(){null!==this.getTimer()&&(clearTimeout(this.getTimer()),this.setTimer(null));if(this.fileProgressWrapper.filters)try{this.fileProgressWrapper.filters.item("DXImageTransform.Microsoft.Alpha").opacity=100}catch(a){this.fileProgressWrapper.style.filter="progid:DXImageTransform.Microsoft.Alpha(opacity=100)"}else this.fileProgressWrapper.style.opacity=1;this.fileProgressWrapper.style.height="";this.height=this.fileProgressWrapper.offsetHeight;this.opacity=100;this.fileProgressWrapper.style.display=
""};
FileProgress.prototype.disappear=function(){if(0<this.opacity)if(this.opacity-=15,0>this.opacity&&(this.opacity=0),this.fileProgressWrapper.filters)try{this.fileProgressWrapper.filters.item("DXImageTransform.Microsoft.Alpha").opacity=this.opacity}catch(a){this.fileProgressWrapper.style.filter="progid:DXImageTransform.Microsoft.Alpha(opacity="+this.opacity+")"}else this.fileProgressWrapper.style.opacity=this.opacity/100;
                0 < this.height && (this.height -= 4, 0 > this.height && (this.height = 0), this.fileProgressWrapper.style.height = this.height + "px");
                if (0 < this.height || 0 < this.opacity) {
                    var d = this;
                    this.setTimer(setTimeout(function() {
                        d.disappear()
                    },
                    30))
                } else $(this.fileProgressWrapper).parent().find("a.anatomy.display").show(),
                $(this.fileProgressElement.childNodes[0]).unbind(),
                $(this.fileProgressWrapper).hide().remove(),
                this.setTimer(null)
            };
            var FileUploadHandlers = {
                swfUploadPreload: function() {
                    if (!this.support.loading) return alertMsg.error("\u9700\u8981\u5b89\u88c5flash\u63d2\u4ef6."),
                    !1;
                    if (!this.support.imageResize) return alertMsg.error("\u9700\u898110.0.28\u53ca\u4ee5\u4e0a\u7248\u672cflash\u63d2\u4ef6."),
                    !1
                },
                swfUploadLoadFailed: function() {
                    alertMsg.error("\u4e0a\u4f20\u5931\u8d25")
                },
                swfUploadLoaded: function() {
                    fileuploadtool.start(this)
                },
                mouseClick: function() {},
                mouseOver: function() {},
                mouseOut: function() {},
                fileDialogStart: function() {},
                fileQueued: function(a) {
                    try {
                        var d = new FileProgress(a, this.customSettings.progressTarget);
                        d.setStatus("\u7b49\u5f85...");
                        d.toggleCancel(!0, this)
                    } catch(b) {
                        this.debug(b)
                    }
                },
                fileQueueError: function(a, d, b) {
                    try {
                        if (d === SWFUpload.QUEUE_ERROR.QUEUE_LIMIT_EXCEEDED) alertMsg.error("\u4e0a\u4f20\u6587\u4ef6\u592a\u591a.\n" + (0 === b ? "\u6587\u4ef6\u5df2\u8fbe\u4e0a\u4f20\u4e0a\u9650.": "\u4f60" + (1 < b ? "\u6700\u591a\u80fd\u4e0a\u4f20" + b + "\u4e2a\u6587\u4ef6.": "\u53ea\u80fd\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6."))),
                        $("#" + this.customSettings.cancelButtonId).hide();
                        else {
                            var c = new FileProgress(a, this.customSettings.progressTarget);
                            c.setError();
                            c.toggleCancel(!1);
                            switch (d) {
                            case SWFUpload.QUEUE_ERROR.FILE_EXCEEDS_SIZE_LIMIT:
                                c.setStatus("\u6587\u4ef6\u592a\u5927.");
                                this.debug("Error Code: File too big, File name: " + a.name + ", File size: " + a.size + ", Message: " + b);
                                break;
                            case SWFUpload.QUEUE_ERROR.ZERO_BYTE_FILE:
                                c.setStatus("\u4e0d\u80fd\u4e0a\u4f20\u7a7a\u6587\u4ef6.");
                                this.debug("Error Code: Zero byte file, File name: " + a.name + ", File size: " + a.size + ", Message: " + b);
                                break;
                            case SWFUpload.QUEUE_ERROR.INVALID_FILETYPE:
                                c.setStatus("\u6587\u4ef6\u7c7b\u578b\u4e0d\u5339\u914d.");
                                this.debug("Error Code: Invalid File Type, File name: " + a.name + ", File size: " + a.size + ", Message: " + b);
                                break;
                            default:
                                null !== a && c.setStatus("\u7cfb\u7edf\u5fd9..."),
                                this.debug("Error Code: " + d + ", File name: " + a.name + ", File size: " + a.size + ", Message: " + b)
                            }
                        }
                    } catch(e) {
                        this.debug(e)
                    }
                },
                fileDialogComplete: function(a, d) {
                    try {
                        if (0 < a && $("#" + this.customSettings.cancelButtonId).show(), this.customSettings.resizeimg && this.customSettings.resizetowidth && this.customSettings.resizetoheight) for (var b = 0; b < d; b++) ! this.getFile(b).type || ".png" != this.getFile(b).type && ".jpg" != this.getFile(b).type && ".gif" != this.getFile(b).type || this.startResizedUpload(this.getFile(b).id, this.customSettings.resizetowidth, this.customSettings.resizetoheight, ".jpg" == this.getFile(b).type ? SWFUpload.RESIZE_ENCODING.JPEG: SWFUpload.RESIZE_ENCODING.PNG, this.customSettings.resizetoquality || 100, !1);
                        else this.startUpload()
                    } catch(c) {
                        this.debug(c)
                    }
                },
                uploadStart: function(a) {
                    try {
                        var d = new FileProgress(a, this.customSettings.progressTarget);
                        d.setStatus("\u4e0a\u4f20\u4e2d...");
                        d.toggleCancel(!0, this)
                    } catch(b) {}
                    return ! 0
                },
                uploadProgress: function(a, d, b) {
                    try {
                        var c = Math.ceil(100 * (d / b)),
                        e = new FileProgress(a, this.customSettings.progressTarget);
                        e.setProgress(c);
                        e.setStatus("\u4e0a\u4f20\u4e2d...")
                    } catch(g) {
                        this.debug(g)
                    }
                },
                uploadSuccess: function(a, d, b) {
                    try {
                        var c = new FileProgress(a, this.customSettings.progressTarget);
                        c.setComplete();
                        c.setStatus("\u5b8c\u6210.");
                        c.toggleCancel(!1);
                        d = eval("(" + d + ")");
                        var e = (a.size / 1024).toFixed(2),
                        g = $("#" + this.customSettings.fillTarget);
                        "" == g.val() ? g.val(d.attachSysName) : g.val(g.val() + ";" + d.attachSysName);
                        $("#" + this.customSettings.progressTarget).append('<a class="anatomy display" id="' + d.attachSysName + '" style="display:none;" href="javascript:;" onclick="fileuploadtool.deleteUpFile(\'' + d.filePath + "/" + d.attachSysName + "',this);\"><span>" + a.name + "&nbsp;&nbsp;(" + e + 'kb)</span><span class="del">\u5220\u9664</span></a>&nbsp;&nbsp;&nbsp;&nbsp;')
                    } catch(f) {
                        this.debug(f)
                    }
                },
                uploadError: function(a, d, b) {
                    try {
                        if (d === SWFUpload.UPLOAD_ERROR.UPLOAD_LIMIT_EXCEEDED) alertMsg.error("\u4e0a\u4f20\u6587\u4ef6\u592a\u591a.\n" + (0 === b ? "\u6587\u4ef6\u5df2\u8fbe\u4e0a\u4f20\u4e0a\u9650.": "\u4f60" + (1 < b ? "\u6700\u591a\u80fd\u4e0a\u4f20" + b + "\u4e2a\u6587\u4ef6.": "\u53ea\u80fd\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6."))),
                        $("#" + this.customSettings.cancelButtonId).hide();
                        else {
                            var c = new FileProgress(a, this.customSettings.progressTarget);
                            c.setError();
                            c.toggleCancel(!1);
                            switch (d) {
                            case SWFUpload.UPLOAD_ERROR.HTTP_ERROR:
                                c.setStatus("\u4e0a\u4f20\u5931\u8d25: " + b);
                                this.debug("Error Code: HTTP Error, File name: " + a.name + ", Message: " + b);
                                break;
                            case SWFUpload.UPLOAD_ERROR.UPLOAD_FAILED:
                                c.setStatus("\u4e0a\u4f20\u5931\u8d25.");
                                this.debug("Error Code: Upload Failed, File name: " + a.name + ", File size: " + a.size + ", Message: " + b);
                                break;
                            case SWFUpload.UPLOAD_ERROR.IO_ERROR:
                                c.setStatus("\u670d\u52a1\u5668\u5fd9");
                                this.debug("Error Code: IO Error, File name: " + a.name + ", Message: " + b);
                                break;
                            case SWFUpload.UPLOAD_ERROR.SECURITY_ERROR:
                                c.setStatus("\u6ca1\u6709\u6743\u9650");
                                this.debug("Error Code: Security Error, File name: " + a.name + ", Message: " + b);
                                break;
                            case SWFUpload.UPLOAD_ERROR.UPLOAD_LIMIT_EXCEEDED:
                                c.setStatus("\u4e0a\u4f20\u8d85\u9650.");
                                this.debug("Error Code: Upload Limit Exceeded, File name: " + a.name + ", File size: " + a.size + ", Message: " + b);
                                break;
                            case SWFUpload.UPLOAD_ERROR.FILE_VALIDATION_FAILED:
                                c.setStatus("\u9a8c\u8bc1\u5931\u8d25. \u4e0a\u4f20\u8df3\u8fc7.");
                                this.debug("Error Code: File Validation Failed, File name: " + a.name + ", File size: " + a.size + ", Message: " + b);
                                break;
                            case SWFUpload.UPLOAD_ERROR.FILE_CANCELLED:
                                c.setStatus("\u53d6\u6d88");
                                c.setCancelled();
                                break;
                            case SWFUpload.UPLOAD_ERROR.UPLOAD_STOPPED:
                                c.setStatus("\u505c\u6b62");
                                break;
                            default:
                                c.setStatus("\u7cfb\u7edf\u5fd9: " + d),
                                this.debug("Error Code: " + d + ", File name: " + a.name + ", File size: " + a.size + ", Message: " + b)
                            }
                        }
                    } catch(e) {
                        this.debug(e)
                    }
                },
                uploadComplete: function(a) {
                    0 === this.getStats().files_queued && $("#" + this.customSettings.cancelButtonId).hide()
                },
                debug: function(a) {
                    try {
                        window.console && "function" === typeof window.console.error && "function" === typeof window.console.log && ("object" === typeof a && "string" === typeof a.name && "string" === typeof a.message ? window.console.error(a) : window.console.log(a))
                    } catch(d) {}
                    try {
                        this.settings.debug && this.debugMessage(a)
                    } catch(b) {}
                },
                fileDialogStart: function() {},
                queueComplete: function(a) {}
            },
            fileuploadtool = {
                o: null,
                start: function(a) {
                    this.o = a
                },
                load: function() {
                    try {
                        this.o ? ($(this.o.getMovieElement()).replaceWith('<span id="fileuploadobject"></span>'), this.o.destroy()) : ($("body").append('<div id="anatomyuploadtool" style="position:absolute;z-index:10000;top:-100px;left:-200px;"><span id="fileuploadobject"></span><input id="fileuploadocancel"type="button"value="\u53d6\u6d88"onclick="fileuploadtool.cancelQueue();"style="display:none;"/><div id="fsUploadProgress"></div></div>'), $("#anatomyuploadtool").mouseout(function() {
                            $(this).offset({
                                top: -100,
                                left: -200
                            })
                        })),
                        this.o = new SWFUpload({
                            upload_url: basePath + "sys/sys-attach!uploadFiles.action",
                            flash_url: basePath + "fileupload/swfupload.swf",
                            flash9_url: basePath + "fileupload/swfupload_fp9.swf",
                            file_post_name: "file",
                            post_params: {
                            	"userId" : "123" 
                            },
                            use_query_string: true,
                            requeue_on_error: !1,
                            http_success: [201, 202],
                            assume_success_timeout: 0,
                            file_types: "*.*",
                            file_types_description: "All Files",
                            file_size_limit: "100 MB",
                            file_upload_limit: 0,
                            file_queue_limit: 0,
                            prevent_swf_caching: !1,
                            preserve_relative_urls: !1,
                            button_placeholder_id: "fileuploadobject",
                            button_action: SWFUpload.BUTTON_ACTION.SELECT_FILES,
                            button_width: "80",
                            button_height: "24",
                            button_text: '<span class="theFont">&nbsp;&nbsp;&nbsp;&nbsp;</span>',
                            button_text_style: ".theFont { font-size: 12px; }",
                            button_text_left_padding: 22,
                            button_text_top_padding: 3,
                            button_action: SWFUpload.BUTTON_ACTION.SELECT_FILES,
                            button_disabled: !1,
                            button_cursor: SWFUpload.CURSOR.HAND,
                            button_window_mode: SWFUpload.WINDOW_MODE.TRANSPARENT,
                            swfupload_preload_handler: FileUploadHandlers.swfUploadPreload,
                            swfupload_loaded_handler: FileUploadHandlers.swfUploadLoaded,
                            swfupload_load_failed_handler: FileUploadHandlers.swfUploadLoadFailed,
                            queue_complete_handler: FileUploadHandlers.queueComplete,
                            mouse_click_handler: FileUploadHandlers.mouseClick,
                            mouse_over_handler: FileUploadHandlers.mouseOver,
                            mouse_out_handler: FileUploadHandlers.mouseOut,
                            file_dialog_start_handler: FileUploadHandlers.fileDialogStart,
                            file_queued_handler: FileUploadHandlers.fileQueued,
                            file_queue_error_handler: FileUploadHandlers.fileQueueError,
                            file_dialog_complete_handler: FileUploadHandlers.fileDialogComplete,
                            upload_start_handler: FileUploadHandlers.uploadStart,
                            upload_progress_handler: FileUploadHandlers.uploadProgress,
                            upload_error_handler: FileUploadHandlers.uploadError,
                            upload_success_handler: FileUploadHandlers.uploadSuccess,
                            upload_complete_handler: FileUploadHandlers.uploadComplete,
                            debug: !1,
                            debug_handler: FileUploadHandlers.debug,
                            use_query_string: !0,
                            requeue_on_error: !0,
                            custom_settings: {
                                progressTarget: "fsUploadProgress",
                                cancelButtonId: "fileuploadocancel",
                                displayTarget: "fsUploadDisplay",
                                resizeimg: !1,
                                resizetowidth: 16,
                                resizetoheight: 16,
                                resizetoquality: 100
                            }
                        })
                         
                    } catch(a) {
                        alertMsg.error(a)
                    }
                },
                setparam: function(a) {
                    "string" == typeof a && (a = eval(a));
                    a.post_params && this.o.setPostParams(eval(a.post_params));
                    a.http_success && this.o.setHTTPSuccess(eval(a.http_success));
                    a.assume_success_timeout && this.o.setAssumeSuccessTimeout(eval(a.assume_success_timeout));
                    a.file_types && this.o.setFileTypes(a.file_types, a.file_types_description ? a.file_types_description: "All Files");
                    a.file_size_limit && this.o.setFileSizeLimit(a.file_size_limit);
                    a.file_upload_limit && this.o.setFileUploadLimit(eval(a.file_upload_limit));
                    a.file_queue_limit && this.o.setFileQueueLimit(eval(a.file_queue_limit));
                    a.file_post_name && this.o.setFilePostName(a.file_post_name);
                    a.debug && this.o.setDebugEnabled(eval(a.debug));
                    a.use_query_string && this.o.setUseQueryString(eval(a.use_query_string));
                    a.requeue_on_error && this.o.setRequeueOnError(eval(a.requeue_on_error));
                    a.button_width && a.button_height && this.o.setButtonDimensions(a.button_width, a.button_height);
                    a.button_text && this.o.setButtonText(a.button_text);
                    a.button_text_style && this.o.setButtonTextStyle(a.button_text_style);
                    a.button_text_left_padding;
                    a.button_text_top_padding && this.o.setButtonTextPadding(eval(a.button_text_left_padding), eval(a.button_text_top_padding));
                    a.button_disabled && this.o.setButtonDisabled(eval(a.button_disabled));
                    a.button_action && this.o.setButtonAction(eval(a.button_action));
                    a.button_cursor && this.o.setButtonCursor(eval(a.button_cursor));
                    a.custom_settings.progressTarget ? this.o.customSettings.progressTarget = a.custom_settings.progressTarget: null;
                    a.custom_settings.cancelButtonId ? this.o.customSettings.cancelButtonId = a.custom_settings.cancelButtonId: null;
                    a.custom_settings.displayTarget ? this.o.customSettings.displayTarget = a.custom_settings.displayTarget: null;
                    a.custom_settings.fillTarget ? this.o.customSettings.fillTarget = a.custom_settings.fillTarget: null;
                    if (a.custom_settings.fillTarget) {
                        var d = this.o.getStats(),
                        b = $("#" + a.custom_settings.fillTarget).val();
                        d.successful_uploads = "" == b ? 0 : b.split(";").length;
                        this.o.setStats(d)
                    }
                    a.custom_settings.resizeimg ? this.o.customSettings.resizeimg = a.custom_settings.resizeimg: null;
                    a.custom_settings.resizetowidth ? this.o.customSettings.resizetowidth = a.custom_settings.resizetowidth: null;
                    a.custom_settings.resizetoheight ? this.o.customSettings.resizetoheight = a.custom_settings.resizetoheight: null;
                    a.custom_settings.resizetoquality ? this.o.customSettings.resizetoquality = a.custom_settings.resizetoquality: null
                },
                stopUpload: function() {
                    this.o && this.o.stopUpload()
                },
                cancelQueue: function() {
                    this.o && this.o.cancelQueue()
                },
                deleteUpFile: function(a, d) {
                    $.post(basePath + "sys/sys-attach!deleteUpFile.action?upurl=" + a,
                    function(a, b, c) {
                        "success" == b ? a.message ? alertMsg.correct(a.message) : a.infoMessage ? alertMsg.info(a.infoMessage) : a.warnMessage ? alertMsg.error(a.warnMessage) : alertMsg.info(c.responseText) : alertMsg.info(c.responseText)
                    },
                    "json");
                    var b = $(d);
                    b.hasClass("anatomy") && b.hasClass("display") ? (b.remove(), b = 1) : (b = b.parent(), b.hasClass("anatomy") && b.hasClass("display") && b.hasClass("del") && (b.remove(), b = 2));
                    var c = this.o.getStats();
                    c.successful_uploads--;
                    this.o.setStats(c);
                    var b = 1 == b ? $("#" + this.o.customSettings.displayTarget).find("a.anatomy.display") : $("#" + this.o.customSettings.displayTarget).find("span.anatomy.display.del>a[id]"),
                    e = [];
                    $.each(b,
                    function(a, b) {
                        e[a] = $(b).attr("id")
                    });
                    $("#" + this.o.customSettings.fillTarget).val(e.join(";"))
                }
            };
            swfobject = function() {
                function a() {
                    if (!M) {
                        try {
                            var a = x.getElementsByTagName("body")[0].appendChild(x.createElement("span"));
                            a.parentNode.removeChild(a)
                        } catch(b) {
                            return
                        }
                        M = !0;
                        for (var a = C.length,
                        c = 0; c < a; c++) C[c]()
                    }
                }
                function d(a) {
                    M ? a() : C[C.length] = a
                }
                function b(a) {
                    if (typeof B.addEventListener != v) B.addEventListener("load", a, !1);
                    else if (typeof x.addEventListener != v) x.addEventListener("load", a, !1);
                    else if (typeof B.attachEvent != v) r(B, "onload", a);
                    else if ("function" == typeof B.onload) {
                        var b = B.onload;
                        B.onload = function() {
                            b();
                            a()
                        }
                    } else B.onload = a
                }
                function c() {
                    var a = x.getElementsByTagName("body")[0],
                    b = x.createElement(A);
                    b.setAttribute("type", E);
                    var c = a.appendChild(b);
                    if (c) {
                        var d = 0; (function() {
                            if (typeof c.GetVariable != v) {
                                var f = c.GetVariable("$version");
                                f && (f = f.split(" ")[1].split(","), G.pv = [parseInt(f[0], 10), parseInt(f[1], 10), parseInt(f[2], 10)])
                            } else if (10 > d) {
                                d++;
                                setTimeout(arguments.callee, 10);
                                return
                            }
                            a.removeChild(b);
                            c = null;
                            e()
                        })()
                    } else e()
                }
                function e() {
                    var a = F.length;
                    if (0 < a) for (var b = 0; b < a; b++) {
                        var c = F[b].id,
                        d = F[b].callbackFn,
                        e = {
                            success: !1,
                            id: c
                        };
                        if (0 < G.pv[0]) {
                            var l = s(c);
                            if (l) if (!q(F[b].swfVersion) || G.wk && 312 > G.wk) if (F[b].expressInstall && f()) {
                                e = {};
                                e.data = F[b].expressInstall;
                                e.width = l.getAttribute("width") || "0";
                                e.height = l.getAttribute("height") || "0";
                                l.getAttribute("class") && (e.styleclass = l.getAttribute("class"));
                                l.getAttribute("align") && (e.align = l.getAttribute("align"));
                                for (var m = {},
                                l = l.getElementsByTagName("param"), n = l.length, p = 0; p < n; p++)"movie" != l[p].getAttribute("name").toLowerCase() && (m[l[p].getAttribute("name")] = l[p].getAttribute("value"));
                                k(e, m, c, d)
                            } else h(l),
                            d && d(e);
                            else u(c, !0),
                            d && (e.success = !0, e.ref = g(c), d(e))
                        } else u(c, !0),
                        d && ((c = g(c)) && typeof c.SetVariable != v && (e.success = !0, e.ref = c), d(e))
                    }
                }
                function g(a) {
                    var b = null; (a = s(a)) && "OBJECT" == a.nodeName && (typeof a.SetVariable != v ? b = a: (a = a.getElementsByTagName(A)[0]) && (b = a));
                    return b
                }
                function f() {
                    return ! N && q("6.0.65") && (G.win || G.mac) && !(G.wk && 312 > G.wk)
                }
                function k(a, b, c, d) {
                    N = !0;
                    O = d || null;
                    P = {
                        success: !1,
                        id: c
                    };
                    var e = s(c);
                    if (e) {
                        "OBJECT" == e.nodeName ? (L = l(e), K = null) : (L = e, K = c);
                        a.id = z;
                        if (typeof a.width == v || !/%$/.test(a.width) && 310 > parseInt(a.width, 10)) a.width = "310";
                        if (typeof a.height == v || !/%$/.test(a.height) && 137 > parseInt(a.height, 10)) a.height = "137";
                        x.title = x.title.slice(0, 47) + " - Flash Player Installation";
                        d = G.ie && G.win ? "ActiveX": "PlugIn";
                        d = "MMredirectURL=" + encodeURI(window.location).toString().replace(/&/g, "%26") + "&MMplayerType=" + d + "&MMdoctitle=" + x.title;
                        b.flashvars = typeof b.flashvars != v ? b.flashvars + ("&" + d) : d;
                        G.ie && G.win && 4 != e.readyState && (d = x.createElement("div"), c += "SWFObjectNew", d.setAttribute("id", c), e.parentNode.insertBefore(d, e), e.style.display = "none",
                        function() {
                            4 == e.readyState ? e.parentNode.removeChild(e) : setTimeout(arguments.callee, 10)
                        } ());
                        n(a, b, c)
                    }
                }
                function h(a) {
                    if (G.ie && G.win && 4 != a.readyState) {
                        var b = x.createElement("div");
                        a.parentNode.insertBefore(b, a);
                        b.parentNode.replaceChild(l(a), b);
                        a.style.display = "none"; (function() {
                            4 == a.readyState ? a.parentNode.removeChild(a) : setTimeout(arguments.callee, 10)
                        })()
                    } else a.parentNode.replaceChild(l(a), a)
                }
                function l(a) {
                    var b = x.createElement("div");
                    if (G.win && G.ie) b.innerHTML = a.innerHTML;
                    else if (a = a.getElementsByTagName(A)[0]) if (a = a.childNodes) for (var c = a.length,
                    d = 0; d < c; d++) 1 == a[d].nodeType && "PARAM" == a[d].nodeName || 8 == a[d].nodeType || b.appendChild(a[d].cloneNode(!0));
                    return b
                }
                function n(a, b, c) {
                    var d, e = s(c);
                    if (G.wk && 312 > G.wk) return d;
                    if (e) if (typeof a.id == v && (a.id = c), G.ie && G.win) {
                        var f = "",
                        g;
                        for (g in a) a[g] != Object.prototype[g] && ("data" == g.toLowerCase() ? b.movie = a[g] : "styleclass" == g.toLowerCase() ? f += ' class="' + a[g] + '"': "classid" != g.toLowerCase() && (f += " " + g + '="' + a[g] + '"'));
                        g = "";
                        for (var h in b) b[h] != Object.prototype[h] && (g += '<param name="' + h + '" value="' + b[h] + '" />');
                        e.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + f + ">" + g + "</object>";
                        J[J.length] = a.id;
                        d = s(a.id)
                    } else {
                        h = x.createElement(A);
                        h.setAttribute("type", E);
                        for (var k in a) a[k] != Object.prototype[k] && ("styleclass" == k.toLowerCase() ? h.setAttribute("class", a[k]) : "classid" != k.toLowerCase() && h.setAttribute(k, a[k]));
                        for (f in b) b[f] != Object.prototype[f] && "movie" != f.toLowerCase() && (a = h, g = f, k = b[f], c = x.createElement("param"), c.setAttribute("name", g), c.setAttribute("value", k), a.appendChild(c));
                        e.parentNode.replaceChild(h, e);
                        d = h
                    }
                    return d
                }
                function p(a) {
                    var b = s(a);
                    b && "OBJECT" == b.nodeName && (G.ie && G.win ? (b.style.display = "none",
                    function() {
                        if (4 == b.readyState) {
                            var c = s(a);
                            if (c) {
                                for (var d in c)"function" == typeof c[d] && (c[d] = null);
                                c.parentNode.removeChild(c)
                            }
                        } else setTimeout(arguments.callee, 10)
                    } ()) : b.parentNode.removeChild(b))
                }
                function s(a) {
                    var b = null;
                    try {
                        b = x.getElementById(a)
                    } catch(c) {}
                    return b
                }
                function r(a, b, c) {
                    a.attachEvent(b, c);
                    m[m.length] = [a, b, c]
                }
                function q(a) {
                    var b = G.pv;
                    a = a.split(".");
                    a[0] = parseInt(a[0], 10);
                    a[1] = parseInt(a[1], 10) || 0;
                    a[2] = parseInt(a[2], 10) || 0;
                    return b[0] > a[0] || b[0] == a[0] && b[1] > a[1] || b[0] == a[0] && b[1] == a[1] && b[2] >= a[2] ? !0 : !1
                }
                function t(a, b, c, d) {
                    if (!G.ie || !G.mac) {
                        var e = x.getElementsByTagName("head")[0];
                        e && (c = c && "string" == typeof c ? c: "screen", d && (Q = R = null), R && Q == c || (d = x.createElement("style"), d.setAttribute("type", "text/css"), d.setAttribute("media", c), R = e.appendChild(d), G.ie && G.win && typeof x.styleSheets != v && 0 < x.styleSheets.length && (R = x.styleSheets[x.styleSheets.length - 1]), Q = c), G.ie && G.win ? R && typeof R.addRule == A && R.addRule(a, b) : R && typeof x.createTextNode != v && R.appendChild(x.createTextNode(a + " {" + b + "}")))
                    }
                }
                function u(a, b) {
                    if (V) {
                        var c = b ? "visible": "hidden";
                        M && s(a) ? s(a).style.visibility = c: t("#" + a, "visibility:" + c)
                    }
                }
                function w(a) {
                    return null != /[\\\"<>\.;]/.exec(a) && typeof encodeURIComponent != v ? encodeURIComponent(a) : a
                }
                var v = "undefined",
                A = "object",
                E = "application/x-shockwave-flash",
                z = "SWFObjectExprInst",
                B = window,
                x = document,
                D = navigator,
                I = !1,
                C = [function() {
                    I ? c() : e()
                }],
                F = [],
                J = [],
                m = [],
                L,
                K,
                O,
                P,
                M = !1,
                N = !1,
                R,
                Q,
                V = !0,
                G = function() {
                    var a = typeof x.getElementById != v && typeof x.getElementsByTagName != v && typeof x.createElement != v,
                    b = D.userAgent.toLowerCase(),
                    c = D.platform.toLowerCase(),
                    d = c ? /win/.test(c) : /win/.test(b),
                    c = c ? /mac/.test(c) : /mac/.test(b),
                    b = /webkit/.test(b) ? parseFloat(b.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : !1,
                    e = !+"\v1",
                    f = [0, 0, 0],
                    g = null;
                    if (typeof D.plugins != v && typeof D.plugins["Shockwave Flash"] == A) ! (g = D.plugins["Shockwave Flash"].description) || typeof D.mimeTypes != v && D.mimeTypes[E] && !D.mimeTypes[E].enabledPlugin || (I = !0, e = !1, g = g.replace(/^.*\s+(\S+\s+\S+$)/, "$1"), f[0] = parseInt(g.replace(/^(.*)\..*$/, "$1"), 10), f[1] = parseInt(g.replace(/^.*\.(.*)\s.*$/, "$1"), 10), f[2] = /[a-zA-Z]/.test(g) ? parseInt(g.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0);
                    else if (typeof B.ActiveXObject != v) try {
                        var h = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                        h && (g = h.GetVariable("$version")) && (e = !0, g = g.split(" ")[1].split(","), f = [parseInt(g[0], 10), parseInt(g[1], 10), parseInt(g[2], 10)])
                    } catch(k) {}
                    return {
                        w3: a,
                        pv: f,
                        wk: b,
                        ie: e,
                        win: d,
                        mac: c
                    }
                } (); (function() {
                    G.w3 && ((typeof x.readyState != v && "complete" == x.readyState || typeof x.readyState == v && (x.getElementsByTagName("body")[0] || x.body)) && a(), M || (typeof x.addEventListener != v && x.addEventListener("DOMContentLoaded", a, !1), G.ie && G.win && (x.attachEvent("onreadystatechange",
                    function() {
                        "complete" == x.readyState && (x.detachEvent("onreadystatechange", arguments.callee), a())
                    }), B == top &&
                    function() {
                        if (!M) {
                            try {
                                x.documentElement.doScroll("left")
                            } catch(b) {
                                setTimeout(arguments.callee, 0);
                                return
                            }
                            a()
                        }
                    } ()), G.wk &&
                    function() {
                        M || (/loaded|complete/.test(x.readyState) ? a() : setTimeout(arguments.callee, 0))
                    } (), b(a)))
                })(); (function() {
                    G.ie && G.win && window.attachEvent("onunload",
                    function() {
                        for (var a = m.length,
                        b = 0; b < a; b++) m[b][0].detachEvent(m[b][1], m[b][2]);
                        a = J.length;
                        for (b = 0; b < a; b++) p(J[b]);
                        for (var c in G) G[c] = null;
                        G = null;
                        for (var d in swfobject) swfobject[d] = null;
                        swfobject = null
                    })
                })();
                return {
                    registerObject: function(a, b, c, d) {
                        if (G.w3 && a && b) {
                            var e = {};
                            e.id = a;
                            e.swfVersion = b;
                            e.expressInstall = c;
                            e.callbackFn = d;
                            F[F.length] = e;
                            u(a, !1)
                        } else d && d({
                            success: !1,
                            id: a
                        })
                    },
                    getObjectById: function(a) {
                        if (G.w3) return g(a)
                    },
                    embedSWF: function(a, b, c, e, g, h, l, m, p, r) {
                        var s = {
                            success: !1,
                            id: b
                        };
                        G.w3 && !(G.wk && 312 > G.wk) && a && b && c && e && g ? (u(b, !1), d(function() {
                            c += "";
                            e += "";
                            var d = {};
                            if (p && typeof p === A) for (var t in p) d[t] = p[t];
                            d.data = a;
                            d.width = c;
                            d.height = e;
                            t = {};
                            if (m && typeof m === A) for (var w in m) t[w] = m[w];
                            if (l && typeof l === A) for (var x in l) t.flashvars = typeof t.flashvars != v ? t.flashvars + ("&" + x + "=" + l[x]) : x + "=" + l[x];
                            if (q(g)) w = n(d, t, b),
                            d.id == b && u(b, !0),
                            s.success = !0,
                            s.ref = w;
                            else {
                                if (h && f()) {
                                    d.data = h;
                                    k(d, t, b, r);
                                    return
                                }
                                u(b, !0)
                            }
                            r && r(s)
                        })) : r && r(s)
                    },
                    switchOffAutoHideShow: function() {
                        V = !1
                    },
                    ua: G,
                    getFlashPlayerVersion: function() {
                        return {
                            major: G.pv[0],
                            minor: G.pv[1],
                            release: G.pv[2]
                        }
                    },
                    hasFlashPlayerVersion: q,
                    createSWF: function(a, b, c) {
                        if (G.w3) return n(a, b, c)
                    },
                    showExpressInstall: function(a, b, c, d) {
                        G.w3 && f() && k(a, b, c, d)
                    },
                    removeSWF: function(a) {
                        G.w3 && p(a)
                    },
                    createCSS: function(a, b, c, d) {
                        G.w3 && t(a, b, c, d)
                    },
                    addDomLoadEvent: d,
                    addLoadEvent: b,
                    getQueryParamValue: function(a) {
                        var b = x.location.search || x.location.hash;
                        if (b) { / \ ? /.test(b)&&(b=b.split("?")[1]);if(null==a)return w(b);for(var b=b.split("&"),c=0;c<b.length;c++)if(b[c].substring(0,b[c].indexOf("="))==a)return w(b[c].substring(b[c].indexOf("=")+1))}return""},expressInstallCallback:function(){if(N){var a=s(z);a&&L&&(a.parentNode.replaceChild(L,a),K&&(u(K,!0),G.ie&&G.win&&(L.style.display="block")),O&&O(P));N=!1}}}}();